{"id":"9dae4309b7738af1e7274ea28d7bae23","_format":"hh-sol-build-info-1","solcVersion":"0.8.7","solcLongVersion":"0.8.7+commit.e28d00a7","input":{"language":"Solidity","sources":{"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(uint80 _roundId)\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n  function latestRoundData()\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n}\n"},"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface VRFCoordinatorV2Interface {\n  /**\n   * @notice Get configuration relevant for making requests\n   * @return minimumRequestConfirmations global min for request confirmations\n   * @return maxGasLimit global max for request gas limit\n   * @return s_provingKeyHashes list of registered key hashes\n   */\n  function getRequestConfig()\n    external\n    view\n    returns (\n      uint16,\n      uint32,\n      bytes32[] memory\n    );\n\n  /**\n   * @notice Request a set of random words.\n   * @param keyHash - Corresponds to a particular oracle job which uses\n   * that key for generating the VRF proof. Different keyHash's have different gas price\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\n   * @param subId  - The ID of the VRF subscription. Must be funded\n   * with the minimum subscription balance required for the selected keyHash.\n   * @param minimumRequestConfirmations - How many blocks you'd like the\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n   * for why you may want to request more. The acceptable range is\n   * [minimumRequestBlockConfirmations, 200].\n   * @param callbackGasLimit - How much gas you'd like to receive in your\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n   * may be slightly less than this amount because of gas used calling the function\n   * (argument decoding etc.), so you may need to request slightly more than you expect\n   * to have inside fulfillRandomWords. The acceptable range is\n   * [0, maxGasLimit]\n   * @param numWords - The number of uint256 random values you'd like to receive\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\n   * @return requestId - A unique identifier of the request. Can be used to match\n   * a request to a response in fulfillRandomWords.\n   */\n  function requestRandomWords(\n    bytes32 keyHash,\n    uint64 subId,\n    uint16 minimumRequestConfirmations,\n    uint32 callbackGasLimit,\n    uint32 numWords\n  ) external returns (uint256 requestId);\n\n  /**\n   * @notice Create a VRF subscription.\n   * @return subId - A unique subscription id.\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n   * @dev Note to fund the subscription, use transferAndCall. For example\n   * @dev  LINKTOKEN.transferAndCall(\n   * @dev    address(COORDINATOR),\n   * @dev    amount,\n   * @dev    abi.encode(subId));\n   */\n  function createSubscription() external returns (uint64 subId);\n\n  /**\n   * @notice Get a VRF subscription.\n   * @param subId - ID of the subscription\n   * @return balance - LINK balance of the subscription in juels.\n   * @return reqCount - number of requests for this subscription, determines fee tier.\n   * @return owner - owner of the subscription.\n   * @return consumers - list of consumer address which are able to use this subscription.\n   */\n  function getSubscription(uint64 subId)\n    external\n    view\n    returns (\n      uint96 balance,\n      uint64 reqCount,\n      address owner,\n      address[] memory consumers\n    );\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @param newOwner - proposed new owner of the subscription\n   */\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @dev will revert if original owner of subId has\n   * not requested that msg.sender become the new owner.\n   */\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\n\n  /**\n   * @notice Add a consumer to a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - New consumer which can use the subscription\n   */\n  function addConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Remove a consumer from a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - Consumer to remove from the subscription\n   */\n  function removeConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Cancel a subscription\n   * @param subId - ID of the subscription\n   * @param to - Where to send the remaining LINK to\n   */\n  function cancelSubscription(uint64 subId, address to) external;\n\n  /*\n   * @notice Check to see if there exists a request commitment consumers\n   * for all consumers and keyhashes for a given sub.\n   * @param subId - ID of the subscription\n   * @return true if there exists at least one unfulfilled request for the subscription, false\n   * otherwise.\n   */\n  function pendingRequestExists(uint64 subId) external view returns (bool);\n}\n"},"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n/** ****************************************************************************\n * @notice Interface for contracts using VRF randomness\n * *****************************************************************************\n * @dev PURPOSE\n *\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\n * @dev making his output up to suit himself. Reggie provides Vera a public key\n * @dev to which he knows the secret key. Each time Vera provides a seed to\n * @dev Reggie, he gives back a value which is computed completely\n * @dev deterministically from the seed and the secret key.\n *\n * @dev Reggie provides a proof by which Vera can verify that the output was\n * @dev correctly computed once Reggie tells it to her, but without that proof,\n * @dev the output is indistinguishable to her from a uniform random sample\n * @dev from the output space.\n *\n * @dev The purpose of this contract is to make it easy for unrelated contracts\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\n * @dev 1. The fulfillment came from the VRFCoordinator\n * @dev 2. The consumer contract implements fulfillRandomWords.\n * *****************************************************************************\n * @dev USAGE\n *\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\n * @dev initialize VRFConsumerBase's attributes in their constructor as\n * @dev shown:\n *\n * @dev   contract VRFConsumer {\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\n * @dev         <initialization with other arguments goes here>\n * @dev       }\n * @dev   }\n *\n * @dev The oracle will have given you an ID for the VRF keypair they have\n * @dev committed to (let's call it keyHash). Create subscription, fund it\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n * @dev subscription management functions).\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n * @dev callbackGasLimit, numWords),\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\n *\n * @dev Once the VRFCoordinator has received and validated the oracle's response\n * @dev to your request, it will call your contract's fulfillRandomWords method.\n *\n * @dev The randomness argument to fulfillRandomWords is a set of random words\n * @dev generated from your requestId and the blockHash of the request.\n *\n * @dev If your contract could have concurrent requests open, you can use the\n * @dev requestId returned from requestRandomWords to track which response is associated\n * @dev with which randomness request.\n * @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n * @dev if your contract could have multiple requests in flight simultaneously.\n *\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n * @dev differ.\n *\n * *****************************************************************************\n * @dev SECURITY CONSIDERATIONS\n *\n * @dev A method with the ability to call your fulfillRandomness method directly\n * @dev could spoof a VRF response with any random value, so it's critical that\n * @dev it cannot be directly called by anything other than this base contract\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n *\n * @dev For your users to trust that your contract's random behavior is free\n * @dev from malicious interference, it's best if you can write it so that all\n * @dev behaviors implied by a VRF response are executed *during* your\n * @dev fulfillRandomness method. If your contract must store the response (or\n * @dev anything derived from it) and use it later, you must ensure that any\n * @dev user-significant behavior which depends on that stored value cannot be\n * @dev manipulated by a subsequent VRF request.\n *\n * @dev Similarly, both miners and the VRF oracle itself have some influence\n * @dev over the order in which VRF responses appear on the blockchain, so if\n * @dev your contract could have multiple VRF requests in flight simultaneously,\n * @dev you must ensure that the order in which the VRF responses arrive cannot\n * @dev be used to manipulate your contract's user-significant behavior.\n *\n * @dev Since the block hash of the block which contains the requestRandomness\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n * @dev miner could, in principle, fork the blockchain to evict the block\n * @dev containing the request, forcing the request to be included in a\n * @dev different block with a different hash, and therefore a different input\n * @dev to the VRF. However, such an attack would incur a substantial economic\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\n * @dev until it calls responds to a request. It is for this reason that\n * @dev that you can signal to an oracle you'd like them to wait longer before\n * @dev responding to the request (however this is not enforced in the contract\n * @dev and so remains effective only in the case of unmodified oracle software).\n */\nabstract contract VRFConsumerBaseV2 {\n  error OnlyCoordinatorCanFulfill(address have, address want);\n  address private immutable vrfCoordinator;\n\n  /**\n   * @param _vrfCoordinator address of VRFCoordinator contract\n   */\n  constructor(address _vrfCoordinator) {\n    vrfCoordinator = _vrfCoordinator;\n  }\n\n  /**\n   * @notice fulfillRandomness handles the VRF response. Your contract must\n   * @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n   * @notice principles to keep in mind when implementing your fulfillRandomness\n   * @notice method.\n   *\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n   * @dev signature, and will call it once it has verified the proof\n   * @dev associated with the randomness. (It is triggered via a call to\n   * @dev rawFulfillRandomness, below.)\n   *\n   * @param requestId The Id initially returned by requestRandomness\n   * @param randomWords the VRF output expanded to the requested number of words\n   */\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\n\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\n  // the origin of the call\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\n    if (msg.sender != vrfCoordinator) {\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\n    }\n    fulfillRandomWords(requestId, randomWords);\n  }\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.2) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _ownerOf(tokenId);\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner or approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _ownerOf(tokenId) != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\n\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        unchecked {\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\n            // Given that tokens are minted one by one, it is impossible in practice that\n            // this ever happens. Might change if we allow batch minting.\n            // The ERC fails to describe this case.\n            _balances[to] += 1;\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId, 1);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\n\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\n        owner = ERC721.ownerOf(tokenId);\n\n        // Clear approvals\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // Cannot overflow, as that would require more tokens to be burned/transferred\n            // out than the owner initially received through minting and transferring in.\n            _balances[owner] -= 1;\n        }\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId, 1);\n\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n\n        // Clear approvals from the previous owner\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\n            // `from`'s balance is the number of token held, which is at least one before the current\n            // transfer.\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\n            // all 2**256 token ids to be minted, which in practice is impossible.\n            _balances[from] -= 1;\n            _balances[to] += 1;\n        }\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n     * - When `from` is zero, the tokens will be minted for `to`.\n     * - When `to` is zero, ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 firstTokenId,\n        uint256 batchSize\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n     * - When `from` is zero, the tokens were minted for `to`.\n     * - When `to` is zero, ``from``'s tokens were burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 firstTokenId,\n        uint256 batchSize\n    ) internal virtual {}\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n     * that `ownerOf(tokenId)` is `a`.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\n        _balances[account] += amount;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC721.sol\";\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is ERC721 {\n    using Strings for uint256;\n\n    // Optional mapping for token URIs\n    mapping(uint256 => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\n        if (bytes(_tokenURI).length > 0) {\n            return string(abi.encodePacked(base, _tokenURI));\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\");\n        _tokenURIs[tokenId] = _tokenURI;\n    }\n\n    /**\n     * @dev See {ERC721-_burn}. This override additionally checks to see if a\n     * token-specific URI was set for the token, and if so, it deletes the token URI from\n     * the storage mapping.\n     */\n    function _burn(uint256 tokenId) internal virtual override {\n        super._burn(tokenId);\n\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\n            delete _tokenURIs[tokenId];\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"},"contracts/Characters.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.7;\r\n\r\ncontract Characters {\r\n    struct Person {\r\n        string tokenUri;\r\n        uint256 attack;\r\n        uint256 defence;\r\n        uint256 tactics;\r\n    }\r\n    Person[] public normalPersons;\r\n    Person[] public rarePersons;\r\n    Person[] public legendaryPersons;\r\n\r\n    constructor(\r\n        string[] memory tokenUriNormal,\r\n        uint256[][] memory normalStats,\r\n        string[] memory tokenUriRare,\r\n        uint256[][] memory statsRare,\r\n        string[] memory tokenUriLegendary,\r\n        uint256[][] memory statsLegendary\r\n    ) {\r\n        for (uint256 i = 0; i < tokenUriNormal.length; i++) {\r\n            normalPersons.push(\r\n                Person(\r\n                    tokenUriNormal[i],\r\n                    normalStats[i][0],\r\n                    normalStats[i][1],\r\n                    normalStats[i][2]\r\n                )\r\n            );\r\n        }\r\n        for (uint256 i = 0; i < tokenUriRare.length; i++) {\r\n            rarePersons.push(\r\n                Person(\r\n                    tokenUriRare[i],\r\n                    statsRare[i][0],\r\n                    statsRare[i][1],\r\n                    statsRare[i][2]\r\n                )\r\n            );\r\n        }\r\n        for (uint256 i = 0; i < tokenUriLegendary.length; i++) {\r\n            legendaryPersons.push(\r\n                Person(\r\n                    tokenUriLegendary[i],\r\n                    statsLegendary[i][0],\r\n                    statsLegendary[i][1],\r\n                    statsLegendary[i][2]\r\n                )\r\n            );\r\n        }\r\n    }\r\n\r\n    function normalPersonsLength() public view returns (uint256) {\r\n        return normalPersons.length;\r\n    }\r\n\r\n    function rarePersonsLength() public view returns (uint256) {\r\n        return rarePersons.length;\r\n    }\r\n\r\n    function legendaryPersonsLength() public view returns (uint256) {\r\n        return legendaryPersons.length;\r\n    }\r\n}\r\n"},"contracts/GameCard.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.7;\r\nimport \"./NftBox.sol\";\r\nimport \"./Characters.sol\";\r\nimport \"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\";\r\nimport \"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\";\r\nerror GameCard__NotOwner();\r\nerror GameCard__PlayerNotFound();\r\nerror GameCard__PlayerNotAllowed();\r\nerror GameCard__NotOpponent();\r\nerror GameCard__AlreadyOpponentFound();\r\n\r\ncontract GameCard is VRFConsumerBaseV2 {\r\n    enum PlayerStatus {\r\n        SEARCHING,\r\n        FOUND,\r\n        PLAYING,\r\n        OVER\r\n    }\r\n    struct Player {\r\n        uint256 game;\r\n        address player;\r\n        uint256[3] tokenIdArray;\r\n        address opponent;\r\n        PlayerStatus status;\r\n    }\r\n    struct Game {\r\n        address winner;\r\n        address loser;\r\n        bool draw;\r\n    }\r\n    event MatchFound(address player1, address player2);\r\n    event Match(address winner, address looser, bool draw);\r\n    event AddedToList(\r\n        address caller,\r\n        uint256[3] tokenId,\r\n        address opponent,\r\n        PlayerStatus status\r\n    );\r\n    event MatchBeginsSoon(address player1, address player2, uint256 requestId);\r\n    VRFCoordinatorV2Interface private immutable i_vrfCoordinator;\r\n    uint64 private immutable i_subscriptionId;\r\n    bytes32 private immutable i_gasLane;\r\n    uint32 private immutable i_callbackGasLimit;\r\n    uint16 private constant REQUEST_CONFIRMATIONS = 3;\r\n    uint32 private constant NUM_WORDS = 3;\r\n    mapping(address => Player) public s_addressInfo;\r\n    mapping(uint256 => address[2]) public s_requestIdToPlayers;\r\n    address[] public currentPlayers;\r\n    NftBox public i_contractNftBox;\r\n    address private immutable i_nftAddress;\r\n    address private immutable i_characterAddress;\r\n\r\n    Characters public i_contractCharacter;\r\n    uint256 public s_gameCounter;\r\n    mapping(uint256 => Game) public finshedGames;\r\n    modifier checkPlayers(address player1, address player2) {\r\n        if (\r\n            s_addressInfo[player1].player != player1 ||\r\n            s_addressInfo[player2].player != player2\r\n        ) {\r\n            revert GameCard__PlayerNotFound();\r\n        }\r\n        if (\r\n            (s_addressInfo[player1].status != PlayerStatus.FOUND) ||\r\n            (s_addressInfo[player2].status != PlayerStatus.FOUND)\r\n        ) {\r\n            revert GameCard__PlayerNotAllowed();\r\n        }\r\n        if (\r\n            s_addressInfo[player1].opponent != player2 ||\r\n            s_addressInfo[player2].opponent != player1\r\n        ) {\r\n            revert GameCard__NotOpponent();\r\n        }\r\n        _; /* this indicates that the rest of the main function will be run  */\r\n    }\r\n\r\n    constructor(\r\n        address nftBoxAddress,\r\n        address characterAddress,\r\n        address vrfCoordinatorV2,\r\n        uint64 subscriptionId,\r\n        bytes32 gasLane,\r\n        uint32 callbackGasLimit\r\n    ) VRFConsumerBaseV2(vrfCoordinatorV2) {\r\n        i_contractNftBox = NftBox(nftBoxAddress);\r\n        i_nftAddress = nftBoxAddress;\r\n        i_characterAddress = characterAddress;\r\n        i_contractCharacter = Characters(characterAddress);\r\n        i_vrfCoordinator = VRFCoordinatorV2Interface(vrfCoordinatorV2);\r\n        i_subscriptionId = subscriptionId;\r\n        i_gasLane = gasLane;\r\n        i_callbackGasLimit = callbackGasLimit;\r\n        s_gameCounter = 0;\r\n    }\r\n\r\n    function enterGame(\r\n        uint256 tokenId1,\r\n        uint256 tokenId2,\r\n        uint256 tokenId3\r\n    ) public {\r\n        IERC721 nft = IERC721(i_nftAddress);\r\n        (, , bool opened1, ) = i_contractNftBox.mappingNfts(tokenId1);\r\n        (, , bool opened2, ) = i_contractNftBox.mappingNfts(tokenId2);\r\n        (, , bool opened3, ) = i_contractNftBox.mappingNfts(tokenId3);\r\n        if (\r\n            nft.ownerOf(tokenId1) != msg.sender ||\r\n            !opened1 ||\r\n            tokenId1 == tokenId2 ||\r\n            tokenId2 == tokenId3 ||\r\n            tokenId3 == tokenId1\r\n        ) {\r\n            revert GameCard__NotOwner();\r\n        }\r\n\r\n        if (nft.ownerOf(tokenId2) != msg.sender || !opened2) {\r\n            revert GameCard__NotOwner();\r\n        }\r\n\r\n        if (nft.ownerOf(tokenId3) != msg.sender || !opened3) {\r\n            revert GameCard__NotOwner();\r\n        }\r\n        if (s_addressInfo[msg.sender].status == PlayerStatus.FOUND) {\r\n            revert GameCard__AlreadyOpponentFound();\r\n        }\r\n        if (currentPlayers.length == 0) {\r\n            currentPlayers.push(msg.sender);\r\n            s_addressInfo[msg.sender] = Player(\r\n                s_gameCounter,\r\n                msg.sender,\r\n                [tokenId1, tokenId2, tokenId3],\r\n                0x0000000000000000000000000000000000000000,\r\n                PlayerStatus.SEARCHING\r\n            );\r\n            emit AddedToList(\r\n                msg.sender,\r\n                [tokenId1, tokenId2, tokenId3],\r\n                0x0000000000000000000000000000000000000000,\r\n                PlayerStatus.SEARCHING\r\n            );\r\n            s_gameCounter++;\r\n        } else {\r\n            address opponent = currentPlayers[0];\r\n            if (opponent == msg.sender) {\r\n                revert GameCard__PlayerNotAllowed();\r\n            }\r\n            Player memory opponentStruct = s_addressInfo[opponent];\r\n\r\n            s_addressInfo[opponent] = Player(\r\n                opponentStruct.game,\r\n                opponent,\r\n                opponentStruct.tokenIdArray,\r\n                msg.sender,\r\n                PlayerStatus.FOUND\r\n            );\r\n            s_addressInfo[msg.sender] = Player(\r\n                opponentStruct.game,\r\n                msg.sender,\r\n                [tokenId1, tokenId2, tokenId3],\r\n                opponent,\r\n                PlayerStatus.FOUND\r\n            );\r\n            for (uint256 i = 0; i < currentPlayers.length; i++) {\r\n                if (currentPlayers[i] == opponent) {\r\n                    for (uint256 j = i; j < currentPlayers.length - 1; j++) {\r\n                        currentPlayers[j] = currentPlayers[j + 1];\r\n                    }\r\n                    currentPlayers.pop();\r\n                    break;\r\n                }\r\n            }\r\n            emit MatchFound(msg.sender, opponent);\r\n            playGame(msg.sender, opponent);\r\n        }\r\n    }\r\n\r\n    function playGame(\r\n        address player1Address,\r\n        address player2Address\r\n    )\r\n        private\r\n        checkPlayers(player1Address, player2Address)\r\n        returns (uint256 requestId)\r\n    {\r\n        // Get Player1 Data of TokenId\r\n        //We get the tokenUri and the\r\n        Player memory player1 = s_addressInfo[player1Address];\r\n        Player memory player2 = s_addressInfo[player2Address];\r\n\r\n        s_addressInfo[player1Address] = Player(\r\n            player1.game,\r\n            player1Address,\r\n            player1.tokenIdArray,\r\n            player2Address,\r\n            PlayerStatus.PLAYING\r\n        );\r\n        s_addressInfo[player2Address] = Player(\r\n            player1.game,\r\n            player2Address,\r\n            player2.tokenIdArray,\r\n            player1Address,\r\n            PlayerStatus.PLAYING\r\n        );\r\n        requestId = i_vrfCoordinator.requestRandomWords(\r\n            i_gasLane,\r\n            i_subscriptionId,\r\n            REQUEST_CONFIRMATIONS,\r\n            i_callbackGasLimit,\r\n            NUM_WORDS\r\n        );\r\n        s_requestIdToPlayers[requestId] = [player1Address, player2Address];\r\n        emit MatchBeginsSoon(player1Address, player2Address, requestId);\r\n    }\r\n\r\n    function fulfillRandomWords(\r\n        uint256 requestId,\r\n        uint256[] memory randomWords\r\n    ) internal override {\r\n        address[2] memory players = s_requestIdToPlayers[requestId];\r\n        Characters.Person[3] memory player1Characters = getCharacter(\r\n            players[0]\r\n        );\r\n        Characters.Person[3] memory player2Characters = getCharacter(\r\n            players[1]\r\n        );\r\n\r\n        s_addressInfo[players[0]] = Player(\r\n            s_addressInfo[players[0]].game,\r\n            players[0],\r\n            s_addressInfo[players[0]].tokenIdArray,\r\n            players[1],\r\n            PlayerStatus.OVER\r\n        );\r\n        s_addressInfo[players[1]] = Player(\r\n            s_addressInfo[players[1]].game,\r\n            players[1],\r\n            s_addressInfo[players[1]].tokenIdArray,\r\n            players[0],\r\n            PlayerStatus.OVER\r\n        );\r\n        // Round 1\r\n        uint256 removedIndex = randomWords[0] % 3;\r\n\r\n        uint256 player1Points = 0;\r\n        uint256 player2Points = 0;\r\n        player1Points = 0;\r\n        player2Points = 0;\r\n        if (\r\n            player1Characters[removedIndex].attack >\r\n            player2Characters[removedIndex].attack\r\n        ) {\r\n            player1Points++;\r\n        } else if (\r\n            player1Characters[removedIndex].attack <\r\n            player2Characters[removedIndex].attack\r\n        ) {\r\n            player2Points++;\r\n        } else {\r\n            player1Points++;\r\n            player2Points++;\r\n        }\r\n        uint256 game = s_addressInfo[s_requestIdToPlayers[requestId][0]].game;\r\n        // Remove character from the array\r\n        Characters.Person[2] memory player1Characters2;\r\n        Characters.Person[2] memory player2Characters2;\r\n        for (uint256 i = 0; i < 3; i++) {\r\n            if (i == removedIndex) {\r\n                continue;\r\n            } else if (i < removedIndex) {\r\n                player1Characters2[i] = player1Characters[i];\r\n                player2Characters2[i] = player2Characters[i];\r\n            } else {\r\n                player1Characters2[i - 1] = player1Characters[i];\r\n                player2Characters2[i - 1] = player2Characters[i];\r\n            }\r\n        }\r\n\r\n        if (\r\n            player1Characters2[randomWords[1] % 2].defence >\r\n            player2Characters2[randomWords[1] % 2].defence\r\n        ) {\r\n            player1Points++;\r\n        } else if (\r\n            player1Characters2[randomWords[1] % 2].defence <\r\n            player2Characters2[randomWords[1] % 2].defence\r\n        ) {\r\n            player2Points++;\r\n        } else {\r\n            player1Points++;\r\n            player2Points++;\r\n        }\r\n\r\n        // Remove character from the array\r\n        Characters.Person[1] memory player1Characters1;\r\n        Characters.Person[1] memory player2Characters1;\r\n        for (uint256 i = 0; i < 2; i++) {\r\n            if (i == randomWords[1] % 2) {\r\n                continue;\r\n            } else if (i < randomWords[1] % 2) {\r\n                player1Characters1[i] = player1Characters2[i];\r\n                player2Characters1[i] = player2Characters2[i];\r\n            } else {\r\n                player1Characters1[i - 1] = player1Characters2[i];\r\n                player2Characters1[i - 1] = player2Characters2[i];\r\n            }\r\n        }\r\n        // Because of the stack is too deep\r\n        address player1Address = players[0];\r\n        address player2Address = players[1];\r\n\r\n        // Round 3\r\n        if (player1Characters1[0].tactics > player2Characters1[0].tactics) {\r\n            player1Points++;\r\n        } else if (\r\n            player1Characters1[0].tactics < player2Characters1[0].tactics\r\n        ) {\r\n            player2Points++;\r\n        } else {\r\n            player1Points++;\r\n            player2Points++;\r\n        }\r\n\r\n        (address winner, address loser, bool draw) = getResult(\r\n            player1Address,\r\n            player1Points,\r\n            player2Address,\r\n            player2Points,\r\n            game\r\n        );\r\n\r\n        emit Match(winner, loser, draw);\r\n    }\r\n\r\n    function getResult(\r\n        address player1,\r\n        uint256 player1Points,\r\n        address player2,\r\n        uint256 player2Points,\r\n        uint256 game\r\n    ) private returns (address, address, bool) {\r\n        if (player1Points > player2Points) {\r\n            finshedGames[game] = Game(player1, player2, false);\r\n            return (player1, player2, false);\r\n        } else if (player2Points > player1Points) {\r\n            finshedGames[game] = Game(player2, player1, false);\r\n            return (player2, player1, false);\r\n        } else {\r\n            finshedGames[game] = Game(player1, player2, true);\r\n            return (\r\n                0x0000000000000000000000000000000000000000,\r\n                0x0000000000000000000000000000000000000000,\r\n                true\r\n            );\r\n        }\r\n    }\r\n\r\n    function getCharacter(\r\n        address player\r\n    ) private returns (Characters.Person[3] memory) {\r\n        uint256[3] memory player1TokenArray = s_addressInfo[player]\r\n            .tokenIdArray;\r\n        (\r\n            ,\r\n            string memory player1tokenId1Uri,\r\n            ,\r\n            uint256 player1tokenId1BoxType\r\n        ) = i_contractNftBox.mappingNfts(player1TokenArray[0]);\r\n        (\r\n            ,\r\n            string memory player1tokenId2Uri,\r\n            ,\r\n            uint256 player1tokenId2BoxType\r\n        ) = i_contractNftBox.mappingNfts(player1TokenArray[1]);\r\n        (\r\n            ,\r\n            string memory player1tokenId3Uri,\r\n            ,\r\n            uint256 player1tokenId3BoxType\r\n        ) = i_contractNftBox.mappingNfts(player1TokenArray[2]);\r\n\r\n        Characters.Person memory character1 = getData(\r\n            player1tokenId1BoxType,\r\n            player1tokenId1Uri\r\n        );\r\n        Characters.Person memory character2 = getData(\r\n            player1tokenId2BoxType,\r\n            player1tokenId2Uri\r\n        );\r\n        Characters.Person memory character3 = getData(\r\n            player1tokenId3BoxType,\r\n            player1tokenId3Uri\r\n        );\r\n        Characters.Person[3] memory array = [\r\n            character1,\r\n            character2,\r\n            character3\r\n        ];\r\n        return array;\r\n    }\r\n\r\n    function getData(\r\n        uint256 boxType,\r\n        string memory tokenUri\r\n    ) private returns (Characters.Person memory) {\r\n        if (boxType == 0) {\r\n            for (\r\n                uint256 i = 0;\r\n                i < i_contractCharacter.normalPersonsLength();\r\n                i++\r\n            ) {\r\n                (string memory tokenUriLoop, , , ) = i_contractCharacter\r\n                    .normalPersons(i);\r\n                if (\r\n                    keccak256(abi.encodePacked(tokenUriLoop)) ==\r\n                    keccak256(abi.encodePacked(tokenUri))\r\n                ) {\r\n                    (\r\n                        string memory tokenUri,\r\n                        uint256 strength,\r\n                        uint256 dexterity,\r\n                        uint256 intellect\r\n                    ) = i_contractCharacter.normalPersons(i);\r\n\r\n                    Characters.Person memory character = Characters.Person({\r\n                        tokenUri: tokenUri,\r\n                        attack: strength,\r\n                        defence: dexterity,\r\n                        tactics: intellect\r\n                    });\r\n                    return character;\r\n                }\r\n            }\r\n        } else if (boxType == 1) {\r\n            for (\r\n                uint256 i = 0;\r\n                i < i_contractCharacter.rarePersonsLength();\r\n                i++\r\n            ) {\r\n                (string memory tokenUriLoop, , , ) = i_contractCharacter\r\n                    .rarePersons(i);\r\n                if (\r\n                    keccak256(abi.encodePacked(tokenUriLoop)) ==\r\n                    keccak256(abi.encodePacked(tokenUri))\r\n                ) {\r\n                    (\r\n                        string memory tokenUri,\r\n                        uint256 strength,\r\n                        uint256 dexterity,\r\n                        uint256 intellect\r\n                    ) = i_contractCharacter.rarePersons(i);\r\n\r\n                    Characters.Person memory character = Characters.Person({\r\n                        tokenUri: tokenUri,\r\n                        attack: strength,\r\n                        defence: dexterity,\r\n                        tactics: intellect\r\n                    });\r\n                    return character;\r\n                }\r\n            }\r\n        } else if (boxType == 2) {\r\n            for (\r\n                uint256 i = 0;\r\n                i < i_contractCharacter.legendaryPersonsLength();\r\n                i++\r\n            ) {\r\n                (string memory tokenUriLoop, , , ) = i_contractCharacter\r\n                    .legendaryPersons(i);\r\n                if (\r\n                    keccak256(abi.encodePacked(tokenUriLoop)) ==\r\n                    keccak256(abi.encodePacked(tokenUri))\r\n                ) {\r\n                    (\r\n                        string memory tokenUri,\r\n                        uint256 strength,\r\n                        uint256 dexterity,\r\n                        uint256 intellect\r\n                    ) = i_contractCharacter.legendaryPersons(i);\r\n\r\n                    Characters.Person memory character = Characters.Person({\r\n                        tokenUri: tokenUri,\r\n                        attack: strength,\r\n                        defence: dexterity,\r\n                        tactics: intellect\r\n                    });\r\n                    return character;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function getCurrentPlayers() public view returns (uint256) {\r\n        return currentPlayers.length;\r\n    }\r\n\r\n    function getTokenIds(\r\n        address user,\r\n        uint256 index\r\n    ) public view returns (uint256) {\r\n        return s_addressInfo[user].tokenIdArray[index];\r\n    }\r\n}\r\n"},"contracts/NftBox.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.7;\r\n\r\nimport \"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\";\r\nimport \"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\";\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\r\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\nimport \"./Characters.sol\";\r\n\r\nerror NftBox__NeedMoreETHSent();\r\nerror NftBox__NotOwner();\r\nerror NftBox__TokenIdNotExist();\r\nerror NftBox__AlreadyOpened();\r\nerror NftBox__TransferFailed();\r\nerror NftBox__NotNftAddressCalling();\r\n\r\ncontract NftBox is VRFConsumerBaseV2, ERC721URIStorage, Ownable {\r\n    Characters public i_charactersContract;\r\n    // Trade Nft Address for the setMapping\r\n    address public tradeNftAddress;\r\n    //TokenCounter\r\n    uint256 private s_tokenCounter;\r\n    //3 Types Of Boxes with their TokenUri\r\n    string[] private NftBoxesUri;\r\n    //Card Uris\r\n    //Nft\r\n    struct Nft {\r\n        uint256 tokenId;\r\n        string tokenUri;\r\n        bool Boxopened;\r\n        uint256 boxType /* 0 -> normal; 1-> rare; 2 -> legendary*/;\r\n    }\r\n\r\n    //Price Boxes\r\n    uint256 public constant PRICE_NORMAL_BOX_USD = 10;\r\n    uint256 public constant PRICE_RARE_BOX_USD = 50;\r\n    uint256 public constant PRICE_LEGENDARY_BOX_USD = 100;\r\n    // Random Request for the NFt Card\r\n    VRFCoordinatorV2Interface private immutable i_vrfCoordinator;\r\n    uint64 private immutable i_subscriptionId;\r\n    bytes32 private immutable i_gasLane;\r\n    uint32 private immutable i_callbackGasLimit;\r\n    uint16 private constant REQUEST_CONFIRMATIONS = 3;\r\n    uint32 private constant NUM_WORDS = 1;\r\n    //Price Feed\r\n    AggregatorV3Interface private immutable i_priceFeed;\r\n    //mappings\r\n    mapping(uint256 => Nft) public mappingNfts;\r\n    mapping(uint256 => uint256) public mappingRequestToToken;\r\n\r\n    //Events\r\n    event NormalBoxMinted(\r\n        address owner,\r\n        uint256 tokenId,\r\n        string tokenUri,\r\n        uint256 price\r\n    );\r\n    event RareBoxMinted(\r\n        address owner,\r\n        uint256 tokenId,\r\n        string tokenUri,\r\n        uint256 price\r\n    );\r\n    event LegendaryBoxMinted(\r\n        address owner,\r\n        uint256 tokenId,\r\n        string tokenUri,\r\n        uint256 price\r\n    );\r\n    event OpenBoxRandomRequested(uint256 requestId, address sender);\r\n    event BoxOpened(address owner, uint256 tokenId, string tokenUri);\r\n    //modifiers\r\n    modifier isOwner(uint256 tokenId, address spender) {\r\n        address owner = ownerOf(tokenId);\r\n        if (spender != owner) {\r\n            revert NftBox__NotOwner();\r\n        }\r\n        _;\r\n    }\r\n    modifier tokenIdExists(address owner, uint256 tokenId) {\r\n        bool success = _exists(tokenId);\r\n        if (!success) {\r\n            revert NftBox__TokenIdNotExist();\r\n        }\r\n        _;\r\n    }\r\n\r\n    constructor(\r\n        address vrfCoordinatorV2,\r\n        uint64 subscriptionId,\r\n        bytes32 gasLane,\r\n        uint32 callbackGasLimit,\r\n        string[3] memory boxesUri,\r\n        address priceFeedAddress,\r\n        address charactersAddress\r\n    )\r\n        ERC721(\"CardBoxes\", \"CABO\")\r\n        VRFConsumerBaseV2(vrfCoordinatorV2)\r\n        Ownable()\r\n    {\r\n        i_vrfCoordinator = VRFCoordinatorV2Interface(vrfCoordinatorV2);\r\n        i_subscriptionId = subscriptionId;\r\n        i_gasLane = gasLane;\r\n        i_callbackGasLimit = callbackGasLimit;\r\n        NftBoxesUri = boxesUri;\r\n        i_priceFeed = AggregatorV3Interface(priceFeedAddress);\r\n        s_tokenCounter = 0;\r\n        i_charactersContract = Characters(charactersAddress);\r\n    }\r\n\r\n    function buyNormalBox() public payable {\r\n        uint256 usdPriceInEth = priceFeedUsdToEth(PRICE_NORMAL_BOX_USD);\r\n        if (msg.value < usdPriceInEth) {\r\n            revert NftBox__NeedMoreETHSent();\r\n        }\r\n        uint256 newTokenId = s_tokenCounter; // we save the tokenCounter in a variable before updating it\r\n        s_tokenCounter = s_tokenCounter + 1;\r\n        _safeMint(msg.sender, newTokenId);\r\n        string memory tokenURI = NftBoxesUri[0];\r\n        _setTokenURI(newTokenId, tokenURI);\r\n        mappingNfts[newTokenId] = Nft(newTokenId, tokenURI, false, 0);\r\n\r\n        emit NormalBoxMinted(\r\n            msg.sender /* Owner*/,\r\n            newTokenId,\r\n            tokenURI,\r\n            usdPriceInEth\r\n        );\r\n    }\r\n\r\n    function buyRareBox() public payable {\r\n        uint256 usdPriceInEth = priceFeedUsdToEth(PRICE_RARE_BOX_USD);\r\n        if (msg.value < usdPriceInEth) {\r\n            revert NftBox__NeedMoreETHSent();\r\n        }\r\n        uint256 newTokenId = s_tokenCounter; // we save the tokenCounter in a variable before updating it\r\n        s_tokenCounter = s_tokenCounter + 1;\r\n        _safeMint(msg.sender, newTokenId);\r\n        string memory tokenURI = NftBoxesUri[1];\r\n        _setTokenURI(newTokenId, tokenURI);\r\n        mappingNfts[newTokenId] = Nft(newTokenId, tokenURI, false, 1);\r\n        emit RareBoxMinted(\r\n            msg.sender /* Owner*/,\r\n            newTokenId,\r\n            tokenURI,\r\n            usdPriceInEth\r\n        );\r\n        /*  setTokenId(msg.sender, newTokenId); */\r\n    }\r\n\r\n    function buyLegendaryBox() public payable {\r\n        uint256 usdPriceInEth = priceFeedUsdToEth(PRICE_LEGENDARY_BOX_USD);\r\n        if (msg.value < usdPriceInEth) {\r\n            revert NftBox__NeedMoreETHSent();\r\n        }\r\n        uint256 newTokenId = s_tokenCounter; // we save the tokenCounter in a variable before updating it\r\n        s_tokenCounter = s_tokenCounter + 1;\r\n        _safeMint(msg.sender, newTokenId);\r\n        string memory tokenURI = NftBoxesUri[2];\r\n        _setTokenURI(newTokenId, tokenURI);\r\n        mappingNfts[newTokenId] = Nft(newTokenId, tokenURI, false, 2);\r\n        emit LegendaryBoxMinted(\r\n            msg.sender,\r\n            newTokenId,\r\n            tokenURI,\r\n            usdPriceInEth\r\n        );\r\n    }\r\n\r\n    function openBox(\r\n        uint256 tokenId\r\n    )\r\n        public\r\n        tokenIdExists(msg.sender, tokenId)\r\n        isOwner(tokenId, msg.sender)\r\n        returns (uint256 requestId)\r\n    {\r\n        Nft memory nft = mappingNfts[tokenId];\r\n        if (nft.Boxopened) {\r\n            revert NftBox__AlreadyOpened();\r\n        }\r\n        requestId = i_vrfCoordinator.requestRandomWords(\r\n            i_gasLane,\r\n            i_subscriptionId,\r\n            REQUEST_CONFIRMATIONS,\r\n            i_callbackGasLimit,\r\n            NUM_WORDS\r\n        );\r\n        mappingRequestToToken[requestId] = tokenId;\r\n        emit OpenBoxRandomRequested(requestId, msg.sender);\r\n    }\r\n\r\n    function fulfillRandomWords(\r\n        uint256 requestId,\r\n        uint256[] memory randomWords\r\n    ) internal override {\r\n        uint256 tokenId = mappingRequestToToken[requestId];\r\n        Nft memory nft = mappingNfts[tokenId];\r\n        if (nft.Boxopened) {\r\n            revert NftBox__AlreadyOpened();\r\n        }\r\n        string memory newUri;\r\n        if (nft.boxType == 0) {\r\n            uint256 randomIndex = randomWords[0] %\r\n                i_charactersContract.normalPersonsLength();\r\n            (string memory uri, , , ) = i_charactersContract.normalPersons(\r\n                randomIndex\r\n            );\r\n            newUri = uri;\r\n        } else if (nft.boxType == 1) {\r\n            uint256 randomIndex = randomWords[0] %\r\n                i_charactersContract.rarePersonsLength();\r\n            (string memory uri, , , ) = i_charactersContract.rarePersons(\r\n                randomIndex\r\n            );\r\n            newUri = uri;\r\n        } else if (nft.boxType == 2) {\r\n            uint256 randomIndex = randomWords[0] %\r\n                i_charactersContract.legendaryPersonsLength();\r\n            (string memory uri, , , ) = i_charactersContract.legendaryPersons(\r\n                randomIndex\r\n            );\r\n            newUri = uri;\r\n        } else {\r\n            revert NftBox__AlreadyOpened();\r\n        }\r\n        mappingNfts[tokenId] = Nft(tokenId, newUri, true, nft.boxType);\r\n        _setTokenURI(tokenId, newUri);\r\n        emit BoxOpened(msg.sender, tokenId, newUri);\r\n    }\r\n\r\n    function withdraw() public onlyOwner {\r\n        uint256 amount = address(this).balance;\r\n        (bool success, ) = payable(msg.sender).call{value: amount}(\"\");\r\n        if (!success) {\r\n            revert NftBox__TransferFailed();\r\n        }\r\n    }\r\n\r\n    //\r\n    function getTokenIds(address owner) public view returns (uint256[] memory) {\r\n        uint256[] memory tokenArray = new uint256[](s_tokenCounter);\r\n        uint256 count = 0;\r\n        for (uint256 i = 0; i < s_tokenCounter; i++) {\r\n            address spender = ownerOf(i);\r\n            if (spender == owner) {\r\n                tokenArray[count] = i;\r\n                count++;\r\n            }\r\n        }\r\n        // resize the array to remove any unused elements\r\n        uint256[] memory result = new uint256[](count);\r\n        for (uint256 i = 0; i < count; i++) {\r\n            result[i] = tokenArray[i];\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function getNormalCard(uint256 index) public view returns (string memory) {\r\n        (string memory uri, , , ) = i_charactersContract.normalPersons(index);\r\n        return uri;\r\n    }\r\n\r\n    function getRareCard(uint256 index) public view returns (string memory) {\r\n        (string memory uri, , , ) = i_charactersContract.rarePersons(index);\r\n        return uri;\r\n    }\r\n\r\n    function getLegendaryCard(\r\n        uint256 index\r\n    ) public view returns (string memory) {\r\n        (string memory uri, , , ) = i_charactersContract.legendaryPersons(\r\n            index\r\n        );\r\n        return uri;\r\n    }\r\n\r\n    function getNormalCardUrisLength() public view returns (uint256) {\r\n        return i_charactersContract.normalPersonsLength();\r\n    }\r\n\r\n    function getRareCardUrisLength() public view returns (uint256) {\r\n        return i_charactersContract.rarePersonsLength();\r\n    }\r\n\r\n    function getLegendaryCardUrisLength() public view returns (uint256) {\r\n        return i_charactersContract.legendaryPersonsLength();\r\n    }\r\n\r\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\r\n        return i_priceFeed;\r\n    }\r\n\r\n    function getTokenCounter() public view returns (uint256) {\r\n        return s_tokenCounter;\r\n    }\r\n\r\n    function getNft(uint256 tokenId) public view returns (Nft memory) {\r\n        return mappingNfts[tokenId];\r\n    }\r\n\r\n    function getNftBoxesUri(uint256 index) public view returns (string memory) {\r\n        return NftBoxesUri[index];\r\n    }\r\n\r\n    function priceFeedUsdToEth(uint256 usd) public view returns (uint256) {\r\n        (, int256 Price, , , ) = i_priceFeed.latestRoundData();\r\n        uint256 price = (usd * 1e36) / (uint256(Price) * 1e10);\r\n        return uint256(price);\r\n    }\r\n}\r\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"2519","formattedMessage":"Warning: This declaration shadows an existing declaration.\n   --> contracts/GameCard.sol:419:25:\n    |\n419 |                         string memory tokenUri,\n    |                         ^^^^^^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n   --> contracts/GameCard.sol:404:9:\n    |\n404 |         string memory tokenUri\n    |         ^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"This declaration shadows an existing declaration.","secondarySourceLocations":[{"end":13813,"file":"contracts/GameCard.sol","message":"The shadowed declaration is here:","start":13791}],"severity":"warning","sourceLocation":{"end":14400,"file":"contracts/GameCard.sol","start":14378},"type":"Warning"},{"component":"general","errorCode":"2519","formattedMessage":"Warning: This declaration shadows an existing declaration.\n   --> contracts/GameCard.sol:447:25:\n    |\n447 |                         string memory tokenUri,\n    |                         ^^^^^^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n   --> contracts/GameCard.sol:404:9:\n    |\n404 |         string memory tokenUri\n    |         ^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"This declaration shadows an existing declaration.","secondarySourceLocations":[{"end":13813,"file":"contracts/GameCard.sol","message":"The shadowed declaration is here:","start":13791}],"severity":"warning","sourceLocation":{"end":15487,"file":"contracts/GameCard.sol","start":15465},"type":"Warning"},{"component":"general","errorCode":"2519","formattedMessage":"Warning: This declaration shadows an existing declaration.\n   --> contracts/GameCard.sol:475:25:\n    |\n475 |                         string memory tokenUri,\n    |                         ^^^^^^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n   --> contracts/GameCard.sol:404:9:\n    |\n404 |         string memory tokenUri\n    |         ^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"This declaration shadows an existing declaration.","secondarySourceLocations":[{"end":13813,"file":"contracts/GameCard.sol","message":"The shadowed declaration is here:","start":13791}],"severity":"warning","sourceLocation":{"end":16582,"file":"contracts/GameCard.sol","start":16560},"type":"Warning"},{"component":"general","errorCode":"6321","formattedMessage":"Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n   --> contracts/GameCard.sol:405:24:\n    |\n405 |     ) private returns (Characters.Person memory) {\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.","severity":"warning","sourceLocation":{"end":13862,"file":"contracts/GameCard.sol","start":13838},"type":"Warning"},{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to view\n   --> contracts/GameCard.sol:402:5:\n    |\n402 |     function getData(\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to view","severity":"warning","sourceLocation":{"end":17152,"file":"contracts/GameCard.sol","start":13738},"type":"Warning"}],"sources":{"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol","exportedSymbols":{"VRFConsumerBaseV2":[57]},"id":58,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:0"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"57:5275:0","text":"****************************************************************************\n @notice Interface for contracts using VRF randomness\n *****************************************************************************\n @dev PURPOSE\n @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n @dev to Vera the verifier in such a way that Vera can be sure he's not\n @dev making his output up to suit himself. Reggie provides Vera a public key\n @dev to which he knows the secret key. Each time Vera provides a seed to\n @dev Reggie, he gives back a value which is computed completely\n @dev deterministically from the seed and the secret key.\n @dev Reggie provides a proof by which Vera can verify that the output was\n @dev correctly computed once Reggie tells it to her, but without that proof,\n @dev the output is indistinguishable to her from a uniform random sample\n @dev from the output space.\n @dev The purpose of this contract is to make it easy for unrelated contracts\n @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n @dev simple access to a verifiable source of randomness. It ensures 2 things:\n @dev 1. The fulfillment came from the VRFCoordinator\n @dev 2. The consumer contract implements fulfillRandomWords.\n *****************************************************************************\n @dev USAGE\n @dev Calling contracts must inherit from VRFConsumerBase, and can\n @dev initialize VRFConsumerBase's attributes in their constructor as\n @dev shown:\n @dev   contract VRFConsumer {\n @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n @dev       VRFConsumerBase(_vrfCoordinator) public {\n @dev         <initialization with other arguments goes here>\n @dev       }\n @dev   }\n @dev The oracle will have given you an ID for the VRF keypair they have\n @dev committed to (let's call it keyHash). Create subscription, fund it\n @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n @dev subscription management functions).\n @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n @dev callbackGasLimit, numWords),\n @dev see (VRFCoordinatorInterface for a description of the arguments).\n @dev Once the VRFCoordinator has received and validated the oracle's response\n @dev to your request, it will call your contract's fulfillRandomWords method.\n @dev The randomness argument to fulfillRandomWords is a set of random words\n @dev generated from your requestId and the blockHash of the request.\n @dev If your contract could have concurrent requests open, you can use the\n @dev requestId returned from requestRandomWords to track which response is associated\n @dev with which randomness request.\n @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n @dev if your contract could have multiple requests in flight simultaneously.\n @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n @dev differ.\n *****************************************************************************\n @dev SECURITY CONSIDERATIONS\n @dev A method with the ability to call your fulfillRandomness method directly\n @dev could spoof a VRF response with any random value, so it's critical that\n @dev it cannot be directly called by anything other than this base contract\n @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n @dev For your users to trust that your contract's random behavior is free\n @dev from malicious interference, it's best if you can write it so that all\n @dev behaviors implied by a VRF response are executed *during* your\n @dev fulfillRandomness method. If your contract must store the response (or\n @dev anything derived from it) and use it later, you must ensure that any\n @dev user-significant behavior which depends on that stored value cannot be\n @dev manipulated by a subsequent VRF request.\n @dev Similarly, both miners and the VRF oracle itself have some influence\n @dev over the order in which VRF responses appear on the blockchain, so if\n @dev your contract could have multiple VRF requests in flight simultaneously,\n @dev you must ensure that the order in which the VRF responses arrive cannot\n @dev be used to manipulate your contract's user-significant behavior.\n @dev Since the block hash of the block which contains the requestRandomness\n @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n @dev miner could, in principle, fork the blockchain to evict the block\n @dev containing the request, forcing the request to be included in a\n @dev different block with a different hash, and therefore a different input\n @dev to the VRF. However, such an attack would incur a substantial economic\n @dev cost. This cost scales with the number of blocks the VRF oracle waits\n @dev until it calls responds to a request. It is for this reason that\n @dev that you can signal to an oracle you'd like them to wait longer before\n @dev responding to the request (however this is not enforced in the contract\n @dev and so remains effective only in the case of unmodified oracle software)."},"fullyImplemented":false,"id":57,"linearizedBaseContracts":[57],"name":"VRFConsumerBaseV2","nameLocation":"5351:17:0","nodeType":"ContractDefinition","nodes":[{"id":8,"name":"OnlyCoordinatorCanFulfill","nameLocation":"5379:25:0","nodeType":"ErrorDefinition","parameters":{"id":7,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4,"mutability":"mutable","name":"have","nameLocation":"5413:4:0","nodeType":"VariableDeclaration","scope":8,"src":"5405:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3,"name":"address","nodeType":"ElementaryTypeName","src":"5405:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6,"mutability":"mutable","name":"want","nameLocation":"5427:4:0","nodeType":"VariableDeclaration","scope":8,"src":"5419:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5,"name":"address","nodeType":"ElementaryTypeName","src":"5419:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5404:28:0"},"src":"5373:60:0"},{"constant":false,"id":10,"mutability":"immutable","name":"vrfCoordinator","nameLocation":"5462:14:0","nodeType":"VariableDeclaration","scope":57,"src":"5436:40:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9,"name":"address","nodeType":"ElementaryTypeName","src":"5436:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":20,"nodeType":"Block","src":"5593:43:0","statements":[{"expression":{"id":18,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":16,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"5599:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":17,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"5616:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5599:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":19,"nodeType":"ExpressionStatement","src":"5599:32:0"}]},"documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"5481:72:0","text":" @param _vrfCoordinator address of VRFCoordinator contract"},"id":21,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":14,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13,"mutability":"mutable","name":"_vrfCoordinator","nameLocation":"5576:15:0","nodeType":"VariableDeclaration","scope":21,"src":"5568:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"5568:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5567:25:0"},"returnParameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"5593:0:0"},"scope":57,"src":"5556:80:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"documentation":{"id":22,"nodeType":"StructuredDocumentation","src":"5640:686:0","text":" @notice fulfillRandomness handles the VRF response. Your contract must\n @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n @notice principles to keep in mind when implementing your fulfillRandomness\n @notice method.\n @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n @dev signature, and will call it once it has verified the proof\n @dev associated with the randomness. (It is triggered via a call to\n @dev rawFulfillRandomness, below.)\n @param requestId The Id initially returned by requestRandomness\n @param randomWords the VRF output expanded to the requested number of words"},"id":30,"implemented":false,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"6338:18:0","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24,"mutability":"mutable","name":"requestId","nameLocation":"6365:9:0","nodeType":"VariableDeclaration","scope":30,"src":"6357:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":23,"name":"uint256","nodeType":"ElementaryTypeName","src":"6357:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":27,"mutability":"mutable","name":"randomWords","nameLocation":"6393:11:0","nodeType":"VariableDeclaration","scope":30,"src":"6376:28:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":25,"name":"uint256","nodeType":"ElementaryTypeName","src":"6376:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":26,"nodeType":"ArrayTypeName","src":"6376:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6356:49:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"6422:0:0"},"scope":57,"src":"6329:94:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":55,"nodeType":"Block","src":"6707:167:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":38,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6717:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":39,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6717:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":40,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"6731:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6717:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":49,"nodeType":"IfStatement","src":"6713:109:0","trueBody":{"id":48,"nodeType":"Block","src":"6747:75:0","statements":[{"errorCall":{"arguments":[{"expression":{"id":43,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6788:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":44,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6788:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":45,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"6800:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":42,"name":"OnlyCoordinatorCanFulfill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"6762:25:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6762:53:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":47,"nodeType":"RevertStatement","src":"6755:60:0"}]}},{"expression":{"arguments":[{"id":51,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"6846:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":52,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"6857:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":50,"name":"fulfillRandomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"6827:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,uint256[] memory)"}},"id":53,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6827:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":54,"nodeType":"ExpressionStatement","src":"6827:42:0"}]},"functionSelector":"1fe543e3","id":56,"implemented":true,"kind":"function","modifiers":[],"name":"rawFulfillRandomWords","nameLocation":"6627:21:0","nodeType":"FunctionDefinition","parameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"requestId","nameLocation":"6657:9:0","nodeType":"VariableDeclaration","scope":56,"src":"6649:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31,"name":"uint256","nodeType":"ElementaryTypeName","src":"6649:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":35,"mutability":"mutable","name":"randomWords","nameLocation":"6685:11:0","nodeType":"VariableDeclaration","scope":56,"src":"6668:28:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":33,"name":"uint256","nodeType":"ElementaryTypeName","src":"6668:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":34,"nodeType":"ArrayTypeName","src":"6668:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6648:49:0"},"returnParameters":{"id":37,"nodeType":"ParameterList","parameters":[],"src":"6707:0:0"},"scope":57,"src":"6618:256:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":58,"src":"5333:1543:0","usedErrors":[8]}],"src":"32:6845:0"},"id":0},"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","exportedSymbols":{"AggregatorV3Interface":[103]},"id":104,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":59,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:1"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":103,"linearizedBaseContracts":[103],"name":"AggregatorV3Interface","nameLocation":"67:21:1","nodeType":"ContractDefinition","nodes":[{"functionSelector":"313ce567","id":64,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"102:8:1","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"110:2:1"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":64,"src":"136:5:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":61,"name":"uint8","nodeType":"ElementaryTypeName","src":"136:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"135:7:1"},"scope":103,"src":"93:50:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7284e416","id":69,"implemented":false,"kind":"function","modifiers":[],"name":"description","nameLocation":"156:11:1","nodeType":"FunctionDefinition","parameters":{"id":65,"nodeType":"ParameterList","parameters":[],"src":"167:2:1"},"returnParameters":{"id":68,"nodeType":"ParameterList","parameters":[{"constant":false,"id":67,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":69,"src":"193:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":66,"name":"string","nodeType":"ElementaryTypeName","src":"193:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"192:15:1"},"scope":103,"src":"147:61:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"54fd4d50","id":74,"implemented":false,"kind":"function","modifiers":[],"name":"version","nameLocation":"221:7:1","nodeType":"FunctionDefinition","parameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"228:2:1"},"returnParameters":{"id":73,"nodeType":"ParameterList","parameters":[{"constant":false,"id":72,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":74,"src":"254:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":71,"name":"uint256","nodeType":"ElementaryTypeName","src":"254:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"253:9:1"},"scope":103,"src":"212:51:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9a6fc8f5","id":89,"implemented":false,"kind":"function","modifiers":[],"name":"getRoundData","nameLocation":"276:12:1","nodeType":"FunctionDefinition","parameters":{"id":77,"nodeType":"ParameterList","parameters":[{"constant":false,"id":76,"mutability":"mutable","name":"_roundId","nameLocation":"296:8:1","nodeType":"VariableDeclaration","scope":89,"src":"289:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":75,"name":"uint80","nodeType":"ElementaryTypeName","src":"289:6:1","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"288:17:1"},"returnParameters":{"id":88,"nodeType":"ParameterList","parameters":[{"constant":false,"id":79,"mutability":"mutable","name":"roundId","nameLocation":"355:7:1","nodeType":"VariableDeclaration","scope":89,"src":"348:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":78,"name":"uint80","nodeType":"ElementaryTypeName","src":"348:6:1","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":81,"mutability":"mutable","name":"answer","nameLocation":"377:6:1","nodeType":"VariableDeclaration","scope":89,"src":"370:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":80,"name":"int256","nodeType":"ElementaryTypeName","src":"370:6:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":83,"mutability":"mutable","name":"startedAt","nameLocation":"399:9:1","nodeType":"VariableDeclaration","scope":89,"src":"391:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":82,"name":"uint256","nodeType":"ElementaryTypeName","src":"391:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":85,"mutability":"mutable","name":"updatedAt","nameLocation":"424:9:1","nodeType":"VariableDeclaration","scope":89,"src":"416:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":84,"name":"uint256","nodeType":"ElementaryTypeName","src":"416:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":87,"mutability":"mutable","name":"answeredInRound","nameLocation":"448:15:1","nodeType":"VariableDeclaration","scope":89,"src":"441:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":86,"name":"uint80","nodeType":"ElementaryTypeName","src":"441:6:1","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"340:129:1"},"scope":103,"src":"267:203:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"feaf968c","id":102,"implemented":false,"kind":"function","modifiers":[],"name":"latestRoundData","nameLocation":"483:15:1","nodeType":"FunctionDefinition","parameters":{"id":90,"nodeType":"ParameterList","parameters":[],"src":"498:2:1"},"returnParameters":{"id":101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92,"mutability":"mutable","name":"roundId","nameLocation":"550:7:1","nodeType":"VariableDeclaration","scope":102,"src":"543:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":91,"name":"uint80","nodeType":"ElementaryTypeName","src":"543:6:1","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":94,"mutability":"mutable","name":"answer","nameLocation":"572:6:1","nodeType":"VariableDeclaration","scope":102,"src":"565:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":93,"name":"int256","nodeType":"ElementaryTypeName","src":"565:6:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":96,"mutability":"mutable","name":"startedAt","nameLocation":"594:9:1","nodeType":"VariableDeclaration","scope":102,"src":"586:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":95,"name":"uint256","nodeType":"ElementaryTypeName","src":"586:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":98,"mutability":"mutable","name":"updatedAt","nameLocation":"619:9:1","nodeType":"VariableDeclaration","scope":102,"src":"611:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":97,"name":"uint256","nodeType":"ElementaryTypeName","src":"611:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":100,"mutability":"mutable","name":"answeredInRound","nameLocation":"643:15:1","nodeType":"VariableDeclaration","scope":102,"src":"636:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":99,"name":"uint80","nodeType":"ElementaryTypeName","src":"636:6:1","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"535:129:1"},"scope":103,"src":"474:191:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":104,"src":"57:610:1","usedErrors":[]}],"src":"32:636:1"},"id":1},"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","exportedSymbols":{"VRFCoordinatorV2Interface":[199]},"id":200,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":105,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:2"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":199,"linearizedBaseContracts":[199],"name":"VRFCoordinatorV2Interface","nameLocation":"67:25:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":106,"nodeType":"StructuredDocumentation","src":"97:267:2","text":" @notice Get configuration relevant for making requests\n @return minimumRequestConfirmations global min for request confirmations\n @return maxGasLimit global max for request gas limit\n @return s_provingKeyHashes list of registered key hashes"},"functionSelector":"00012291","id":116,"implemented":false,"kind":"function","modifiers":[],"name":"getRequestConfig","nameLocation":"376:16:2","nodeType":"FunctionDefinition","parameters":{"id":107,"nodeType":"ParameterList","parameters":[],"src":"392:2:2"},"returnParameters":{"id":115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":109,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":116,"src":"437:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":108,"name":"uint16","nodeType":"ElementaryTypeName","src":"437:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":111,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":116,"src":"451:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":110,"name":"uint32","nodeType":"ElementaryTypeName","src":"451:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":114,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":116,"src":"465:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":112,"name":"bytes32","nodeType":"ElementaryTypeName","src":"465:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":113,"nodeType":"ArrayTypeName","src":"465:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"429:58:2"},"scope":199,"src":"367:121:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":117,"nodeType":"StructuredDocumentation","src":"492:1511:2","text":" @notice Request a set of random words.\n @param keyHash - Corresponds to a particular oracle job which uses\n that key for generating the VRF proof. Different keyHash's have different gas price\n ceilings, so you can select a specific one to bound your maximum per request cost.\n @param subId  - The ID of the VRF subscription. Must be funded\n with the minimum subscription balance required for the selected keyHash.\n @param minimumRequestConfirmations - How many blocks you'd like the\n oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n for why you may want to request more. The acceptable range is\n [minimumRequestBlockConfirmations, 200].\n @param callbackGasLimit - How much gas you'd like to receive in your\n fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n may be slightly less than this amount because of gas used calling the function\n (argument decoding etc.), so you may need to request slightly more than you expect\n to have inside fulfillRandomWords. The acceptable range is\n [0, maxGasLimit]\n @param numWords - The number of uint256 random values you'd like to receive\n in your fulfillRandomWords callback. Note these numbers are expanded in a\n secure way by the VRFCoordinator from a single random value supplied by the oracle.\n @return requestId - A unique identifier of the request. Can be used to match\n a request to a response in fulfillRandomWords."},"functionSelector":"5d3b1d30","id":132,"implemented":false,"kind":"function","modifiers":[],"name":"requestRandomWords","nameLocation":"2015:18:2","nodeType":"FunctionDefinition","parameters":{"id":128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":119,"mutability":"mutable","name":"keyHash","nameLocation":"2047:7:2","nodeType":"VariableDeclaration","scope":132,"src":"2039:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":118,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2039:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":121,"mutability":"mutable","name":"subId","nameLocation":"2067:5:2","nodeType":"VariableDeclaration","scope":132,"src":"2060:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":120,"name":"uint64","nodeType":"ElementaryTypeName","src":"2060:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":123,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"2085:27:2","nodeType":"VariableDeclaration","scope":132,"src":"2078:34:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":122,"name":"uint16","nodeType":"ElementaryTypeName","src":"2078:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":125,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"2125:16:2","nodeType":"VariableDeclaration","scope":132,"src":"2118:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":124,"name":"uint32","nodeType":"ElementaryTypeName","src":"2118:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":127,"mutability":"mutable","name":"numWords","nameLocation":"2154:8:2","nodeType":"VariableDeclaration","scope":132,"src":"2147:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":126,"name":"uint32","nodeType":"ElementaryTypeName","src":"2147:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2033:133:2"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":130,"mutability":"mutable","name":"requestId","nameLocation":"2193:9:2","nodeType":"VariableDeclaration","scope":132,"src":"2185:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":129,"name":"uint256","nodeType":"ElementaryTypeName","src":"2185:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2184:19:2"},"scope":199,"src":"2006:198:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":133,"nodeType":"StructuredDocumentation","src":"2208:384:2","text":" @notice Create a VRF subscription.\n @return subId - A unique subscription id.\n @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n @dev Note to fund the subscription, use transferAndCall. For example\n @dev  LINKTOKEN.transferAndCall(\n @dev    address(COORDINATOR),\n @dev    amount,\n @dev    abi.encode(subId));"},"functionSelector":"a21a23e4","id":138,"implemented":false,"kind":"function","modifiers":[],"name":"createSubscription","nameLocation":"2604:18:2","nodeType":"FunctionDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[],"src":"2622:2:2"},"returnParameters":{"id":137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":136,"mutability":"mutable","name":"subId","nameLocation":"2650:5:2","nodeType":"VariableDeclaration","scope":138,"src":"2643:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":135,"name":"uint64","nodeType":"ElementaryTypeName","src":"2643:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2642:14:2"},"scope":199,"src":"2595:62:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":139,"nodeType":"StructuredDocumentation","src":"2661:381:2","text":" @notice Get a VRF subscription.\n @param subId - ID of the subscription\n @return balance - LINK balance of the subscription in juels.\n @return reqCount - number of requests for this subscription, determines fee tier.\n @return owner - owner of the subscription.\n @return consumers - list of consumer address which are able to use this subscription."},"functionSelector":"a47c7696","id":153,"implemented":false,"kind":"function","modifiers":[],"name":"getSubscription","nameLocation":"3054:15:2","nodeType":"FunctionDefinition","parameters":{"id":142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":141,"mutability":"mutable","name":"subId","nameLocation":"3077:5:2","nodeType":"VariableDeclaration","scope":153,"src":"3070:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":140,"name":"uint64","nodeType":"ElementaryTypeName","src":"3070:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3069:14:2"},"returnParameters":{"id":152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":144,"mutability":"mutable","name":"balance","nameLocation":"3133:7:2","nodeType":"VariableDeclaration","scope":153,"src":"3126:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":143,"name":"uint96","nodeType":"ElementaryTypeName","src":"3126:6:2","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":146,"mutability":"mutable","name":"reqCount","nameLocation":"3155:8:2","nodeType":"VariableDeclaration","scope":153,"src":"3148:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":145,"name":"uint64","nodeType":"ElementaryTypeName","src":"3148:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":148,"mutability":"mutable","name":"owner","nameLocation":"3179:5:2","nodeType":"VariableDeclaration","scope":153,"src":"3171:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":147,"name":"address","nodeType":"ElementaryTypeName","src":"3171:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":151,"mutability":"mutable","name":"consumers","nameLocation":"3209:9:2","nodeType":"VariableDeclaration","scope":153,"src":"3192:26:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":149,"name":"address","nodeType":"ElementaryTypeName","src":"3192:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":150,"nodeType":"ArrayTypeName","src":"3192:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3118:106:2"},"scope":199,"src":"3045:180:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":154,"nodeType":"StructuredDocumentation","src":"3229:164:2","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @param newOwner - proposed new owner of the subscription"},"functionSelector":"04c357cb","id":161,"implemented":false,"kind":"function","modifiers":[],"name":"requestSubscriptionOwnerTransfer","nameLocation":"3405:32:2","nodeType":"FunctionDefinition","parameters":{"id":159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"subId","nameLocation":"3445:5:2","nodeType":"VariableDeclaration","scope":161,"src":"3438:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":155,"name":"uint64","nodeType":"ElementaryTypeName","src":"3438:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":158,"mutability":"mutable","name":"newOwner","nameLocation":"3460:8:2","nodeType":"VariableDeclaration","scope":161,"src":"3452:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":157,"name":"address","nodeType":"ElementaryTypeName","src":"3452:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3437:32:2"},"returnParameters":{"id":160,"nodeType":"ParameterList","parameters":[],"src":"3478:0:2"},"scope":199,"src":"3396:83:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":162,"nodeType":"StructuredDocumentation","src":"3483:212:2","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @dev will revert if original owner of subId has\n not requested that msg.sender become the new owner."},"functionSelector":"82359740","id":167,"implemented":false,"kind":"function","modifiers":[],"name":"acceptSubscriptionOwnerTransfer","nameLocation":"3707:31:2","nodeType":"FunctionDefinition","parameters":{"id":165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":164,"mutability":"mutable","name":"subId","nameLocation":"3746:5:2","nodeType":"VariableDeclaration","scope":167,"src":"3739:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":163,"name":"uint64","nodeType":"ElementaryTypeName","src":"3739:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3738:14:2"},"returnParameters":{"id":166,"nodeType":"ParameterList","parameters":[],"src":"3761:0:2"},"scope":199,"src":"3698:64:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"3766:170:2","text":" @notice Add a consumer to a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - New consumer which can use the subscription"},"functionSelector":"7341c10c","id":175,"implemented":false,"kind":"function","modifiers":[],"name":"addConsumer","nameLocation":"3948:11:2","nodeType":"FunctionDefinition","parameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"mutability":"mutable","name":"subId","nameLocation":"3967:5:2","nodeType":"VariableDeclaration","scope":175,"src":"3960:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":169,"name":"uint64","nodeType":"ElementaryTypeName","src":"3960:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":172,"mutability":"mutable","name":"consumer","nameLocation":"3982:8:2","nodeType":"VariableDeclaration","scope":175,"src":"3974:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"3974:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3959:32:2"},"returnParameters":{"id":174,"nodeType":"ParameterList","parameters":[],"src":"4000:0:2"},"scope":199,"src":"3939:62:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":176,"nodeType":"StructuredDocumentation","src":"4005:172:2","text":" @notice Remove a consumer from a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - Consumer to remove from the subscription"},"functionSelector":"9f87fad7","id":183,"implemented":false,"kind":"function","modifiers":[],"name":"removeConsumer","nameLocation":"4189:14:2","nodeType":"FunctionDefinition","parameters":{"id":181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"subId","nameLocation":"4211:5:2","nodeType":"VariableDeclaration","scope":183,"src":"4204:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":177,"name":"uint64","nodeType":"ElementaryTypeName","src":"4204:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":180,"mutability":"mutable","name":"consumer","nameLocation":"4226:8:2","nodeType":"VariableDeclaration","scope":183,"src":"4218:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":179,"name":"address","nodeType":"ElementaryTypeName","src":"4218:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4203:32:2"},"returnParameters":{"id":182,"nodeType":"ParameterList","parameters":[],"src":"4244:0:2"},"scope":199,"src":"4180:65:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":184,"nodeType":"StructuredDocumentation","src":"4249:140:2","text":" @notice Cancel a subscription\n @param subId - ID of the subscription\n @param to - Where to send the remaining LINK to"},"functionSelector":"d7ae1d30","id":191,"implemented":false,"kind":"function","modifiers":[],"name":"cancelSubscription","nameLocation":"4401:18:2","nodeType":"FunctionDefinition","parameters":{"id":189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":186,"mutability":"mutable","name":"subId","nameLocation":"4427:5:2","nodeType":"VariableDeclaration","scope":191,"src":"4420:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":185,"name":"uint64","nodeType":"ElementaryTypeName","src":"4420:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":188,"mutability":"mutable","name":"to","nameLocation":"4442:2:2","nodeType":"VariableDeclaration","scope":191,"src":"4434:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":187,"name":"address","nodeType":"ElementaryTypeName","src":"4434:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4419:26:2"},"returnParameters":{"id":190,"nodeType":"ParameterList","parameters":[],"src":"4454:0:2"},"scope":199,"src":"4392:63:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"e82ad7d4","id":198,"implemented":false,"kind":"function","modifiers":[],"name":"pendingRequestExists","nameLocation":"4760:20:2","nodeType":"FunctionDefinition","parameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"subId","nameLocation":"4788:5:2","nodeType":"VariableDeclaration","scope":198,"src":"4781:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":192,"name":"uint64","nodeType":"ElementaryTypeName","src":"4781:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4780:14:2"},"returnParameters":{"id":197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":196,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":198,"src":"4818:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":195,"name":"bool","nodeType":"ElementaryTypeName","src":"4818:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4817:6:2"},"scope":199,"src":"4751:73:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":200,"src":"57:4769:2","usedErrors":[]}],"src":"32:4795:2"},"id":2},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1877],"Ownable":[312]},"id":313,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":201,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:3"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":202,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":313,"sourceUnit":1878,"src":"127:30:3","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":204,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"683:7:3"},"id":205,"nodeType":"InheritanceSpecifier","src":"683:7:3"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":203,"nodeType":"StructuredDocumentation","src":"159:494:3","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":312,"linearizedBaseContracts":[312,1877],"name":"Ownable","nameLocation":"672:7:3","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":207,"mutability":"mutable","name":"_owner","nameLocation":"713:6:3","nodeType":"VariableDeclaration","scope":312,"src":"697:22:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":206,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":213,"name":"OwnershipTransferred","nameLocation":"732:20:3","nodeType":"EventDefinition","parameters":{"id":212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":209,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:3","nodeType":"VariableDeclaration","scope":213,"src":"753:29:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":208,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":211,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:3","nodeType":"VariableDeclaration","scope":213,"src":"784:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":210,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:3"},"src":"726:84:3"},{"body":{"id":222,"nodeType":"Block","src":"926:49:3","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":218,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"955:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":217,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":311,"src":"936:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":221,"nodeType":"ExpressionStatement","src":"936:32:3"}]},"documentation":{"id":214,"nodeType":"StructuredDocumentation","src":"816:91:3","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":223,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[],"src":"923:2:3"},"returnParameters":{"id":216,"nodeType":"ParameterList","parameters":[],"src":"926:0:3"},"scope":312,"src":"912:63:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":230,"nodeType":"Block","src":"1084:41:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":226,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"1094:11:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":228,"nodeType":"ExpressionStatement","src":"1094:13:3"},{"id":229,"nodeType":"PlaceholderStatement","src":"1117:1:3"}]},"documentation":{"id":224,"nodeType":"StructuredDocumentation","src":"981:77:3","text":" @dev Throws if called by any account other than the owner."},"id":231,"name":"onlyOwner","nameLocation":"1072:9:3","nodeType":"ModifierDefinition","parameters":{"id":225,"nodeType":"ParameterList","parameters":[],"src":"1081:2:3"},"src":"1063:62:3","virtual":false,"visibility":"internal"},{"body":{"id":239,"nodeType":"Block","src":"1256:30:3","statements":[{"expression":{"id":237,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":207,"src":"1273:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":236,"id":238,"nodeType":"Return","src":"1266:13:3"}]},"documentation":{"id":232,"nodeType":"StructuredDocumentation","src":"1131:65:3","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":240,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:3","nodeType":"FunctionDefinition","parameters":{"id":233,"nodeType":"ParameterList","parameters":[],"src":"1215:2:3"},"returnParameters":{"id":236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":235,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":240,"src":"1247:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":234,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:3"},"scope":312,"src":"1201:85:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":253,"nodeType":"Block","src":"1404:85:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":245,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"1422:5:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":247,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"1433:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":244,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":252,"nodeType":"ExpressionStatement","src":"1414:68:3"}]},"documentation":{"id":241,"nodeType":"StructuredDocumentation","src":"1292:62:3","text":" @dev Throws if the sender is not the owner."},"id":254,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:3","nodeType":"FunctionDefinition","parameters":{"id":242,"nodeType":"ParameterList","parameters":[],"src":"1379:2:3"},"returnParameters":{"id":243,"nodeType":"ParameterList","parameters":[],"src":"1404:0:3"},"scope":312,"src":"1359:130:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":267,"nodeType":"Block","src":"1885:47:3","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:3","typeDescriptions":{}}},"id":264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1914:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":260,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":311,"src":"1895:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1895:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":266,"nodeType":"ExpressionStatement","src":"1895:30:3"}]},"documentation":{"id":255,"nodeType":"StructuredDocumentation","src":"1495:331:3","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":268,"implemented":true,"kind":"function","modifiers":[{"id":258,"kind":"modifierInvocation","modifierName":{"id":257,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":231,"src":"1875:9:3"},"nodeType":"ModifierInvocation","src":"1875:9:3"}],"name":"renounceOwnership","nameLocation":"1840:17:3","nodeType":"FunctionDefinition","parameters":{"id":256,"nodeType":"ParameterList","parameters":[],"src":"1857:2:3"},"returnParameters":{"id":259,"nodeType":"ParameterList","parameters":[],"src":"1885:0:3"},"scope":312,"src":"1831:101:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":290,"nodeType":"Block","src":"2151:128:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":277,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"2169:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":278,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:3","typeDescriptions":{}}},"id":281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2181:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":276,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2161:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2161:73:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":285,"nodeType":"ExpressionStatement","src":"2161:73:3"},{"expression":{"arguments":[{"id":287,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"2263:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":286,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":311,"src":"2244:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2244:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":289,"nodeType":"ExpressionStatement","src":"2244:28:3"}]},"documentation":{"id":269,"nodeType":"StructuredDocumentation","src":"1938:138:3","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":291,"implemented":true,"kind":"function","modifiers":[{"id":274,"kind":"modifierInvocation","modifierName":{"id":273,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":231,"src":"2141:9:3"},"nodeType":"ModifierInvocation","src":"2141:9:3"}],"name":"transferOwnership","nameLocation":"2090:17:3","nodeType":"FunctionDefinition","parameters":{"id":272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":271,"mutability":"mutable","name":"newOwner","nameLocation":"2116:8:3","nodeType":"VariableDeclaration","scope":291,"src":"2108:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":270,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:3"},"returnParameters":{"id":275,"nodeType":"ParameterList","parameters":[],"src":"2151:0:3"},"scope":312,"src":"2081:198:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":310,"nodeType":"Block","src":"2496:124:3","statements":[{"assignments":[298],"declarations":[{"constant":false,"id":298,"mutability":"mutable","name":"oldOwner","nameLocation":"2514:8:3","nodeType":"VariableDeclaration","scope":310,"src":"2506:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":297,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":300,"initialValue":{"id":299,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":207,"src":"2525:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:3"},{"expression":{"id":303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":301,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":207,"src":"2541:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":302,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"2550:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":304,"nodeType":"ExpressionStatement","src":"2541:17:3"},{"eventCall":{"arguments":[{"id":306,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"2594:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":307,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"2604:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":305,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"2573:20:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2573:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":309,"nodeType":"EmitStatement","src":"2568:45:3"}]},"documentation":{"id":292,"nodeType":"StructuredDocumentation","src":"2285:143:3","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":311,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2442:18:3","nodeType":"FunctionDefinition","parameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"newOwner","nameLocation":"2469:8:3","nodeType":"VariableDeclaration","scope":311,"src":"2461:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":293,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:3"},"returnParameters":{"id":296,"nodeType":"ParameterList","parameters":[],"src":"2496:0:3"},"scope":312,"src":"2433:187:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":313,"src":"654:1968:3","usedErrors":[]}],"src":"102:2521:3"},"id":3},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Address":[1855],"Context":[1877],"ERC165":[2076],"ERC721":[1239],"IERC165":[2088],"IERC721":[1355],"IERC721Metadata":[1525],"IERC721Receiver":[1373],"Math":[2953],"Strings":[2052]},"id":1240,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":314,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":315,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1240,"sourceUnit":1356,"src":"132:23:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"./IERC721Receiver.sol","id":316,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1240,"sourceUnit":1374,"src":"156:31:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":317,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1240,"sourceUnit":1526,"src":"188:42:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":318,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1240,"sourceUnit":1856,"src":"231:33:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":319,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1240,"sourceUnit":1878,"src":"265:33:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":320,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1240,"sourceUnit":2053,"src":"299:33:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":321,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1240,"sourceUnit":2077,"src":"333:46:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":323,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":1877,"src":"647:7:4"},"id":324,"nodeType":"InheritanceSpecifier","src":"647:7:4"},{"baseName":{"id":325,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":2076,"src":"656:6:4"},"id":326,"nodeType":"InheritanceSpecifier","src":"656:6:4"},{"baseName":{"id":327,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":1355,"src":"664:7:4"},"id":328,"nodeType":"InheritanceSpecifier","src":"664:7:4"},{"baseName":{"id":329,"name":"IERC721Metadata","nodeType":"IdentifierPath","referencedDeclaration":1525,"src":"673:15:4"},"id":330,"nodeType":"InheritanceSpecifier","src":"673:15:4"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":322,"nodeType":"StructuredDocumentation","src":"381:246:4","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":1239,"linearizedBaseContracts":[1239,1525,1355,2076,2088,1877],"name":"ERC721","nameLocation":"637:6:4","nodeType":"ContractDefinition","nodes":[{"id":333,"libraryName":{"id":331,"name":"Address","nodeType":"IdentifierPath","referencedDeclaration":1855,"src":"701:7:4"},"nodeType":"UsingForDirective","src":"695:26:4","typeName":{"id":332,"name":"address","nodeType":"ElementaryTypeName","src":"713:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"id":336,"libraryName":{"id":334,"name":"Strings","nodeType":"IdentifierPath","referencedDeclaration":2052,"src":"732:7:4"},"nodeType":"UsingForDirective","src":"726:26:4","typeName":{"id":335,"name":"uint256","nodeType":"ElementaryTypeName","src":"744:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":338,"mutability":"mutable","name":"_name","nameLocation":"791:5:4","nodeType":"VariableDeclaration","scope":1239,"src":"776:20:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":337,"name":"string","nodeType":"ElementaryTypeName","src":"776:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":340,"mutability":"mutable","name":"_symbol","nameLocation":"838:7:4","nodeType":"VariableDeclaration","scope":1239,"src":"823:22:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":339,"name":"string","nodeType":"ElementaryTypeName","src":"823:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":344,"mutability":"mutable","name":"_owners","nameLocation":"934:7:4","nodeType":"VariableDeclaration","scope":1239,"src":"898:43:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":343,"keyType":{"id":341,"name":"uint256","nodeType":"ElementaryTypeName","src":"906:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"898:27:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":342,"name":"address","nodeType":"ElementaryTypeName","src":"917:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":348,"mutability":"mutable","name":"_balances","nameLocation":"1028:9:4","nodeType":"VariableDeclaration","scope":1239,"src":"992:45:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":347,"keyType":{"id":345,"name":"address","nodeType":"ElementaryTypeName","src":"1000:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"992:27:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":346,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":352,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1129:15:4","nodeType":"VariableDeclaration","scope":1239,"src":"1093:51:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":351,"keyType":{"id":349,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1093:27:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":350,"name":"address","nodeType":"ElementaryTypeName","src":"1112:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":358,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1252:18:4","nodeType":"VariableDeclaration","scope":1239,"src":"1199:71:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":357,"keyType":{"id":353,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:44:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueType":{"id":356,"keyType":{"id":354,"name":"address","nodeType":"ElementaryTypeName","src":"1226:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1218:24:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":355,"name":"bool","nodeType":"ElementaryTypeName","src":"1237:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":374,"nodeType":"Block","src":"1446:57:4","statements":[{"expression":{"id":368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":366,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"1456:5:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":367,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"1464:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1456:13:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":369,"nodeType":"ExpressionStatement","src":"1456:13:4"},{"expression":{"id":372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":370,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"1479:7:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":371,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"1489:7:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1479:17:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":373,"nodeType":"ExpressionStatement","src":"1479:17:4"}]},"documentation":{"id":359,"nodeType":"StructuredDocumentation","src":"1277:108:4","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":375,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":361,"mutability":"mutable","name":"name_","nameLocation":"1416:5:4","nodeType":"VariableDeclaration","scope":375,"src":"1402:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":360,"name":"string","nodeType":"ElementaryTypeName","src":"1402:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":363,"mutability":"mutable","name":"symbol_","nameLocation":"1437:7:4","nodeType":"VariableDeclaration","scope":375,"src":"1423:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":362,"name":"string","nodeType":"ElementaryTypeName","src":"1423:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1401:44:4"},"returnParameters":{"id":365,"nodeType":"ParameterList","parameters":[],"src":"1446:0:4"},"scope":1239,"src":"1390:113:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2075,2087],"body":{"id":405,"nodeType":"Block","src":"1678:192:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":386,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"1707:11:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":388,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"1727:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1355_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$1355_$","typeString":"type(contract IERC721)"}],"id":387,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1722:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1722:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$1355","typeString":"type(contract IERC721)"}},"id":390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1722:25:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1707:40:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":392,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"1763:11:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":394,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"1783:15:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1525_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1525_$","typeString":"type(contract IERC721Metadata)"}],"id":393,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1778:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1778:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$1525","typeString":"type(contract IERC721Metadata)"}},"id":396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1778:33:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1763:48:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:104:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":401,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"1851:11:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":399,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1827:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$1239_$","typeString":"type(contract super ERC721)"}},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2075,"src":"1827:23:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1827:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:156:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":385,"id":404,"nodeType":"Return","src":"1688:175:4"}]},"documentation":{"id":376,"nodeType":"StructuredDocumentation","src":"1509:56:4","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":406,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1579:17:4","nodeType":"FunctionDefinition","overrides":{"id":382,"nodeType":"OverrideSpecifier","overrides":[{"id":380,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":2076,"src":"1646:6:4"},{"id":381,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":2088,"src":"1654:7:4"}],"src":"1637:25:4"},"parameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":378,"mutability":"mutable","name":"interfaceId","nameLocation":"1604:11:4","nodeType":"VariableDeclaration","scope":406,"src":"1597:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":377,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1597:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1596:20:4"},"returnParameters":{"id":385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":384,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":406,"src":"1672:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":383,"name":"bool","nodeType":"ElementaryTypeName","src":"1672:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1671:6:4"},"scope":1239,"src":"1570:300:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1280],"body":{"id":429,"nodeType":"Block","src":"2010:123:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":416,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"2028:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2045:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2037:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":417,"name":"address","nodeType":"ElementaryTypeName","src":"2037:7:4","typeDescriptions":{}}},"id":420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2037:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2028:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572","id":422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2049:43:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""},"value":"ERC721: address zero is not a valid owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""}],"id":415,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2020:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2020:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":424,"nodeType":"ExpressionStatement","src":"2020:73:4"},{"expression":{"baseExpression":{"id":425,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"2110:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":427,"indexExpression":{"id":426,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"2120:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2110:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":414,"id":428,"nodeType":"Return","src":"2103:23:4"}]},"documentation":{"id":407,"nodeType":"StructuredDocumentation","src":"1876:48:4","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":430,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1938:9:4","nodeType":"FunctionDefinition","overrides":{"id":411,"nodeType":"OverrideSpecifier","overrides":[],"src":"1983:8:4"},"parameters":{"id":410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":409,"mutability":"mutable","name":"owner","nameLocation":"1956:5:4","nodeType":"VariableDeclaration","scope":430,"src":"1948:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":408,"name":"address","nodeType":"ElementaryTypeName","src":"1948:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1947:15:4"},"returnParameters":{"id":414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":413,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":430,"src":"2001:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":412,"name":"uint256","nodeType":"ElementaryTypeName","src":"2001:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2000:9:4"},"scope":1239,"src":"1929:204:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1288],"body":{"id":457,"nodeType":"Block","src":"2271:138:4","statements":[{"assignments":[440],"declarations":[{"constant":false,"id":440,"mutability":"mutable","name":"owner","nameLocation":"2289:5:4","nodeType":"VariableDeclaration","scope":457,"src":"2281:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":439,"name":"address","nodeType":"ElementaryTypeName","src":"2281:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":444,"initialValue":{"arguments":[{"id":442,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"2306:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":441,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"2297:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2297:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2281:33:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":446,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"2332:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2349:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2341:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":447,"name":"address","nodeType":"ElementaryTypeName","src":"2341:7:4","typeDescriptions":{}}},"id":450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2341:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2332:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2353:26:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":445,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2324:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2324:56:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":454,"nodeType":"ExpressionStatement","src":"2324:56:4"},{"expression":{"id":455,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"2397:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":438,"id":456,"nodeType":"Return","src":"2390:12:4"}]},"documentation":{"id":431,"nodeType":"StructuredDocumentation","src":"2139:46:4","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":458,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2199:7:4","nodeType":"FunctionDefinition","overrides":{"id":435,"nodeType":"OverrideSpecifier","overrides":[],"src":"2244:8:4"},"parameters":{"id":434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":433,"mutability":"mutable","name":"tokenId","nameLocation":"2215:7:4","nodeType":"VariableDeclaration","scope":458,"src":"2207:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":432,"name":"uint256","nodeType":"ElementaryTypeName","src":"2207:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2206:17:4"},"returnParameters":{"id":438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":437,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":458,"src":"2262:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":436,"name":"address","nodeType":"ElementaryTypeName","src":"2262:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2261:9:4"},"scope":1239,"src":"2190:219:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1510],"body":{"id":467,"nodeType":"Block","src":"2540:29:4","statements":[{"expression":{"id":465,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"2557:5:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":464,"id":466,"nodeType":"Return","src":"2550:12:4"}]},"documentation":{"id":459,"nodeType":"StructuredDocumentation","src":"2415:51:4","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":468,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2480:4:4","nodeType":"FunctionDefinition","overrides":{"id":461,"nodeType":"OverrideSpecifier","overrides":[],"src":"2507:8:4"},"parameters":{"id":460,"nodeType":"ParameterList","parameters":[],"src":"2484:2:4"},"returnParameters":{"id":464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":463,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":468,"src":"2525:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":462,"name":"string","nodeType":"ElementaryTypeName","src":"2525:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2524:15:4"},"scope":1239,"src":"2471:98:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1516],"body":{"id":477,"nodeType":"Block","src":"2704:31:4","statements":[{"expression":{"id":475,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"2721:7:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":474,"id":476,"nodeType":"Return","src":"2714:14:4"}]},"documentation":{"id":469,"nodeType":"StructuredDocumentation","src":"2575:53:4","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":478,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2642:6:4","nodeType":"FunctionDefinition","overrides":{"id":471,"nodeType":"OverrideSpecifier","overrides":[],"src":"2671:8:4"},"parameters":{"id":470,"nodeType":"ParameterList","parameters":[],"src":"2648:2:4"},"returnParameters":{"id":474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":478,"src":"2689:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":472,"name":"string","nodeType":"ElementaryTypeName","src":"2689:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2688:15:4"},"scope":1239,"src":"2633:102:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1524],"body":{"id":516,"nodeType":"Block","src":"2889:188:4","statements":[{"expression":{"arguments":[{"id":488,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"2914:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":487,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"2899:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2899:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":490,"nodeType":"ExpressionStatement","src":"2899:23:4"},{"assignments":[492],"declarations":[{"constant":false,"id":492,"mutability":"mutable","name":"baseURI","nameLocation":"2947:7:4","nodeType":"VariableDeclaration","scope":516,"src":"2933:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":491,"name":"string","nodeType":"ElementaryTypeName","src":"2933:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":495,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":493,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"2957:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2957:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2933:34:4"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":498,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"2990:7:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2984:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":496,"name":"bytes","nodeType":"ElementaryTypeName","src":"2984:5:4","typeDescriptions":{}}},"id":499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2984:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2984:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3008:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2984:25:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3068:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2984:86:4","trueExpression":{"arguments":[{"arguments":[{"id":507,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"3036:7:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":508,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"3045:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1935,"src":"3045:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3045:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":505,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3019:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"3019:16:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3019:45:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3012:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":503,"name":"string","nodeType":"ElementaryTypeName","src":"3012:6:4","typeDescriptions":{}}},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3012:53:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":486,"id":515,"nodeType":"Return","src":"2977:93:4"}]},"documentation":{"id":479,"nodeType":"StructuredDocumentation","src":"2741:55:4","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":517,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2810:8:4","nodeType":"FunctionDefinition","overrides":{"id":483,"nodeType":"OverrideSpecifier","overrides":[],"src":"2856:8:4"},"parameters":{"id":482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":481,"mutability":"mutable","name":"tokenId","nameLocation":"2827:7:4","nodeType":"VariableDeclaration","scope":517,"src":"2819:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":480,"name":"uint256","nodeType":"ElementaryTypeName","src":"2819:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2818:17:4"},"returnParameters":{"id":486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":517,"src":"2874:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":484,"name":"string","nodeType":"ElementaryTypeName","src":"2874:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2873:15:4"},"scope":1239,"src":"2801:276:4","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":525,"nodeType":"Block","src":"3385:26:4","statements":[{"expression":{"hexValue":"","id":523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3402:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":522,"id":524,"nodeType":"Return","src":"3395:9:4"}]},"documentation":{"id":518,"nodeType":"StructuredDocumentation","src":"3083:231:4","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":526,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3328:8:4","nodeType":"FunctionDefinition","parameters":{"id":519,"nodeType":"ParameterList","parameters":[],"src":"3336:2:4"},"returnParameters":{"id":522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":521,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":526,"src":"3370:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":520,"name":"string","nodeType":"ElementaryTypeName","src":"3370:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3369:15:4"},"scope":1239,"src":"3319:92:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1328],"body":{"id":568,"nodeType":"Block","src":"3538:336:4","statements":[{"assignments":[536],"declarations":[{"constant":false,"id":536,"mutability":"mutable","name":"owner","nameLocation":"3556:5:4","nodeType":"VariableDeclaration","scope":568,"src":"3548:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":535,"name":"address","nodeType":"ElementaryTypeName","src":"3548:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":541,"initialValue":{"arguments":[{"id":539,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"3579:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":537,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"3564:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1239_$","typeString":"type(contract ERC721)"}},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":458,"src":"3564:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3564:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3548:39:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":543,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"3605:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":544,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"3611:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3605:11:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572","id":546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3618:35:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""},"value":"ERC721: approval to current owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""}],"id":542,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3597:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3597:57:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":548,"nodeType":"ExpressionStatement","src":"3597:57:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":550,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"3686:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3686:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":552,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"3702:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3686:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":555,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"3728:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":556,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"3735:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3735:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":554,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"3711:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3711:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3686:62:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","id":560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3762:63:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","typeString":"literal_string \"ERC721: approve caller is not token owner or approved for all\""},"value":"ERC721: approve caller is not token owner or approved for all"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","typeString":"literal_string \"ERC721: approve caller is not token owner or approved for all\""}],"id":549,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3665:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3665:170:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":562,"nodeType":"ExpressionStatement","src":"3665:170:4"},{"expression":{"arguments":[{"id":564,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"3855:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":565,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"3859:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":563,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"3846:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3846:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":567,"nodeType":"ExpressionStatement","src":"3846:21:4"}]},"documentation":{"id":527,"nodeType":"StructuredDocumentation","src":"3417:46:4","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":569,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3477:7:4","nodeType":"FunctionDefinition","overrides":{"id":533,"nodeType":"OverrideSpecifier","overrides":[],"src":"3529:8:4"},"parameters":{"id":532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":529,"mutability":"mutable","name":"to","nameLocation":"3493:2:4","nodeType":"VariableDeclaration","scope":569,"src":"3485:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":528,"name":"address","nodeType":"ElementaryTypeName","src":"3485:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":531,"mutability":"mutable","name":"tokenId","nameLocation":"3505:7:4","nodeType":"VariableDeclaration","scope":569,"src":"3497:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":530,"name":"uint256","nodeType":"ElementaryTypeName","src":"3497:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3484:29:4"},"returnParameters":{"id":534,"nodeType":"ParameterList","parameters":[],"src":"3538:0:4"},"scope":1239,"src":"3468:406:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1344],"body":{"id":586,"nodeType":"Block","src":"4020:82:4","statements":[{"expression":{"arguments":[{"id":579,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"4045:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":578,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"4030:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4030:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":581,"nodeType":"ExpressionStatement","src":"4030:23:4"},{"expression":{"baseExpression":{"id":582,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"4071:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":584,"indexExpression":{"id":583,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"4087:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4071:24:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":577,"id":585,"nodeType":"Return","src":"4064:31:4"}]},"documentation":{"id":570,"nodeType":"StructuredDocumentation","src":"3880:50:4","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":587,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3944:11:4","nodeType":"FunctionDefinition","overrides":{"id":574,"nodeType":"OverrideSpecifier","overrides":[],"src":"3993:8:4"},"parameters":{"id":573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":572,"mutability":"mutable","name":"tokenId","nameLocation":"3964:7:4","nodeType":"VariableDeclaration","scope":587,"src":"3956:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":571,"name":"uint256","nodeType":"ElementaryTypeName","src":"3956:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3955:17:4"},"returnParameters":{"id":577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":576,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":587,"src":"4011:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":575,"name":"address","nodeType":"ElementaryTypeName","src":"4011:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4010:9:4"},"scope":1239,"src":"3935:167:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1336],"body":{"id":603,"nodeType":"Block","src":"4253:69:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":597,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"4282:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4282:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":599,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"4296:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":600,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"4306:8:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":596,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"4263:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4263:52:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":602,"nodeType":"ExpressionStatement","src":"4263:52:4"}]},"documentation":{"id":588,"nodeType":"StructuredDocumentation","src":"4108:56:4","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":604,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4178:17:4","nodeType":"FunctionDefinition","overrides":{"id":594,"nodeType":"OverrideSpecifier","overrides":[],"src":"4244:8:4"},"parameters":{"id":593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":590,"mutability":"mutable","name":"operator","nameLocation":"4204:8:4","nodeType":"VariableDeclaration","scope":604,"src":"4196:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":589,"name":"address","nodeType":"ElementaryTypeName","src":"4196:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":592,"mutability":"mutable","name":"approved","nameLocation":"4219:8:4","nodeType":"VariableDeclaration","scope":604,"src":"4214:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":591,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4195:33:4"},"returnParameters":{"id":595,"nodeType":"ParameterList","parameters":[],"src":"4253:0:4"},"scope":1239,"src":"4169:153:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1354],"body":{"id":621,"nodeType":"Block","src":"4491:59:4","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":615,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"4508:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":617,"indexExpression":{"id":616,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"4527:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:25:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":619,"indexExpression":{"id":618,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"4534:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:35:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":614,"id":620,"nodeType":"Return","src":"4501:42:4"}]},"documentation":{"id":605,"nodeType":"StructuredDocumentation","src":"4328:55:4","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":622,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4397:16:4","nodeType":"FunctionDefinition","overrides":{"id":611,"nodeType":"OverrideSpecifier","overrides":[],"src":"4467:8:4"},"parameters":{"id":610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":607,"mutability":"mutable","name":"owner","nameLocation":"4422:5:4","nodeType":"VariableDeclaration","scope":622,"src":"4414:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":606,"name":"address","nodeType":"ElementaryTypeName","src":"4414:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":609,"mutability":"mutable","name":"operator","nameLocation":"4437:8:4","nodeType":"VariableDeclaration","scope":622,"src":"4429:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":608,"name":"address","nodeType":"ElementaryTypeName","src":"4429:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4413:33:4"},"returnParameters":{"id":614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":613,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":622,"src":"4485:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":612,"name":"bool","nodeType":"ElementaryTypeName","src":"4485:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4484:6:4"},"scope":1239,"src":"4388:162:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1320],"body":{"id":648,"nodeType":"Block","src":"4731:207:4","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":635,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"4820:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4820:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":637,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"4834:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":634,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"4801:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4801:41:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4844:47:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""},"value":"ERC721: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""}],"id":633,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4793:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4793:99:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":641,"nodeType":"ExpressionStatement","src":"4793:99:4"},{"expression":{"arguments":[{"id":643,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"4913:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":644,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":627,"src":"4919:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":645,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"4923:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":642,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"4903:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4903:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":647,"nodeType":"ExpressionStatement","src":"4903:28:4"}]},"documentation":{"id":623,"nodeType":"StructuredDocumentation","src":"4556:51:4","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":649,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4621:12:4","nodeType":"FunctionDefinition","overrides":{"id":631,"nodeType":"OverrideSpecifier","overrides":[],"src":"4722:8:4"},"parameters":{"id":630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":625,"mutability":"mutable","name":"from","nameLocation":"4651:4:4","nodeType":"VariableDeclaration","scope":649,"src":"4643:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":624,"name":"address","nodeType":"ElementaryTypeName","src":"4643:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":627,"mutability":"mutable","name":"to","nameLocation":"4673:2:4","nodeType":"VariableDeclaration","scope":649,"src":"4665:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":626,"name":"address","nodeType":"ElementaryTypeName","src":"4665:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":629,"mutability":"mutable","name":"tokenId","nameLocation":"4693:7:4","nodeType":"VariableDeclaration","scope":649,"src":"4685:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":628,"name":"uint256","nodeType":"ElementaryTypeName","src":"4685:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4633:73:4"},"returnParameters":{"id":632,"nodeType":"ParameterList","parameters":[],"src":"4731:0:4"},"scope":1239,"src":"4612:326:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1310],"body":{"id":667,"nodeType":"Block","src":"5127:56:4","statements":[{"expression":{"arguments":[{"id":661,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"5154:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":662,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"5160:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":663,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"5164:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5173:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":660,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[668,698],"referencedDeclaration":698,"src":"5137:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5137:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":666,"nodeType":"ExpressionStatement","src":"5137:39:4"}]},"documentation":{"id":650,"nodeType":"StructuredDocumentation","src":"4944:55:4","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":668,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5013:16:4","nodeType":"FunctionDefinition","overrides":{"id":658,"nodeType":"OverrideSpecifier","overrides":[],"src":"5118:8:4"},"parameters":{"id":657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":652,"mutability":"mutable","name":"from","nameLocation":"5047:4:4","nodeType":"VariableDeclaration","scope":668,"src":"5039:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":651,"name":"address","nodeType":"ElementaryTypeName","src":"5039:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":654,"mutability":"mutable","name":"to","nameLocation":"5069:2:4","nodeType":"VariableDeclaration","scope":668,"src":"5061:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":653,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":656,"mutability":"mutable","name":"tokenId","nameLocation":"5089:7:4","nodeType":"VariableDeclaration","scope":668,"src":"5081:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":655,"name":"uint256","nodeType":"ElementaryTypeName","src":"5081:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5029:73:4"},"returnParameters":{"id":659,"nodeType":"ParameterList","parameters":[],"src":"5127:0:4"},"scope":1239,"src":"5004:179:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1300],"body":{"id":697,"nodeType":"Block","src":"5399:164:4","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":683,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"5436:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5436:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":685,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"5450:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":682,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"5417:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5417:41:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5460:47:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""},"value":"ERC721: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""}],"id":681,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5409:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5409:99:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":689,"nodeType":"ExpressionStatement","src":"5409:99:4"},{"expression":{"arguments":[{"id":691,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"5532:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":692,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"5538:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":693,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"5542:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":694,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"5551:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":690,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"5518:13:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5518:38:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":696,"nodeType":"ExpressionStatement","src":"5518:38:4"}]},"documentation":{"id":669,"nodeType":"StructuredDocumentation","src":"5189:55:4","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":698,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5258:16:4","nodeType":"FunctionDefinition","overrides":{"id":679,"nodeType":"OverrideSpecifier","overrides":[],"src":"5390:8:4"},"parameters":{"id":678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":671,"mutability":"mutable","name":"from","nameLocation":"5292:4:4","nodeType":"VariableDeclaration","scope":698,"src":"5284:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":670,"name":"address","nodeType":"ElementaryTypeName","src":"5284:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":673,"mutability":"mutable","name":"to","nameLocation":"5314:2:4","nodeType":"VariableDeclaration","scope":698,"src":"5306:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":672,"name":"address","nodeType":"ElementaryTypeName","src":"5306:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":675,"mutability":"mutable","name":"tokenId","nameLocation":"5334:7:4","nodeType":"VariableDeclaration","scope":698,"src":"5326:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":674,"name":"uint256","nodeType":"ElementaryTypeName","src":"5326:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":677,"mutability":"mutable","name":"data","nameLocation":"5364:4:4","nodeType":"VariableDeclaration","scope":698,"src":"5351:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":676,"name":"bytes","nodeType":"ElementaryTypeName","src":"5351:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5274:100:4"},"returnParameters":{"id":680,"nodeType":"ParameterList","parameters":[],"src":"5399:0:4"},"scope":1239,"src":"5249:314:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":726,"nodeType":"Block","src":"6564:165:4","statements":[{"expression":{"arguments":[{"id":711,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"6584:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":712,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"6590:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":713,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"6594:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":710,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"6574:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6574:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":715,"nodeType":"ExpressionStatement","src":"6574:28:4"},{"expression":{"arguments":[{"arguments":[{"id":718,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"6643:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":719,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"6649:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":720,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"6653:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":721,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"6662:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":717,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"6620:22:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6620:47:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6669:52:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":716,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6612:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6612:110:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":725,"nodeType":"ExpressionStatement","src":"6612:110:4"}]},"documentation":{"id":699,"nodeType":"StructuredDocumentation","src":"5569:850:4","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":727,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"6433:13:4","nodeType":"FunctionDefinition","parameters":{"id":708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":701,"mutability":"mutable","name":"from","nameLocation":"6464:4:4","nodeType":"VariableDeclaration","scope":727,"src":"6456:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":700,"name":"address","nodeType":"ElementaryTypeName","src":"6456:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":703,"mutability":"mutable","name":"to","nameLocation":"6486:2:4","nodeType":"VariableDeclaration","scope":727,"src":"6478:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":702,"name":"address","nodeType":"ElementaryTypeName","src":"6478:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":705,"mutability":"mutable","name":"tokenId","nameLocation":"6506:7:4","nodeType":"VariableDeclaration","scope":727,"src":"6498:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":704,"name":"uint256","nodeType":"ElementaryTypeName","src":"6498:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":707,"mutability":"mutable","name":"data","nameLocation":"6536:4:4","nodeType":"VariableDeclaration","scope":727,"src":"6523:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":706,"name":"bytes","nodeType":"ElementaryTypeName","src":"6523:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6446:100:4"},"returnParameters":{"id":709,"nodeType":"ParameterList","parameters":[],"src":"6564:0:4"},"scope":1239,"src":"6424:305:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":739,"nodeType":"Block","src":"6913:40:4","statements":[{"expression":{"baseExpression":{"id":735,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"6930:7:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":737,"indexExpression":{"id":736,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"6938:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6930:16:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":734,"id":738,"nodeType":"Return","src":"6923:23:4"}]},"documentation":{"id":728,"nodeType":"StructuredDocumentation","src":"6735:98:4","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist"},"id":740,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"6847:8:4","nodeType":"FunctionDefinition","parameters":{"id":731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":730,"mutability":"mutable","name":"tokenId","nameLocation":"6864:7:4","nodeType":"VariableDeclaration","scope":740,"src":"6856:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":729,"name":"uint256","nodeType":"ElementaryTypeName","src":"6856:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6855:17:4"},"returnParameters":{"id":734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":733,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":740,"src":"6904:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":732,"name":"address","nodeType":"ElementaryTypeName","src":"6904:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6903:9:4"},"scope":1239,"src":"6838:115:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":757,"nodeType":"Block","src":"7327:55:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":749,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"7353:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":748,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"7344:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7344:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7373:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7365:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":751,"name":"address","nodeType":"ElementaryTypeName","src":"7365:7:4","typeDescriptions":{}}},"id":754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7365:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7344:31:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":747,"id":756,"nodeType":"Return","src":"7337:38:4"}]},"documentation":{"id":741,"nodeType":"StructuredDocumentation","src":"6959:292:4","text":" @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."},"id":758,"implemented":true,"kind":"function","modifiers":[],"name":"_exists","nameLocation":"7265:7:4","nodeType":"FunctionDefinition","parameters":{"id":744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":743,"mutability":"mutable","name":"tokenId","nameLocation":"7281:7:4","nodeType":"VariableDeclaration","scope":758,"src":"7273:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":742,"name":"uint256","nodeType":"ElementaryTypeName","src":"7273:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7272:17:4"},"returnParameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":758,"src":"7321:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":745,"name":"bool","nodeType":"ElementaryTypeName","src":"7321:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7320:6:4"},"scope":1239,"src":"7256:126:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":791,"nodeType":"Block","src":"7639:162:4","statements":[{"assignments":[769],"declarations":[{"constant":false,"id":769,"mutability":"mutable","name":"owner","nameLocation":"7657:5:4","nodeType":"VariableDeclaration","scope":791,"src":"7649:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":768,"name":"address","nodeType":"ElementaryTypeName","src":"7649:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":774,"initialValue":{"arguments":[{"id":772,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"7680:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":770,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"7665:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1239_$","typeString":"type(contract ERC721)"}},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":458,"src":"7665:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7665:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7649:39:4"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":775,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"7706:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":776,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"7717:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7706:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":779,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"7743:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":780,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"7750:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":778,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"7726:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7726:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7706:52:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":784,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"7774:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":783,"name":"getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"7762:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7762:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":786,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"7786:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7762:31:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7706:87:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":789,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7705:89:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":767,"id":790,"nodeType":"Return","src":"7698:96:4"}]},"documentation":{"id":759,"nodeType":"StructuredDocumentation","src":"7388:147:4","text":" @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."},"id":792,"implemented":true,"kind":"function","modifiers":[],"name":"_isApprovedOrOwner","nameLocation":"7549:18:4","nodeType":"FunctionDefinition","parameters":{"id":764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":761,"mutability":"mutable","name":"spender","nameLocation":"7576:7:4","nodeType":"VariableDeclaration","scope":792,"src":"7568:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":760,"name":"address","nodeType":"ElementaryTypeName","src":"7568:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":763,"mutability":"mutable","name":"tokenId","nameLocation":"7593:7:4","nodeType":"VariableDeclaration","scope":792,"src":"7585:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":762,"name":"uint256","nodeType":"ElementaryTypeName","src":"7585:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7567:34:4"},"returnParameters":{"id":767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":766,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":792,"src":"7633:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":765,"name":"bool","nodeType":"ElementaryTypeName","src":"7633:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7632:6:4"},"scope":1239,"src":"7540:261:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":806,"nodeType":"Block","src":"8196:43:4","statements":[{"expression":{"arguments":[{"id":801,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"8216:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":802,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"8220:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8229:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":800,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[807,836],"referencedDeclaration":836,"src":"8206:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8206:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":805,"nodeType":"ExpressionStatement","src":"8206:26:4"}]},"documentation":{"id":793,"nodeType":"StructuredDocumentation","src":"7807:319:4","text":" @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":807,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8140:9:4","nodeType":"FunctionDefinition","parameters":{"id":798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":795,"mutability":"mutable","name":"to","nameLocation":"8158:2:4","nodeType":"VariableDeclaration","scope":807,"src":"8150:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":794,"name":"address","nodeType":"ElementaryTypeName","src":"8150:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":797,"mutability":"mutable","name":"tokenId","nameLocation":"8170:7:4","nodeType":"VariableDeclaration","scope":807,"src":"8162:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":796,"name":"uint256","nodeType":"ElementaryTypeName","src":"8162:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8149:29:4"},"returnParameters":{"id":799,"nodeType":"ParameterList","parameters":[],"src":"8196:0:4"},"scope":1239,"src":"8131:108:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":835,"nodeType":"Block","src":"8574:195:4","statements":[{"expression":{"arguments":[{"id":818,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"8590:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":819,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"8594:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":817,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"8584:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8584:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":821,"nodeType":"ExpressionStatement","src":"8584:18:4"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"30","id":826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8664:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8656:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":824,"name":"address","nodeType":"ElementaryTypeName","src":"8656:7:4","typeDescriptions":{}}},"id":827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8656:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":828,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"8668:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":829,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"8672:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":830,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"8681:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":823,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"8633:22:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8633:53:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8700:52:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":822,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8612:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8612:150:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":834,"nodeType":"ExpressionStatement","src":"8612:150:4"}]},"documentation":{"id":808,"nodeType":"StructuredDocumentation","src":"8245:210:4","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":836,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8469:9:4","nodeType":"FunctionDefinition","parameters":{"id":815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":810,"mutability":"mutable","name":"to","nameLocation":"8496:2:4","nodeType":"VariableDeclaration","scope":836,"src":"8488:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":809,"name":"address","nodeType":"ElementaryTypeName","src":"8488:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":812,"mutability":"mutable","name":"tokenId","nameLocation":"8516:7:4","nodeType":"VariableDeclaration","scope":836,"src":"8508:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":811,"name":"uint256","nodeType":"ElementaryTypeName","src":"8508:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":814,"mutability":"mutable","name":"data","nameLocation":"8546:4:4","nodeType":"VariableDeclaration","scope":836,"src":"8533:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":813,"name":"bytes","nodeType":"ElementaryTypeName","src":"8533:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8478:78:4"},"returnParameters":{"id":816,"nodeType":"ParameterList","parameters":[],"src":"8574:0:4"},"scope":1239,"src":"8460:309:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":912,"nodeType":"Block","src":"9152:859:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":845,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"9170:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9184:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9176:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":846,"name":"address","nodeType":"ElementaryTypeName","src":"9176:7:4","typeDescriptions":{}}},"id":849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9176:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9170:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","id":851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9188:34:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""},"value":"ERC721: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""}],"id":844,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9162:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9162:61:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":853,"nodeType":"ExpressionStatement","src":"9162:61:4"},{"expression":{"arguments":[{"id":858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9241:17:4","subExpression":{"arguments":[{"id":856,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"9250:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":855,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"9242:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9242:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9260:30:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":854,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9233:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9233:58:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":861,"nodeType":"ExpressionStatement","src":"9233:58:4"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9331:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9323:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":863,"name":"address","nodeType":"ElementaryTypeName","src":"9323:7:4","typeDescriptions":{}}},"id":866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9323:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":867,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"9335:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":868,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"9339:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9348:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":862,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"9302:20:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9302:48:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":871,"nodeType":"ExpressionStatement","src":"9302:48:4"},{"expression":{"arguments":[{"id":876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9445:17:4","subExpression":{"arguments":[{"id":874,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"9454:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":873,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"9446:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9446:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9464:30:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":872,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9437:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9437:58:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":879,"nodeType":"ExpressionStatement","src":"9437:58:4"},{"id":886,"nodeType":"UncheckedBlock","src":"9506:360:4","statements":[{"expression":{"id":884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":880,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"9837:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":882,"indexExpression":{"id":881,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"9847:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9837:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9854:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9837:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":885,"nodeType":"ExpressionStatement","src":"9837:18:4"}]},{"expression":{"id":891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":887,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"9876:7:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":889,"indexExpression":{"id":888,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"9884:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9876:16:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":890,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"9895:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9876:21:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":892,"nodeType":"ExpressionStatement","src":"9876:21:4"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9930:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9922:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":894,"name":"address","nodeType":"ElementaryTypeName","src":"9922:7:4","typeDescriptions":{}}},"id":897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9922:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":898,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"9934:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":899,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"9938:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":893,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"9913:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9913:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":901,"nodeType":"EmitStatement","src":"9908:38:4"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9985:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9977:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":903,"name":"address","nodeType":"ElementaryTypeName","src":"9977:7:4","typeDescriptions":{}}},"id":906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9977:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":907,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"9989:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":908,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"9993:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10002:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":902,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"9957:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9957:47:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":911,"nodeType":"ExpressionStatement","src":"9957:47:4"}]},"documentation":{"id":837,"nodeType":"StructuredDocumentation","src":"8775:311:4","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":913,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9100:5:4","nodeType":"FunctionDefinition","parameters":{"id":842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":839,"mutability":"mutable","name":"to","nameLocation":"9114:2:4","nodeType":"VariableDeclaration","scope":913,"src":"9106:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":838,"name":"address","nodeType":"ElementaryTypeName","src":"9106:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":841,"mutability":"mutable","name":"tokenId","nameLocation":"9126:7:4","nodeType":"VariableDeclaration","scope":913,"src":"9118:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":840,"name":"uint256","nodeType":"ElementaryTypeName","src":"9118:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9105:29:4"},"returnParameters":{"id":843,"nodeType":"ParameterList","parameters":[],"src":"9152:0:4"},"scope":1239,"src":"9091:920:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":979,"nodeType":"Block","src":"10386:713:4","statements":[{"assignments":[920],"declarations":[{"constant":false,"id":920,"mutability":"mutable","name":"owner","nameLocation":"10404:5:4","nodeType":"VariableDeclaration","scope":979,"src":"10396:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":919,"name":"address","nodeType":"ElementaryTypeName","src":"10396:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":925,"initialValue":{"arguments":[{"id":923,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"10427:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":921,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"10412:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1239_$","typeString":"type(contract ERC721)"}},"id":922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":458,"src":"10412:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10412:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10396:39:4"},{"expression":{"arguments":[{"id":927,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"10467:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10482:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10474:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":928,"name":"address","nodeType":"ElementaryTypeName","src":"10474:7:4","typeDescriptions":{}}},"id":931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10474:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":932,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"10486:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10495:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":926,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"10446:20:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10446:51:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":935,"nodeType":"ExpressionStatement","src":"10446:51:4"},{"expression":{"id":941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":936,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"10599:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":939,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"10622:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":937,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"10607:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1239_$","typeString":"type(contract ERC721)"}},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":458,"src":"10607:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10607:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10599:31:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":942,"nodeType":"ExpressionStatement","src":"10599:31:4"},{"expression":{"id":946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"10668:31:4","subExpression":{"baseExpression":{"id":943,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"10675:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":945,"indexExpression":{"id":944,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"10691:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10675:24:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":947,"nodeType":"ExpressionStatement","src":"10668:31:4"},{"id":954,"nodeType":"UncheckedBlock","src":"10710:237:4","statements":[{"expression":{"id":952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":948,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"10915:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":950,"indexExpression":{"id":949,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"10925:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10915:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10935:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10915:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":953,"nodeType":"ExpressionStatement","src":"10915:21:4"}]},{"expression":{"id":958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"10956:23:4","subExpression":{"baseExpression":{"id":955,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"10963:7:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":957,"indexExpression":{"id":956,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"10971:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10963:16:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":959,"nodeType":"ExpressionStatement","src":"10956:23:4"},{"eventCall":{"arguments":[{"id":961,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"11004:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11019:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11011:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":962,"name":"address","nodeType":"ElementaryTypeName","src":"11011:7:4","typeDescriptions":{}}},"id":965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11011:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":966,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"11023:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":960,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"10995:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10995:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":968,"nodeType":"EmitStatement","src":"10990:41:4"},{"expression":{"arguments":[{"id":970,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"11062:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11077:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11069:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":971,"name":"address","nodeType":"ElementaryTypeName","src":"11069:7:4","typeDescriptions":{}}},"id":974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11069:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":975,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"11081:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11090:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":969,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"11042:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11042:50:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":978,"nodeType":"ExpressionStatement","src":"11042:50:4"}]},"documentation":{"id":914,"nodeType":"StructuredDocumentation","src":"10017:315:4","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":980,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"10346:5:4","nodeType":"FunctionDefinition","parameters":{"id":917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":916,"mutability":"mutable","name":"tokenId","nameLocation":"10360:7:4","nodeType":"VariableDeclaration","scope":980,"src":"10352:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":915,"name":"uint256","nodeType":"ElementaryTypeName","src":"10352:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10351:17:4"},"returnParameters":{"id":918,"nodeType":"ParameterList","parameters":[],"src":"10386:0:4"},"scope":1239,"src":"10337:762:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1064,"nodeType":"Block","src":"11532:1124:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":993,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"11565:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":991,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"11550:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1239_$","typeString":"type(contract ERC721)"}},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":458,"src":"11550:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11550:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":995,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"11577:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11550:31:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11583:39:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":990,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11542:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11542:81:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":999,"nodeType":"ExpressionStatement","src":"11542:81:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1001,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"11641:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11655:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11647:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1002,"name":"address","nodeType":"ElementaryTypeName","src":"11647:7:4","typeDescriptions":{}}},"id":1005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11647:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11641:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373","id":1007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11659:38:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""},"value":"ERC721: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""}],"id":1000,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11633:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11633:65:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1009,"nodeType":"ExpressionStatement","src":"11633:65:4"},{"expression":{"arguments":[{"id":1011,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"11730:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1012,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"11736:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1013,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"11740:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11749:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1010,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"11709:20:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11709:42:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1016,"nodeType":"ExpressionStatement","src":"11709:42:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1020,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"11866:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1018,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"11851:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1239_$","typeString":"type(contract ERC721)"}},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":458,"src":"11851:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11851:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1022,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"11878:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11851:31:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":1024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11884:39:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":1017,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11843:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11843:81:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1026,"nodeType":"ExpressionStatement","src":"11843:81:4"},{"expression":{"id":1030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"11986:31:4","subExpression":{"baseExpression":{"id":1027,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"11993:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1029,"indexExpression":{"id":1028,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"12009:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11993:24:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1031,"nodeType":"ExpressionStatement","src":"11986:31:4"},{"id":1044,"nodeType":"UncheckedBlock","src":"12028:496:4","statements":[{"expression":{"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1032,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"12461:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1034,"indexExpression":{"id":1033,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"12471:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12461:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12480:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12461:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1037,"nodeType":"ExpressionStatement","src":"12461:20:4"},{"expression":{"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1038,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"12495:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1040,"indexExpression":{"id":1039,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"12505:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12495:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12512:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12495:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1043,"nodeType":"ExpressionStatement","src":"12495:18:4"}]},{"expression":{"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1045,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"12533:7:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1047,"indexExpression":{"id":1046,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"12541:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12533:16:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1048,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"12552:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12533:21:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1050,"nodeType":"ExpressionStatement","src":"12533:21:4"},{"eventCall":{"arguments":[{"id":1052,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"12579:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1053,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"12585:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1054,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"12589:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1051,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"12570:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12570:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1056,"nodeType":"EmitStatement","src":"12565:32:4"},{"expression":{"arguments":[{"id":1058,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"12628:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1059,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"12634:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1060,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"12638:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12647:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1057,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"12608:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12608:41:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1063,"nodeType":"ExpressionStatement","src":"12608:41:4"}]},"documentation":{"id":981,"nodeType":"StructuredDocumentation","src":"11105:313:4","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":1065,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"11432:9:4","nodeType":"FunctionDefinition","parameters":{"id":988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":983,"mutability":"mutable","name":"from","nameLocation":"11459:4:4","nodeType":"VariableDeclaration","scope":1065,"src":"11451:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":982,"name":"address","nodeType":"ElementaryTypeName","src":"11451:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":985,"mutability":"mutable","name":"to","nameLocation":"11481:2:4","nodeType":"VariableDeclaration","scope":1065,"src":"11473:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":984,"name":"address","nodeType":"ElementaryTypeName","src":"11473:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":987,"mutability":"mutable","name":"tokenId","nameLocation":"11501:7:4","nodeType":"VariableDeclaration","scope":1065,"src":"11493:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":986,"name":"uint256","nodeType":"ElementaryTypeName","src":"11493:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11441:73:4"},"returnParameters":{"id":989,"nodeType":"ParameterList","parameters":[],"src":"11532:0:4"},"scope":1239,"src":"11423:1233:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1088,"nodeType":"Block","src":"12832:107:4","statements":[{"expression":{"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1073,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"12842:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1075,"indexExpression":{"id":1074,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"12858:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12842:24:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1076,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"12869:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12842:29:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1078,"nodeType":"ExpressionStatement","src":"12842:29:4"},{"eventCall":{"arguments":[{"arguments":[{"id":1082,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"12910:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1080,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"12895:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1239_$","typeString":"type(contract ERC721)"}},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":458,"src":"12895:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12895:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1084,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"12920:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1085,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"12924:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1079,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"12886:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12886:46:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1087,"nodeType":"EmitStatement","src":"12881:51:4"}]},"documentation":{"id":1066,"nodeType":"StructuredDocumentation","src":"12662:101:4","text":" @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."},"id":1089,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"12777:8:4","nodeType":"FunctionDefinition","parameters":{"id":1071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1068,"mutability":"mutable","name":"to","nameLocation":"12794:2:4","nodeType":"VariableDeclaration","scope":1089,"src":"12786:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1067,"name":"address","nodeType":"ElementaryTypeName","src":"12786:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1070,"mutability":"mutable","name":"tokenId","nameLocation":"12806:7:4","nodeType":"VariableDeclaration","scope":1089,"src":"12798:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1069,"name":"uint256","nodeType":"ElementaryTypeName","src":"12798:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12785:29:4"},"returnParameters":{"id":1072,"nodeType":"ParameterList","parameters":[],"src":"12832:0:4"},"scope":1239,"src":"12768:171:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1120,"nodeType":"Block","src":"13198:184:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1100,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"13216:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1101,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"13225:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13216:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","id":1103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13235:27:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""},"value":"ERC721: approve to caller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""}],"id":1099,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13208:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13208:55:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1105,"nodeType":"ExpressionStatement","src":"13208:55:4"},{"expression":{"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1106,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"13273:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1109,"indexExpression":{"id":1107,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"13292:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13273:25:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1110,"indexExpression":{"id":1108,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"13299:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13273:35:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1111,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"13311:8:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13273:46:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1113,"nodeType":"ExpressionStatement","src":"13273:46:4"},{"eventCall":{"arguments":[{"id":1115,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"13349:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1116,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"13356:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1117,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"13366:8:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1114,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"13334:14:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13334:41:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1119,"nodeType":"EmitStatement","src":"13329:46:4"}]},"documentation":{"id":1090,"nodeType":"StructuredDocumentation","src":"12945:125:4","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."},"id":1121,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"13084:18:4","nodeType":"FunctionDefinition","parameters":{"id":1097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1092,"mutability":"mutable","name":"owner","nameLocation":"13120:5:4","nodeType":"VariableDeclaration","scope":1121,"src":"13112:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1091,"name":"address","nodeType":"ElementaryTypeName","src":"13112:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1094,"mutability":"mutable","name":"operator","nameLocation":"13143:8:4","nodeType":"VariableDeclaration","scope":1121,"src":"13135:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1093,"name":"address","nodeType":"ElementaryTypeName","src":"13135:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1096,"mutability":"mutable","name":"approved","nameLocation":"13166:8:4","nodeType":"VariableDeclaration","scope":1121,"src":"13161:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1095,"name":"bool","nodeType":"ElementaryTypeName","src":"13161:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13102:78:4"},"returnParameters":{"id":1098,"nodeType":"ParameterList","parameters":[],"src":"13198:0:4"},"scope":1239,"src":"13075:307:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1134,"nodeType":"Block","src":"13529:70:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":1129,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"13555:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1128,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"13547:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13547:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":1131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13565:26:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":1127,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13539:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13539:53:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1133,"nodeType":"ExpressionStatement","src":"13539:53:4"}]},"documentation":{"id":1122,"nodeType":"StructuredDocumentation","src":"13388:73:4","text":" @dev Reverts if the `tokenId` has not been minted yet."},"id":1135,"implemented":true,"kind":"function","modifiers":[],"name":"_requireMinted","nameLocation":"13475:14:4","nodeType":"FunctionDefinition","parameters":{"id":1125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1124,"mutability":"mutable","name":"tokenId","nameLocation":"13498:7:4","nodeType":"VariableDeclaration","scope":1135,"src":"13490:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1123,"name":"uint256","nodeType":"ElementaryTypeName","src":"13490:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13489:17:4"},"returnParameters":{"id":1126,"nodeType":"ParameterList","parameters":[],"src":"13529:0:4"},"scope":1239,"src":"13466:133:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1196,"nodeType":"Block","src":"14306:676:4","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1149,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"14320:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1543,"src":"14320:13:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14320:15:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1194,"nodeType":"Block","src":"14940:36:4","statements":[{"expression":{"hexValue":"74727565","id":1192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14961:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1148,"id":1193,"nodeType":"Return","src":"14954:11:4"}]},"id":1195,"nodeType":"IfStatement","src":"14316:660:4","trueBody":{"id":1191,"nodeType":"Block","src":"14337:597:4","statements":[{"clauses":[{"block":{"id":1171,"nodeType":"Block","src":"14451:91:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1165,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"14476:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":1166,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"14486:15:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1373_$","typeString":"type(contract IERC721Receiver)"}},"id":1167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1372,"src":"14486:32:4","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":1168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"14486:41:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"14476:51:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1148,"id":1170,"nodeType":"Return","src":"14469:58:4"}]},"errorName":"","id":1172,"nodeType":"TryCatchClause","parameters":{"id":1164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1163,"mutability":"mutable","name":"retval","nameLocation":"14443:6:4","nodeType":"VariableDeclaration","scope":1172,"src":"14436:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1162,"name":"bytes4","nodeType":"ElementaryTypeName","src":"14436:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"14435:15:4"},"src":"14427:115:4"},{"block":{"id":1188,"nodeType":"Block","src":"14571:353:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1176,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"14593:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"14593:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14610:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14593:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1186,"nodeType":"Block","src":"14720:190:4","statements":[{"AST":{"nodeType":"YulBlock","src":"14806:86:4","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14843:2:4","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"14847:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14839:3:4"},"nodeType":"YulFunctionCall","src":"14839:15:4"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"14862:6:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14856:5:4"},"nodeType":"YulFunctionCall","src":"14856:13:4"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14832:6:4"},"nodeType":"YulFunctionCall","src":"14832:38:4"},"nodeType":"YulExpressionStatement","src":"14832:38:4"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1174,"isOffset":false,"isSlot":false,"src":"14847:6:4","valueSize":1},{"declaration":1174,"isOffset":false,"isSlot":false,"src":"14862:6:4","valueSize":1}],"id":1185,"nodeType":"InlineAssembly","src":"14797:95:4"}]},"id":1187,"nodeType":"IfStatement","src":"14589:321:4","trueBody":{"id":1184,"nodeType":"Block","src":"14613:101:4","statements":[{"expression":{"arguments":[{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":1181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14642:52:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":1180,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"14635:6:4","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14635:60:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1183,"nodeType":"ExpressionStatement","src":"14635:60:4"}]}}]},"errorName":"","id":1189,"nodeType":"TryCatchClause","parameters":{"id":1175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1174,"mutability":"mutable","name":"reason","nameLocation":"14563:6:4","nodeType":"VariableDeclaration","scope":1189,"src":"14550:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1173,"name":"bytes","nodeType":"ElementaryTypeName","src":"14550:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14549:21:4"},"src":"14543:381:4"}],"externalCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1156,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"14392:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14392:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1158,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"14406:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1159,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"14412:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1160,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"14421:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1153,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"14371:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1152,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"14355:15:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1373_$","typeString":"type(contract IERC721Receiver)"}},"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14355:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$1373","typeString":"contract IERC721Receiver"}},"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1372,"src":"14355:36:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14355:71:4","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1190,"nodeType":"TryStatement","src":"14351:573:4"}]}}]},"documentation":{"id":1136,"nodeType":"StructuredDocumentation","src":"13605:541:4","text":" @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"},"id":1197,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOnERC721Received","nameLocation":"14160:22:4","nodeType":"FunctionDefinition","parameters":{"id":1145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1138,"mutability":"mutable","name":"from","nameLocation":"14200:4:4","nodeType":"VariableDeclaration","scope":1197,"src":"14192:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1137,"name":"address","nodeType":"ElementaryTypeName","src":"14192:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1140,"mutability":"mutable","name":"to","nameLocation":"14222:2:4","nodeType":"VariableDeclaration","scope":1197,"src":"14214:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1139,"name":"address","nodeType":"ElementaryTypeName","src":"14214:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1142,"mutability":"mutable","name":"tokenId","nameLocation":"14242:7:4","nodeType":"VariableDeclaration","scope":1197,"src":"14234:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1141,"name":"uint256","nodeType":"ElementaryTypeName","src":"14234:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1144,"mutability":"mutable","name":"data","nameLocation":"14272:4:4","nodeType":"VariableDeclaration","scope":1197,"src":"14259:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1143,"name":"bytes","nodeType":"ElementaryTypeName","src":"14259:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14182:100:4"},"returnParameters":{"id":1148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1197,"src":"14300:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1146,"name":"bool","nodeType":"ElementaryTypeName","src":"14300:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14299:6:4"},"scope":1239,"src":"14151:831:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1209,"nodeType":"Block","src":"15850:2:4","statements":[]},"documentation":{"id":1198,"nodeType":"StructuredDocumentation","src":"14988:705:4","text":" @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n - When `from` is zero, the tokens will be minted for `to`.\n - When `to` is zero, ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1210,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"15707:20:4","nodeType":"FunctionDefinition","parameters":{"id":1207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1200,"mutability":"mutable","name":"from","nameLocation":"15745:4:4","nodeType":"VariableDeclaration","scope":1210,"src":"15737:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1199,"name":"address","nodeType":"ElementaryTypeName","src":"15737:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1202,"mutability":"mutable","name":"to","nameLocation":"15767:2:4","nodeType":"VariableDeclaration","scope":1210,"src":"15759:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1201,"name":"address","nodeType":"ElementaryTypeName","src":"15759:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1204,"mutability":"mutable","name":"firstTokenId","nameLocation":"15787:12:4","nodeType":"VariableDeclaration","scope":1210,"src":"15779:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1203,"name":"uint256","nodeType":"ElementaryTypeName","src":"15779:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1206,"mutability":"mutable","name":"batchSize","nameLocation":"15817:9:4","nodeType":"VariableDeclaration","scope":1210,"src":"15809:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1205,"name":"uint256","nodeType":"ElementaryTypeName","src":"15809:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15727:105:4"},"returnParameters":{"id":1208,"nodeType":"ParameterList","parameters":[],"src":"15850:0:4"},"scope":1239,"src":"15698:154:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1222,"nodeType":"Block","src":"16709:2:4","statements":[]},"documentation":{"id":1211,"nodeType":"StructuredDocumentation","src":"15858:695:4","text":" @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n - When `from` is zero, the tokens were minted for `to`.\n - When `to` is zero, ``from``'s tokens were burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1223,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"16567:19:4","nodeType":"FunctionDefinition","parameters":{"id":1220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1213,"mutability":"mutable","name":"from","nameLocation":"16604:4:4","nodeType":"VariableDeclaration","scope":1223,"src":"16596:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1212,"name":"address","nodeType":"ElementaryTypeName","src":"16596:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1215,"mutability":"mutable","name":"to","nameLocation":"16626:2:4","nodeType":"VariableDeclaration","scope":1223,"src":"16618:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1214,"name":"address","nodeType":"ElementaryTypeName","src":"16618:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1217,"mutability":"mutable","name":"firstTokenId","nameLocation":"16646:12:4","nodeType":"VariableDeclaration","scope":1223,"src":"16638:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1216,"name":"uint256","nodeType":"ElementaryTypeName","src":"16638:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1219,"mutability":"mutable","name":"batchSize","nameLocation":"16676:9:4","nodeType":"VariableDeclaration","scope":1223,"src":"16668:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1218,"name":"uint256","nodeType":"ElementaryTypeName","src":"16668:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16586:105:4"},"returnParameters":{"id":1221,"nodeType":"ParameterList","parameters":[],"src":"16709:0:4"},"scope":1239,"src":"16558:153:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1237,"nodeType":"Block","src":"17260:45:4","statements":[{"expression":{"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1231,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"17270:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1233,"indexExpression":{"id":1232,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1226,"src":"17280:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17270:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1234,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"17292:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17270:28:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1236,"nodeType":"ExpressionStatement","src":"17270:28:4"}]},"documentation":{"id":1224,"nodeType":"StructuredDocumentation","src":"16717:409:4","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n that `ownerOf(tokenId)` is `a`."},"id":1238,"implemented":true,"kind":"function","modifiers":[],"name":"__unsafe_increaseBalance","nameLocation":"17193:24:4","nodeType":"FunctionDefinition","parameters":{"id":1229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1226,"mutability":"mutable","name":"account","nameLocation":"17226:7:4","nodeType":"VariableDeclaration","scope":1238,"src":"17218:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1225,"name":"address","nodeType":"ElementaryTypeName","src":"17218:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1228,"mutability":"mutable","name":"amount","nameLocation":"17243:6:4","nodeType":"VariableDeclaration","scope":1238,"src":"17235:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1227,"name":"uint256","nodeType":"ElementaryTypeName","src":"17235:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17217:33:4"},"returnParameters":{"id":1230,"nodeType":"ParameterList","parameters":[],"src":"17260:0:4"},"scope":1239,"src":"17184:121:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1240,"src":"628:16679:4","usedErrors":[]}],"src":"107:17201:4"},"id":4},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[2088],"IERC721":[1355]},"id":1356,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1241,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:5"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1242,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1356,"sourceUnit":2089,"src":"133:47:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1244,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":2088,"src":"271:7:5"},"id":1245,"nodeType":"InheritanceSpecifier","src":"271:7:5"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1243,"nodeType":"StructuredDocumentation","src":"182:67:5","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":1355,"linearizedBaseContracts":[1355,2088],"name":"IERC721","nameLocation":"260:7:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1246,"nodeType":"StructuredDocumentation","src":"285:88:5","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"id":1254,"name":"Transfer","nameLocation":"384:8:5","nodeType":"EventDefinition","parameters":{"id":1253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1248,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"409:4:5","nodeType":"VariableDeclaration","scope":1254,"src":"393:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1247,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1250,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"431:2:5","nodeType":"VariableDeclaration","scope":1254,"src":"415:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1249,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1252,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"451:7:5","nodeType":"VariableDeclaration","scope":1254,"src":"435:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1251,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"392:67:5"},"src":"378:82:5"},{"anonymous":false,"documentation":{"id":1255,"nodeType":"StructuredDocumentation","src":"466:94:5","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"id":1263,"name":"Approval","nameLocation":"571:8:5","nodeType":"EventDefinition","parameters":{"id":1262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1257,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"596:5:5","nodeType":"VariableDeclaration","scope":1263,"src":"580:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1256,"name":"address","nodeType":"ElementaryTypeName","src":"580:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1259,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"619:8:5","nodeType":"VariableDeclaration","scope":1263,"src":"603:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1258,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1261,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"645:7:5","nodeType":"VariableDeclaration","scope":1263,"src":"629:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1260,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"579:74:5"},"src":"565:89:5"},{"anonymous":false,"documentation":{"id":1264,"nodeType":"StructuredDocumentation","src":"660:117:5","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"id":1272,"name":"ApprovalForAll","nameLocation":"788:14:5","nodeType":"EventDefinition","parameters":{"id":1271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1266,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"819:5:5","nodeType":"VariableDeclaration","scope":1272,"src":"803:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1265,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1268,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"842:8:5","nodeType":"VariableDeclaration","scope":1272,"src":"826:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1267,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1270,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"857:8:5","nodeType":"VariableDeclaration","scope":1272,"src":"852:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1269,"name":"bool","nodeType":"ElementaryTypeName","src":"852:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"802:64:5"},"src":"782:85:5"},{"documentation":{"id":1273,"nodeType":"StructuredDocumentation","src":"873:76:5","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1280,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"963:9:5","nodeType":"FunctionDefinition","parameters":{"id":1276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1275,"mutability":"mutable","name":"owner","nameLocation":"981:5:5","nodeType":"VariableDeclaration","scope":1280,"src":"973:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1274,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:15:5"},"returnParameters":{"id":1279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1278,"mutability":"mutable","name":"balance","nameLocation":"1019:7:5","nodeType":"VariableDeclaration","scope":1280,"src":"1011:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1277,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:17:5"},"scope":1355,"src":"954:74:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1281,"nodeType":"StructuredDocumentation","src":"1034:131:5","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1288,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1179:7:5","nodeType":"FunctionDefinition","parameters":{"id":1284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1283,"mutability":"mutable","name":"tokenId","nameLocation":"1195:7:5","nodeType":"VariableDeclaration","scope":1288,"src":"1187:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1282,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1186:17:5"},"returnParameters":{"id":1287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1286,"mutability":"mutable","name":"owner","nameLocation":"1235:5:5","nodeType":"VariableDeclaration","scope":1288,"src":"1227:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1285,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1226:15:5"},"scope":1355,"src":"1170:72:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1289,"nodeType":"StructuredDocumentation","src":"1248:556:5","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1300,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1818:16:5","nodeType":"FunctionDefinition","parameters":{"id":1298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1291,"mutability":"mutable","name":"from","nameLocation":"1852:4:5","nodeType":"VariableDeclaration","scope":1300,"src":"1844:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1290,"name":"address","nodeType":"ElementaryTypeName","src":"1844:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1293,"mutability":"mutable","name":"to","nameLocation":"1874:2:5","nodeType":"VariableDeclaration","scope":1300,"src":"1866:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1292,"name":"address","nodeType":"ElementaryTypeName","src":"1866:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1295,"mutability":"mutable","name":"tokenId","nameLocation":"1894:7:5","nodeType":"VariableDeclaration","scope":1300,"src":"1886:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1294,"name":"uint256","nodeType":"ElementaryTypeName","src":"1886:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1297,"mutability":"mutable","name":"data","nameLocation":"1926:4:5","nodeType":"VariableDeclaration","scope":1300,"src":"1911:19:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1296,"name":"bytes","nodeType":"ElementaryTypeName","src":"1911:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1834:102:5"},"returnParameters":{"id":1299,"nodeType":"ParameterList","parameters":[],"src":"1945:0:5"},"scope":1355,"src":"1809:137:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1301,"nodeType":"StructuredDocumentation","src":"1952:687:5","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1310,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2653:16:5","nodeType":"FunctionDefinition","parameters":{"id":1308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1303,"mutability":"mutable","name":"from","nameLocation":"2687:4:5","nodeType":"VariableDeclaration","scope":1310,"src":"2679:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1302,"name":"address","nodeType":"ElementaryTypeName","src":"2679:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1305,"mutability":"mutable","name":"to","nameLocation":"2709:2:5","nodeType":"VariableDeclaration","scope":1310,"src":"2701:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1304,"name":"address","nodeType":"ElementaryTypeName","src":"2701:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1307,"mutability":"mutable","name":"tokenId","nameLocation":"2729:7:5","nodeType":"VariableDeclaration","scope":1310,"src":"2721:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1306,"name":"uint256","nodeType":"ElementaryTypeName","src":"2721:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2669:73:5"},"returnParameters":{"id":1309,"nodeType":"ParameterList","parameters":[],"src":"2751:0:5"},"scope":1355,"src":"2644:108:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1311,"nodeType":"StructuredDocumentation","src":"2758:732:5","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1320,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3504:12:5","nodeType":"FunctionDefinition","parameters":{"id":1318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1313,"mutability":"mutable","name":"from","nameLocation":"3534:4:5","nodeType":"VariableDeclaration","scope":1320,"src":"3526:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1312,"name":"address","nodeType":"ElementaryTypeName","src":"3526:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1315,"mutability":"mutable","name":"to","nameLocation":"3556:2:5","nodeType":"VariableDeclaration","scope":1320,"src":"3548:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1314,"name":"address","nodeType":"ElementaryTypeName","src":"3548:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1317,"mutability":"mutable","name":"tokenId","nameLocation":"3576:7:5","nodeType":"VariableDeclaration","scope":1320,"src":"3568:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1316,"name":"uint256","nodeType":"ElementaryTypeName","src":"3568:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3516:73:5"},"returnParameters":{"id":1319,"nodeType":"ParameterList","parameters":[],"src":"3598:0:5"},"scope":1355,"src":"3495:104:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1321,"nodeType":"StructuredDocumentation","src":"3605:452:5","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1328,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4071:7:5","nodeType":"FunctionDefinition","parameters":{"id":1326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1323,"mutability":"mutable","name":"to","nameLocation":"4087:2:5","nodeType":"VariableDeclaration","scope":1328,"src":"4079:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1322,"name":"address","nodeType":"ElementaryTypeName","src":"4079:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1325,"mutability":"mutable","name":"tokenId","nameLocation":"4099:7:5","nodeType":"VariableDeclaration","scope":1328,"src":"4091:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1324,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4078:29:5"},"returnParameters":{"id":1327,"nodeType":"ParameterList","parameters":[],"src":"4116:0:5"},"scope":1355,"src":"4062:55:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1329,"nodeType":"StructuredDocumentation","src":"4123:309:5","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1336,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4446:17:5","nodeType":"FunctionDefinition","parameters":{"id":1334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1331,"mutability":"mutable","name":"operator","nameLocation":"4472:8:5","nodeType":"VariableDeclaration","scope":1336,"src":"4464:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1330,"name":"address","nodeType":"ElementaryTypeName","src":"4464:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1333,"mutability":"mutable","name":"_approved","nameLocation":"4487:9:5","nodeType":"VariableDeclaration","scope":1336,"src":"4482:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1332,"name":"bool","nodeType":"ElementaryTypeName","src":"4482:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4463:34:5"},"returnParameters":{"id":1335,"nodeType":"ParameterList","parameters":[],"src":"4506:0:5"},"scope":1355,"src":"4437:70:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1337,"nodeType":"StructuredDocumentation","src":"4513:139:5","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1344,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4666:11:5","nodeType":"FunctionDefinition","parameters":{"id":1340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1339,"mutability":"mutable","name":"tokenId","nameLocation":"4686:7:5","nodeType":"VariableDeclaration","scope":1344,"src":"4678:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1338,"name":"uint256","nodeType":"ElementaryTypeName","src":"4678:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4677:17:5"},"returnParameters":{"id":1343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1342,"mutability":"mutable","name":"operator","nameLocation":"4726:8:5","nodeType":"VariableDeclaration","scope":1344,"src":"4718:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1341,"name":"address","nodeType":"ElementaryTypeName","src":"4718:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4717:18:5"},"scope":1355,"src":"4657:79:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1345,"nodeType":"StructuredDocumentation","src":"4742:138:5","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1354,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4894:16:5","nodeType":"FunctionDefinition","parameters":{"id":1350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1347,"mutability":"mutable","name":"owner","nameLocation":"4919:5:5","nodeType":"VariableDeclaration","scope":1354,"src":"4911:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1346,"name":"address","nodeType":"ElementaryTypeName","src":"4911:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1349,"mutability":"mutable","name":"operator","nameLocation":"4934:8:5","nodeType":"VariableDeclaration","scope":1354,"src":"4926:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1348,"name":"address","nodeType":"ElementaryTypeName","src":"4926:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4910:33:5"},"returnParameters":{"id":1353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1352,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1354,"src":"4967:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1351,"name":"bool","nodeType":"ElementaryTypeName","src":"4967:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4966:6:5"},"scope":1355,"src":"4885:88:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1356,"src":"250:4725:5","usedErrors":[]}],"src":"108:4868:5"},"id":5},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[1373]},"id":1374,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1357,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"116:23:6"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1358,"nodeType":"StructuredDocumentation","src":"141:152:6","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":1373,"linearizedBaseContracts":[1373],"name":"IERC721Receiver","nameLocation":"304:15:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1359,"nodeType":"StructuredDocumentation","src":"326:493:6","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":1372,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"833:16:6","nodeType":"FunctionDefinition","parameters":{"id":1368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1361,"mutability":"mutable","name":"operator","nameLocation":"867:8:6","nodeType":"VariableDeclaration","scope":1372,"src":"859:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1360,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1363,"mutability":"mutable","name":"from","nameLocation":"893:4:6","nodeType":"VariableDeclaration","scope":1372,"src":"885:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1362,"name":"address","nodeType":"ElementaryTypeName","src":"885:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1365,"mutability":"mutable","name":"tokenId","nameLocation":"915:7:6","nodeType":"VariableDeclaration","scope":1372,"src":"907:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1364,"name":"uint256","nodeType":"ElementaryTypeName","src":"907:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1367,"mutability":"mutable","name":"data","nameLocation":"947:4:6","nodeType":"VariableDeclaration","scope":1372,"src":"932:19:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1366,"name":"bytes","nodeType":"ElementaryTypeName","src":"932:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"849:108:6"},"returnParameters":{"id":1371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1370,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1372,"src":"976:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1369,"name":"bytes4","nodeType":"ElementaryTypeName","src":"976:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"975:8:6"},"scope":1373,"src":"824:160:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1374,"src":"294:692:6","usedErrors":[]}],"src":"116:871:6"},"id":6},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","exportedSymbols":{"Address":[1855],"Context":[1877],"ERC165":[2076],"ERC721":[1239],"ERC721URIStorage":[1498],"IERC165":[2088],"IERC721":[1355],"IERC721Metadata":[1525],"IERC721Receiver":[1373],"Math":[2953],"Strings":[2052]},"id":1499,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1375,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"128:23:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":1376,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1499,"sourceUnit":1240,"src":"153:23:7","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1378,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":1239,"src":"286:6:7"},"id":1379,"nodeType":"InheritanceSpecifier","src":"286:6:7"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":1377,"nodeType":"StructuredDocumentation","src":"178:69:7","text":" @dev ERC721 token with storage based token URI management."},"fullyImplemented":false,"id":1498,"linearizedBaseContracts":[1498,1239,1525,1355,2076,2088,1877],"name":"ERC721URIStorage","nameLocation":"266:16:7","nodeType":"ContractDefinition","nodes":[{"id":1382,"libraryName":{"id":1380,"name":"Strings","nodeType":"IdentifierPath","referencedDeclaration":2052,"src":"305:7:7"},"nodeType":"UsingForDirective","src":"299:26:7","typeName":{"id":1381,"name":"uint256","nodeType":"ElementaryTypeName","src":"317:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":1386,"mutability":"mutable","name":"_tokenURIs","nameLocation":"405:10:7","nodeType":"VariableDeclaration","scope":1498,"src":"370:45:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":1385,"keyType":{"id":1383,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"370:26:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueType":{"id":1384,"name":"string","nodeType":"ElementaryTypeName","src":"389:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"baseFunctions":[517],"body":{"id":1444,"nodeType":"Block","src":"570:520:7","statements":[{"expression":{"arguments":[{"id":1396,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"595:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1395,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"580:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"580:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1398,"nodeType":"ExpressionStatement","src":"580:23:7"},{"assignments":[1400],"declarations":[{"constant":false,"id":1400,"mutability":"mutable","name":"_tokenURI","nameLocation":"628:9:7","nodeType":"VariableDeclaration","scope":1444,"src":"614:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1399,"name":"string","nodeType":"ElementaryTypeName","src":"614:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1404,"initialValue":{"baseExpression":{"id":1401,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"640:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1403,"indexExpression":{"id":1402,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"651:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"640:19:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"614:45:7"},{"assignments":[1406],"declarations":[{"constant":false,"id":1406,"mutability":"mutable","name":"base","nameLocation":"683:4:7","nodeType":"VariableDeclaration","scope":1444,"src":"669:18:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1405,"name":"string","nodeType":"ElementaryTypeName","src":"669:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1409,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1407,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"690:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"690:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"669:31:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1412,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"779:4:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"773:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1410,"name":"bytes","nodeType":"ElementaryTypeName","src":"773:5:7","typeDescriptions":{}}},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"773:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"773:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"795:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"773:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1420,"nodeType":"IfStatement","src":"769:70:7","trueBody":{"id":1419,"nodeType":"Block","src":"798:41:7","statements":[{"expression":{"id":1417,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"819:9:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1394,"id":1418,"nodeType":"Return","src":"812:16:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1423,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"947:9:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"941:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1421,"name":"bytes","nodeType":"ElementaryTypeName","src":"941:5:7","typeDescriptions":{}}},"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"941:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"941:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"967:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"941:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1438,"nodeType":"IfStatement","src":"937:106:7","trueBody":{"id":1437,"nodeType":"Block","src":"970:73:7","statements":[{"expression":{"arguments":[{"arguments":[{"id":1432,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"1015:4:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1433,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"1021:9:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1430,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"998:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"998:16:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"998:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"991:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1428,"name":"string","nodeType":"ElementaryTypeName","src":"991:6:7","typeDescriptions":{}}},"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"991:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1394,"id":1436,"nodeType":"Return","src":"984:48:7"}]}},{"expression":{"arguments":[{"id":1441,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"1075:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1439,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1060:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$1498_$","typeString":"type(contract super ERC721URIStorage)"}},"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":517,"src":"1060:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1060:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1394,"id":1443,"nodeType":"Return","src":"1053:30:7"}]},"documentation":{"id":1387,"nodeType":"StructuredDocumentation","src":"422:55:7","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":1445,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"491:8:7","nodeType":"FunctionDefinition","overrides":{"id":1391,"nodeType":"OverrideSpecifier","overrides":[],"src":"537:8:7"},"parameters":{"id":1390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1389,"mutability":"mutable","name":"tokenId","nameLocation":"508:7:7","nodeType":"VariableDeclaration","scope":1445,"src":"500:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1388,"name":"uint256","nodeType":"ElementaryTypeName","src":"500:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"499:17:7"},"returnParameters":{"id":1394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1445,"src":"555:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1392,"name":"string","nodeType":"ElementaryTypeName","src":"555:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"554:15:7"},"scope":1498,"src":"482:608:7","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1466,"nodeType":"Block","src":"1318:133:7","statements":[{"expression":{"arguments":[{"arguments":[{"id":1455,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1448,"src":"1344:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1454,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"1336:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1336:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524337323155524953746f726167653a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e","id":1457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1354:48:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","typeString":"literal_string \"ERC721URIStorage: URI set of nonexistent token\""},"value":"ERC721URIStorage: URI set of nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","typeString":"literal_string \"ERC721URIStorage: URI set of nonexistent token\""}],"id":1453,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1328:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1328:75:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1459,"nodeType":"ExpressionStatement","src":"1328:75:7"},{"expression":{"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1460,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"1413:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1462,"indexExpression":{"id":1461,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1448,"src":"1424:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1413:19:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1463,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"1435:9:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1413:31:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1465,"nodeType":"ExpressionStatement","src":"1413:31:7"}]},"documentation":{"id":1446,"nodeType":"StructuredDocumentation","src":"1096:136:7","text":" @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Requirements:\n - `tokenId` must exist."},"id":1467,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenURI","nameLocation":"1246:12:7","nodeType":"FunctionDefinition","parameters":{"id":1451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1448,"mutability":"mutable","name":"tokenId","nameLocation":"1267:7:7","nodeType":"VariableDeclaration","scope":1467,"src":"1259:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1447,"name":"uint256","nodeType":"ElementaryTypeName","src":"1259:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1450,"mutability":"mutable","name":"_tokenURI","nameLocation":"1290:9:7","nodeType":"VariableDeclaration","scope":1467,"src":"1276:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1449,"name":"string","nodeType":"ElementaryTypeName","src":"1276:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1258:42:7"},"returnParameters":{"id":1452,"nodeType":"ParameterList","parameters":[],"src":"1318:0:7"},"scope":1498,"src":"1237:214:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[980],"body":{"id":1496,"nodeType":"Block","src":"1727:142:7","statements":[{"expression":{"arguments":[{"id":1477,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"1749:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1474,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1737:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$1498_$","typeString":"type(contract super ERC721URIStorage)"}},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":980,"src":"1737:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1737:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1479,"nodeType":"ExpressionStatement","src":"1737:20:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"baseExpression":{"id":1482,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"1778:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1484,"indexExpression":{"id":1483,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"1789:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1778:19:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":1481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1772:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1480,"name":"bytes","nodeType":"ElementaryTypeName","src":"1772:5:7","typeDescriptions":{}}},"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1772:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1772:33:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1809:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1772:38:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1495,"nodeType":"IfStatement","src":"1768:95:7","trueBody":{"id":1494,"nodeType":"Block","src":"1812:51:7","statements":[{"expression":{"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"1826:26:7","subExpression":{"baseExpression":{"id":1489,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"1833:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1491,"indexExpression":{"id":1490,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"1844:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1833:19:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1493,"nodeType":"ExpressionStatement","src":"1826:26:7"}]}}]},"documentation":{"id":1468,"nodeType":"StructuredDocumentation","src":"1457:207:7","text":" @dev See {ERC721-_burn}. This override additionally checks to see if a\n token-specific URI was set for the token, and if so, it deletes the token URI from\n the storage mapping."},"id":1497,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"1678:5:7","nodeType":"FunctionDefinition","overrides":{"id":1472,"nodeType":"OverrideSpecifier","overrides":[],"src":"1718:8:7"},"parameters":{"id":1471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1470,"mutability":"mutable","name":"tokenId","nameLocation":"1692:7:7","nodeType":"VariableDeclaration","scope":1497,"src":"1684:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1469,"name":"uint256","nodeType":"ElementaryTypeName","src":"1684:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1683:17:7"},"returnParameters":{"id":1473,"nodeType":"ParameterList","parameters":[],"src":"1727:0:7"},"scope":1498,"src":"1669:200:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1499,"src":"248:1623:7","usedErrors":[]}],"src":"128:1744:7"},"id":7},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC165":[2088],"IERC721":[1355],"IERC721Metadata":[1525]},"id":1526,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1500,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":1501,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1526,"sourceUnit":1356,"src":"137:24:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1503,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":1355,"src":"326:7:8"},"id":1504,"nodeType":"InheritanceSpecifier","src":"326:7:8"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1502,"nodeType":"StructuredDocumentation","src":"163:133:8","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1525,"linearizedBaseContracts":[1525,1355,2088],"name":"IERC721Metadata","nameLocation":"307:15:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1505,"nodeType":"StructuredDocumentation","src":"340:58:8","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":1510,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"412:4:8","nodeType":"FunctionDefinition","parameters":{"id":1506,"nodeType":"ParameterList","parameters":[],"src":"416:2:8"},"returnParameters":{"id":1509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1510,"src":"442:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1507,"name":"string","nodeType":"ElementaryTypeName","src":"442:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"441:15:8"},"scope":1525,"src":"403:54:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1511,"nodeType":"StructuredDocumentation","src":"463:60:8","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":1516,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"537:6:8","nodeType":"FunctionDefinition","parameters":{"id":1512,"nodeType":"ParameterList","parameters":[],"src":"543:2:8"},"returnParameters":{"id":1515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1516,"src":"569:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1513,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"568:15:8"},"scope":1525,"src":"528:56:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1517,"nodeType":"StructuredDocumentation","src":"590:90:8","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":1524,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"694:8:8","nodeType":"FunctionDefinition","parameters":{"id":1520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1519,"mutability":"mutable","name":"tokenId","nameLocation":"711:7:8","nodeType":"VariableDeclaration","scope":1524,"src":"703:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1518,"name":"uint256","nodeType":"ElementaryTypeName","src":"703:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"702:17:8"},"returnParameters":{"id":1523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1522,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1524,"src":"743:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1521,"name":"string","nodeType":"ElementaryTypeName","src":"743:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"742:15:8"},"scope":1525,"src":"685:73:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1526,"src":"297:463:8","usedErrors":[]}],"src":"112:649:8"},"id":8},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1855]},"id":1856,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1527,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:9"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":1528,"nodeType":"StructuredDocumentation","src":"126:67:9","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1855,"linearizedBaseContracts":[1855],"name":"Address","nameLocation":"202:7:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1542,"nodeType":"Block","src":"1241:254:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1536,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"1465:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1465:12:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1465:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1465:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1535,"id":1541,"nodeType":"Return","src":"1458:30:9"}]},"documentation":{"id":1529,"nodeType":"StructuredDocumentation","src":"216:954:9","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1543,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1184:10:9","nodeType":"FunctionDefinition","parameters":{"id":1532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1531,"mutability":"mutable","name":"account","nameLocation":"1203:7:9","nodeType":"VariableDeclaration","scope":1543,"src":"1195:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1530,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1194:17:9"},"returnParameters":{"id":1535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1534,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1543,"src":"1235:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1533,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:6:9"},"scope":1855,"src":"1175:320:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1576,"nodeType":"Block","src":"2483:241:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1554,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2509:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1855","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1855","typeString":"library Address"}],"id":1553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1552,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:9","typeDescriptions":{}}},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2501:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2501:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1557,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"2526:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:31:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:31:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1551,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2493:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2493:73:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1561,"nodeType":"ExpressionStatement","src":"2493:73:9"},{"assignments":[1563,null],"declarations":[{"constant":false,"id":1563,"mutability":"mutable","name":"success","nameLocation":"2583:7:9","nodeType":"VariableDeclaration","scope":1576,"src":"2578:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1562,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1570,"initialValue":{"arguments":[{"hexValue":"","id":1568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1564,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"2596:9:9","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2596:14:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1566,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"2618:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2596:29:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2596:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2577:52:9"},{"expression":{"arguments":[{"id":1572,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"2647:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:60:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1571,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2639:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2639:78:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1575,"nodeType":"ExpressionStatement","src":"2639:78:9"}]},"documentation":{"id":1544,"nodeType":"StructuredDocumentation","src":"1501:906:9","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1577,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2421:9:9","nodeType":"FunctionDefinition","parameters":{"id":1549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1546,"mutability":"mutable","name":"recipient","nameLocation":"2447:9:9","nodeType":"VariableDeclaration","scope":1577,"src":"2431:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1545,"name":"address","nodeType":"ElementaryTypeName","src":"2431:15:9","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1548,"mutability":"mutable","name":"amount","nameLocation":"2466:6:9","nodeType":"VariableDeclaration","scope":1577,"src":"2458:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1547,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:43:9"},"returnParameters":{"id":1550,"nodeType":"ParameterList","parameters":[],"src":"2483:0:9"},"scope":1855,"src":"2412:312:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1594,"nodeType":"Block","src":"3555:96:9","statements":[{"expression":{"arguments":[{"id":1588,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"3594:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1589,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"3602:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3608:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3611:32:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1587,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1635,1679],"referencedDeclaration":1679,"src":"3572:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3572:72:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1586,"id":1593,"nodeType":"Return","src":"3565:79:9"}]},"documentation":{"id":1578,"nodeType":"StructuredDocumentation","src":"2730:731:9","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1595,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3475:12:9","nodeType":"FunctionDefinition","parameters":{"id":1583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1580,"mutability":"mutable","name":"target","nameLocation":"3496:6:9","nodeType":"VariableDeclaration","scope":1595,"src":"3488:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1579,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1582,"mutability":"mutable","name":"data","nameLocation":"3517:4:9","nodeType":"VariableDeclaration","scope":1595,"src":"3504:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1581,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3487:35:9"},"returnParameters":{"id":1586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1585,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1595,"src":"3541:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1584,"name":"bytes","nodeType":"ElementaryTypeName","src":"3541:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3540:14:9"},"scope":1855,"src":"3466:185:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1614,"nodeType":"Block","src":"4020:76:9","statements":[{"expression":{"arguments":[{"id":1608,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"4059:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1609,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"4067:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1611,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"4076:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1607,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1635,1679],"referencedDeclaration":1679,"src":"4037:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4037:52:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1606,"id":1613,"nodeType":"Return","src":"4030:59:9"}]},"documentation":{"id":1596,"nodeType":"StructuredDocumentation","src":"3657:211:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1615,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3882:12:9","nodeType":"FunctionDefinition","parameters":{"id":1603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1598,"mutability":"mutable","name":"target","nameLocation":"3912:6:9","nodeType":"VariableDeclaration","scope":1615,"src":"3904:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1597,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1600,"mutability":"mutable","name":"data","nameLocation":"3941:4:9","nodeType":"VariableDeclaration","scope":1615,"src":"3928:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1599,"name":"bytes","nodeType":"ElementaryTypeName","src":"3928:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1602,"mutability":"mutable","name":"errorMessage","nameLocation":"3969:12:9","nodeType":"VariableDeclaration","scope":1615,"src":"3955:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1601,"name":"string","nodeType":"ElementaryTypeName","src":"3955:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3894:93:9"},"returnParameters":{"id":1606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1605,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1615,"src":"4006:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1604,"name":"bytes","nodeType":"ElementaryTypeName","src":"4006:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4005:14:9"},"scope":1855,"src":"3873:223:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1634,"nodeType":"Block","src":"4601:111:9","statements":[{"expression":{"arguments":[{"id":1628,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"4640:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1629,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1620,"src":"4648:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"4654:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4661:43:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1627,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1635,1679],"referencedDeclaration":1679,"src":"4618:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4618:87:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1626,"id":1633,"nodeType":"Return","src":"4611:94:9"}]},"documentation":{"id":1616,"nodeType":"StructuredDocumentation","src":"4102:351:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1635,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4467:21:9","nodeType":"FunctionDefinition","parameters":{"id":1623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1618,"mutability":"mutable","name":"target","nameLocation":"4506:6:9","nodeType":"VariableDeclaration","scope":1635,"src":"4498:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1617,"name":"address","nodeType":"ElementaryTypeName","src":"4498:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1620,"mutability":"mutable","name":"data","nameLocation":"4535:4:9","nodeType":"VariableDeclaration","scope":1635,"src":"4522:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1619,"name":"bytes","nodeType":"ElementaryTypeName","src":"4522:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1622,"mutability":"mutable","name":"value","nameLocation":"4557:5:9","nodeType":"VariableDeclaration","scope":1635,"src":"4549:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1621,"name":"uint256","nodeType":"ElementaryTypeName","src":"4549:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4488:80:9"},"returnParameters":{"id":1626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1625,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1635,"src":"4587:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1624,"name":"bytes","nodeType":"ElementaryTypeName","src":"4587:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4586:14:9"},"scope":1855,"src":"4458:254:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1678,"nodeType":"Block","src":"5139:267:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1652,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5165:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1855","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1855","typeString":"library Address"}],"id":1651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5157:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1650,"name":"address","nodeType":"ElementaryTypeName","src":"5157:7:9","typeDescriptions":{}}},"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5157:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5157:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"5182:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5157:30:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5189:40:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1649,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5149:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5149:81:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1659,"nodeType":"ExpressionStatement","src":"5149:81:9"},{"assignments":[1661,1663],"declarations":[{"constant":false,"id":1661,"mutability":"mutable","name":"success","nameLocation":"5246:7:9","nodeType":"VariableDeclaration","scope":1678,"src":"5241:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1660,"name":"bool","nodeType":"ElementaryTypeName","src":"5241:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1663,"mutability":"mutable","name":"returndata","nameLocation":"5268:10:9","nodeType":"VariableDeclaration","scope":1678,"src":"5255:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1662,"name":"bytes","nodeType":"ElementaryTypeName","src":"5255:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1670,"initialValue":{"arguments":[{"id":1668,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"5308:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1664,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"5282:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5282:11:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"5301:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5282:25:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5282:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5240:73:9"},{"expression":{"arguments":[{"id":1672,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"5357:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1673,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"5365:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1674,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"5374:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1675,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"5386:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1671,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"5330:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5330:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1648,"id":1677,"nodeType":"Return","src":"5323:76:9"}]},"documentation":{"id":1636,"nodeType":"StructuredDocumentation","src":"4718:237:9","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1679,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4969:21:9","nodeType":"FunctionDefinition","parameters":{"id":1645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1638,"mutability":"mutable","name":"target","nameLocation":"5008:6:9","nodeType":"VariableDeclaration","scope":1679,"src":"5000:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1637,"name":"address","nodeType":"ElementaryTypeName","src":"5000:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1640,"mutability":"mutable","name":"data","nameLocation":"5037:4:9","nodeType":"VariableDeclaration","scope":1679,"src":"5024:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1639,"name":"bytes","nodeType":"ElementaryTypeName","src":"5024:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1642,"mutability":"mutable","name":"value","nameLocation":"5059:5:9","nodeType":"VariableDeclaration","scope":1679,"src":"5051:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1641,"name":"uint256","nodeType":"ElementaryTypeName","src":"5051:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1644,"mutability":"mutable","name":"errorMessage","nameLocation":"5088:12:9","nodeType":"VariableDeclaration","scope":1679,"src":"5074:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1643,"name":"string","nodeType":"ElementaryTypeName","src":"5074:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4990:116:9"},"returnParameters":{"id":1648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1647,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1679,"src":"5125:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1646,"name":"bytes","nodeType":"ElementaryTypeName","src":"5125:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5124:14:9"},"scope":1855,"src":"4960:446:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1695,"nodeType":"Block","src":"5683:97:9","statements":[{"expression":{"arguments":[{"id":1690,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"5719:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1691,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"5727:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5733:39:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1689,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1696,1725],"referencedDeclaration":1725,"src":"5700:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5700:73:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1688,"id":1694,"nodeType":"Return","src":"5693:80:9"}]},"documentation":{"id":1680,"nodeType":"StructuredDocumentation","src":"5412:166:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1696,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5592:18:9","nodeType":"FunctionDefinition","parameters":{"id":1685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1682,"mutability":"mutable","name":"target","nameLocation":"5619:6:9","nodeType":"VariableDeclaration","scope":1696,"src":"5611:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1681,"name":"address","nodeType":"ElementaryTypeName","src":"5611:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1684,"mutability":"mutable","name":"data","nameLocation":"5640:4:9","nodeType":"VariableDeclaration","scope":1696,"src":"5627:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1683,"name":"bytes","nodeType":"ElementaryTypeName","src":"5627:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5610:35:9"},"returnParameters":{"id":1688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1687,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1696,"src":"5669:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1686,"name":"bytes","nodeType":"ElementaryTypeName","src":"5669:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5668:14:9"},"scope":1855,"src":"5583:197:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1724,"nodeType":"Block","src":"6122:168:9","statements":[{"assignments":[1709,1711],"declarations":[{"constant":false,"id":1709,"mutability":"mutable","name":"success","nameLocation":"6138:7:9","nodeType":"VariableDeclaration","scope":1724,"src":"6133:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1708,"name":"bool","nodeType":"ElementaryTypeName","src":"6133:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1711,"mutability":"mutable","name":"returndata","nameLocation":"6160:10:9","nodeType":"VariableDeclaration","scope":1724,"src":"6147:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1710,"name":"bytes","nodeType":"ElementaryTypeName","src":"6147:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1716,"initialValue":{"arguments":[{"id":1714,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"6192:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1712,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"6174:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6174:17:9","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6174:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6132:65:9"},{"expression":{"arguments":[{"id":1718,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"6241:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1719,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"6249:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1720,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"6258:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1721,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"6270:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1717,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"6214:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6214:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1707,"id":1723,"nodeType":"Return","src":"6207:76:9"}]},"documentation":{"id":1697,"nodeType":"StructuredDocumentation","src":"5786:173:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1725,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5973:18:9","nodeType":"FunctionDefinition","parameters":{"id":1704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1699,"mutability":"mutable","name":"target","nameLocation":"6009:6:9","nodeType":"VariableDeclaration","scope":1725,"src":"6001:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1698,"name":"address","nodeType":"ElementaryTypeName","src":"6001:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1701,"mutability":"mutable","name":"data","nameLocation":"6038:4:9","nodeType":"VariableDeclaration","scope":1725,"src":"6025:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1700,"name":"bytes","nodeType":"ElementaryTypeName","src":"6025:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1703,"mutability":"mutable","name":"errorMessage","nameLocation":"6066:12:9","nodeType":"VariableDeclaration","scope":1725,"src":"6052:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1702,"name":"string","nodeType":"ElementaryTypeName","src":"6052:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5991:93:9"},"returnParameters":{"id":1707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1706,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1725,"src":"6108:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1705,"name":"bytes","nodeType":"ElementaryTypeName","src":"6108:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6107:14:9"},"scope":1855,"src":"5964:326:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1741,"nodeType":"Block","src":"6566:101:9","statements":[{"expression":{"arguments":[{"id":1736,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"6604:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1737,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"6612:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6618:41:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1735,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1742,1771],"referencedDeclaration":1771,"src":"6583:20:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6583:77:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1734,"id":1740,"nodeType":"Return","src":"6576:84:9"}]},"documentation":{"id":1726,"nodeType":"StructuredDocumentation","src":"6296:168:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1742,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6478:20:9","nodeType":"FunctionDefinition","parameters":{"id":1731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1728,"mutability":"mutable","name":"target","nameLocation":"6507:6:9","nodeType":"VariableDeclaration","scope":1742,"src":"6499:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1727,"name":"address","nodeType":"ElementaryTypeName","src":"6499:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1730,"mutability":"mutable","name":"data","nameLocation":"6528:4:9","nodeType":"VariableDeclaration","scope":1742,"src":"6515:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1729,"name":"bytes","nodeType":"ElementaryTypeName","src":"6515:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6498:35:9"},"returnParameters":{"id":1734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1733,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1742,"src":"6552:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1732,"name":"bytes","nodeType":"ElementaryTypeName","src":"6552:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6551:14:9"},"scope":1855,"src":"6469:198:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1770,"nodeType":"Block","src":"7008:170:9","statements":[{"assignments":[1755,1757],"declarations":[{"constant":false,"id":1755,"mutability":"mutable","name":"success","nameLocation":"7024:7:9","nodeType":"VariableDeclaration","scope":1770,"src":"7019:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1754,"name":"bool","nodeType":"ElementaryTypeName","src":"7019:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1757,"mutability":"mutable","name":"returndata","nameLocation":"7046:10:9","nodeType":"VariableDeclaration","scope":1770,"src":"7033:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1756,"name":"bytes","nodeType":"ElementaryTypeName","src":"7033:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1762,"initialValue":{"arguments":[{"id":1760,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"7080:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1758,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"7060:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7060:19:9","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7060:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7018:67:9"},{"expression":{"arguments":[{"id":1764,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"7129:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1765,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"7137:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1766,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"7146:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1767,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"7158:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1763,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"7102:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7102:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1753,"id":1769,"nodeType":"Return","src":"7095:76:9"}]},"documentation":{"id":1743,"nodeType":"StructuredDocumentation","src":"6673:175:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1771,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6862:20:9","nodeType":"FunctionDefinition","parameters":{"id":1750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1745,"mutability":"mutable","name":"target","nameLocation":"6900:6:9","nodeType":"VariableDeclaration","scope":1771,"src":"6892:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1744,"name":"address","nodeType":"ElementaryTypeName","src":"6892:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1747,"mutability":"mutable","name":"data","nameLocation":"6929:4:9","nodeType":"VariableDeclaration","scope":1771,"src":"6916:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1746,"name":"bytes","nodeType":"ElementaryTypeName","src":"6916:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1749,"mutability":"mutable","name":"errorMessage","nameLocation":"6957:12:9","nodeType":"VariableDeclaration","scope":1771,"src":"6943:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1748,"name":"string","nodeType":"ElementaryTypeName","src":"6943:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6882:93:9"},"returnParameters":{"id":1753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1771,"src":"6994:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1751,"name":"bytes","nodeType":"ElementaryTypeName","src":"6994:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6993:14:9"},"scope":1855,"src":"6853:325:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1809,"nodeType":"Block","src":"7660:434:9","statements":[{"condition":{"id":1785,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"7674:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1807,"nodeType":"Block","src":"8030:58:9","statements":[{"expression":{"arguments":[{"id":1803,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"8052:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1804,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"8064:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1802,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"8044:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8044:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1806,"nodeType":"ExpressionStatement","src":"8044:33:9"}]},"id":1808,"nodeType":"IfStatement","src":"7670:418:9","trueBody":{"id":1801,"nodeType":"Block","src":"7683:341:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1786,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"7701:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7701:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7722:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7701:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1798,"nodeType":"IfStatement","src":"7697:286:9","trueBody":{"id":1797,"nodeType":"Block","src":"7725:258:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":1792,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"7927:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1791,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"7916:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7916:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7936:31:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1790,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7908:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7908:60:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1796,"nodeType":"ExpressionStatement","src":"7908:60:9"}]}},{"expression":{"id":1799,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"8003:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1784,"id":1800,"nodeType":"Return","src":"7996:17:9"}]}}]},"documentation":{"id":1772,"nodeType":"StructuredDocumentation","src":"7184:277:9","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":1810,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7475:26:9","nodeType":"FunctionDefinition","parameters":{"id":1781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1774,"mutability":"mutable","name":"target","nameLocation":"7519:6:9","nodeType":"VariableDeclaration","scope":1810,"src":"7511:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1773,"name":"address","nodeType":"ElementaryTypeName","src":"7511:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1776,"mutability":"mutable","name":"success","nameLocation":"7540:7:9","nodeType":"VariableDeclaration","scope":1810,"src":"7535:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1775,"name":"bool","nodeType":"ElementaryTypeName","src":"7535:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1778,"mutability":"mutable","name":"returndata","nameLocation":"7570:10:9","nodeType":"VariableDeclaration","scope":1810,"src":"7557:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1777,"name":"bytes","nodeType":"ElementaryTypeName","src":"7557:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1780,"mutability":"mutable","name":"errorMessage","nameLocation":"7604:12:9","nodeType":"VariableDeclaration","scope":1810,"src":"7590:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1779,"name":"string","nodeType":"ElementaryTypeName","src":"7590:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7501:121:9"},"returnParameters":{"id":1784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1783,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1810,"src":"7646:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1782,"name":"bytes","nodeType":"ElementaryTypeName","src":"7646:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7645:14:9"},"scope":1855,"src":"7466:628:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1833,"nodeType":"Block","src":"8475:135:9","statements":[{"condition":{"id":1822,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1813,"src":"8489:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1831,"nodeType":"Block","src":"8546:58:9","statements":[{"expression":{"arguments":[{"id":1827,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"8568:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1828,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"8580:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1826,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"8560:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8560:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1830,"nodeType":"ExpressionStatement","src":"8560:33:9"}]},"id":1832,"nodeType":"IfStatement","src":"8485:119:9","trueBody":{"id":1825,"nodeType":"Block","src":"8498:42:9","statements":[{"expression":{"id":1823,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"8519:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1821,"id":1824,"nodeType":"Return","src":"8512:17:9"}]}}]},"documentation":{"id":1811,"nodeType":"StructuredDocumentation","src":"8100:210:9","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":1834,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8324:16:9","nodeType":"FunctionDefinition","parameters":{"id":1818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1813,"mutability":"mutable","name":"success","nameLocation":"8355:7:9","nodeType":"VariableDeclaration","scope":1834,"src":"8350:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1812,"name":"bool","nodeType":"ElementaryTypeName","src":"8350:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1815,"mutability":"mutable","name":"returndata","nameLocation":"8385:10:9","nodeType":"VariableDeclaration","scope":1834,"src":"8372:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1814,"name":"bytes","nodeType":"ElementaryTypeName","src":"8372:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1817,"mutability":"mutable","name":"errorMessage","nameLocation":"8419:12:9","nodeType":"VariableDeclaration","scope":1834,"src":"8405:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1816,"name":"string","nodeType":"ElementaryTypeName","src":"8405:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8340:97:9"},"returnParameters":{"id":1821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1834,"src":"8461:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1819,"name":"bytes","nodeType":"ElementaryTypeName","src":"8461:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8460:14:9"},"scope":1855,"src":"8315:295:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1853,"nodeType":"Block","src":"8699:457:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1841,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"8775:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8775:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8795:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8775:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1851,"nodeType":"Block","src":"9105:45:9","statements":[{"expression":{"arguments":[{"id":1848,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"9126:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1847,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9119:6:9","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9119:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1850,"nodeType":"ExpressionStatement","src":"9119:20:9"}]},"id":1852,"nodeType":"IfStatement","src":"8771:379:9","trueBody":{"id":1846,"nodeType":"Block","src":"8798:301:9","statements":[{"AST":{"nodeType":"YulBlock","src":"8956:133:9","statements":[{"nodeType":"YulVariableDeclaration","src":"8974:40:9","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9003:10:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8997:5:9"},"nodeType":"YulFunctionCall","src":"8997:17:9"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8978:15:9","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9042:2:9","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9046:10:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9038:3:9"},"nodeType":"YulFunctionCall","src":"9038:19:9"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9059:15:9"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9031:6:9"},"nodeType":"YulFunctionCall","src":"9031:44:9"},"nodeType":"YulExpressionStatement","src":"9031:44:9"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1836,"isOffset":false,"isSlot":false,"src":"9003:10:9","valueSize":1},{"declaration":1836,"isOffset":false,"isSlot":false,"src":"9046:10:9","valueSize":1}],"id":1845,"nodeType":"InlineAssembly","src":"8947:142:9"}]}}]},"id":1854,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8625:7:9","nodeType":"FunctionDefinition","parameters":{"id":1839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1836,"mutability":"mutable","name":"returndata","nameLocation":"8646:10:9","nodeType":"VariableDeclaration","scope":1854,"src":"8633:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1835,"name":"bytes","nodeType":"ElementaryTypeName","src":"8633:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1838,"mutability":"mutable","name":"errorMessage","nameLocation":"8672:12:9","nodeType":"VariableDeclaration","scope":1854,"src":"8658:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1837,"name":"string","nodeType":"ElementaryTypeName","src":"8658:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8632:53:9"},"returnParameters":{"id":1840,"nodeType":"ParameterList","parameters":[],"src":"8699:0:9"},"scope":1855,"src":"8616:540:9","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1856,"src":"194:8964:9","usedErrors":[]}],"src":"101:9058:9"},"id":9},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1877]},"id":1878,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1857,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:10"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":1858,"nodeType":"StructuredDocumentation","src":"111:496:10","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1877,"linearizedBaseContracts":[1877],"name":"Context","nameLocation":"626:7:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":1866,"nodeType":"Block","src":"702:34:10","statements":[{"expression":{"expression":{"id":1863,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1862,"id":1865,"nodeType":"Return","src":"712:17:10"}]},"id":1867,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:10","nodeType":"FunctionDefinition","parameters":{"id":1859,"nodeType":"ParameterList","parameters":[],"src":"659:2:10"},"returnParameters":{"id":1862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1861,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1867,"src":"693:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1860,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:10"},"scope":1877,"src":"640:96:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1875,"nodeType":"Block","src":"809:32:10","statements":[{"expression":{"expression":{"id":1872,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1871,"id":1874,"nodeType":"Return","src":"819:15:10"}]},"id":1876,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:10","nodeType":"FunctionDefinition","parameters":{"id":1868,"nodeType":"ParameterList","parameters":[],"src":"759:2:10"},"returnParameters":{"id":1871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1870,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1876,"src":"793:14:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1869,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:10"},"scope":1877,"src":"742:99:10","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1878,"src":"608:235:10","usedErrors":[]}],"src":"86:758:10"},"id":10},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[2953],"Strings":[2052]},"id":2053,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1879,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:11"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1880,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2053,"sourceUnit":2954,"src":"126:25:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":1881,"nodeType":"StructuredDocumentation","src":"153:34:11","text":" @dev String operations."},"fullyImplemented":true,"id":2052,"linearizedBaseContracts":[2052],"name":"Strings","nameLocation":"196:7:11","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1884,"mutability":"constant","name":"_SYMBOLS","nameLocation":"235:8:11","nodeType":"VariableDeclaration","scope":2052,"src":"210:54:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1882,"name":"bytes16","nodeType":"ElementaryTypeName","src":"210:7:11","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"246:18:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1887,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"293:15:11","nodeType":"VariableDeclaration","scope":2052,"src":"270:43:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1885,"name":"uint8","nodeType":"ElementaryTypeName","src":"270:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"311:2:11","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":1934,"nodeType":"Block","src":"486:625:11","statements":[{"id":1933,"nodeType":"UncheckedBlock","src":"496:609:11","statements":[{"assignments":[1896],"declarations":[{"constant":false,"id":1896,"mutability":"mutable","name":"length","nameLocation":"528:6:11","nodeType":"VariableDeclaration","scope":1933,"src":"520:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1895,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1903,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"548:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1897,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"537:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2953_$","typeString":"type(library Math)"}},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":2790,"src":"537:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"537:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"537:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"520:38:11"},{"assignments":[1905],"declarations":[{"constant":false,"id":1905,"mutability":"mutable","name":"buffer","nameLocation":"586:6:11","nodeType":"VariableDeclaration","scope":1933,"src":"572:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1904,"name":"string","nodeType":"ElementaryTypeName","src":"572:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1910,"initialValue":{"arguments":[{"id":1908,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1896,"src":"606:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"595:10:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1906,"name":"string","nodeType":"ElementaryTypeName","src":"599:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"595:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"572:41:11"},{"assignments":[1912],"declarations":[{"constant":false,"id":1912,"mutability":"mutable","name":"ptr","nameLocation":"635:3:11","nodeType":"VariableDeclaration","scope":1933,"src":"627:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1911,"name":"uint256","nodeType":"ElementaryTypeName","src":"627:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1913,"nodeType":"VariableDeclarationStatement","src":"627:11:11"},{"AST":{"nodeType":"YulBlock","src":"708:67:11","statements":[{"nodeType":"YulAssignment","src":"726:35:11","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"737:6:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"749:2:11","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"753:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"745:3:11"},"nodeType":"YulFunctionCall","src":"745:15:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"733:3:11"},"nodeType":"YulFunctionCall","src":"733:28:11"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"726:3:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1905,"isOffset":false,"isSlot":false,"src":"737:6:11","valueSize":1},{"declaration":1896,"isOffset":false,"isSlot":false,"src":"753:6:11","valueSize":1},{"declaration":1912,"isOffset":false,"isSlot":false,"src":"726:3:11","valueSize":1}],"id":1914,"nodeType":"InlineAssembly","src":"699:76:11"},{"body":{"id":1929,"nodeType":"Block","src":"801:267:11","statements":[{"expression":{"id":1917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"819:5:11","subExpression":{"id":1916,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"819:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1918,"nodeType":"ExpressionStatement","src":"819:5:11"},{"AST":{"nodeType":"YulBlock","src":"902:84:11","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"932:3:11"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"946:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"953:2:11","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"942:3:11"},"nodeType":"YulFunctionCall","src":"942:14:11"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"958:8:11"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"937:4:11"},"nodeType":"YulFunctionCall","src":"937:30:11"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"924:7:11"},"nodeType":"YulFunctionCall","src":"924:44:11"},"nodeType":"YulExpressionStatement","src":"924:44:11"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1884,"isOffset":false,"isSlot":false,"src":"958:8:11","valueSize":1},{"declaration":1912,"isOffset":false,"isSlot":false,"src":"932:3:11","valueSize":1},{"declaration":1890,"isOffset":false,"isSlot":false,"src":"946:5:11","valueSize":1}],"id":1919,"nodeType":"InlineAssembly","src":"893:93:11"},{"expression":{"id":1922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"1003:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1012:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1003:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1923,"nodeType":"ExpressionStatement","src":"1003:11:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1924,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"1036:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1045:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1036:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1928,"nodeType":"IfStatement","src":"1032:21:11","trueBody":{"id":1927,"nodeType":"Break","src":"1048:5:11"}}]},"condition":{"hexValue":"74727565","id":1915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"795:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1930,"nodeType":"WhileStatement","src":"788:280:11"},{"expression":{"id":1931,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1905,"src":"1088:6:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1894,"id":1932,"nodeType":"Return","src":"1081:13:11"}]}]},"documentation":{"id":1888,"nodeType":"StructuredDocumentation","src":"320:90:11","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1935,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"424:8:11","nodeType":"FunctionDefinition","parameters":{"id":1891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1890,"mutability":"mutable","name":"value","nameLocation":"441:5:11","nodeType":"VariableDeclaration","scope":1935,"src":"433:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1889,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"432:15:11"},"returnParameters":{"id":1894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1893,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1935,"src":"471:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1892,"name":"string","nodeType":"ElementaryTypeName","src":"471:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"470:15:11"},"scope":2052,"src":"415:696:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1954,"nodeType":"Block","src":"1290:100:11","statements":[{"id":1953,"nodeType":"UncheckedBlock","src":"1300:84:11","statements":[{"expression":{"arguments":[{"id":1944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"1343:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1947,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"1362:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1945,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"1350:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2953_$","typeString":"type(library Math)"}},"id":1946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":2913,"src":"1350:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1350:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1371:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1350:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1943,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1955,2031,2051],"referencedDeclaration":2031,"src":"1331:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1331:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1942,"id":1952,"nodeType":"Return","src":"1324:49:11"}]}]},"documentation":{"id":1936,"nodeType":"StructuredDocumentation","src":"1117:94:11","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1955,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1225:11:11","nodeType":"FunctionDefinition","parameters":{"id":1939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1938,"mutability":"mutable","name":"value","nameLocation":"1245:5:11","nodeType":"VariableDeclaration","scope":1955,"src":"1237:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1937,"name":"uint256","nodeType":"ElementaryTypeName","src":"1237:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1236:15:11"},"returnParameters":{"id":1942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1941,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1955,"src":"1275:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1940,"name":"string","nodeType":"ElementaryTypeName","src":"1275:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1274:15:11"},"scope":2052,"src":"1216:174:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2030,"nodeType":"Block","src":"1603:347:11","statements":[{"assignments":[1966],"declarations":[{"constant":false,"id":1966,"mutability":"mutable","name":"buffer","nameLocation":"1626:6:11","nodeType":"VariableDeclaration","scope":2030,"src":"1613:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1965,"name":"bytes","nodeType":"ElementaryTypeName","src":"1613:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1975,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1970,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"1649:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1645:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1658:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1645:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1635:9:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1967,"name":"bytes","nodeType":"ElementaryTypeName","src":"1639:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1635:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1613:47:11"},{"expression":{"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1976,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"1670:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1978,"indexExpression":{"hexValue":"30","id":1977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1670:9:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1682:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1670:15:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1981,"nodeType":"ExpressionStatement","src":"1670:15:11"},{"expression":{"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1982,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"1695:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1984,"indexExpression":{"hexValue":"31","id":1983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1702:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1695:9:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1707:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1695:15:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1987,"nodeType":"ExpressionStatement","src":"1695:15:11"},{"body":{"id":2016,"nodeType":"Block","src":"1765:83:11","statements":[{"expression":{"id":2010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2002,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"1779:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2004,"indexExpression":{"id":2003,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"1786:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1779:9:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2005,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"1791:8:11","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2009,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2006,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"1800:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1808:3:11","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1800:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1791:21:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1779:33:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2011,"nodeType":"ExpressionStatement","src":"1779:33:11"},{"expression":{"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2012,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"1826:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1836:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1826:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2015,"nodeType":"ExpressionStatement","src":"1826:11:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1996,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"1753:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1757:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1753:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2017,"initializationExpression":{"assignments":[1989],"declarations":[{"constant":false,"id":1989,"mutability":"mutable","name":"i","nameLocation":"1733:1:11","nodeType":"VariableDeclaration","scope":2017,"src":"1725:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1988,"name":"uint256","nodeType":"ElementaryTypeName","src":"1725:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1995,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1737:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1991,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"1741:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1737:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1750:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1737:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1725:26:11"},"loopExpression":{"expression":{"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1760:3:11","subExpression":{"id":1999,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"1762:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2001,"nodeType":"ExpressionStatement","src":"1760:3:11"},"nodeType":"ForStatement","src":"1720:128:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"1865:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":2022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1877:34:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":2018,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1857:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1857:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2024,"nodeType":"ExpressionStatement","src":"1857:55:11"},{"expression":{"arguments":[{"id":2027,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"1936:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1929:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2025,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:11","typeDescriptions":{}}},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1929:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1964,"id":2029,"nodeType":"Return","src":"1922:21:11"}]},"documentation":{"id":1956,"nodeType":"StructuredDocumentation","src":"1396:112:11","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2031,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1522:11:11","nodeType":"FunctionDefinition","parameters":{"id":1961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1958,"mutability":"mutable","name":"value","nameLocation":"1542:5:11","nodeType":"VariableDeclaration","scope":2031,"src":"1534:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1957,"name":"uint256","nodeType":"ElementaryTypeName","src":"1534:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1960,"mutability":"mutable","name":"length","nameLocation":"1557:6:11","nodeType":"VariableDeclaration","scope":2031,"src":"1549:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1959,"name":"uint256","nodeType":"ElementaryTypeName","src":"1549:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1533:31:11"},"returnParameters":{"id":1964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2031,"src":"1588:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1962,"name":"string","nodeType":"ElementaryTypeName","src":"1588:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1587:15:11"},"scope":2052,"src":"1513:437:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2050,"nodeType":"Block","src":"2175:76:11","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2044,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"2220:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2212:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2042,"name":"uint160","nodeType":"ElementaryTypeName","src":"2212:7:11","typeDescriptions":{}}},"id":2045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2212:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2204:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2040,"name":"uint256","nodeType":"ElementaryTypeName","src":"2204:7:11","typeDescriptions":{}}},"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2204:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2047,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"2228:15:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2039,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1955,2031,2051],"referencedDeclaration":2031,"src":"2192:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2192:52:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2038,"id":2049,"nodeType":"Return","src":"2185:59:11"}]},"documentation":{"id":2032,"nodeType":"StructuredDocumentation","src":"1956:141:11","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":2051,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2111:11:11","nodeType":"FunctionDefinition","parameters":{"id":2035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2034,"mutability":"mutable","name":"addr","nameLocation":"2131:4:11","nodeType":"VariableDeclaration","scope":2051,"src":"2123:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2033,"name":"address","nodeType":"ElementaryTypeName","src":"2123:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2122:14:11"},"returnParameters":{"id":2038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2051,"src":"2160:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2036,"name":"string","nodeType":"ElementaryTypeName","src":"2160:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2159:15:11"},"scope":2052,"src":"2102:149:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2053,"src":"188:2065:11","usedErrors":[]}],"src":"101:2153:11"},"id":11},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[2076],"IERC165":[2088]},"id":2077,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2054,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:12"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":2055,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2077,"sourceUnit":2089,"src":"124:23:12","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2057,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":2088,"src":"754:7:12"},"id":2058,"nodeType":"InheritanceSpecifier","src":"754:7:12"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":2056,"nodeType":"StructuredDocumentation","src":"149:576:12","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":2076,"linearizedBaseContracts":[2076,2088],"name":"ERC165","nameLocation":"744:6:12","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[2087],"body":{"id":2074,"nodeType":"Block","src":"920:64:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2067,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"937:11:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2069,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"957:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$2088_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$2088_$","typeString":"type(contract IERC165)"}],"id":2068,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"952:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$2088","typeString":"type(contract IERC165)"}},"id":2071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2066,"id":2073,"nodeType":"Return","src":"930:47:12"}]},"documentation":{"id":2059,"nodeType":"StructuredDocumentation","src":"768:56:12","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2075,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:12","nodeType":"FunctionDefinition","overrides":{"id":2063,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:12"},"parameters":{"id":2062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2061,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:12","nodeType":"VariableDeclaration","scope":2075,"src":"856:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2060,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:12"},"returnParameters":{"id":2066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2065,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2075,"src":"914:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2064,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:12"},"scope":2076,"src":"829:155:12","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2077,"src":"726:260:12","usedErrors":[]}],"src":"99:888:12"},"id":12},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[2088]},"id":2089,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2078,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:13"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":2079,"nodeType":"StructuredDocumentation","src":"125:279:13","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2088,"linearizedBaseContracts":[2088],"name":"IERC165","nameLocation":"415:7:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2080,"nodeType":"StructuredDocumentation","src":"429:340:13","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2087,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:13","nodeType":"FunctionDefinition","parameters":{"id":2083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2082,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:13","nodeType":"VariableDeclaration","scope":2087,"src":"801:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2081,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:13"},"returnParameters":{"id":2086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2085,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2087,"src":"844:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2084,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:13"},"scope":2088,"src":"774:76:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2089,"src":"405:447:13","usedErrors":[]}],"src":"100:753:13"},"id":13},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[2953]},"id":2954,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2090,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:14"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":2091,"nodeType":"StructuredDocumentation","src":"128:73:14","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2953,"linearizedBaseContracts":[2953],"name":"Math","nameLocation":"210:4:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":2095,"members":[{"id":2092,"name":"Down","nameLocation":"245:4:14","nodeType":"EnumValue","src":"245:4:14"},{"id":2093,"name":"Up","nameLocation":"287:2:14","nodeType":"EnumValue","src":"287:2:14"},{"id":2094,"name":"Zero","nameLocation":"318:4:14","nodeType":"EnumValue","src":"318:4:14"}],"name":"Rounding","nameLocation":"226:8:14","nodeType":"EnumDefinition","src":"221:122:14"},{"body":{"id":2112,"nodeType":"Block","src":"480:37:14","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2105,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2098,"src":"497:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2106,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"501:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2109,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2100,"src":"509:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:14","trueExpression":{"id":2108,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2098,"src":"505:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2104,"id":2111,"nodeType":"Return","src":"490:20:14"}]},"documentation":{"id":2096,"nodeType":"StructuredDocumentation","src":"349:59:14","text":" @dev Returns the largest of two numbers."},"id":2113,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:14","nodeType":"FunctionDefinition","parameters":{"id":2101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2098,"mutability":"mutable","name":"a","nameLocation":"434:1:14","nodeType":"VariableDeclaration","scope":2113,"src":"426:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2097,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2100,"mutability":"mutable","name":"b","nameLocation":"445:1:14","nodeType":"VariableDeclaration","scope":2113,"src":"437:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2099,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:14"},"returnParameters":{"id":2104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2103,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2113,"src":"471:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2102,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:14"},"scope":2953,"src":"413:104:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2130,"nodeType":"Block","src":"655:37:14","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2123,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"672:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2124,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"676:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2127,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"684:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:14","trueExpression":{"id":2126,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"680:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2122,"id":2129,"nodeType":"Return","src":"665:20:14"}]},"documentation":{"id":2114,"nodeType":"StructuredDocumentation","src":"523:60:14","text":" @dev Returns the smallest of two numbers."},"id":2131,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:14","nodeType":"FunctionDefinition","parameters":{"id":2119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2116,"mutability":"mutable","name":"a","nameLocation":"609:1:14","nodeType":"VariableDeclaration","scope":2131,"src":"601:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2115,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2118,"mutability":"mutable","name":"b","nameLocation":"620:1:14","nodeType":"VariableDeclaration","scope":2131,"src":"612:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2117,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:14"},"returnParameters":{"id":2122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2131,"src":"646:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2120,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:14"},"scope":2953,"src":"588:104:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2153,"nodeType":"Block","src":"876:82:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2141,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2134,"src":"931:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2142,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"935:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2144,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2145,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2134,"src":"941:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2146,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"945:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2148,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2140,"id":2152,"nodeType":"Return","src":"923:28:14"}]},"documentation":{"id":2132,"nodeType":"StructuredDocumentation","src":"698:102:14","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":2154,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:14","nodeType":"FunctionDefinition","parameters":{"id":2137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2134,"mutability":"mutable","name":"a","nameLocation":"830:1:14","nodeType":"VariableDeclaration","scope":2154,"src":"822:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2133,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2136,"mutability":"mutable","name":"b","nameLocation":"841:1:14","nodeType":"VariableDeclaration","scope":2154,"src":"833:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2135,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:14"},"returnParameters":{"id":2140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2139,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2154,"src":"867:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2138,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:14"},"scope":2953,"src":"805:153:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2178,"nodeType":"Block","src":"1228:123:14","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2164,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"1316:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2168,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"1330:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2171,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2172,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"1339:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:14","trueExpression":{"hexValue":"30","id":2167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2163,"id":2177,"nodeType":"Return","src":"1309:35:14"}]},"documentation":{"id":2155,"nodeType":"StructuredDocumentation","src":"964:188:14","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":2179,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:14","nodeType":"FunctionDefinition","parameters":{"id":2160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2157,"mutability":"mutable","name":"a","nameLocation":"1182:1:14","nodeType":"VariableDeclaration","scope":2179,"src":"1174:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2156,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2159,"mutability":"mutable","name":"b","nameLocation":"1193:1:14","nodeType":"VariableDeclaration","scope":2179,"src":"1185:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2158,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:14"},"returnParameters":{"id":2163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2179,"src":"1219:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2161,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:14"},"scope":2953,"src":"1157:194:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2300,"nodeType":"Block","src":"1795:3797:14","statements":[{"id":2299,"nodeType":"UncheckedBlock","src":"1805:3781:14","statements":[{"assignments":[2192],"declarations":[{"constant":false,"id":2192,"mutability":"mutable","name":"prod0","nameLocation":"2134:5:14","nodeType":"VariableDeclaration","scope":2299,"src":"2126:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2191,"name":"uint256","nodeType":"ElementaryTypeName","src":"2126:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2193,"nodeType":"VariableDeclarationStatement","src":"2126:13:14"},{"assignments":[2195],"declarations":[{"constant":false,"id":2195,"mutability":"mutable","name":"prod1","nameLocation":"2206:5:14","nodeType":"VariableDeclaration","scope":2299,"src":"2198:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2194,"name":"uint256","nodeType":"ElementaryTypeName","src":"2198:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2196,"nodeType":"VariableDeclarationStatement","src":"2198:13:14"},{"AST":{"nodeType":"YulBlock","src":"2278:157:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2296:30:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2313:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"2316:1:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2323:1:14","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2319:3:14"},"nodeType":"YulFunctionCall","src":"2319:6:14"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2306:6:14"},"nodeType":"YulFunctionCall","src":"2306:20:14"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2300:2:14","type":""}]},{"nodeType":"YulAssignment","src":"2343:18:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2356:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"2359:1:14"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2352:3:14"},"nodeType":"YulFunctionCall","src":"2352:9:14"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2343:5:14"}]},{"nodeType":"YulAssignment","src":"2378:43:14","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2395:2:14"},{"name":"prod0","nodeType":"YulIdentifier","src":"2399:5:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2391:3:14"},"nodeType":"YulFunctionCall","src":"2391:14:14"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2410:2:14"},{"name":"prod0","nodeType":"YulIdentifier","src":"2414:5:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2407:2:14"},"nodeType":"YulFunctionCall","src":"2407:13:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2387:3:14"},"nodeType":"YulFunctionCall","src":"2387:34:14"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2378:5:14"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2192,"isOffset":false,"isSlot":false,"src":"2343:5:14","valueSize":1},{"declaration":2192,"isOffset":false,"isSlot":false,"src":"2399:5:14","valueSize":1},{"declaration":2192,"isOffset":false,"isSlot":false,"src":"2414:5:14","valueSize":1},{"declaration":2195,"isOffset":false,"isSlot":false,"src":"2378:5:14","valueSize":1},{"declaration":2182,"isOffset":false,"isSlot":false,"src":"2313:1:14","valueSize":1},{"declaration":2182,"isOffset":false,"isSlot":false,"src":"2356:1:14","valueSize":1},{"declaration":2184,"isOffset":false,"isSlot":false,"src":"2316:1:14","valueSize":1},{"declaration":2184,"isOffset":false,"isSlot":false,"src":"2359:1:14","valueSize":1}],"id":2197,"nodeType":"InlineAssembly","src":"2269:166:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2198,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2195,"src":"2516:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2525:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2516:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2206,"nodeType":"IfStatement","src":"2512:75:14","trueBody":{"id":2205,"nodeType":"Block","src":"2528:59:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2201,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"2553:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2202,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"2561:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2553:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2190,"id":2204,"nodeType":"Return","src":"2546:26:14"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2208,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"2697:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2209,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2195,"src":"2711:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2697:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2207,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2689:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2689:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2212,"nodeType":"ExpressionStatement","src":"2689:28:14"},{"assignments":[2214],"declarations":[{"constant":false,"id":2214,"mutability":"mutable","name":"remainder","nameLocation":"2981:9:14","nodeType":"VariableDeclaration","scope":2299,"src":"2973:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2213,"name":"uint256","nodeType":"ElementaryTypeName","src":"2973:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2215,"nodeType":"VariableDeclarationStatement","src":"2973:17:14"},{"AST":{"nodeType":"YulBlock","src":"3013:291:14","statements":[{"nodeType":"YulAssignment","src":"3082:38:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3102:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"3105:1:14"},{"name":"denominator","nodeType":"YulIdentifier","src":"3108:11:14"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3095:6:14"},"nodeType":"YulFunctionCall","src":"3095:25:14"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3082:9:14"}]},{"nodeType":"YulAssignment","src":"3202:41:14","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3215:5:14"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3225:9:14"},{"name":"prod0","nodeType":"YulIdentifier","src":"3236:5:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3222:2:14"},"nodeType":"YulFunctionCall","src":"3222:20:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3211:3:14"},"nodeType":"YulFunctionCall","src":"3211:32:14"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3202:5:14"}]},{"nodeType":"YulAssignment","src":"3260:30:14","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3273:5:14"},{"name":"remainder","nodeType":"YulIdentifier","src":"3280:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3269:3:14"},"nodeType":"YulFunctionCall","src":"3269:21:14"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3260:5:14"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2186,"isOffset":false,"isSlot":false,"src":"3108:11:14","valueSize":1},{"declaration":2192,"isOffset":false,"isSlot":false,"src":"3236:5:14","valueSize":1},{"declaration":2192,"isOffset":false,"isSlot":false,"src":"3260:5:14","valueSize":1},{"declaration":2192,"isOffset":false,"isSlot":false,"src":"3273:5:14","valueSize":1},{"declaration":2195,"isOffset":false,"isSlot":false,"src":"3202:5:14","valueSize":1},{"declaration":2195,"isOffset":false,"isSlot":false,"src":"3215:5:14","valueSize":1},{"declaration":2214,"isOffset":false,"isSlot":false,"src":"3082:9:14","valueSize":1},{"declaration":2214,"isOffset":false,"isSlot":false,"src":"3225:9:14","valueSize":1},{"declaration":2214,"isOffset":false,"isSlot":false,"src":"3280:9:14","valueSize":1},{"declaration":2182,"isOffset":false,"isSlot":false,"src":"3102:1:14","valueSize":1},{"declaration":2184,"isOffset":false,"isSlot":false,"src":"3105:1:14","valueSize":1}],"id":2216,"nodeType":"InlineAssembly","src":"3004:300:14"},{"assignments":[2218],"declarations":[{"constant":false,"id":2218,"mutability":"mutable","name":"twos","nameLocation":"3619:4:14","nodeType":"VariableDeclaration","scope":2299,"src":"3611:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2217,"name":"uint256","nodeType":"ElementaryTypeName","src":"3611:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2226,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2219,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"3626:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3641:12:14","subExpression":{"id":2220,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"3642:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3656:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3641:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2224,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3640:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3626:32:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3611:47:14"},{"AST":{"nodeType":"YulBlock","src":"3681:362:14","statements":[{"nodeType":"YulAssignment","src":"3746:37:14","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"3765:11:14"},{"name":"twos","nodeType":"YulIdentifier","src":"3778:4:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3761:3:14"},"nodeType":"YulFunctionCall","src":"3761:22:14"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"3746:11:14"}]},{"nodeType":"YulAssignment","src":"3850:25:14","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3863:5:14"},{"name":"twos","nodeType":"YulIdentifier","src":"3870:4:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3859:3:14"},"nodeType":"YulFunctionCall","src":"3859:16:14"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3850:5:14"}]},{"nodeType":"YulAssignment","src":"3990:39:14","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4010:1:14","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4013:4:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4006:3:14"},"nodeType":"YulFunctionCall","src":"4006:12:14"},{"name":"twos","nodeType":"YulIdentifier","src":"4020:4:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4002:3:14"},"nodeType":"YulFunctionCall","src":"4002:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"4027:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:14"},"nodeType":"YulFunctionCall","src":"3998:31:14"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"3990:4:14"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2186,"isOffset":false,"isSlot":false,"src":"3746:11:14","valueSize":1},{"declaration":2186,"isOffset":false,"isSlot":false,"src":"3765:11:14","valueSize":1},{"declaration":2192,"isOffset":false,"isSlot":false,"src":"3850:5:14","valueSize":1},{"declaration":2192,"isOffset":false,"isSlot":false,"src":"3863:5:14","valueSize":1},{"declaration":2218,"isOffset":false,"isSlot":false,"src":"3778:4:14","valueSize":1},{"declaration":2218,"isOffset":false,"isSlot":false,"src":"3870:4:14","valueSize":1},{"declaration":2218,"isOffset":false,"isSlot":false,"src":"3990:4:14","valueSize":1},{"declaration":2218,"isOffset":false,"isSlot":false,"src":"4013:4:14","valueSize":1},{"declaration":2218,"isOffset":false,"isSlot":false,"src":"4020:4:14","valueSize":1}],"id":2227,"nodeType":"InlineAssembly","src":"3672:371:14"},{"expression":{"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2228,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"4109:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2229,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2195,"src":"4118:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2230,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"4126:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4118:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4109:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2233,"nodeType":"ExpressionStatement","src":"4109:21:14"},{"assignments":[2235],"declarations":[{"constant":false,"id":2235,"mutability":"mutable","name":"inverse","nameLocation":"4456:7:14","nodeType":"VariableDeclaration","scope":2299,"src":"4448:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2234,"name":"uint256","nodeType":"ElementaryTypeName","src":"4448:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2242,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4467:1:14","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2237,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"4471:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4467:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2239,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4466:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":2240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4486:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4466:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4448:39:14"},{"expression":{"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2243,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"4704:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4715:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2245,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"4719:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2246,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"4733:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4719:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4715:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4704:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2250,"nodeType":"ExpressionStatement","src":"4704:36:14"},{"expression":{"id":2257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2251,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"4773:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4784:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2253,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"4788:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2254,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"4802:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4788:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4784:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4773:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2258,"nodeType":"ExpressionStatement","src":"4773:36:14"},{"expression":{"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2259,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"4843:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4854:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2261,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"4858:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2262,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"4872:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4858:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4854:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4843:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2266,"nodeType":"ExpressionStatement","src":"4843:36:14"},{"expression":{"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2267,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"4913:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4924:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2269,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"4928:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2270,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"4942:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4928:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4924:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4913:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2274,"nodeType":"ExpressionStatement","src":"4913:36:14"},{"expression":{"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2275,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"4983:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4994:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2277,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"4998:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2278,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"5012:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4998:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4994:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4983:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2282,"nodeType":"ExpressionStatement","src":"4983:36:14"},{"expression":{"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2283,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"5054:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5065:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2285,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"5069:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2286,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"5083:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5069:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5054:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2290,"nodeType":"ExpressionStatement","src":"5054:36:14"},{"expression":{"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2291,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"5524:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2292,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"5533:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2293,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"5541:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5533:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5524:24:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2296,"nodeType":"ExpressionStatement","src":"5524:24:14"},{"expression":{"id":2297,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"5569:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2190,"id":2298,"nodeType":"Return","src":"5562:13:14"}]}]},"documentation":{"id":2180,"nodeType":"StructuredDocumentation","src":"1357:305:14","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":2301,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:14","nodeType":"FunctionDefinition","parameters":{"id":2187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2182,"mutability":"mutable","name":"x","nameLocation":"1700:1:14","nodeType":"VariableDeclaration","scope":2301,"src":"1692:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2181,"name":"uint256","nodeType":"ElementaryTypeName","src":"1692:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2184,"mutability":"mutable","name":"y","nameLocation":"1719:1:14","nodeType":"VariableDeclaration","scope":2301,"src":"1711:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2183,"name":"uint256","nodeType":"ElementaryTypeName","src":"1711:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2186,"mutability":"mutable","name":"denominator","nameLocation":"1738:11:14","nodeType":"VariableDeclaration","scope":2301,"src":"1730:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2185,"name":"uint256","nodeType":"ElementaryTypeName","src":"1730:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:73:14"},"returnParameters":{"id":2190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2189,"mutability":"mutable","name":"result","nameLocation":"1787:6:14","nodeType":"VariableDeclaration","scope":2301,"src":"1779:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2188,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1778:16:14"},"scope":2953,"src":"1667:3925:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2344,"nodeType":"Block","src":"5872:189:14","statements":[{"assignments":[2317],"declarations":[{"constant":false,"id":2317,"mutability":"mutable","name":"result","nameLocation":"5890:6:14","nodeType":"VariableDeclaration","scope":2344,"src":"5882:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2316,"name":"uint256","nodeType":"ElementaryTypeName","src":"5882:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2323,"initialValue":{"arguments":[{"id":2319,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"5906:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2320,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"5909:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2321,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"5912:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2318,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[2301,2345],"referencedDeclaration":2301,"src":"5899:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5899:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5882:42:14"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2095","typeString":"enum Math.Rounding"},"id":2327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2324,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"5938:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2095","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2325,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"5950:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2095_$","typeString":"type(enum Math.Rounding)"}},"id":2326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2093,"src":"5950:11:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2095","typeString":"enum Math.Rounding"}},"src":"5938:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2329,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"5972:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2330,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"5975:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2331,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"5978:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2328,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"5965:6:14","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5965:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5993:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5965:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5938:56:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2341,"nodeType":"IfStatement","src":"5934:98:14","trueBody":{"id":2340,"nodeType":"Block","src":"5996:36:14","statements":[{"expression":{"id":2338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2336,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"6010:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6020:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6010:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2339,"nodeType":"ExpressionStatement","src":"6010:11:14"}]}},{"expression":{"id":2342,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"6048:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2315,"id":2343,"nodeType":"Return","src":"6041:13:14"}]},"documentation":{"id":2302,"nodeType":"StructuredDocumentation","src":"5598:121:14","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":2345,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5733:6:14","nodeType":"FunctionDefinition","parameters":{"id":2312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2304,"mutability":"mutable","name":"x","nameLocation":"5757:1:14","nodeType":"VariableDeclaration","scope":2345,"src":"5749:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2303,"name":"uint256","nodeType":"ElementaryTypeName","src":"5749:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2306,"mutability":"mutable","name":"y","nameLocation":"5776:1:14","nodeType":"VariableDeclaration","scope":2345,"src":"5768:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2305,"name":"uint256","nodeType":"ElementaryTypeName","src":"5768:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2308,"mutability":"mutable","name":"denominator","nameLocation":"5795:11:14","nodeType":"VariableDeclaration","scope":2345,"src":"5787:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2307,"name":"uint256","nodeType":"ElementaryTypeName","src":"5787:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2311,"mutability":"mutable","name":"rounding","nameLocation":"5825:8:14","nodeType":"VariableDeclaration","scope":2345,"src":"5816:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2095","typeString":"enum Math.Rounding"},"typeName":{"id":2310,"nodeType":"UserDefinedTypeName","pathNode":{"id":2309,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2095,"src":"5816:8:14"},"referencedDeclaration":2095,"src":"5816:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2095","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"5739:100:14"},"returnParameters":{"id":2315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2314,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2345,"src":"5863:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2313,"name":"uint256","nodeType":"ElementaryTypeName","src":"5863:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5862:9:14"},"scope":2953,"src":"5724:337:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2456,"nodeType":"Block","src":"6337:1585:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2353,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"6351:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6356:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6351:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2359,"nodeType":"IfStatement","src":"6347:45:14","trueBody":{"id":2358,"nodeType":"Block","src":"6359:33:14","statements":[{"expression":{"hexValue":"30","id":2356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6380:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2352,"id":2357,"nodeType":"Return","src":"6373:8:14"}]}},{"assignments":[2361],"declarations":[{"constant":false,"id":2361,"mutability":"mutable","name":"result","nameLocation":"7079:6:14","nodeType":"VariableDeclaration","scope":2456,"src":"7071:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2360,"name":"uint256","nodeType":"ElementaryTypeName","src":"7071:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2370,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7088:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2364,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"7099:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2363,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2625,2661],"referencedDeclaration":2625,"src":"7094:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7094:7:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7105:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7094:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2368,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7093:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7088:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7071:36:14"},{"id":2455,"nodeType":"UncheckedBlock","src":"7508:408:14","statements":[{"expression":{"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2371,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"7532:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2372,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"7542:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2373,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"7551:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2374,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"7555:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7551:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7542:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2377,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7541:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7566:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7541:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7532:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2381,"nodeType":"ExpressionStatement","src":"7532:35:14"},{"expression":{"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2382,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"7581:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2383,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"7591:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2384,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"7600:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2385,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"7604:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7600:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7591:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2388,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7590:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7615:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7590:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7581:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2392,"nodeType":"ExpressionStatement","src":"7581:35:14"},{"expression":{"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2393,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"7630:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2394,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"7640:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2395,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"7649:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2396,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"7653:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7649:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7640:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2399,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7639:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7664:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7639:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7630:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2403,"nodeType":"ExpressionStatement","src":"7630:35:14"},{"expression":{"id":2413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2404,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"7679:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2405,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"7689:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2406,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"7698:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2407,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"7702:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7698:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7689:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2410,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7688:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7713:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7688:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7679:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2414,"nodeType":"ExpressionStatement","src":"7679:35:14"},{"expression":{"id":2424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2415,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"7728:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2416,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"7738:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2417,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"7747:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2418,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"7751:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7747:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7738:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2421,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7737:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7762:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7737:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7728:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2425,"nodeType":"ExpressionStatement","src":"7728:35:14"},{"expression":{"id":2435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2426,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"7777:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2427,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"7787:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2428,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"7796:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2429,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"7800:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7796:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7787:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2432,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7786:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7811:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7786:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7777:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2436,"nodeType":"ExpressionStatement","src":"7777:35:14"},{"expression":{"id":2446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2437,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"7826:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2438,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"7836:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2439,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"7845:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2440,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"7849:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7845:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7836:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2443,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7835:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7860:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7835:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7826:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2447,"nodeType":"ExpressionStatement","src":"7826:35:14"},{"expression":{"arguments":[{"id":2449,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"7886:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2450,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"7894:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2451,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"7898:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7894:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2448,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2131,"src":"7882:3:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7882:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2352,"id":2454,"nodeType":"Return","src":"7875:30:14"}]}]},"documentation":{"id":2346,"nodeType":"StructuredDocumentation","src":"6067:208:14","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":2457,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6289:4:14","nodeType":"FunctionDefinition","parameters":{"id":2349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2348,"mutability":"mutable","name":"a","nameLocation":"6302:1:14","nodeType":"VariableDeclaration","scope":2457,"src":"6294:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2347,"name":"uint256","nodeType":"ElementaryTypeName","src":"6294:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6293:11:14"},"returnParameters":{"id":2352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2457,"src":"6328:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2350,"name":"uint256","nodeType":"ElementaryTypeName","src":"6328:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6327:9:14"},"scope":2953,"src":"6280:1642:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2492,"nodeType":"Block","src":"8098:161:14","statements":[{"id":2491,"nodeType":"UncheckedBlock","src":"8108:145:14","statements":[{"assignments":[2469],"declarations":[{"constant":false,"id":2469,"mutability":"mutable","name":"result","nameLocation":"8140:6:14","nodeType":"VariableDeclaration","scope":2491,"src":"8132:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2468,"name":"uint256","nodeType":"ElementaryTypeName","src":"8132:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2473,"initialValue":{"arguments":[{"id":2471,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"8154:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2470,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[2457,2493],"referencedDeclaration":2457,"src":"8149:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8149:7:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8132:24:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2474,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"8177:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2095","typeString":"enum Math.Rounding"},"id":2478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2475,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"8187:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2095","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2476,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"8199:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2095_$","typeString":"type(enum Math.Rounding)"}},"id":2477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2093,"src":"8199:11:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2095","typeString":"enum Math.Rounding"}},"src":"8187:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2479,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"8214:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2480,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"8223:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2482,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2460,"src":"8232:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8187:46:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8240:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8187:54:14","trueExpression":{"hexValue":"31","id":2485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8236:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2488,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8186:56:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8177:65:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2467,"id":2490,"nodeType":"Return","src":"8170:72:14"}]}]},"documentation":{"id":2458,"nodeType":"StructuredDocumentation","src":"7928:89:14","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":2493,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8031:4:14","nodeType":"FunctionDefinition","parameters":{"id":2464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2460,"mutability":"mutable","name":"a","nameLocation":"8044:1:14","nodeType":"VariableDeclaration","scope":2493,"src":"8036:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2459,"name":"uint256","nodeType":"ElementaryTypeName","src":"8036:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2463,"mutability":"mutable","name":"rounding","nameLocation":"8056:8:14","nodeType":"VariableDeclaration","scope":2493,"src":"8047:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2095","typeString":"enum Math.Rounding"},"typeName":{"id":2462,"nodeType":"UserDefinedTypeName","pathNode":{"id":2461,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2095,"src":"8047:8:14"},"referencedDeclaration":2095,"src":"8047:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2095","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8035:30:14"},"returnParameters":{"id":2467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2466,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2493,"src":"8089:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2465,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8088:9:14"},"scope":2953,"src":"8022:237:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2624,"nodeType":"Block","src":"8444:922:14","statements":[{"assignments":[2502],"declarations":[{"constant":false,"id":2502,"mutability":"mutable","name":"result","nameLocation":"8462:6:14","nodeType":"VariableDeclaration","scope":2624,"src":"8454:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2501,"name":"uint256","nodeType":"ElementaryTypeName","src":"8454:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2504,"initialValue":{"hexValue":"30","id":2503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8471:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8454:18:14"},{"id":2621,"nodeType":"UncheckedBlock","src":"8482:855:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2505,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2496,"src":"8510:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8519:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8510:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8525:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8510:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2519,"nodeType":"IfStatement","src":"8506:99:14","trueBody":{"id":2518,"nodeType":"Block","src":"8528:77:14","statements":[{"expression":{"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2496,"src":"8546:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8556:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8546:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2513,"nodeType":"ExpressionStatement","src":"8546:13:14"},{"expression":{"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2514,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"8577:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":2515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8587:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8577:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2517,"nodeType":"ExpressionStatement","src":"8577:13:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2496,"src":"8622:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8631:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8622:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8636:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8622:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2534,"nodeType":"IfStatement","src":"8618:96:14","trueBody":{"id":2533,"nodeType":"Block","src":"8639:75:14","statements":[{"expression":{"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2496,"src":"8657:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8667:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8657:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2528,"nodeType":"ExpressionStatement","src":"8657:12:14"},{"expression":{"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2529,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"8687:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8697:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8687:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2532,"nodeType":"ExpressionStatement","src":"8687:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2496,"src":"8731:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8740:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8731:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8745:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8731:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2549,"nodeType":"IfStatement","src":"8727:96:14","trueBody":{"id":2548,"nodeType":"Block","src":"8748:75:14","statements":[{"expression":{"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2540,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2496,"src":"8766:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8776:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8766:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2543,"nodeType":"ExpressionStatement","src":"8766:12:14"},{"expression":{"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2544,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"8796:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8796:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2547,"nodeType":"ExpressionStatement","src":"8796:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2496,"src":"8840:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8849:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8840:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8854:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8840:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2564,"nodeType":"IfStatement","src":"8836:96:14","trueBody":{"id":2563,"nodeType":"Block","src":"8857:75:14","statements":[{"expression":{"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2555,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2496,"src":"8875:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8885:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8875:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2558,"nodeType":"ExpressionStatement","src":"8875:12:14"},{"expression":{"id":2561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2559,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"8905:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8915:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8905:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2562,"nodeType":"ExpressionStatement","src":"8905:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2565,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2496,"src":"8949:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8958:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8949:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8962:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8949:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2579,"nodeType":"IfStatement","src":"8945:93:14","trueBody":{"id":2578,"nodeType":"Block","src":"8965:73:14","statements":[{"expression":{"id":2572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2570,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2496,"src":"8983:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8993:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8983:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2573,"nodeType":"ExpressionStatement","src":"8983:11:14"},{"expression":{"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2574,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"9012:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9022:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9012:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2577,"nodeType":"ExpressionStatement","src":"9012:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2496,"src":"9055:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":2581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9064:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9055:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9068:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9055:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2594,"nodeType":"IfStatement","src":"9051:93:14","trueBody":{"id":2593,"nodeType":"Block","src":"9071:73:14","statements":[{"expression":{"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2496,"src":"9089:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9089:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2588,"nodeType":"ExpressionStatement","src":"9089:11:14"},{"expression":{"id":2591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2589,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"9118:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9128:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9118:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2592,"nodeType":"ExpressionStatement","src":"9118:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2496,"src":"9161:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":2596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9170:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9161:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9174:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9161:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2609,"nodeType":"IfStatement","src":"9157:93:14","trueBody":{"id":2608,"nodeType":"Block","src":"9177:73:14","statements":[{"expression":{"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2600,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2496,"src":"9195:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":2601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9205:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9195:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2603,"nodeType":"ExpressionStatement","src":"9195:11:14"},{"expression":{"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2604,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"9224:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9234:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9224:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2607,"nodeType":"ExpressionStatement","src":"9224:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2496,"src":"9267:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9276:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9267:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9280:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9267:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2620,"nodeType":"IfStatement","src":"9263:64:14","trueBody":{"id":2619,"nodeType":"Block","src":"9283:44:14","statements":[{"expression":{"id":2617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2615,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"9301:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9311:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9301:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2618,"nodeType":"ExpressionStatement","src":"9301:11:14"}]}}]},{"expression":{"id":2622,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"9353:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2500,"id":2623,"nodeType":"Return","src":"9346:13:14"}]},"documentation":{"id":2494,"nodeType":"StructuredDocumentation","src":"8265:113:14","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":2625,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8392:4:14","nodeType":"FunctionDefinition","parameters":{"id":2497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2496,"mutability":"mutable","name":"value","nameLocation":"8405:5:14","nodeType":"VariableDeclaration","scope":2625,"src":"8397:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2495,"name":"uint256","nodeType":"ElementaryTypeName","src":"8397:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8396:15:14"},"returnParameters":{"id":2500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2499,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2625,"src":"8435:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2498,"name":"uint256","nodeType":"ElementaryTypeName","src":"8435:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8434:9:14"},"scope":2953,"src":"8383:983:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2660,"nodeType":"Block","src":"9599:165:14","statements":[{"id":2659,"nodeType":"UncheckedBlock","src":"9609:149:14","statements":[{"assignments":[2637],"declarations":[{"constant":false,"id":2637,"mutability":"mutable","name":"result","nameLocation":"9641:6:14","nodeType":"VariableDeclaration","scope":2659,"src":"9633:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2636,"name":"uint256","nodeType":"ElementaryTypeName","src":"9633:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2641,"initialValue":{"arguments":[{"id":2639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"9655:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2638,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2625,2661],"referencedDeclaration":2625,"src":"9650:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9650:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9633:28:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2642,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"9682:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2095","typeString":"enum Math.Rounding"},"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2643,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"9692:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2095","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2644,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"9704:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2095_$","typeString":"type(enum Math.Rounding)"}},"id":2645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2093,"src":"9704:11:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2095","typeString":"enum Math.Rounding"}},"src":"9692:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9719:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2648,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"9724:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"9733:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9692:46:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9745:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9692:54:14","trueExpression":{"hexValue":"31","id":2653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9741:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2656,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9691:56:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9682:65:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2635,"id":2658,"nodeType":"Return","src":"9675:72:14"}]}]},"documentation":{"id":2626,"nodeType":"StructuredDocumentation","src":"9372:142:14","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2661,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9528:4:14","nodeType":"FunctionDefinition","parameters":{"id":2632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2628,"mutability":"mutable","name":"value","nameLocation":"9541:5:14","nodeType":"VariableDeclaration","scope":2661,"src":"9533:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2627,"name":"uint256","nodeType":"ElementaryTypeName","src":"9533:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2631,"mutability":"mutable","name":"rounding","nameLocation":"9557:8:14","nodeType":"VariableDeclaration","scope":2661,"src":"9548:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2095","typeString":"enum Math.Rounding"},"typeName":{"id":2630,"nodeType":"UserDefinedTypeName","pathNode":{"id":2629,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2095,"src":"9548:8:14"},"referencedDeclaration":2095,"src":"9548:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2095","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9532:34:14"},"returnParameters":{"id":2635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2634,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2661,"src":"9590:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2633,"name":"uint256","nodeType":"ElementaryTypeName","src":"9590:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9589:9:14"},"scope":2953,"src":"9519:245:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2789,"nodeType":"Block","src":"9951:828:14","statements":[{"assignments":[2670],"declarations":[{"constant":false,"id":2670,"mutability":"mutable","name":"result","nameLocation":"9969:6:14","nodeType":"VariableDeclaration","scope":2789,"src":"9961:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2669,"name":"uint256","nodeType":"ElementaryTypeName","src":"9961:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2672,"initialValue":{"hexValue":"30","id":2671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9978:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9961:18:14"},{"id":2786,"nodeType":"UncheckedBlock","src":"9989:761:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2673,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"10017:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10026:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10030:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10026:6:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10017:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2689,"nodeType":"IfStatement","src":"10013:99:14","trueBody":{"id":2688,"nodeType":"Block","src":"10034:78:14","statements":[{"expression":{"id":2682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2678,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"10052:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10061:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10065:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10061:6:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10052:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2683,"nodeType":"ExpressionStatement","src":"10052:15:14"},{"expression":{"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2684,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"10085:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10095:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10085:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2687,"nodeType":"ExpressionStatement","src":"10085:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2690,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"10129:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10138:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10142:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10138:6:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10129:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2706,"nodeType":"IfStatement","src":"10125:99:14","trueBody":{"id":2705,"nodeType":"Block","src":"10146:78:14","statements":[{"expression":{"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"10164:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10173:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10177:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10173:6:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10164:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2700,"nodeType":"ExpressionStatement","src":"10164:15:14"},{"expression":{"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2701,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"10197:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10207:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10197:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2704,"nodeType":"ExpressionStatement","src":"10197:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"10241:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10250:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10254:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10250:6:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10241:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2723,"nodeType":"IfStatement","src":"10237:99:14","trueBody":{"id":2722,"nodeType":"Block","src":"10258:78:14","statements":[{"expression":{"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"10276:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10285:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10289:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10285:6:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10276:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2717,"nodeType":"ExpressionStatement","src":"10276:15:14"},{"expression":{"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2718,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"10309:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10309:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2721,"nodeType":"ExpressionStatement","src":"10309:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2724,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"10353:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10362:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10366:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10362:5:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10353:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2740,"nodeType":"IfStatement","src":"10349:96:14","trueBody":{"id":2739,"nodeType":"Block","src":"10369:76:14","statements":[{"expression":{"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2729,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"10387:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10396:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10400:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10396:5:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10387:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2734,"nodeType":"ExpressionStatement","src":"10387:14:14"},{"expression":{"id":2737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2735,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"10419:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10419:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2738,"nodeType":"ExpressionStatement","src":"10419:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"10462:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10471:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10475:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10471:5:14","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10462:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2757,"nodeType":"IfStatement","src":"10458:96:14","trueBody":{"id":2756,"nodeType":"Block","src":"10478:76:14","statements":[{"expression":{"id":2750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2746,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"10496:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10505:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10509:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10505:5:14","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10496:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2751,"nodeType":"ExpressionStatement","src":"10496:14:14"},{"expression":{"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2752,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"10528:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10538:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10528:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2755,"nodeType":"ExpressionStatement","src":"10528:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"10571:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10580:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10584:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10580:5:14","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10571:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2774,"nodeType":"IfStatement","src":"10567:96:14","trueBody":{"id":2773,"nodeType":"Block","src":"10587:76:14","statements":[{"expression":{"id":2767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"10605:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10614:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10618:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10614:5:14","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10605:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2768,"nodeType":"ExpressionStatement","src":"10605:14:14"},{"expression":{"id":2771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2769,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"10637:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10647:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10637:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2772,"nodeType":"ExpressionStatement","src":"10637:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"10680:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":2778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10689:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":2777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10693:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10689:5:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10680:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2785,"nodeType":"IfStatement","src":"10676:64:14","trueBody":{"id":2784,"nodeType":"Block","src":"10696:44:14","statements":[{"expression":{"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2780,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"10714:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10724:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10714:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2783,"nodeType":"ExpressionStatement","src":"10714:11:14"}]}}]},{"expression":{"id":2787,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"10766:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2668,"id":2788,"nodeType":"Return","src":"10759:13:14"}]},"documentation":{"id":2662,"nodeType":"StructuredDocumentation","src":"9770:114:14","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":2790,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"9898:5:14","nodeType":"FunctionDefinition","parameters":{"id":2665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2664,"mutability":"mutable","name":"value","nameLocation":"9912:5:14","nodeType":"VariableDeclaration","scope":2790,"src":"9904:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2663,"name":"uint256","nodeType":"ElementaryTypeName","src":"9904:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9903:15:14"},"returnParameters":{"id":2668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2667,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2790,"src":"9942:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2666,"name":"uint256","nodeType":"ElementaryTypeName","src":"9942:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9941:9:14"},"scope":2953,"src":"9889:890:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2825,"nodeType":"Block","src":"11014:165:14","statements":[{"id":2824,"nodeType":"UncheckedBlock","src":"11024:149:14","statements":[{"assignments":[2802],"declarations":[{"constant":false,"id":2802,"mutability":"mutable","name":"result","nameLocation":"11056:6:14","nodeType":"VariableDeclaration","scope":2824,"src":"11048:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2801,"name":"uint256","nodeType":"ElementaryTypeName","src":"11048:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2806,"initialValue":{"arguments":[{"id":2804,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"11071:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2803,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[2790,2826],"referencedDeclaration":2790,"src":"11065:5:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11065:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11048:29:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2807,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"11098:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2095","typeString":"enum Math.Rounding"},"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2808,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"11108:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2095","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2809,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"11120:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2095_$","typeString":"type(enum Math.Rounding)"}},"id":2810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2093,"src":"11120:11:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2095","typeString":"enum Math.Rounding"}},"src":"11108:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11135:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2813,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"11139:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"11148:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11108:45:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11160:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11108:53:14","trueExpression":{"hexValue":"31","id":2818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11156:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2821,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11107:55:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11098:64:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2800,"id":2823,"nodeType":"Return","src":"11091:71:14"}]}]},"documentation":{"id":2791,"nodeType":"StructuredDocumentation","src":"10785:143:14","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2826,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10942:5:14","nodeType":"FunctionDefinition","parameters":{"id":2797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2793,"mutability":"mutable","name":"value","nameLocation":"10956:5:14","nodeType":"VariableDeclaration","scope":2826,"src":"10948:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2792,"name":"uint256","nodeType":"ElementaryTypeName","src":"10948:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2796,"mutability":"mutable","name":"rounding","nameLocation":"10972:8:14","nodeType":"VariableDeclaration","scope":2826,"src":"10963:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2095","typeString":"enum Math.Rounding"},"typeName":{"id":2795,"nodeType":"UserDefinedTypeName","pathNode":{"id":2794,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2095,"src":"10963:8:14"},"referencedDeclaration":2095,"src":"10963:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2095","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10947:34:14"},"returnParameters":{"id":2800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2799,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2826,"src":"11005:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2798,"name":"uint256","nodeType":"ElementaryTypeName","src":"11005:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11004:9:14"},"scope":2953,"src":"10933:246:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2912,"nodeType":"Block","src":"11493:600:14","statements":[{"assignments":[2835],"declarations":[{"constant":false,"id":2835,"mutability":"mutable","name":"result","nameLocation":"11511:6:14","nodeType":"VariableDeclaration","scope":2912,"src":"11503:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2834,"name":"uint256","nodeType":"ElementaryTypeName","src":"11503:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2837,"initialValue":{"hexValue":"30","id":2836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11520:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11503:18:14"},{"id":2909,"nodeType":"UncheckedBlock","src":"11531:533:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"11559:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11568:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11559:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11574:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11559:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2852,"nodeType":"IfStatement","src":"11555:98:14","trueBody":{"id":2851,"nodeType":"Block","src":"11577:76:14","statements":[{"expression":{"id":2845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"11595:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11605:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11595:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2846,"nodeType":"ExpressionStatement","src":"11595:13:14"},{"expression":{"id":2849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2847,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"11626:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11636:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11626:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2850,"nodeType":"ExpressionStatement","src":"11626:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2853,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"11670:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11679:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11670:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11684:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11670:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2867,"nodeType":"IfStatement","src":"11666:95:14","trueBody":{"id":2866,"nodeType":"Block","src":"11687:74:14","statements":[{"expression":{"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2858,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"11705:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11715:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11705:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2861,"nodeType":"ExpressionStatement","src":"11705:12:14"},{"expression":{"id":2864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2862,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"11735:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11745:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11735:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2865,"nodeType":"ExpressionStatement","src":"11735:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2868,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"11778:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11787:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11778:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11792:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11778:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2882,"nodeType":"IfStatement","src":"11774:95:14","trueBody":{"id":2881,"nodeType":"Block","src":"11795:74:14","statements":[{"expression":{"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2873,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"11813:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11823:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11813:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2876,"nodeType":"ExpressionStatement","src":"11813:12:14"},{"expression":{"id":2879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2877,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"11843:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11853:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11843:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2880,"nodeType":"ExpressionStatement","src":"11843:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2883,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"11886:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11895:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11886:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11900:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11886:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2897,"nodeType":"IfStatement","src":"11882:95:14","trueBody":{"id":2896,"nodeType":"Block","src":"11903:74:14","statements":[{"expression":{"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2888,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"11921:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11921:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2891,"nodeType":"ExpressionStatement","src":"11921:12:14"},{"expression":{"id":2894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2892,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"11951:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11961:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11951:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2895,"nodeType":"ExpressionStatement","src":"11951:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2898,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"11994:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12003:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11994:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12007:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11994:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2908,"nodeType":"IfStatement","src":"11990:64:14","trueBody":{"id":2907,"nodeType":"Block","src":"12010:44:14","statements":[{"expression":{"id":2905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2903,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"12028:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12028:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2906,"nodeType":"ExpressionStatement","src":"12028:11:14"}]}}]},{"expression":{"id":2910,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"12080:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2833,"id":2911,"nodeType":"Return","src":"12073:13:14"}]},"documentation":{"id":2827,"nodeType":"StructuredDocumentation","src":"11185:240:14","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":2913,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11439:6:14","nodeType":"FunctionDefinition","parameters":{"id":2830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2829,"mutability":"mutable","name":"value","nameLocation":"11454:5:14","nodeType":"VariableDeclaration","scope":2913,"src":"11446:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2828,"name":"uint256","nodeType":"ElementaryTypeName","src":"11446:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11445:15:14"},"returnParameters":{"id":2833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2913,"src":"11484:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2831,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:9:14"},"scope":2953,"src":"11430:663:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2951,"nodeType":"Block","src":"12329:173:14","statements":[{"id":2950,"nodeType":"UncheckedBlock","src":"12339:157:14","statements":[{"assignments":[2925],"declarations":[{"constant":false,"id":2925,"mutability":"mutable","name":"result","nameLocation":"12371:6:14","nodeType":"VariableDeclaration","scope":2950,"src":"12363:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2924,"name":"uint256","nodeType":"ElementaryTypeName","src":"12363:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2929,"initialValue":{"arguments":[{"id":2927,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"12387:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2926,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[2913,2952],"referencedDeclaration":2913,"src":"12380:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12380:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12363:30:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2930,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"12414:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2095","typeString":"enum Math.Rounding"},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2931,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"12424:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2095","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2932,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"12436:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2095_$","typeString":"type(enum Math.Rounding)"}},"id":2933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2093,"src":"12436:11:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2095","typeString":"enum Math.Rounding"}},"src":"12424:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12451:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2936,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"12457:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":2937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12466:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12457:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2939,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12456:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2941,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"12471:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12424:52:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12483:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12424:60:14","trueExpression":{"hexValue":"31","id":2944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12479:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2947,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12423:62:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12414:71:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2923,"id":2949,"nodeType":"Return","src":"12407:78:14"}]}]},"documentation":{"id":2914,"nodeType":"StructuredDocumentation","src":"12099:143:14","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2952,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12256:6:14","nodeType":"FunctionDefinition","parameters":{"id":2920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2916,"mutability":"mutable","name":"value","nameLocation":"12271:5:14","nodeType":"VariableDeclaration","scope":2952,"src":"12263:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2915,"name":"uint256","nodeType":"ElementaryTypeName","src":"12263:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2919,"mutability":"mutable","name":"rounding","nameLocation":"12287:8:14","nodeType":"VariableDeclaration","scope":2952,"src":"12278:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2095","typeString":"enum Math.Rounding"},"typeName":{"id":2918,"nodeType":"UserDefinedTypeName","pathNode":{"id":2917,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2095,"src":"12278:8:14"},"referencedDeclaration":2095,"src":"12278:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2095","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12262:34:14"},"returnParameters":{"id":2923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2922,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2952,"src":"12320:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2921,"name":"uint256","nodeType":"ElementaryTypeName","src":"12320:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12319:9:14"},"scope":2953,"src":"12247:255:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2954,"src":"202:12302:14","usedErrors":[]}],"src":"103:12402:14"},"id":14},"contracts/Characters.sol":{"ast":{"absolutePath":"contracts/Characters.sol","exportedSymbols":{"Characters":[3143]},"id":3144,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2955,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"33:23:15"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3143,"linearizedBaseContracts":[3143],"name":"Characters","nameLocation":"69:10:15","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Characters.Person","id":2964,"members":[{"constant":false,"id":2957,"mutability":"mutable","name":"tokenUri","nameLocation":"119:8:15","nodeType":"VariableDeclaration","scope":2964,"src":"112:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2956,"name":"string","nodeType":"ElementaryTypeName","src":"112:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2959,"mutability":"mutable","name":"attack","nameLocation":"146:6:15","nodeType":"VariableDeclaration","scope":2964,"src":"138:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2958,"name":"uint256","nodeType":"ElementaryTypeName","src":"138:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2961,"mutability":"mutable","name":"defence","nameLocation":"171:7:15","nodeType":"VariableDeclaration","scope":2964,"src":"163:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2960,"name":"uint256","nodeType":"ElementaryTypeName","src":"163:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2963,"mutability":"mutable","name":"tactics","nameLocation":"197:7:15","nodeType":"VariableDeclaration","scope":2964,"src":"189:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2962,"name":"uint256","nodeType":"ElementaryTypeName","src":"189:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Person","nameLocation":"94:6:15","nodeType":"StructDefinition","scope":3143,"src":"87:125:15","visibility":"public"},{"constant":false,"functionSelector":"4132607b","id":2968,"mutability":"mutable","name":"normalPersons","nameLocation":"234:13:15","nodeType":"VariableDeclaration","scope":3143,"src":"218:29:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_storage_$dyn_storage","typeString":"struct Characters.Person[]"},"typeName":{"baseType":{"id":2966,"nodeType":"UserDefinedTypeName","pathNode":{"id":2965,"name":"Person","nodeType":"IdentifierPath","referencedDeclaration":2964,"src":"218:6:15"},"referencedDeclaration":2964,"src":"218:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_storage_ptr","typeString":"struct Characters.Person"}},"id":2967,"nodeType":"ArrayTypeName","src":"218:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_storage_$dyn_storage_ptr","typeString":"struct Characters.Person[]"}},"visibility":"public"},{"constant":false,"functionSelector":"cff2c359","id":2972,"mutability":"mutable","name":"rarePersons","nameLocation":"270:11:15","nodeType":"VariableDeclaration","scope":3143,"src":"254:27:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_storage_$dyn_storage","typeString":"struct Characters.Person[]"},"typeName":{"baseType":{"id":2970,"nodeType":"UserDefinedTypeName","pathNode":{"id":2969,"name":"Person","nodeType":"IdentifierPath","referencedDeclaration":2964,"src":"254:6:15"},"referencedDeclaration":2964,"src":"254:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_storage_ptr","typeString":"struct Characters.Person"}},"id":2971,"nodeType":"ArrayTypeName","src":"254:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_storage_$dyn_storage_ptr","typeString":"struct Characters.Person[]"}},"visibility":"public"},{"constant":false,"functionSelector":"9cfa7daa","id":2976,"mutability":"mutable","name":"legendaryPersons","nameLocation":"304:16:15","nodeType":"VariableDeclaration","scope":3143,"src":"288:32:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_storage_$dyn_storage","typeString":"struct Characters.Person[]"},"typeName":{"baseType":{"id":2974,"nodeType":"UserDefinedTypeName","pathNode":{"id":2973,"name":"Person","nodeType":"IdentifierPath","referencedDeclaration":2964,"src":"288:6:15"},"referencedDeclaration":2964,"src":"288:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_storage_ptr","typeString":"struct Characters.Person"}},"id":2975,"nodeType":"ArrayTypeName","src":"288:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_storage_$dyn_storage_ptr","typeString":"struct Characters.Person[]"}},"visibility":"public"},{"body":{"id":3114,"nodeType":"Block","src":"596:992:15","statements":[{"body":{"id":3036,"nodeType":"Block","src":"659:264:15","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":3015,"name":"tokenUriNormal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"740:14:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":3017,"indexExpression":{"id":3016,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"755:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"740:17:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"baseExpression":{"baseExpression":{"id":3018,"name":"normalStats","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"780:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"id":3020,"indexExpression":{"id":3019,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"792:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"780:14:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3022,"indexExpression":{"hexValue":"30","id":3021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"795:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"780:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"baseExpression":{"id":3023,"name":"normalStats","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"820:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"id":3025,"indexExpression":{"id":3024,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"832:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"820:14:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3027,"indexExpression":{"hexValue":"31","id":3026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"835:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"820:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"baseExpression":{"id":3028,"name":"normalStats","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2983,"src":"860:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"id":3030,"indexExpression":{"id":3029,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"872:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"860:14:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3032,"indexExpression":{"hexValue":"32","id":3031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"875:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"860:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3014,"name":"Person","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"711:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Person_$2964_storage_ptr_$","typeString":"type(struct Characters.Person storage pointer)"}},"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"711:185:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}],"expression":{"id":3011,"name":"normalPersons","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"674:13:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_storage_$dyn_storage","typeString":"struct Characters.Person storage ref[] storage ref"}},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"674:18:15","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Person_$2964_storage_$dyn_storage_ptr_$_t_struct$_Person_$2964_storage_$returns$__$bound_to$_t_array$_t_struct$_Person_$2964_storage_$dyn_storage_ptr_$","typeString":"function (struct Characters.Person storage ref[] storage pointer,struct Characters.Person storage ref)"}},"id":3034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"674:237:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3035,"nodeType":"ExpressionStatement","src":"674:237:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3004,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"627:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3005,"name":"tokenUriNormal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"631:14:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"631:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"627:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3037,"initializationExpression":{"assignments":[3001],"declarations":[{"constant":false,"id":3001,"mutability":"mutable","name":"i","nameLocation":"620:1:15","nodeType":"VariableDeclaration","scope":3037,"src":"612:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3000,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3003,"initialValue":{"hexValue":"30","id":3002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"624:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"612:13:15"},"loopExpression":{"expression":{"id":3009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"654:3:15","subExpression":{"id":3008,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"654:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3010,"nodeType":"ExpressionStatement","src":"654:3:15"},"nodeType":"ForStatement","src":"607:316:15"},{"body":{"id":3074,"nodeType":"Block","src":"983:254:15","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":3053,"name":"tokenUriRare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2986,"src":"1062:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":3055,"indexExpression":{"id":3054,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"1075:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1062:15:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"baseExpression":{"baseExpression":{"id":3056,"name":"statsRare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"1100:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"id":3058,"indexExpression":{"id":3057,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"1110:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1100:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3060,"indexExpression":{"hexValue":"30","id":3059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1113:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1100:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"baseExpression":{"id":3061,"name":"statsRare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"1138:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"id":3063,"indexExpression":{"id":3062,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"1148:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1138:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3065,"indexExpression":{"hexValue":"31","id":3064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1151:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1138:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"baseExpression":{"id":3066,"name":"statsRare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"1176:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"id":3068,"indexExpression":{"id":3067,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"1186:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1176:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3070,"indexExpression":{"hexValue":"32","id":3069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1189:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1176:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3052,"name":"Person","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"1033:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Person_$2964_storage_ptr_$","typeString":"type(struct Characters.Person storage pointer)"}},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1033:177:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}],"expression":{"id":3049,"name":"rarePersons","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"998:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_storage_$dyn_storage","typeString":"struct Characters.Person storage ref[] storage ref"}},"id":3051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"998:16:15","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Person_$2964_storage_$dyn_storage_ptr_$_t_struct$_Person_$2964_storage_$returns$__$bound_to$_t_array$_t_struct$_Person_$2964_storage_$dyn_storage_ptr_$","typeString":"function (struct Characters.Person storage ref[] storage pointer,struct Characters.Person storage ref)"}},"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"998:227:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3073,"nodeType":"ExpressionStatement","src":"998:227:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3042,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"953:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3043,"name":"tokenUriRare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2986,"src":"957:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"957:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"953:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3075,"initializationExpression":{"assignments":[3039],"declarations":[{"constant":false,"id":3039,"mutability":"mutable","name":"i","nameLocation":"946:1:15","nodeType":"VariableDeclaration","scope":3075,"src":"938:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3038,"name":"uint256","nodeType":"ElementaryTypeName","src":"938:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3041,"initialValue":{"hexValue":"30","id":3040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"938:13:15"},"loopExpression":{"expression":{"id":3047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"978:3:15","subExpression":{"id":3046,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"978:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3048,"nodeType":"ExpressionStatement","src":"978:3:15"},"nodeType":"ForStatement","src":"933:304:15"},{"body":{"id":3112,"nodeType":"Block","src":"1302:279:15","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":3091,"name":"tokenUriLegendary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"1386:17:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":3093,"indexExpression":{"id":3092,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"1404:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1386:20:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"baseExpression":{"baseExpression":{"id":3094,"name":"statsLegendary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"1429:14:15","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"id":3096,"indexExpression":{"id":3095,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"1444:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1429:17:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3098,"indexExpression":{"hexValue":"30","id":3097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1447:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1429:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"baseExpression":{"id":3099,"name":"statsLegendary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"1472:14:15","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"id":3101,"indexExpression":{"id":3100,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"1487:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1472:17:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3103,"indexExpression":{"hexValue":"31","id":3102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1490:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1472:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"baseExpression":{"id":3104,"name":"statsLegendary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"1515:14:15","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[] memory[] memory"}},"id":3106,"indexExpression":{"id":3105,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"1530:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1515:17:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3108,"indexExpression":{"hexValue":"32","id":3107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1533:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1515:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3090,"name":"Person","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"1357:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Person_$2964_storage_ptr_$","typeString":"type(struct Characters.Person storage pointer)"}},"id":3109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1357:197:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}],"expression":{"id":3087,"name":"legendaryPersons","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"1317:16:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_storage_$dyn_storage","typeString":"struct Characters.Person storage ref[] storage ref"}},"id":3089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"1317:21:15","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Person_$2964_storage_$dyn_storage_ptr_$_t_struct$_Person_$2964_storage_$returns$__$bound_to$_t_array$_t_struct$_Person_$2964_storage_$dyn_storage_ptr_$","typeString":"function (struct Characters.Person storage ref[] storage pointer,struct Characters.Person storage ref)"}},"id":3110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1317:252:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3111,"nodeType":"ExpressionStatement","src":"1317:252:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3080,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"1267:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3081,"name":"tokenUriLegendary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"1271:17:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1271:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1267:28:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3113,"initializationExpression":{"assignments":[3077],"declarations":[{"constant":false,"id":3077,"mutability":"mutable","name":"i","nameLocation":"1260:1:15","nodeType":"VariableDeclaration","scope":3113,"src":"1252:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3076,"name":"uint256","nodeType":"ElementaryTypeName","src":"1252:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3079,"initialValue":{"hexValue":"30","id":3078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1264:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1252:13:15"},"loopExpression":{"expression":{"id":3085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1297:3:15","subExpression":{"id":3084,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"1297:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3086,"nodeType":"ExpressionStatement","src":"1297:3:15"},"nodeType":"ForStatement","src":"1247:334:15"}]},"id":3115,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2979,"mutability":"mutable","name":"tokenUriNormal","nameLocation":"367:14:15","nodeType":"VariableDeclaration","scope":3115,"src":"351:30:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2977,"name":"string","nodeType":"ElementaryTypeName","src":"351:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2978,"nodeType":"ArrayTypeName","src":"351:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":2983,"mutability":"mutable","name":"normalStats","nameLocation":"411:11:15","nodeType":"VariableDeclaration","scope":3115,"src":"392:30:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[][]"},"typeName":{"baseType":{"baseType":{"id":2980,"name":"uint256","nodeType":"ElementaryTypeName","src":"392:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2981,"nodeType":"ArrayTypeName","src":"392:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"id":2982,"nodeType":"ArrayTypeName","src":"392:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr","typeString":"uint256[][]"}},"visibility":"internal"},{"constant":false,"id":2986,"mutability":"mutable","name":"tokenUriRare","nameLocation":"449:12:15","nodeType":"VariableDeclaration","scope":3115,"src":"433:28:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2984,"name":"string","nodeType":"ElementaryTypeName","src":"433:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2985,"nodeType":"ArrayTypeName","src":"433:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":2990,"mutability":"mutable","name":"statsRare","nameLocation":"491:9:15","nodeType":"VariableDeclaration","scope":3115,"src":"472:28:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[][]"},"typeName":{"baseType":{"baseType":{"id":2987,"name":"uint256","nodeType":"ElementaryTypeName","src":"472:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2988,"nodeType":"ArrayTypeName","src":"472:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"id":2989,"nodeType":"ArrayTypeName","src":"472:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr","typeString":"uint256[][]"}},"visibility":"internal"},{"constant":false,"id":2993,"mutability":"mutable","name":"tokenUriLegendary","nameLocation":"527:17:15","nodeType":"VariableDeclaration","scope":3115,"src":"511:33:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2991,"name":"string","nodeType":"ElementaryTypeName","src":"511:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2992,"nodeType":"ArrayTypeName","src":"511:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":2997,"mutability":"mutable","name":"statsLegendary","nameLocation":"574:14:15","nodeType":"VariableDeclaration","scope":3115,"src":"555:33:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","typeString":"uint256[][]"},"typeName":{"baseType":{"baseType":{"id":2994,"name":"uint256","nodeType":"ElementaryTypeName","src":"555:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2995,"nodeType":"ArrayTypeName","src":"555:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"id":2996,"nodeType":"ArrayTypeName","src":"555:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr","typeString":"uint256[][]"}},"visibility":"internal"}],"src":"340:255:15"},"returnParameters":{"id":2999,"nodeType":"ParameterList","parameters":[],"src":"596:0:15"},"scope":3143,"src":"329:1259:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3123,"nodeType":"Block","src":"1657:46:15","statements":[{"expression":{"expression":{"id":3120,"name":"normalPersons","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"1675:13:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_storage_$dyn_storage","typeString":"struct Characters.Person storage ref[] storage ref"}},"id":3121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1675:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3119,"id":3122,"nodeType":"Return","src":"1668:27:15"}]},"functionSelector":"65c889db","id":3124,"implemented":true,"kind":"function","modifiers":[],"name":"normalPersonsLength","nameLocation":"1605:19:15","nodeType":"FunctionDefinition","parameters":{"id":3116,"nodeType":"ParameterList","parameters":[],"src":"1624:2:15"},"returnParameters":{"id":3119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3118,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3124,"src":"1648:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3117,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:9:15"},"scope":3143,"src":"1596:107:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3132,"nodeType":"Block","src":"1770:44:15","statements":[{"expression":{"expression":{"id":3129,"name":"rarePersons","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"1788:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_storage_$dyn_storage","typeString":"struct Characters.Person storage ref[] storage ref"}},"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1788:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3128,"id":3131,"nodeType":"Return","src":"1781:25:15"}]},"functionSelector":"0a83de16","id":3133,"implemented":true,"kind":"function","modifiers":[],"name":"rarePersonsLength","nameLocation":"1720:17:15","nodeType":"FunctionDefinition","parameters":{"id":3125,"nodeType":"ParameterList","parameters":[],"src":"1737:2:15"},"returnParameters":{"id":3128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3133,"src":"1761:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3126,"name":"uint256","nodeType":"ElementaryTypeName","src":"1761:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1760:9:15"},"scope":3143,"src":"1711:103:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3141,"nodeType":"Block","src":"1886:49:15","statements":[{"expression":{"expression":{"id":3138,"name":"legendaryPersons","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"1904:16:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_storage_$dyn_storage","typeString":"struct Characters.Person storage ref[] storage ref"}},"id":3139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1904:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3137,"id":3140,"nodeType":"Return","src":"1897:30:15"}]},"functionSelector":"71be7002","id":3142,"implemented":true,"kind":"function","modifiers":[],"name":"legendaryPersonsLength","nameLocation":"1831:22:15","nodeType":"FunctionDefinition","parameters":{"id":3134,"nodeType":"ParameterList","parameters":[],"src":"1853:2:15"},"returnParameters":{"id":3137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3136,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3142,"src":"1877:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3135,"name":"uint256","nodeType":"ElementaryTypeName","src":"1877:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1876:9:15"},"scope":3143,"src":"1822:113:15","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":3144,"src":"60:1878:15","usedErrors":[]}],"src":"33:1907:15"},"id":15},"contracts/GameCard.sol":{"ast":{"absolutePath":"contracts/GameCard.sol","exportedSymbols":{"Address":[1855],"AggregatorV3Interface":[103],"Characters":[3143],"Context":[1877],"ERC165":[2076],"ERC721":[1239],"ERC721URIStorage":[1498],"GameCard":[4625],"GameCard__AlreadyOpponentFound":[3159],"GameCard__NotOpponent":[3157],"GameCard__NotOwner":[3151],"GameCard__PlayerNotAllowed":[3155],"GameCard__PlayerNotFound":[3153],"IERC165":[2088],"IERC721":[1355],"IERC721Metadata":[1525],"IERC721Receiver":[1373],"Math":[2953],"NftBox":[5533],"NftBox__AlreadyOpened":[4641],"NftBox__NeedMoreETHSent":[4635],"NftBox__NotNftAddressCalling":[4645],"NftBox__NotOwner":[4637],"NftBox__TokenIdNotExist":[4639],"NftBox__TransferFailed":[4643],"Ownable":[312],"Strings":[2052],"VRFConsumerBaseV2":[57],"VRFCoordinatorV2Interface":[199]},"id":4626,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3145,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"33:23:16"},{"absolutePath":"contracts/NftBox.sol","file":"./NftBox.sol","id":3146,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4626,"sourceUnit":5534,"src":"58:22:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/Characters.sol","file":"./Characters.sol","id":3147,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4626,"sourceUnit":3144,"src":"82:26:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol","file":"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol","id":3148,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4626,"sourceUnit":58,"src":"110:61:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","id":3149,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4626,"sourceUnit":200,"src":"173:80:16","symbolAliases":[],"unitAlias":""},{"id":3151,"name":"GameCard__NotOwner","nameLocation":"261:18:16","nodeType":"ErrorDefinition","parameters":{"id":3150,"nodeType":"ParameterList","parameters":[],"src":"279:2:16"},"src":"255:27:16"},{"id":3153,"name":"GameCard__PlayerNotFound","nameLocation":"290:24:16","nodeType":"ErrorDefinition","parameters":{"id":3152,"nodeType":"ParameterList","parameters":[],"src":"314:2:16"},"src":"284:33:16"},{"id":3155,"name":"GameCard__PlayerNotAllowed","nameLocation":"325:26:16","nodeType":"ErrorDefinition","parameters":{"id":3154,"nodeType":"ParameterList","parameters":[],"src":"351:2:16"},"src":"319:35:16"},{"id":3157,"name":"GameCard__NotOpponent","nameLocation":"362:21:16","nodeType":"ErrorDefinition","parameters":{"id":3156,"nodeType":"ParameterList","parameters":[],"src":"383:2:16"},"src":"356:30:16"},{"id":3159,"name":"GameCard__AlreadyOpponentFound","nameLocation":"394:30:16","nodeType":"ErrorDefinition","parameters":{"id":3158,"nodeType":"ParameterList","parameters":[],"src":"424:2:16"},"src":"388:39:16"},{"abstract":false,"baseContracts":[{"baseName":{"id":3160,"name":"VRFConsumerBaseV2","nodeType":"IdentifierPath","referencedDeclaration":57,"src":"452:17:16"},"id":3161,"nodeType":"InheritanceSpecifier","src":"452:17:16"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4625,"linearizedBaseContracts":[4625,57],"name":"GameCard","nameLocation":"440:8:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"GameCard.PlayerStatus","id":3166,"members":[{"id":3162,"name":"SEARCHING","nameLocation":"506:9:16","nodeType":"EnumValue","src":"506:9:16"},{"id":3163,"name":"FOUND","nameLocation":"526:5:16","nodeType":"EnumValue","src":"526:5:16"},{"id":3164,"name":"PLAYING","nameLocation":"542:7:16","nodeType":"EnumValue","src":"542:7:16"},{"id":3165,"name":"OVER","nameLocation":"560:4:16","nodeType":"EnumValue","src":"560:4:16"}],"name":"PlayerStatus","nameLocation":"482:12:16","nodeType":"EnumDefinition","src":"477:94:16"},{"canonicalName":"GameCard.Player","id":3180,"members":[{"constant":false,"id":3168,"mutability":"mutable","name":"game","nameLocation":"610:4:16","nodeType":"VariableDeclaration","scope":3180,"src":"602:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3167,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3170,"mutability":"mutable","name":"player","nameLocation":"633:6:16","nodeType":"VariableDeclaration","scope":3180,"src":"625:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3169,"name":"address","nodeType":"ElementaryTypeName","src":"625:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3174,"mutability":"mutable","name":"tokenIdArray","nameLocation":"661:12:16","nodeType":"VariableDeclaration","scope":3180,"src":"650:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage_ptr","typeString":"uint256[3]"},"typeName":{"baseType":{"id":3171,"name":"uint256","nodeType":"ElementaryTypeName","src":"650:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3173,"length":{"hexValue":"33","id":3172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"658:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"650:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage_ptr","typeString":"uint256[3]"}},"visibility":"internal"},{"constant":false,"id":3176,"mutability":"mutable","name":"opponent","nameLocation":"692:8:16","nodeType":"VariableDeclaration","scope":3180,"src":"684:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3175,"name":"address","nodeType":"ElementaryTypeName","src":"684:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3179,"mutability":"mutable","name":"status","nameLocation":"724:6:16","nodeType":"VariableDeclaration","scope":3180,"src":"711:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PlayerStatus_$3166","typeString":"enum GameCard.PlayerStatus"},"typeName":{"id":3178,"nodeType":"UserDefinedTypeName","pathNode":{"id":3177,"name":"PlayerStatus","nodeType":"IdentifierPath","referencedDeclaration":3166,"src":"711:12:16"},"referencedDeclaration":3166,"src":"711:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_PlayerStatus_$3166","typeString":"enum GameCard.PlayerStatus"}},"visibility":"internal"}],"name":"Player","nameLocation":"584:6:16","nodeType":"StructDefinition","scope":4625,"src":"577:161:16","visibility":"public"},{"canonicalName":"GameCard.Game","id":3187,"members":[{"constant":false,"id":3182,"mutability":"mutable","name":"winner","nameLocation":"775:6:16","nodeType":"VariableDeclaration","scope":3187,"src":"767:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3181,"name":"address","nodeType":"ElementaryTypeName","src":"767:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3184,"mutability":"mutable","name":"loser","nameLocation":"800:5:16","nodeType":"VariableDeclaration","scope":3187,"src":"792:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3183,"name":"address","nodeType":"ElementaryTypeName","src":"792:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3186,"mutability":"mutable","name":"draw","nameLocation":"821:4:16","nodeType":"VariableDeclaration","scope":3187,"src":"816:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3185,"name":"bool","nodeType":"ElementaryTypeName","src":"816:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Game","nameLocation":"751:4:16","nodeType":"StructDefinition","scope":4625,"src":"744:89:16","visibility":"public"},{"anonymous":false,"id":3193,"name":"MatchFound","nameLocation":"845:10:16","nodeType":"EventDefinition","parameters":{"id":3192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3189,"indexed":false,"mutability":"mutable","name":"player1","nameLocation":"864:7:16","nodeType":"VariableDeclaration","scope":3193,"src":"856:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3188,"name":"address","nodeType":"ElementaryTypeName","src":"856:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3191,"indexed":false,"mutability":"mutable","name":"player2","nameLocation":"881:7:16","nodeType":"VariableDeclaration","scope":3193,"src":"873:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3190,"name":"address","nodeType":"ElementaryTypeName","src":"873:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"855:34:16"},"src":"839:51:16"},{"anonymous":false,"id":3201,"name":"Match","nameLocation":"902:5:16","nodeType":"EventDefinition","parameters":{"id":3200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3195,"indexed":false,"mutability":"mutable","name":"winner","nameLocation":"916:6:16","nodeType":"VariableDeclaration","scope":3201,"src":"908:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3194,"name":"address","nodeType":"ElementaryTypeName","src":"908:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3197,"indexed":false,"mutability":"mutable","name":"looser","nameLocation":"932:6:16","nodeType":"VariableDeclaration","scope":3201,"src":"924:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3196,"name":"address","nodeType":"ElementaryTypeName","src":"924:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3199,"indexed":false,"mutability":"mutable","name":"draw","nameLocation":"945:4:16","nodeType":"VariableDeclaration","scope":3201,"src":"940:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3198,"name":"bool","nodeType":"ElementaryTypeName","src":"940:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"907:43:16"},"src":"896:55:16"},{"anonymous":false,"id":3214,"name":"AddedToList","nameLocation":"963:11:16","nodeType":"EventDefinition","parameters":{"id":3213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3203,"indexed":false,"mutability":"mutable","name":"caller","nameLocation":"993:6:16","nodeType":"VariableDeclaration","scope":3214,"src":"985:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3202,"name":"address","nodeType":"ElementaryTypeName","src":"985:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3207,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"1021:7:16","nodeType":"VariableDeclaration","scope":3214,"src":"1010:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3]"},"typeName":{"baseType":{"id":3204,"name":"uint256","nodeType":"ElementaryTypeName","src":"1010:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3206,"length":{"hexValue":"33","id":3205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1018:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"1010:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage_ptr","typeString":"uint256[3]"}},"visibility":"internal"},{"constant":false,"id":3209,"indexed":false,"mutability":"mutable","name":"opponent","nameLocation":"1047:8:16","nodeType":"VariableDeclaration","scope":3214,"src":"1039:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3208,"name":"address","nodeType":"ElementaryTypeName","src":"1039:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3212,"indexed":false,"mutability":"mutable","name":"status","nameLocation":"1079:6:16","nodeType":"VariableDeclaration","scope":3214,"src":"1066:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PlayerStatus_$3166","typeString":"enum GameCard.PlayerStatus"},"typeName":{"id":3211,"nodeType":"UserDefinedTypeName","pathNode":{"id":3210,"name":"PlayerStatus","nodeType":"IdentifierPath","referencedDeclaration":3166,"src":"1066:12:16"},"referencedDeclaration":3166,"src":"1066:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_PlayerStatus_$3166","typeString":"enum GameCard.PlayerStatus"}},"visibility":"internal"}],"src":"974:118:16"},"src":"957:136:16"},{"anonymous":false,"id":3222,"name":"MatchBeginsSoon","nameLocation":"1105:15:16","nodeType":"EventDefinition","parameters":{"id":3221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3216,"indexed":false,"mutability":"mutable","name":"player1","nameLocation":"1129:7:16","nodeType":"VariableDeclaration","scope":3222,"src":"1121:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3215,"name":"address","nodeType":"ElementaryTypeName","src":"1121:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3218,"indexed":false,"mutability":"mutable","name":"player2","nameLocation":"1146:7:16","nodeType":"VariableDeclaration","scope":3222,"src":"1138:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3217,"name":"address","nodeType":"ElementaryTypeName","src":"1138:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3220,"indexed":false,"mutability":"mutable","name":"requestId","nameLocation":"1163:9:16","nodeType":"VariableDeclaration","scope":3222,"src":"1155:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3219,"name":"uint256","nodeType":"ElementaryTypeName","src":"1155:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1120:53:16"},"src":"1099:75:16"},{"constant":false,"id":3225,"mutability":"immutable","name":"i_vrfCoordinator","nameLocation":"1224:16:16","nodeType":"VariableDeclaration","scope":4625,"src":"1180:60:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$199","typeString":"contract VRFCoordinatorV2Interface"},"typeName":{"id":3224,"nodeType":"UserDefinedTypeName","pathNode":{"id":3223,"name":"VRFCoordinatorV2Interface","nodeType":"IdentifierPath","referencedDeclaration":199,"src":"1180:25:16"},"referencedDeclaration":199,"src":"1180:25:16","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$199","typeString":"contract VRFCoordinatorV2Interface"}},"visibility":"private"},{"constant":false,"id":3227,"mutability":"immutable","name":"i_subscriptionId","nameLocation":"1272:16:16","nodeType":"VariableDeclaration","scope":4625,"src":"1247:41:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3226,"name":"uint64","nodeType":"ElementaryTypeName","src":"1247:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"private"},{"constant":false,"id":3229,"mutability":"immutable","name":"i_gasLane","nameLocation":"1321:9:16","nodeType":"VariableDeclaration","scope":4625,"src":"1295:35:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3228,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1295:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3231,"mutability":"immutable","name":"i_callbackGasLimit","nameLocation":"1362:18:16","nodeType":"VariableDeclaration","scope":4625,"src":"1337:43:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3230,"name":"uint32","nodeType":"ElementaryTypeName","src":"1337:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"private"},{"constant":true,"id":3234,"mutability":"constant","name":"REQUEST_CONFIRMATIONS","nameLocation":"1411:21:16","nodeType":"VariableDeclaration","scope":4625,"src":"1387:49:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3232,"name":"uint16","nodeType":"ElementaryTypeName","src":"1387:6:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"33","id":3233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1435:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"private"},{"constant":true,"id":3237,"mutability":"constant","name":"NUM_WORDS","nameLocation":"1467:9:16","nodeType":"VariableDeclaration","scope":4625,"src":"1443:37:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3235,"name":"uint32","nodeType":"ElementaryTypeName","src":"1443:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"33","id":3236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1479:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"private"},{"constant":false,"functionSelector":"533d7653","id":3242,"mutability":"mutable","name":"s_addressInfo","nameLocation":"1521:13:16","nodeType":"VariableDeclaration","scope":4625,"src":"1487:47:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$3180_storage_$","typeString":"mapping(address => struct GameCard.Player)"},"typeName":{"id":3241,"keyType":{"id":3238,"name":"address","nodeType":"ElementaryTypeName","src":"1495:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1487:26:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$3180_storage_$","typeString":"mapping(address => struct GameCard.Player)"},"valueType":{"id":3240,"nodeType":"UserDefinedTypeName","pathNode":{"id":3239,"name":"Player","nodeType":"IdentifierPath","referencedDeclaration":3180,"src":"1506:6:16"},"referencedDeclaration":3180,"src":"1506:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_storage_ptr","typeString":"struct GameCard.Player"}}},"visibility":"public"},{"constant":false,"functionSelector":"e783c827","id":3248,"mutability":"mutable","name":"s_requestIdToPlayers","nameLocation":"1579:20:16","nodeType":"VariableDeclaration","scope":4625,"src":"1541:58:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$2_storage_$","typeString":"mapping(uint256 => address[2])"},"typeName":{"id":3247,"keyType":{"id":3243,"name":"uint256","nodeType":"ElementaryTypeName","src":"1549:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1541:30:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$2_storage_$","typeString":"mapping(uint256 => address[2])"},"valueType":{"baseType":{"id":3244,"name":"address","nodeType":"ElementaryTypeName","src":"1560:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3246,"length":{"hexValue":"32","id":3245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1568:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"1560:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_storage_ptr","typeString":"address[2]"}}},"visibility":"public"},{"constant":false,"functionSelector":"703afc87","id":3251,"mutability":"mutable","name":"currentPlayers","nameLocation":"1623:14:16","nodeType":"VariableDeclaration","scope":4625,"src":"1606:31:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":3249,"name":"address","nodeType":"ElementaryTypeName","src":"1606:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3250,"nodeType":"ArrayTypeName","src":"1606:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"constant":false,"functionSelector":"2c0d5558","id":3254,"mutability":"mutable","name":"i_contractNftBox","nameLocation":"1658:16:16","nodeType":"VariableDeclaration","scope":4625,"src":"1644:30:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_NftBox_$5533","typeString":"contract NftBox"},"typeName":{"id":3253,"nodeType":"UserDefinedTypeName","pathNode":{"id":3252,"name":"NftBox","nodeType":"IdentifierPath","referencedDeclaration":5533,"src":"1644:6:16"},"referencedDeclaration":5533,"src":"1644:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_NftBox_$5533","typeString":"contract NftBox"}},"visibility":"public"},{"constant":false,"id":3256,"mutability":"immutable","name":"i_nftAddress","nameLocation":"1707:12:16","nodeType":"VariableDeclaration","scope":4625,"src":"1681:38:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3255,"name":"address","nodeType":"ElementaryTypeName","src":"1681:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":3258,"mutability":"immutable","name":"i_characterAddress","nameLocation":"1752:18:16","nodeType":"VariableDeclaration","scope":4625,"src":"1726:44:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3257,"name":"address","nodeType":"ElementaryTypeName","src":"1726:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"functionSelector":"2a3031a2","id":3261,"mutability":"mutable","name":"i_contractCharacter","nameLocation":"1797:19:16","nodeType":"VariableDeclaration","scope":4625,"src":"1779:37:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Characters_$3143","typeString":"contract Characters"},"typeName":{"id":3260,"nodeType":"UserDefinedTypeName","pathNode":{"id":3259,"name":"Characters","nodeType":"IdentifierPath","referencedDeclaration":3143,"src":"1779:10:16"},"referencedDeclaration":3143,"src":"1779:10:16","typeDescriptions":{"typeIdentifier":"t_contract$_Characters_$3143","typeString":"contract Characters"}},"visibility":"public"},{"constant":false,"functionSelector":"123cb832","id":3263,"mutability":"mutable","name":"s_gameCounter","nameLocation":"1838:13:16","nodeType":"VariableDeclaration","scope":4625,"src":"1823:28:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3262,"name":"uint256","nodeType":"ElementaryTypeName","src":"1823:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"eabfb839","id":3268,"mutability":"mutable","name":"finshedGames","nameLocation":"1890:12:16","nodeType":"VariableDeclaration","scope":4625,"src":"1858:44:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$3187_storage_$","typeString":"mapping(uint256 => struct GameCard.Game)"},"typeName":{"id":3267,"keyType":{"id":3264,"name":"uint256","nodeType":"ElementaryTypeName","src":"1866:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1858:24:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$3187_storage_$","typeString":"mapping(uint256 => struct GameCard.Game)"},"valueType":{"id":3266,"nodeType":"UserDefinedTypeName","pathNode":{"id":3265,"name":"Game","nodeType":"IdentifierPath","referencedDeclaration":3187,"src":"1877:4:16"},"referencedDeclaration":3187,"src":"1877:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3187_storage_ptr","typeString":"struct GameCard.Game"}}},"visibility":"public"},{"body":{"id":3333,"nodeType":"Block","src":"1965:709:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3274,"name":"s_addressInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"1994:13:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$3180_storage_$","typeString":"mapping(address => struct GameCard.Player storage ref)"}},"id":3276,"indexExpression":{"id":3275,"name":"player1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"2008:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1994:22:16","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_storage","typeString":"struct GameCard.Player storage ref"}},"id":3277,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"player","nodeType":"MemberAccess","referencedDeclaration":3170,"src":"1994:29:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3278,"name":"player1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"2027:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1994:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3280,"name":"s_addressInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"2051:13:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$3180_storage_$","typeString":"mapping(address => struct GameCard.Player storage ref)"}},"id":3282,"indexExpression":{"id":3281,"name":"player2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"2065:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2051:22:16","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_storage","typeString":"struct GameCard.Player storage ref"}},"id":3283,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"player","nodeType":"MemberAccess","referencedDeclaration":3170,"src":"2051:29:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3284,"name":"player2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"2084:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2051:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1994:97:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3291,"nodeType":"IfStatement","src":"1976:187:16","trueBody":{"id":3290,"nodeType":"Block","src":"2103:60:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3287,"name":"GameCard__PlayerNotFound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"2125:24:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2125:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3289,"nodeType":"RevertStatement","src":"2118:33:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_enum$_PlayerStatus_$3166","typeString":"enum GameCard.PlayerStatus"},"id":3298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3292,"name":"s_addressInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"2192:13:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$3180_storage_$","typeString":"mapping(address => struct GameCard.Player storage ref)"}},"id":3294,"indexExpression":{"id":3293,"name":"player1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"2206:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2192:22:16","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_storage","typeString":"struct GameCard.Player storage ref"}},"id":3295,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3179,"src":"2192:29:16","typeDescriptions":{"typeIdentifier":"t_enum$_PlayerStatus_$3166","typeString":"enum GameCard.PlayerStatus"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":3296,"name":"PlayerStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"2225:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PlayerStatus_$3166_$","typeString":"type(enum GameCard.PlayerStatus)"}},"id":3297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"FOUND","nodeType":"MemberAccess","referencedDeclaration":3163,"src":"2225:18:16","typeDescriptions":{"typeIdentifier":"t_enum$_PlayerStatus_$3166","typeString":"enum GameCard.PlayerStatus"}},"src":"2192:51:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3299,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2191:53:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_enum$_PlayerStatus_$3166","typeString":"enum GameCard.PlayerStatus"},"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3300,"name":"s_addressInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"2262:13:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$3180_storage_$","typeString":"mapping(address => struct GameCard.Player storage ref)"}},"id":3302,"indexExpression":{"id":3301,"name":"player2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"2276:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2262:22:16","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_storage","typeString":"struct GameCard.Player storage ref"}},"id":3303,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3179,"src":"2262:29:16","typeDescriptions":{"typeIdentifier":"t_enum$_PlayerStatus_$3166","typeString":"enum GameCard.PlayerStatus"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":3304,"name":"PlayerStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"2295:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PlayerStatus_$3166_$","typeString":"type(enum GameCard.PlayerStatus)"}},"id":3305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"FOUND","nodeType":"MemberAccess","referencedDeclaration":3163,"src":"2295:18:16","typeDescriptions":{"typeIdentifier":"t_enum$_PlayerStatus_$3166","typeString":"enum GameCard.PlayerStatus"}},"src":"2262:51:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3307,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2261:53:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2191:123:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3313,"nodeType":"IfStatement","src":"2173:215:16","trueBody":{"id":3312,"nodeType":"Block","src":"2326:62:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3309,"name":"GameCard__PlayerNotAllowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3155,"src":"2348:26:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2348:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3311,"nodeType":"RevertStatement","src":"2341:35:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3314,"name":"s_addressInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"2416:13:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$3180_storage_$","typeString":"mapping(address => struct GameCard.Player storage ref)"}},"id":3316,"indexExpression":{"id":3315,"name":"player1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"2430:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2416:22:16","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_storage","typeString":"struct GameCard.Player storage ref"}},"id":3317,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"opponent","nodeType":"MemberAccess","referencedDeclaration":3176,"src":"2416:31:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3318,"name":"player2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"2451:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2416:42:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3320,"name":"s_addressInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"2475:13:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$3180_storage_$","typeString":"mapping(address => struct GameCard.Player storage ref)"}},"id":3322,"indexExpression":{"id":3321,"name":"player2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"2489:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2475:22:16","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_storage","typeString":"struct GameCard.Player storage ref"}},"id":3323,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"opponent","nodeType":"MemberAccess","referencedDeclaration":3176,"src":"2475:31:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3324,"name":"player1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"2510:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2475:42:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2416:101:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3331,"nodeType":"IfStatement","src":"2398:188:16","trueBody":{"id":3330,"nodeType":"Block","src":"2529:57:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3327,"name":"GameCard__NotOpponent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"2551:21:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2551:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3329,"nodeType":"RevertStatement","src":"2544:30:16"}]}},{"id":3332,"nodeType":"PlaceholderStatement","src":"2596:1:16"}]},"id":3334,"name":"checkPlayers","nameLocation":"1918:12:16","nodeType":"ModifierDefinition","parameters":{"id":3273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3270,"mutability":"mutable","name":"player1","nameLocation":"1939:7:16","nodeType":"VariableDeclaration","scope":3334,"src":"1931:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3269,"name":"address","nodeType":"ElementaryTypeName","src":"1931:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3272,"mutability":"mutable","name":"player2","nameLocation":"1956:7:16","nodeType":"VariableDeclaration","scope":3334,"src":"1948:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3271,"name":"address","nodeType":"ElementaryTypeName","src":"1948:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1930:34:16"},"src":"1909:765:16","virtual":false,"visibility":"internal"},{"body":{"id":3394,"nodeType":"Block","src":"2931:430:16","statements":[{"expression":{"id":3356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3352,"name":"i_contractNftBox","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"2942:16:16","typeDescriptions":{"typeIdentifier":"t_contract$_NftBox_$5533","typeString":"contract NftBox"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3354,"name":"nftBoxAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3336,"src":"2968:13:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3353,"name":"NftBox","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5533,"src":"2961:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_NftBox_$5533_$","typeString":"type(contract NftBox)"}},"id":3355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2961:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_NftBox_$5533","typeString":"contract NftBox"}},"src":"2942:40:16","typeDescriptions":{"typeIdentifier":"t_contract$_NftBox_$5533","typeString":"contract NftBox"}},"id":3357,"nodeType":"ExpressionStatement","src":"2942:40:16"},{"expression":{"id":3360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3358,"name":"i_nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3256,"src":"2993:12:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3359,"name":"nftBoxAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3336,"src":"3008:13:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2993:28:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3361,"nodeType":"ExpressionStatement","src":"2993:28:16"},{"expression":{"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3362,"name":"i_characterAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3258,"src":"3032:18:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3363,"name":"characterAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3338,"src":"3053:16:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3032:37:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3365,"nodeType":"ExpressionStatement","src":"3032:37:16"},{"expression":{"id":3370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3366,"name":"i_contractCharacter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"3080:19:16","typeDescriptions":{"typeIdentifier":"t_contract$_Characters_$3143","typeString":"contract Characters"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3368,"name":"characterAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3338,"src":"3113:16:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3367,"name":"Characters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"3102:10:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Characters_$3143_$","typeString":"type(contract Characters)"}},"id":3369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3102:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Characters_$3143","typeString":"contract Characters"}},"src":"3080:50:16","typeDescriptions":{"typeIdentifier":"t_contract$_Characters_$3143","typeString":"contract Characters"}},"id":3371,"nodeType":"ExpressionStatement","src":"3080:50:16"},{"expression":{"id":3376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3372,"name":"i_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"3141:16:16","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$199","typeString":"contract VRFCoordinatorV2Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3374,"name":"vrfCoordinatorV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3340,"src":"3186:16:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3373,"name":"VRFCoordinatorV2Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"3160:25:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFCoordinatorV2Interface_$199_$","typeString":"type(contract VRFCoordinatorV2Interface)"}},"id":3375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3160:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$199","typeString":"contract VRFCoordinatorV2Interface"}},"src":"3141:62:16","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$199","typeString":"contract VRFCoordinatorV2Interface"}},"id":3377,"nodeType":"ExpressionStatement","src":"3141:62:16"},{"expression":{"id":3380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3378,"name":"i_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"3214:16:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3379,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3342,"src":"3233:14:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"3214:33:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":3381,"nodeType":"ExpressionStatement","src":"3214:33:16"},{"expression":{"id":3384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3382,"name":"i_gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3229,"src":"3258:9:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3383,"name":"gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"3270:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3258:19:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3385,"nodeType":"ExpressionStatement","src":"3258:19:16"},{"expression":{"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3386,"name":"i_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"3288:18:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3387,"name":"callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"3309:16:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"3288:37:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":3389,"nodeType":"ExpressionStatement","src":"3288:37:16"},{"expression":{"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3390,"name":"s_gameCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3263,"src":"3336:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3352:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3336:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3393,"nodeType":"ExpressionStatement","src":"3336:17:16"}]},"id":3395,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":3349,"name":"vrfCoordinatorV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3340,"src":"2913:16:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3350,"kind":"baseConstructorSpecifier","modifierName":{"id":3348,"name":"VRFConsumerBaseV2","nodeType":"IdentifierPath","referencedDeclaration":57,"src":"2895:17:16"},"nodeType":"ModifierInvocation","src":"2895:35:16"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3336,"mutability":"mutable","name":"nftBoxAddress","nameLocation":"2712:13:16","nodeType":"VariableDeclaration","scope":3395,"src":"2704:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3335,"name":"address","nodeType":"ElementaryTypeName","src":"2704:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3338,"mutability":"mutable","name":"characterAddress","nameLocation":"2744:16:16","nodeType":"VariableDeclaration","scope":3395,"src":"2736:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3337,"name":"address","nodeType":"ElementaryTypeName","src":"2736:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3340,"mutability":"mutable","name":"vrfCoordinatorV2","nameLocation":"2779:16:16","nodeType":"VariableDeclaration","scope":3395,"src":"2771:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3339,"name":"address","nodeType":"ElementaryTypeName","src":"2771:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3342,"mutability":"mutable","name":"subscriptionId","nameLocation":"2813:14:16","nodeType":"VariableDeclaration","scope":3395,"src":"2806:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3341,"name":"uint64","nodeType":"ElementaryTypeName","src":"2806:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3344,"mutability":"mutable","name":"gasLane","nameLocation":"2846:7:16","nodeType":"VariableDeclaration","scope":3395,"src":"2838:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3343,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2838:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3346,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"2871:16:16","nodeType":"VariableDeclaration","scope":3395,"src":"2864:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3345,"name":"uint32","nodeType":"ElementaryTypeName","src":"2864:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2693:201:16"},"returnParameters":{"id":3351,"nodeType":"ParameterList","parameters":[],"src":"2931:0:16"},"scope":4625,"src":"2682:679:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3669,"nodeType":"Block","src":"3483:2769:16","statements":[{"assignments":[3406],"declarations":[{"constant":false,"id":3406,"mutability":"mutable","name":"nft","nameLocation":"3502:3:16","nodeType":"VariableDeclaration","scope":3669,"src":"3494:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$1355","typeString":"contract IERC721"},"typeName":{"id":3405,"nodeType":"UserDefinedTypeName","pathNode":{"id":3404,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":1355,"src":"3494:7:16"},"referencedDeclaration":1355,"src":"3494:7:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$1355","typeString":"contract IERC721"}},"visibility":"internal"}],"id":3410,"initialValue":{"arguments":[{"id":3408,"name":"i_nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3256,"src":"3516:12:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3407,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"3508:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1355_$","typeString":"type(contract IERC721)"}},"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3508:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$1355","typeString":"contract IERC721"}},"nodeType":"VariableDeclarationStatement","src":"3494:35:16"},{"assignments":[null,null,3412,null],"declarations":[null,null,{"constant":false,"id":3412,"mutability":"mutable","name":"opened1","nameLocation":"3550:7:16","nodeType":"VariableDeclaration","scope":3669,"src":"3545:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3411,"name":"bool","nodeType":"ElementaryTypeName","src":"3545:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3417,"initialValue":{"arguments":[{"id":3415,"name":"tokenId1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"3592:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3413,"name":"i_contractNftBox","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"3563:16:16","typeDescriptions":{"typeIdentifier":"t_contract$_NftBox_$5533","typeString":"contract NftBox"}},"id":3414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mappingNfts","nodeType":"MemberAccess","referencedDeclaration":4702,"src":"3563:28:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$_t_string_memory_ptr_$_t_bool_$_t_uint256_$","typeString":"function (uint256) view external returns (uint256,string memory,bool,uint256)"}},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3563:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_string_memory_ptr_$_t_bool_$_t_uint256_$","typeString":"tuple(uint256,string memory,bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3540:61:16"},{"assignments":[null,null,3419,null],"declarations":[null,null,{"constant":false,"id":3419,"mutability":"mutable","name":"opened2","nameLocation":"3622:7:16","nodeType":"VariableDeclaration","scope":3669,"src":"3617:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3418,"name":"bool","nodeType":"ElementaryTypeName","src":"3617:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3424,"initialValue":{"arguments":[{"id":3422,"name":"tokenId2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"3664:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3420,"name":"i_contractNftBox","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"3635:16:16","typeDescriptions":{"typeIdentifier":"t_contract$_NftBox_$5533","typeString":"contract NftBox"}},"id":3421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mappingNfts","nodeType":"MemberAccess","referencedDeclaration":4702,"src":"3635:28:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$_t_string_memory_ptr_$_t_bool_$_t_uint256_$","typeString":"function (uint256) view external returns (uint256,string memory,bool,uint256)"}},"id":3423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3635:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_string_memory_ptr_$_t_bool_$_t_uint256_$","typeString":"tuple(uint256,string memory,bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3612:61:16"},{"assignments":[null,null,3426,null],"declarations":[null,null,{"constant":false,"id":3426,"mutability":"mutable","name":"opened3","nameLocation":"3694:7:16","nodeType":"VariableDeclaration","scope":3669,"src":"3689:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3425,"name":"bool","nodeType":"ElementaryTypeName","src":"3689:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3431,"initialValue":{"arguments":[{"id":3429,"name":"tokenId3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3401,"src":"3736:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3427,"name":"i_contractNftBox","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"3707:16:16","typeDescriptions":{"typeIdentifier":"t_contract$_NftBox_$5533","typeString":"contract NftBox"}},"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mappingNfts","nodeType":"MemberAccess","referencedDeclaration":4702,"src":"3707:28:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$_t_string_memory_ptr_$_t_bool_$_t_uint256_$","typeString":"function (uint256) view external returns (uint256,string memory,bool,uint256)"}},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3707:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_string_memory_ptr_$_t_bool_$_t_uint256_$","typeString":"tuple(uint256,string memory,bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3684:61:16"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3434,"name":"tokenId1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"3786:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3432,"name":"nft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"3774:3:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$1355","typeString":"contract IERC721"}},"id":3433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1288,"src":"3774:11:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":3435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3774:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":3436,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3799:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3799:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3774:35:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":3440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3826:8:16","subExpression":{"id":3439,"name":"opened1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"3827:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3774:60:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3442,"name":"tokenId1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"3851:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3443,"name":"tokenId2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"3863:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3851:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3774:97:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3446,"name":"tokenId2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"3888:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3447,"name":"tokenId3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3401,"src":"3900:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3888:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3774:134:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3450,"name":"tokenId3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3401,"src":"3925:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3451,"name":"tokenId1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"3937:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3925:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3774:171:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3458,"nodeType":"IfStatement","src":"3756:255:16","trueBody":{"id":3457,"nodeType":"Block","src":"3957:54:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3454,"name":"GameCard__NotOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3151,"src":"3979:18:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3979:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3456,"nodeType":"RevertStatement","src":"3972:27:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3461,"name":"tokenId2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"4039:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3459,"name":"nft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"4027:3:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$1355","typeString":"contract IERC721"}},"id":3460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1288,"src":"4027:11:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4027:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":3463,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4052:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4052:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4027:35:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":3467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4066:8:16","subExpression":{"id":3466,"name":"opened2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3419,"src":"4067:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4027:47:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3473,"nodeType":"IfStatement","src":"4023:107:16","trueBody":{"id":3472,"nodeType":"Block","src":"4076:54:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3469,"name":"GameCard__NotOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3151,"src":"4098:18:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4098:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3471,"nodeType":"RevertStatement","src":"4091:27:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3476,"name":"tokenId3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3401,"src":"4158:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3474,"name":"nft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"4146:3:16","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$1355","typeString":"contract IERC721"}},"id":3475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1288,"src":"4146:11:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":3477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4146:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":3478,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4171:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4171:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4146:35:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":3482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4185:8:16","subExpression":{"id":3481,"name":"opened3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"4186:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4146:47:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3488,"nodeType":"IfStatement","src":"4142:107:16","trueBody":{"id":3487,"nodeType":"Block","src":"4195:54:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3484,"name":"GameCard__NotOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3151,"src":"4217:18:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4217:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3486,"nodeType":"RevertStatement","src":"4210:27:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_enum$_PlayerStatus_$3166","typeString":"enum GameCard.PlayerStatus"},"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3489,"name":"s_addressInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"4263:13:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$3180_storage_$","typeString":"mapping(address => struct GameCard.Player storage ref)"}},"id":3492,"indexExpression":{"expression":{"id":3490,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4277:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4277:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4263:25:16","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_storage","typeString":"struct GameCard.Player storage ref"}},"id":3493,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3179,"src":"4263:32:16","typeDescriptions":{"typeIdentifier":"t_enum$_PlayerStatus_$3166","typeString":"enum GameCard.PlayerStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3494,"name":"PlayerStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"4299:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PlayerStatus_$3166_$","typeString":"type(enum GameCard.PlayerStatus)"}},"id":3495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"FOUND","nodeType":"MemberAccess","referencedDeclaration":3163,"src":"4299:18:16","typeDescriptions":{"typeIdentifier":"t_enum$_PlayerStatus_$3166","typeString":"enum GameCard.PlayerStatus"}},"src":"4263:54:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3501,"nodeType":"IfStatement","src":"4259:126:16","trueBody":{"id":3500,"nodeType":"Block","src":"4319:66:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3497,"name":"GameCard__AlreadyOpponentFound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3159,"src":"4341:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4341:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3499,"nodeType":"RevertStatement","src":"4334:39:16"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3502,"name":"currentPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"4399:14:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4399:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4424:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4399:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3667,"nodeType":"Block","src":"5023:1222:16","statements":[{"assignments":[3548],"declarations":[{"constant":false,"id":3548,"mutability":"mutable","name":"opponent","nameLocation":"5046:8:16","nodeType":"VariableDeclaration","scope":3667,"src":"5038:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3547,"name":"address","nodeType":"ElementaryTypeName","src":"5038:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3552,"initialValue":{"baseExpression":{"id":3549,"name":"currentPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"5057:14:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3551,"indexExpression":{"hexValue":"30","id":3550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5057:17:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5038:36:16"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3553,"name":"opponent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"5093:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3554,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5105:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5105:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5093:22:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3561,"nodeType":"IfStatement","src":"5089:98:16","trueBody":{"id":3560,"nodeType":"Block","src":"5117:70:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3557,"name":"GameCard__PlayerNotAllowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3155,"src":"5143:26:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5143:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3559,"nodeType":"RevertStatement","src":"5136:35:16"}]}},{"assignments":[3564],"declarations":[{"constant":false,"id":3564,"mutability":"mutable","name":"opponentStruct","nameLocation":"5215:14:16","nodeType":"VariableDeclaration","scope":3667,"src":"5201:28:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_memory_ptr","typeString":"struct GameCard.Player"},"typeName":{"id":3563,"nodeType":"UserDefinedTypeName","pathNode":{"id":3562,"name":"Player","nodeType":"IdentifierPath","referencedDeclaration":3180,"src":"5201:6:16"},"referencedDeclaration":3180,"src":"5201:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_storage_ptr","typeString":"struct GameCard.Player"}},"visibility":"internal"}],"id":3568,"initialValue":{"baseExpression":{"id":3565,"name":"s_addressInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"5232:13:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$3180_storage_$","typeString":"mapping(address => struct GameCard.Player storage ref)"}},"id":3567,"indexExpression":{"id":3566,"name":"opponent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"5246:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5232:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_storage","typeString":"struct GameCard.Player storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5201:54:16"},{"expression":{"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3569,"name":"s_addressInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"5272:13:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$3180_storage_$","typeString":"mapping(address => struct GameCard.Player storage ref)"}},"id":3571,"indexExpression":{"id":3570,"name":"opponent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"5286:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5272:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_storage","typeString":"struct GameCard.Player storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3573,"name":"opponentStruct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"5323:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_memory_ptr","typeString":"struct GameCard.Player memory"}},"id":3574,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"game","nodeType":"MemberAccess","referencedDeclaration":3168,"src":"5323:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3575,"name":"opponent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"5361:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3576,"name":"opponentStruct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"5388:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_memory_ptr","typeString":"struct GameCard.Player memory"}},"id":3577,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenIdArray","nodeType":"MemberAccess","referencedDeclaration":3174,"src":"5388:27:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},{"expression":{"id":3578,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5434:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5434:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3580,"name":"PlayerStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"5463:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PlayerStatus_$3166_$","typeString":"type(enum GameCard.PlayerStatus)"}},"id":3581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"FOUND","nodeType":"MemberAccess","referencedDeclaration":3163,"src":"5463:18:16","typeDescriptions":{"typeIdentifier":"t_enum$_PlayerStatus_$3166","typeString":"enum GameCard.PlayerStatus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_PlayerStatus_$3166","typeString":"enum GameCard.PlayerStatus"}],"id":3572,"name":"Player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3180,"src":"5298:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Player_$3180_storage_ptr_$","typeString":"type(struct GameCard.Player storage pointer)"}},"id":3582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5298:198:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_memory_ptr","typeString":"struct GameCard.Player memory"}},"src":"5272:224:16","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_storage","typeString":"struct GameCard.Player storage ref"}},"id":3584,"nodeType":"ExpressionStatement","src":"5272:224:16"},{"expression":{"id":3602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3585,"name":"s_addressInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"5511:13:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$3180_storage_$","typeString":"mapping(address => struct GameCard.Player storage ref)"}},"id":3588,"indexExpression":{"expression":{"id":3586,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5525:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5525:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5511:25:16","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_storage","typeString":"struct GameCard.Player storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3590,"name":"opponentStruct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"5564:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_memory_ptr","typeString":"struct GameCard.Player memory"}},"id":3591,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"game","nodeType":"MemberAccess","referencedDeclaration":3168,"src":"5564:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3592,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5602:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5602:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"components":[{"id":3594,"name":"tokenId1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"5632:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3595,"name":"tokenId2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"5642:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3596,"name":"tokenId3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3401,"src":"5652:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3597,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5631:30:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},{"id":3598,"name":"opponent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"5680:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3599,"name":"PlayerStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"5707:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PlayerStatus_$3166_$","typeString":"type(enum GameCard.PlayerStatus)"}},"id":3600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"FOUND","nodeType":"MemberAccess","referencedDeclaration":3163,"src":"5707:18:16","typeDescriptions":{"typeIdentifier":"t_enum$_PlayerStatus_$3166","typeString":"enum GameCard.PlayerStatus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_PlayerStatus_$3166","typeString":"enum GameCard.PlayerStatus"}],"id":3589,"name":"Player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3180,"src":"5539:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Player_$3180_storage_ptr_$","typeString":"type(struct GameCard.Player storage pointer)"}},"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5539:201:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_memory_ptr","typeString":"struct GameCard.Player memory"}},"src":"5511:229:16","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_storage","typeString":"struct GameCard.Player storage ref"}},"id":3603,"nodeType":"ExpressionStatement","src":"5511:229:16"},{"body":{"id":3653,"nodeType":"Block","src":"5807:330:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3615,"name":"currentPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"5830:14:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3617,"indexExpression":{"id":3616,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"5845:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5830:17:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3618,"name":"opponent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"5851:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5830:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3652,"nodeType":"IfStatement","src":"5826:296:16","trueBody":{"id":3651,"nodeType":"Block","src":"5861:261:16","statements":[{"body":{"id":3643,"nodeType":"Block","src":"5940:92:16","statements":[{"expression":{"id":3641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3633,"name":"currentPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"5967:14:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3635,"indexExpression":{"id":3634,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"5982:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5967:17:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3636,"name":"currentPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"5987:14:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3640,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3637,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"6002:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6006:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6002:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5987:21:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5967:41:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3642,"nodeType":"ExpressionStatement","src":"5967:41:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3624,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"5904:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3625,"name":"currentPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"5908:14:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5908:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5932:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5908:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5904:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3644,"initializationExpression":{"assignments":[3621],"declarations":[{"constant":false,"id":3621,"mutability":"mutable","name":"j","nameLocation":"5897:1:16","nodeType":"VariableDeclaration","scope":3644,"src":"5889:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3620,"name":"uint256","nodeType":"ElementaryTypeName","src":"5889:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3623,"initialValue":{"id":3622,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"5901:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5889:13:16"},"loopExpression":{"expression":{"id":3631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5935:3:16","subExpression":{"id":3630,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"5935:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3632,"nodeType":"ExpressionStatement","src":"5935:3:16"},"nodeType":"ForStatement","src":"5884:148:16"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3645,"name":"currentPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"6054:14:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"pop","nodeType":"MemberAccess","src":"6054:18:16","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer)"}},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6054:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3649,"nodeType":"ExpressionStatement","src":"6054:20:16"},{"id":3650,"nodeType":"Break","src":"6097:5:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3608,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"5775:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3609,"name":"currentPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"5779:14:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5779:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5775:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3654,"initializationExpression":{"assignments":[3605],"declarations":[{"constant":false,"id":3605,"mutability":"mutable","name":"i","nameLocation":"5768:1:16","nodeType":"VariableDeclaration","scope":3654,"src":"5760:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3604,"name":"uint256","nodeType":"ElementaryTypeName","src":"5760:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3607,"initialValue":{"hexValue":"30","id":3606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5772:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5760:13:16"},"loopExpression":{"expression":{"id":3613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5802:3:16","subExpression":{"id":3612,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"5802:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3614,"nodeType":"ExpressionStatement","src":"5802:3:16"},"nodeType":"ForStatement","src":"5755:382:16"},{"eventCall":{"arguments":[{"expression":{"id":3656,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6167:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6167:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3658,"name":"opponent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"6179:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3655,"name":"MatchFound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"6156:10:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6156:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3660,"nodeType":"EmitStatement","src":"6151:37:16"},{"expression":{"arguments":[{"expression":{"id":3662,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6212:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6212:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3664,"name":"opponent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"6224:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3661,"name":"playGame","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3753,"src":"6203:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) returns (uint256)"}},"id":3665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6203:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3666,"nodeType":"ExpressionStatement","src":"6203:30:16"}]},"id":3668,"nodeType":"IfStatement","src":"4395:1850:16","trueBody":{"id":3546,"nodeType":"Block","src":"4427:590:16","statements":[{"expression":{"arguments":[{"expression":{"id":3509,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4462:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4462:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3506,"name":"currentPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"4442:14:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"4442:19:16","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":3511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4442:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3512,"nodeType":"ExpressionStatement","src":"4442:31:16"},{"expression":{"id":3529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3513,"name":"s_addressInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"4488:13:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$3180_storage_$","typeString":"mapping(address => struct GameCard.Player storage ref)"}},"id":3516,"indexExpression":{"expression":{"id":3514,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4502:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4502:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4488:25:16","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_storage","typeString":"struct GameCard.Player storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3518,"name":"s_gameCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3263,"src":"4541:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3519,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4573:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4573:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"components":[{"id":3521,"name":"tokenId1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"4603:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3522,"name":"tokenId2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"4613:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3523,"name":"tokenId3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3401,"src":"4623:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3524,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4602:30:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030","id":3525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4651:42:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0000000000000000000000000000000000000000"},{"expression":{"id":3526,"name":"PlayerStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"4712:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PlayerStatus_$3166_$","typeString":"type(enum GameCard.PlayerStatus)"}},"id":3527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"SEARCHING","nodeType":"MemberAccess","referencedDeclaration":3162,"src":"4712:22:16","typeDescriptions":{"typeIdentifier":"t_enum$_PlayerStatus_$3166","typeString":"enum GameCard.PlayerStatus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_PlayerStatus_$3166","typeString":"enum GameCard.PlayerStatus"}],"id":3517,"name":"Player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3180,"src":"4516:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Player_$3180_storage_ptr_$","typeString":"type(struct GameCard.Player storage pointer)"}},"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4516:233:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_memory_ptr","typeString":"struct GameCard.Player memory"}},"src":"4488:261:16","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_storage","typeString":"struct GameCard.Player storage ref"}},"id":3530,"nodeType":"ExpressionStatement","src":"4488:261:16"},{"eventCall":{"arguments":[{"expression":{"id":3532,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4799:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4799:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"components":[{"id":3534,"name":"tokenId1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"4829:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3535,"name":"tokenId2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"4839:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3536,"name":"tokenId3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3401,"src":"4849:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3537,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4828:30:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030","id":3538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4877:42:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0000000000000000000000000000000000000000"},{"expression":{"id":3539,"name":"PlayerStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"4938:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PlayerStatus_$3166_$","typeString":"type(enum GameCard.PlayerStatus)"}},"id":3540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"SEARCHING","nodeType":"MemberAccess","referencedDeclaration":3162,"src":"4938:22:16","typeDescriptions":{"typeIdentifier":"t_enum$_PlayerStatus_$3166","typeString":"enum GameCard.PlayerStatus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_PlayerStatus_$3166","typeString":"enum GameCard.PlayerStatus"}],"id":3531,"name":"AddedToList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3214,"src":"4769:11:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_array$_t_uint256_$3_memory_ptr_$_t_address_$_t_enum$_PlayerStatus_$3166_$returns$__$","typeString":"function (address,uint256[3] memory,address,enum GameCard.PlayerStatus)"}},"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4769:206:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3542,"nodeType":"EmitStatement","src":"4764:211:16"},{"expression":{"id":3544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4990:15:16","subExpression":{"id":3543,"name":"s_gameCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3263,"src":"4990:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3545,"nodeType":"ExpressionStatement","src":"4990:15:16"}]}}]},"functionSelector":"e81fb495","id":3670,"implemented":true,"kind":"function","modifiers":[],"name":"enterGame","nameLocation":"3378:9:16","nodeType":"FunctionDefinition","parameters":{"id":3402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3397,"mutability":"mutable","name":"tokenId1","nameLocation":"3406:8:16","nodeType":"VariableDeclaration","scope":3670,"src":"3398:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3396,"name":"uint256","nodeType":"ElementaryTypeName","src":"3398:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3399,"mutability":"mutable","name":"tokenId2","nameLocation":"3433:8:16","nodeType":"VariableDeclaration","scope":3670,"src":"3425:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3398,"name":"uint256","nodeType":"ElementaryTypeName","src":"3425:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3401,"mutability":"mutable","name":"tokenId3","nameLocation":"3460:8:16","nodeType":"VariableDeclaration","scope":3670,"src":"3452:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3400,"name":"uint256","nodeType":"ElementaryTypeName","src":"3452:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3387:88:16"},"returnParameters":{"id":3403,"nodeType":"ParameterList","parameters":[],"src":"3483:0:16"},"scope":4625,"src":"3369:2883:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3752,"nodeType":"Block","src":"6464:1015:16","statements":[{"assignments":[3685],"declarations":[{"constant":false,"id":3685,"mutability":"mutable","name":"player1","nameLocation":"6568:7:16","nodeType":"VariableDeclaration","scope":3752,"src":"6554:21:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_memory_ptr","typeString":"struct GameCard.Player"},"typeName":{"id":3684,"nodeType":"UserDefinedTypeName","pathNode":{"id":3683,"name":"Player","nodeType":"IdentifierPath","referencedDeclaration":3180,"src":"6554:6:16"},"referencedDeclaration":3180,"src":"6554:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_storage_ptr","typeString":"struct GameCard.Player"}},"visibility":"internal"}],"id":3689,"initialValue":{"baseExpression":{"id":3686,"name":"s_addressInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"6578:13:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$3180_storage_$","typeString":"mapping(address => struct GameCard.Player storage ref)"}},"id":3688,"indexExpression":{"id":3687,"name":"player1Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"6592:14:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6578:29:16","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_storage","typeString":"struct GameCard.Player storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6554:53:16"},{"assignments":[3692],"declarations":[{"constant":false,"id":3692,"mutability":"mutable","name":"player2","nameLocation":"6632:7:16","nodeType":"VariableDeclaration","scope":3752,"src":"6618:21:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_memory_ptr","typeString":"struct GameCard.Player"},"typeName":{"id":3691,"nodeType":"UserDefinedTypeName","pathNode":{"id":3690,"name":"Player","nodeType":"IdentifierPath","referencedDeclaration":3180,"src":"6618:6:16"},"referencedDeclaration":3180,"src":"6618:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_storage_ptr","typeString":"struct GameCard.Player"}},"visibility":"internal"}],"id":3696,"initialValue":{"baseExpression":{"id":3693,"name":"s_addressInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"6642:13:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$3180_storage_$","typeString":"mapping(address => struct GameCard.Player storage ref)"}},"id":3695,"indexExpression":{"id":3694,"name":"player2Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"6656:14:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6642:29:16","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_storage","typeString":"struct GameCard.Player storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6618:53:16"},{"expression":{"id":3710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3697,"name":"s_addressInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"6684:13:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$3180_storage_$","typeString":"mapping(address => struct GameCard.Player storage ref)"}},"id":3699,"indexExpression":{"id":3698,"name":"player1Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"6698:14:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6684:29:16","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_storage","typeString":"struct GameCard.Player storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3701,"name":"player1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"6737:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_memory_ptr","typeString":"struct GameCard.Player memory"}},"id":3702,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"game","nodeType":"MemberAccess","referencedDeclaration":3168,"src":"6737:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3703,"name":"player1Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"6764:14:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3704,"name":"player1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"6793:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_memory_ptr","typeString":"struct GameCard.Player memory"}},"id":3705,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenIdArray","nodeType":"MemberAccess","referencedDeclaration":3174,"src":"6793:20:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},{"id":3706,"name":"player2Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"6828:14:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3707,"name":"PlayerStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"6857:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PlayerStatus_$3166_$","typeString":"type(enum GameCard.PlayerStatus)"}},"id":3708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"PLAYING","nodeType":"MemberAccess","referencedDeclaration":3164,"src":"6857:20:16","typeDescriptions":{"typeIdentifier":"t_enum$_PlayerStatus_$3166","typeString":"enum GameCard.PlayerStatus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_PlayerStatus_$3166","typeString":"enum GameCard.PlayerStatus"}],"id":3700,"name":"Player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3180,"src":"6716:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Player_$3180_storage_ptr_$","typeString":"type(struct GameCard.Player storage pointer)"}},"id":3709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6716:172:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_memory_ptr","typeString":"struct GameCard.Player memory"}},"src":"6684:204:16","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_storage","typeString":"struct GameCard.Player storage ref"}},"id":3711,"nodeType":"ExpressionStatement","src":"6684:204:16"},{"expression":{"id":3725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3712,"name":"s_addressInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"6899:13:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$3180_storage_$","typeString":"mapping(address => struct GameCard.Player storage ref)"}},"id":3714,"indexExpression":{"id":3713,"name":"player2Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"6913:14:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6899:29:16","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_storage","typeString":"struct GameCard.Player storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3716,"name":"player1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"6952:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_memory_ptr","typeString":"struct GameCard.Player memory"}},"id":3717,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"game","nodeType":"MemberAccess","referencedDeclaration":3168,"src":"6952:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3718,"name":"player2Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"6979:14:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3719,"name":"player2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"7008:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_memory_ptr","typeString":"struct GameCard.Player memory"}},"id":3720,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenIdArray","nodeType":"MemberAccess","referencedDeclaration":3174,"src":"7008:20:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},{"id":3721,"name":"player1Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"7043:14:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3722,"name":"PlayerStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"7072:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PlayerStatus_$3166_$","typeString":"type(enum GameCard.PlayerStatus)"}},"id":3723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"PLAYING","nodeType":"MemberAccess","referencedDeclaration":3164,"src":"7072:20:16","typeDescriptions":{"typeIdentifier":"t_enum$_PlayerStatus_$3166","typeString":"enum GameCard.PlayerStatus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_PlayerStatus_$3166","typeString":"enum GameCard.PlayerStatus"}],"id":3715,"name":"Player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3180,"src":"6931:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Player_$3180_storage_ptr_$","typeString":"type(struct GameCard.Player storage pointer)"}},"id":3724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6931:172:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_memory_ptr","typeString":"struct GameCard.Player memory"}},"src":"6899:204:16","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_storage","typeString":"struct GameCard.Player storage ref"}},"id":3726,"nodeType":"ExpressionStatement","src":"6899:204:16"},{"expression":{"id":3736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3727,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"7114:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3730,"name":"i_gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3229,"src":"7176:9:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3731,"name":"i_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"7200:16:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":3732,"name":"REQUEST_CONFIRMATIONS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"7231:21:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":3733,"name":"i_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"7267:18:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3734,"name":"NUM_WORDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3237,"src":"7300:9:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":3728,"name":"i_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"7126:16:16","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$199","typeString":"contract VRFCoordinatorV2Interface"}},"id":3729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"requestRandomWords","nodeType":"MemberAccess","referencedDeclaration":132,"src":"7126:35:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_uint64_$_t_uint16_$_t_uint32_$_t_uint32_$returns$_t_uint256_$","typeString":"function (bytes32,uint64,uint16,uint32,uint32) external returns (uint256)"}},"id":3735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7126:194:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7114:206:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3737,"nodeType":"ExpressionStatement","src":"7114:206:16"},{"expression":{"id":3744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3738,"name":"s_requestIdToPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"7331:20:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$2_storage_$","typeString":"mapping(uint256 => address[2] storage ref)"}},"id":3740,"indexExpression":{"id":3739,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"7352:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7331:31:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_storage","typeString":"address[2] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3741,"name":"player1Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"7366:14:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3742,"name":"player2Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"7382:14:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3743,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7365:32:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"src":"7331:66:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_storage","typeString":"address[2] storage ref"}},"id":3745,"nodeType":"ExpressionStatement","src":"7331:66:16"},{"eventCall":{"arguments":[{"id":3747,"name":"player1Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"7429:14:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3748,"name":"player2Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"7445:14:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3749,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"7461:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3746,"name":"MatchBeginsSoon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"7413:15:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7413:58:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3751,"nodeType":"EmitStatement","src":"7408:63:16"}]},"id":3753,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3677,"name":"player1Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3672,"src":"6390:14:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3678,"name":"player2Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"6406:14:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3679,"kind":"modifierInvocation","modifierName":{"id":3676,"name":"checkPlayers","nodeType":"IdentifierPath","referencedDeclaration":3334,"src":"6377:12:16"},"nodeType":"ModifierInvocation","src":"6377:44:16"}],"name":"playGame","nameLocation":"6269:8:16","nodeType":"FunctionDefinition","parameters":{"id":3675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3672,"mutability":"mutable","name":"player1Address","nameLocation":"6296:14:16","nodeType":"VariableDeclaration","scope":3753,"src":"6288:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3671,"name":"address","nodeType":"ElementaryTypeName","src":"6288:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3674,"mutability":"mutable","name":"player2Address","nameLocation":"6329:14:16","nodeType":"VariableDeclaration","scope":3753,"src":"6321:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3673,"name":"address","nodeType":"ElementaryTypeName","src":"6321:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6277:73:16"},"returnParameters":{"id":3682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3681,"mutability":"mutable","name":"requestId","nameLocation":"6448:9:16","nodeType":"VariableDeclaration","scope":3753,"src":"6440:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3680,"name":"uint256","nodeType":"ElementaryTypeName","src":"6440:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6439:19:16"},"scope":4625,"src":"6260:1219:16","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"baseFunctions":[30],"body":{"id":4204,"nodeType":"Block","src":"7607:3930:16","statements":[{"assignments":[3767],"declarations":[{"constant":false,"id":3767,"mutability":"mutable","name":"players","nameLocation":"7636:7:16","nodeType":"VariableDeclaration","scope":4204,"src":"7618:25:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2]"},"typeName":{"baseType":{"id":3765,"name":"address","nodeType":"ElementaryTypeName","src":"7618:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3766,"length":{"hexValue":"32","id":3764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7626:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"7618:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_storage_ptr","typeString":"address[2]"}},"visibility":"internal"}],"id":3771,"initialValue":{"baseExpression":{"id":3768,"name":"s_requestIdToPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"7646:20:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$2_storage_$","typeString":"mapping(uint256 => address[2] storage ref)"}},"id":3770,"indexExpression":{"id":3769,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3755,"src":"7667:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7646:31:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_storage","typeString":"address[2] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7618:59:16"},{"assignments":[3778],"declarations":[{"constant":false,"id":3778,"mutability":"mutable","name":"player1Characters","nameLocation":"7716:17:16","nodeType":"VariableDeclaration","scope":4204,"src":"7688:45:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_memory_ptr_$3_memory_ptr","typeString":"struct Characters.Person[3]"},"typeName":{"baseType":{"id":3776,"nodeType":"UserDefinedTypeName","pathNode":{"id":3775,"name":"Characters.Person","nodeType":"IdentifierPath","referencedDeclaration":2964,"src":"7688:17:16"},"referencedDeclaration":2964,"src":"7688:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_storage_ptr","typeString":"struct Characters.Person"}},"id":3777,"length":{"hexValue":"33","id":3774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7706:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"7688:20:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_storage_$3_storage_ptr","typeString":"struct Characters.Person[3]"}},"visibility":"internal"}],"id":3784,"initialValue":{"arguments":[{"baseExpression":{"id":3780,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"7763:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":3782,"indexExpression":{"hexValue":"30","id":3781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7771:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7763:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3779,"name":"getCharacter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4380,"src":"7736:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_array$_t_struct$_Person_$2964_memory_ptr_$3_memory_ptr_$","typeString":"function (address) returns (struct Characters.Person memory[3] memory)"}},"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7736:48:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_memory_ptr_$3_memory_ptr","typeString":"struct Characters.Person memory[3] memory"}},"nodeType":"VariableDeclarationStatement","src":"7688:96:16"},{"assignments":[3791],"declarations":[{"constant":false,"id":3791,"mutability":"mutable","name":"player2Characters","nameLocation":"7823:17:16","nodeType":"VariableDeclaration","scope":4204,"src":"7795:45:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_memory_ptr_$3_memory_ptr","typeString":"struct Characters.Person[3]"},"typeName":{"baseType":{"id":3789,"nodeType":"UserDefinedTypeName","pathNode":{"id":3788,"name":"Characters.Person","nodeType":"IdentifierPath","referencedDeclaration":2964,"src":"7795:17:16"},"referencedDeclaration":2964,"src":"7795:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_storage_ptr","typeString":"struct Characters.Person"}},"id":3790,"length":{"hexValue":"33","id":3787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7813:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"7795:20:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_storage_$3_storage_ptr","typeString":"struct Characters.Person[3]"}},"visibility":"internal"}],"id":3797,"initialValue":{"arguments":[{"baseExpression":{"id":3793,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"7870:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":3795,"indexExpression":{"hexValue":"31","id":3794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7878:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7870:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3792,"name":"getCharacter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4380,"src":"7843:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_array$_t_struct$_Person_$2964_memory_ptr_$3_memory_ptr_$","typeString":"function (address) returns (struct Characters.Person memory[3] memory)"}},"id":3796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7843:48:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_memory_ptr_$3_memory_ptr","typeString":"struct Characters.Person memory[3] memory"}},"nodeType":"VariableDeclarationStatement","src":"7795:96:16"},{"expression":{"id":3825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3798,"name":"s_addressInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"7904:13:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$3180_storage_$","typeString":"mapping(address => struct GameCard.Player storage ref)"}},"id":3802,"indexExpression":{"baseExpression":{"id":3799,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"7918:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":3801,"indexExpression":{"hexValue":"30","id":3800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7926:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7918:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7904:25:16","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_storage","typeString":"struct GameCard.Player storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"baseExpression":{"id":3804,"name":"s_addressInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"7953:13:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$3180_storage_$","typeString":"mapping(address => struct GameCard.Player storage ref)"}},"id":3808,"indexExpression":{"baseExpression":{"id":3805,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"7967:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":3807,"indexExpression":{"hexValue":"30","id":3806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7975:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7967:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7953:25:16","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_storage","typeString":"struct GameCard.Player storage ref"}},"id":3809,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"game","nodeType":"MemberAccess","referencedDeclaration":3168,"src":"7953:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":3810,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"7998:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":3812,"indexExpression":{"hexValue":"30","id":3811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8006:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7998:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":3813,"name":"s_addressInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"8023:13:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$3180_storage_$","typeString":"mapping(address => struct GameCard.Player storage ref)"}},"id":3817,"indexExpression":{"baseExpression":{"id":3814,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"8037:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":3816,"indexExpression":{"hexValue":"30","id":3815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8045:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8037:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8023:25:16","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_storage","typeString":"struct GameCard.Player storage ref"}},"id":3818,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenIdArray","nodeType":"MemberAccess","referencedDeclaration":3174,"src":"8023:38:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage","typeString":"uint256[3] storage ref"}},{"baseExpression":{"id":3819,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"8076:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":3821,"indexExpression":{"hexValue":"31","id":3820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8084:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8076:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3822,"name":"PlayerStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"8101:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PlayerStatus_$3166_$","typeString":"type(enum GameCard.PlayerStatus)"}},"id":3823,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"OVER","nodeType":"MemberAccess","referencedDeclaration":3165,"src":"8101:17:16","typeDescriptions":{"typeIdentifier":"t_enum$_PlayerStatus_$3166","typeString":"enum GameCard.PlayerStatus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$3_storage","typeString":"uint256[3] storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_PlayerStatus_$3166","typeString":"enum GameCard.PlayerStatus"}],"id":3803,"name":"Player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3180,"src":"7932:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Player_$3180_storage_ptr_$","typeString":"type(struct GameCard.Player storage pointer)"}},"id":3824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7932:197:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_memory_ptr","typeString":"struct GameCard.Player memory"}},"src":"7904:225:16","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_storage","typeString":"struct GameCard.Player storage ref"}},"id":3826,"nodeType":"ExpressionStatement","src":"7904:225:16"},{"expression":{"id":3854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3827,"name":"s_addressInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"8140:13:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$3180_storage_$","typeString":"mapping(address => struct GameCard.Player storage ref)"}},"id":3831,"indexExpression":{"baseExpression":{"id":3828,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"8154:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":3830,"indexExpression":{"hexValue":"31","id":3829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8162:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8154:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8140:25:16","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_storage","typeString":"struct GameCard.Player storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"baseExpression":{"id":3833,"name":"s_addressInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"8189:13:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$3180_storage_$","typeString":"mapping(address => struct GameCard.Player storage ref)"}},"id":3837,"indexExpression":{"baseExpression":{"id":3834,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"8203:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":3836,"indexExpression":{"hexValue":"31","id":3835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8211:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8203:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8189:25:16","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_storage","typeString":"struct GameCard.Player storage ref"}},"id":3838,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"game","nodeType":"MemberAccess","referencedDeclaration":3168,"src":"8189:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":3839,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"8234:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":3841,"indexExpression":{"hexValue":"31","id":3840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8242:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8234:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":3842,"name":"s_addressInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"8259:13:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$3180_storage_$","typeString":"mapping(address => struct GameCard.Player storage ref)"}},"id":3846,"indexExpression":{"baseExpression":{"id":3843,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"8273:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":3845,"indexExpression":{"hexValue":"31","id":3844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8281:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8273:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8259:25:16","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_storage","typeString":"struct GameCard.Player storage ref"}},"id":3847,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenIdArray","nodeType":"MemberAccess","referencedDeclaration":3174,"src":"8259:38:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage","typeString":"uint256[3] storage ref"}},{"baseExpression":{"id":3848,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"8312:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":3850,"indexExpression":{"hexValue":"30","id":3849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8320:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8312:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3851,"name":"PlayerStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"8337:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PlayerStatus_$3166_$","typeString":"type(enum GameCard.PlayerStatus)"}},"id":3852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"OVER","nodeType":"MemberAccess","referencedDeclaration":3165,"src":"8337:17:16","typeDescriptions":{"typeIdentifier":"t_enum$_PlayerStatus_$3166","typeString":"enum GameCard.PlayerStatus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$3_storage","typeString":"uint256[3] storage ref"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_PlayerStatus_$3166","typeString":"enum GameCard.PlayerStatus"}],"id":3832,"name":"Player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3180,"src":"8168:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Player_$3180_storage_ptr_$","typeString":"type(struct GameCard.Player storage pointer)"}},"id":3853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8168:197:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_memory_ptr","typeString":"struct GameCard.Player memory"}},"src":"8140:225:16","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_storage","typeString":"struct GameCard.Player storage ref"}},"id":3855,"nodeType":"ExpressionStatement","src":"8140:225:16"},{"assignments":[3857],"declarations":[{"constant":false,"id":3857,"mutability":"mutable","name":"removedIndex","nameLocation":"8404:12:16","nodeType":"VariableDeclaration","scope":4204,"src":"8396:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3856,"name":"uint256","nodeType":"ElementaryTypeName","src":"8396:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3863,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3858,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"8419:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3860,"indexExpression":{"hexValue":"30","id":3859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8431:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8419:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"33","id":3861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8436:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"8419:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8396:41:16"},{"assignments":[3865],"declarations":[{"constant":false,"id":3865,"mutability":"mutable","name":"player1Points","nameLocation":"8458:13:16","nodeType":"VariableDeclaration","scope":4204,"src":"8450:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3864,"name":"uint256","nodeType":"ElementaryTypeName","src":"8450:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3867,"initialValue":{"hexValue":"30","id":3866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8474:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8450:25:16"},{"assignments":[3869],"declarations":[{"constant":false,"id":3869,"mutability":"mutable","name":"player2Points","nameLocation":"8494:13:16","nodeType":"VariableDeclaration","scope":4204,"src":"8486:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3868,"name":"uint256","nodeType":"ElementaryTypeName","src":"8486:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3871,"initialValue":{"hexValue":"30","id":3870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8510:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8486:25:16"},{"expression":{"id":3874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3872,"name":"player1Points","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3865,"src":"8522:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8538:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8522:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3875,"nodeType":"ExpressionStatement","src":"8522:17:16"},{"expression":{"id":3878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3876,"name":"player2Points","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"8550:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8566:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8550:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3879,"nodeType":"ExpressionStatement","src":"8550:17:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3880,"name":"player1Characters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3778,"src":"8596:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_memory_ptr_$3_memory_ptr","typeString":"struct Characters.Person memory[3] memory"}},"id":3882,"indexExpression":{"id":3881,"name":"removedIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"8614:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8596:31:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}},"id":3883,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"attack","nodeType":"MemberAccess","referencedDeclaration":2959,"src":"8596:38:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"baseExpression":{"id":3884,"name":"player2Characters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3791,"src":"8650:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_memory_ptr_$3_memory_ptr","typeString":"struct Characters.Person memory[3] memory"}},"id":3886,"indexExpression":{"id":3885,"name":"removedIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"8668:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8650:31:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}},"id":3887,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"attack","nodeType":"MemberAccess","referencedDeclaration":2959,"src":"8650:38:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8596:92:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3893,"name":"player1Characters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3778,"src":"8766:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_memory_ptr_$3_memory_ptr","typeString":"struct Characters.Person memory[3] memory"}},"id":3895,"indexExpression":{"id":3894,"name":"removedIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"8784:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8766:31:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}},"id":3896,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"attack","nodeType":"MemberAccess","referencedDeclaration":2959,"src":"8766:38:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":3897,"name":"player2Characters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3791,"src":"8820:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_memory_ptr_$3_memory_ptr","typeString":"struct Characters.Person memory[3] memory"}},"id":3899,"indexExpression":{"id":3898,"name":"removedIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"8838:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8820:31:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}},"id":3900,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"attack","nodeType":"MemberAccess","referencedDeclaration":2959,"src":"8820:38:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8766:92:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3912,"nodeType":"Block","src":"8918:72:16","statements":[{"expression":{"id":3907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8933:15:16","subExpression":{"id":3906,"name":"player1Points","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3865,"src":"8933:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3908,"nodeType":"ExpressionStatement","src":"8933:15:16"},{"expression":{"id":3910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8963:15:16","subExpression":{"id":3909,"name":"player2Points","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"8963:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3911,"nodeType":"ExpressionStatement","src":"8963:15:16"}]},"id":3913,"nodeType":"IfStatement","src":"8748:242:16","trueBody":{"id":3905,"nodeType":"Block","src":"8870:42:16","statements":[{"expression":{"id":3903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8885:15:16","subExpression":{"id":3902,"name":"player2Points","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"8885:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3904,"nodeType":"ExpressionStatement","src":"8885:15:16"}]}},"id":3914,"nodeType":"IfStatement","src":"8578:412:16","trueBody":{"id":3892,"nodeType":"Block","src":"8700:42:16","statements":[{"expression":{"id":3890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8715:15:16","subExpression":{"id":3889,"name":"player1Points","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3865,"src":"8715:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3891,"nodeType":"ExpressionStatement","src":"8715:15:16"}]}},{"assignments":[3916],"declarations":[{"constant":false,"id":3916,"mutability":"mutable","name":"game","nameLocation":"9008:4:16","nodeType":"VariableDeclaration","scope":4204,"src":"9000:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3915,"name":"uint256","nodeType":"ElementaryTypeName","src":"9000:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3925,"initialValue":{"expression":{"baseExpression":{"id":3917,"name":"s_addressInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"9015:13:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$3180_storage_$","typeString":"mapping(address => struct GameCard.Player storage ref)"}},"id":3923,"indexExpression":{"baseExpression":{"baseExpression":{"id":3918,"name":"s_requestIdToPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"9029:20:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$2_storage_$","typeString":"mapping(uint256 => address[2] storage ref)"}},"id":3920,"indexExpression":{"id":3919,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3755,"src":"9050:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9029:31:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_storage","typeString":"address[2] storage ref"}},"id":3922,"indexExpression":{"hexValue":"30","id":3921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9061:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9029:34:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9015:49:16","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_storage","typeString":"struct GameCard.Player storage ref"}},"id":3924,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"game","nodeType":"MemberAccess","referencedDeclaration":3168,"src":"9015:54:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9000:69:16"},{"assignments":[3932],"declarations":[{"constant":false,"id":3932,"mutability":"mutable","name":"player1Characters2","nameLocation":"9152:18:16","nodeType":"VariableDeclaration","scope":4204,"src":"9124:46:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_memory_ptr_$2_memory_ptr","typeString":"struct Characters.Person[2]"},"typeName":{"baseType":{"id":3930,"nodeType":"UserDefinedTypeName","pathNode":{"id":3929,"name":"Characters.Person","nodeType":"IdentifierPath","referencedDeclaration":2964,"src":"9124:17:16"},"referencedDeclaration":2964,"src":"9124:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_storage_ptr","typeString":"struct Characters.Person"}},"id":3931,"length":{"hexValue":"32","id":3928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9142:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"9124:20:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_storage_$2_storage_ptr","typeString":"struct Characters.Person[2]"}},"visibility":"internal"}],"id":3933,"nodeType":"VariableDeclarationStatement","src":"9124:46:16"},{"assignments":[3940],"declarations":[{"constant":false,"id":3940,"mutability":"mutable","name":"player2Characters2","nameLocation":"9209:18:16","nodeType":"VariableDeclaration","scope":4204,"src":"9181:46:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_memory_ptr_$2_memory_ptr","typeString":"struct Characters.Person[2]"},"typeName":{"baseType":{"id":3938,"nodeType":"UserDefinedTypeName","pathNode":{"id":3937,"name":"Characters.Person","nodeType":"IdentifierPath","referencedDeclaration":2964,"src":"9181:17:16"},"referencedDeclaration":2964,"src":"9181:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_storage_ptr","typeString":"struct Characters.Person"}},"id":3939,"length":{"hexValue":"32","id":3936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9199:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"9181:20:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_storage_$2_storage_ptr","typeString":"struct Characters.Person[2]"}},"visibility":"internal"}],"id":3941,"nodeType":"VariableDeclarationStatement","src":"9181:46:16"},{"body":{"id":4000,"nodeType":"Block","src":"9270:418:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3952,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"9289:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3953,"name":"removedIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"9294:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9289:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3957,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"9361:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3958,"name":"removedIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"9365:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9361:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3997,"nodeType":"Block","src":"9527:150:16","statements":[{"expression":{"id":3985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3977,"name":"player1Characters2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3932,"src":"9546:18:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_memory_ptr_$2_memory_ptr","typeString":"struct Characters.Person memory[2] memory"}},"id":3981,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3978,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"9565:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9569:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9565:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9546:25:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3982,"name":"player1Characters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3778,"src":"9574:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_memory_ptr_$3_memory_ptr","typeString":"struct Characters.Person memory[3] memory"}},"id":3984,"indexExpression":{"id":3983,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"9592:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9574:20:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}},"src":"9546:48:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}},"id":3986,"nodeType":"ExpressionStatement","src":"9546:48:16"},{"expression":{"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3987,"name":"player2Characters2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"9613:18:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_memory_ptr_$2_memory_ptr","typeString":"struct Characters.Person memory[2] memory"}},"id":3991,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3988,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"9632:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9636:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9632:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9613:25:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3992,"name":"player2Characters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3791,"src":"9641:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_memory_ptr_$3_memory_ptr","typeString":"struct Characters.Person memory[3] memory"}},"id":3994,"indexExpression":{"id":3993,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"9659:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9641:20:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}},"src":"9613:48:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}},"id":3996,"nodeType":"ExpressionStatement","src":"9613:48:16"}]},"id":3998,"nodeType":"IfStatement","src":"9357:320:16","trueBody":{"id":3976,"nodeType":"Block","src":"9379:142:16","statements":[{"expression":{"id":3966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3960,"name":"player1Characters2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3932,"src":"9398:18:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_memory_ptr_$2_memory_ptr","typeString":"struct Characters.Person memory[2] memory"}},"id":3962,"indexExpression":{"id":3961,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"9417:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9398:21:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3963,"name":"player1Characters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3778,"src":"9422:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_memory_ptr_$3_memory_ptr","typeString":"struct Characters.Person memory[3] memory"}},"id":3965,"indexExpression":{"id":3964,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"9440:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9422:20:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}},"src":"9398:44:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}},"id":3967,"nodeType":"ExpressionStatement","src":"9398:44:16"},{"expression":{"id":3974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3968,"name":"player2Characters2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"9461:18:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_memory_ptr_$2_memory_ptr","typeString":"struct Characters.Person memory[2] memory"}},"id":3970,"indexExpression":{"id":3969,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"9480:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9461:21:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3971,"name":"player2Characters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3791,"src":"9485:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_memory_ptr_$3_memory_ptr","typeString":"struct Characters.Person memory[3] memory"}},"id":3973,"indexExpression":{"id":3972,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"9503:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9485:20:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}},"src":"9461:44:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}},"id":3975,"nodeType":"ExpressionStatement","src":"9461:44:16"}]}},"id":3999,"nodeType":"IfStatement","src":"9285:392:16","trueBody":{"id":3956,"nodeType":"Block","src":"9308:43:16","statements":[{"id":3955,"nodeType":"Continue","src":"9327:8:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3946,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"9258:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"33","id":3947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9262:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"9258:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4001,"initializationExpression":{"assignments":[3943],"declarations":[{"constant":false,"id":3943,"mutability":"mutable","name":"i","nameLocation":"9251:1:16","nodeType":"VariableDeclaration","scope":4001,"src":"9243:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3942,"name":"uint256","nodeType":"ElementaryTypeName","src":"9243:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3945,"initialValue":{"hexValue":"30","id":3944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9255:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9243:13:16"},"loopExpression":{"expression":{"id":3950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9265:3:16","subExpression":{"id":3949,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"9265:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3951,"nodeType":"ExpressionStatement","src":"9265:3:16"},"nodeType":"ForStatement","src":"9238:450:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":4002,"name":"player1Characters2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3932,"src":"9718:18:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_memory_ptr_$2_memory_ptr","typeString":"struct Characters.Person memory[2] memory"}},"id":4008,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4003,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"9737:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4005,"indexExpression":{"hexValue":"31","id":4004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9749:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9737:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":4006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9754:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9737:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9718:38:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}},"id":4009,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"defence","nodeType":"MemberAccess","referencedDeclaration":2961,"src":"9718:46:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"baseExpression":{"id":4010,"name":"player2Characters2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"9780:18:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_memory_ptr_$2_memory_ptr","typeString":"struct Characters.Person memory[2] memory"}},"id":4016,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4011,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"9799:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4013,"indexExpression":{"hexValue":"31","id":4012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9811:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9799:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":4014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9816:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9799:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9780:38:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}},"id":4017,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"defence","nodeType":"MemberAccess","referencedDeclaration":2961,"src":"9780:46:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9718:108:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":4023,"name":"player1Characters2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3932,"src":"9904:18:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_memory_ptr_$2_memory_ptr","typeString":"struct Characters.Person memory[2] memory"}},"id":4029,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4024,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"9923:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4026,"indexExpression":{"hexValue":"31","id":4025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9935:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9923:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":4027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9940:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9923:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9904:38:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}},"id":4030,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"defence","nodeType":"MemberAccess","referencedDeclaration":2961,"src":"9904:46:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":4031,"name":"player2Characters2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"9966:18:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_memory_ptr_$2_memory_ptr","typeString":"struct Characters.Person memory[2] memory"}},"id":4037,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4032,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"9985:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4034,"indexExpression":{"hexValue":"31","id":4033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9997:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9985:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":4035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10002:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9985:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9966:38:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}},"id":4038,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"defence","nodeType":"MemberAccess","referencedDeclaration":2961,"src":"9966:46:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9904:108:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4050,"nodeType":"Block","src":"10072:72:16","statements":[{"expression":{"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10087:15:16","subExpression":{"id":4044,"name":"player1Points","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3865,"src":"10087:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4046,"nodeType":"ExpressionStatement","src":"10087:15:16"},{"expression":{"id":4048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10117:15:16","subExpression":{"id":4047,"name":"player2Points","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"10117:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4049,"nodeType":"ExpressionStatement","src":"10117:15:16"}]},"id":4051,"nodeType":"IfStatement","src":"9886:258:16","trueBody":{"id":4043,"nodeType":"Block","src":"10024:42:16","statements":[{"expression":{"id":4041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10039:15:16","subExpression":{"id":4040,"name":"player2Points","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"10039:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4042,"nodeType":"ExpressionStatement","src":"10039:15:16"}]}},"id":4052,"nodeType":"IfStatement","src":"9700:444:16","trueBody":{"id":4022,"nodeType":"Block","src":"9838:42:16","statements":[{"expression":{"id":4020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9853:15:16","subExpression":{"id":4019,"name":"player1Points","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3865,"src":"9853:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4021,"nodeType":"ExpressionStatement","src":"9853:15:16"}]}},{"assignments":[4059],"declarations":[{"constant":false,"id":4059,"mutability":"mutable","name":"player1Characters1","nameLocation":"10228:18:16","nodeType":"VariableDeclaration","scope":4204,"src":"10200:46:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_memory_ptr_$1_memory_ptr","typeString":"struct Characters.Person[1]"},"typeName":{"baseType":{"id":4057,"nodeType":"UserDefinedTypeName","pathNode":{"id":4056,"name":"Characters.Person","nodeType":"IdentifierPath","referencedDeclaration":2964,"src":"10200:17:16"},"referencedDeclaration":2964,"src":"10200:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_storage_ptr","typeString":"struct Characters.Person"}},"id":4058,"length":{"hexValue":"31","id":4055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10218:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"ArrayTypeName","src":"10200:20:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_storage_$1_storage_ptr","typeString":"struct Characters.Person[1]"}},"visibility":"internal"}],"id":4060,"nodeType":"VariableDeclarationStatement","src":"10200:46:16"},{"assignments":[4067],"declarations":[{"constant":false,"id":4067,"mutability":"mutable","name":"player2Characters1","nameLocation":"10285:18:16","nodeType":"VariableDeclaration","scope":4204,"src":"10257:46:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_memory_ptr_$1_memory_ptr","typeString":"struct Characters.Person[1]"},"typeName":{"baseType":{"id":4065,"nodeType":"UserDefinedTypeName","pathNode":{"id":4064,"name":"Characters.Person","nodeType":"IdentifierPath","referencedDeclaration":2964,"src":"10257:17:16"},"referencedDeclaration":2964,"src":"10257:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_storage_ptr","typeString":"struct Characters.Person"}},"id":4066,"length":{"hexValue":"31","id":4063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10275:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"ArrayTypeName","src":"10257:20:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_storage_$1_storage_ptr","typeString":"struct Characters.Person[1]"}},"visibility":"internal"}],"id":4068,"nodeType":"VariableDeclarationStatement","src":"10257:46:16"},{"body":{"id":4135,"nodeType":"Block","src":"10346:434:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4079,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"10365:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4080,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"10370:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4082,"indexExpression":{"hexValue":"31","id":4081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10382:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10370:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":4083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10387:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10370:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10365:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4088,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"10443:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4089,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"10447:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4091,"indexExpression":{"hexValue":"31","id":4090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10459:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10447:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":4092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10464:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10447:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10443:22:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4132,"nodeType":"Block","src":"10617:152:16","statements":[{"expression":{"id":4120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4112,"name":"player1Characters1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"10636:18:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_memory_ptr_$1_memory_ptr","typeString":"struct Characters.Person memory[1] memory"}},"id":4116,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4113,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"10655:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10659:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10655:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10636:25:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4117,"name":"player1Characters2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3932,"src":"10664:18:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_memory_ptr_$2_memory_ptr","typeString":"struct Characters.Person memory[2] memory"}},"id":4119,"indexExpression":{"id":4118,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"10683:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10664:21:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}},"src":"10636:49:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}},"id":4121,"nodeType":"ExpressionStatement","src":"10636:49:16"},{"expression":{"id":4130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4122,"name":"player2Characters1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"10704:18:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_memory_ptr_$1_memory_ptr","typeString":"struct Characters.Person memory[1] memory"}},"id":4126,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4123,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"10723:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10727:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10723:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10704:25:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4127,"name":"player2Characters2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"10732:18:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_memory_ptr_$2_memory_ptr","typeString":"struct Characters.Person memory[2] memory"}},"id":4129,"indexExpression":{"id":4128,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"10751:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10732:21:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}},"src":"10704:49:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}},"id":4131,"nodeType":"ExpressionStatement","src":"10704:49:16"}]},"id":4133,"nodeType":"IfStatement","src":"10439:330:16","trueBody":{"id":4111,"nodeType":"Block","src":"10467:144:16","statements":[{"expression":{"id":4101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4095,"name":"player1Characters1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"10486:18:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_memory_ptr_$1_memory_ptr","typeString":"struct Characters.Person memory[1] memory"}},"id":4097,"indexExpression":{"id":4096,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"10505:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10486:21:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4098,"name":"player1Characters2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3932,"src":"10510:18:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_memory_ptr_$2_memory_ptr","typeString":"struct Characters.Person memory[2] memory"}},"id":4100,"indexExpression":{"id":4099,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"10529:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10510:21:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}},"src":"10486:45:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}},"id":4102,"nodeType":"ExpressionStatement","src":"10486:45:16"},{"expression":{"id":4109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4103,"name":"player2Characters1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"10550:18:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_memory_ptr_$1_memory_ptr","typeString":"struct Characters.Person memory[1] memory"}},"id":4105,"indexExpression":{"id":4104,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"10569:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10550:21:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4106,"name":"player2Characters2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"10574:18:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_memory_ptr_$2_memory_ptr","typeString":"struct Characters.Person memory[2] memory"}},"id":4108,"indexExpression":{"id":4107,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"10593:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10574:21:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}},"src":"10550:45:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}},"id":4110,"nodeType":"ExpressionStatement","src":"10550:45:16"}]}},"id":4134,"nodeType":"IfStatement","src":"10361:408:16","trueBody":{"id":4087,"nodeType":"Block","src":"10390:43:16","statements":[{"id":4086,"nodeType":"Continue","src":"10409:8:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4073,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"10334:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"32","id":4074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10338:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10334:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4136,"initializationExpression":{"assignments":[4070],"declarations":[{"constant":false,"id":4070,"mutability":"mutable","name":"i","nameLocation":"10327:1:16","nodeType":"VariableDeclaration","scope":4136,"src":"10319:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4069,"name":"uint256","nodeType":"ElementaryTypeName","src":"10319:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4072,"initialValue":{"hexValue":"30","id":4071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10331:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10319:13:16"},"loopExpression":{"expression":{"id":4077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10341:3:16","subExpression":{"id":4076,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"10341:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4078,"nodeType":"ExpressionStatement","src":"10341:3:16"},"nodeType":"ForStatement","src":"10314:466:16"},{"assignments":[4138],"declarations":[{"constant":false,"id":4138,"mutability":"mutable","name":"player1Address","nameLocation":"10843:14:16","nodeType":"VariableDeclaration","scope":4204,"src":"10835:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4137,"name":"address","nodeType":"ElementaryTypeName","src":"10835:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4142,"initialValue":{"baseExpression":{"id":4139,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"10860:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":4141,"indexExpression":{"hexValue":"30","id":4140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10868:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10860:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10835:35:16"},{"assignments":[4144],"declarations":[{"constant":false,"id":4144,"mutability":"mutable","name":"player2Address","nameLocation":"10889:14:16","nodeType":"VariableDeclaration","scope":4204,"src":"10881:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4143,"name":"address","nodeType":"ElementaryTypeName","src":"10881:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4148,"initialValue":{"baseExpression":{"id":4145,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"10906:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":4147,"indexExpression":{"hexValue":"31","id":4146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10914:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10906:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10881:35:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":4149,"name":"player1Characters1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"10953:18:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_memory_ptr_$1_memory_ptr","typeString":"struct Characters.Person memory[1] memory"}},"id":4151,"indexExpression":{"hexValue":"30","id":4150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10972:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10953:21:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}},"id":4152,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tactics","nodeType":"MemberAccess","referencedDeclaration":2963,"src":"10953:29:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"baseExpression":{"id":4153,"name":"player2Characters1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"10985:18:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_memory_ptr_$1_memory_ptr","typeString":"struct Characters.Person memory[1] memory"}},"id":4155,"indexExpression":{"hexValue":"30","id":4154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11004:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10985:21:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}},"id":4156,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tactics","nodeType":"MemberAccess","referencedDeclaration":2963,"src":"10985:29:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10953:61:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":4162,"name":"player1Characters1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"11082:18:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_memory_ptr_$1_memory_ptr","typeString":"struct Characters.Person memory[1] memory"}},"id":4164,"indexExpression":{"hexValue":"30","id":4163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11101:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11082:21:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}},"id":4165,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tactics","nodeType":"MemberAccess","referencedDeclaration":2963,"src":"11082:29:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":4166,"name":"player2Characters1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"11114:18:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_memory_ptr_$1_memory_ptr","typeString":"struct Characters.Person memory[1] memory"}},"id":4168,"indexExpression":{"hexValue":"30","id":4167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11133:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11114:21:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}},"id":4169,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tactics","nodeType":"MemberAccess","referencedDeclaration":2963,"src":"11114:29:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11082:61:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4181,"nodeType":"Block","src":"11203:72:16","statements":[{"expression":{"id":4176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11218:15:16","subExpression":{"id":4175,"name":"player1Points","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3865,"src":"11218:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4177,"nodeType":"ExpressionStatement","src":"11218:15:16"},{"expression":{"id":4179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11248:15:16","subExpression":{"id":4178,"name":"player2Points","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"11248:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4180,"nodeType":"ExpressionStatement","src":"11248:15:16"}]},"id":4182,"nodeType":"IfStatement","src":"11064:211:16","trueBody":{"id":4174,"nodeType":"Block","src":"11155:42:16","statements":[{"expression":{"id":4172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11170:15:16","subExpression":{"id":4171,"name":"player2Points","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"11170:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4173,"nodeType":"ExpressionStatement","src":"11170:15:16"}]}},"id":4183,"nodeType":"IfStatement","src":"10949:326:16","trueBody":{"id":4161,"nodeType":"Block","src":"11016:42:16","statements":[{"expression":{"id":4159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11031:15:16","subExpression":{"id":4158,"name":"player1Points","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3865,"src":"11031:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4160,"nodeType":"ExpressionStatement","src":"11031:15:16"}]}},{"assignments":[4185,4187,4189],"declarations":[{"constant":false,"id":4185,"mutability":"mutable","name":"winner","nameLocation":"11296:6:16","nodeType":"VariableDeclaration","scope":4204,"src":"11288:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4184,"name":"address","nodeType":"ElementaryTypeName","src":"11288:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4187,"mutability":"mutable","name":"loser","nameLocation":"11312:5:16","nodeType":"VariableDeclaration","scope":4204,"src":"11304:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4186,"name":"address","nodeType":"ElementaryTypeName","src":"11304:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4189,"mutability":"mutable","name":"draw","nameLocation":"11324:4:16","nodeType":"VariableDeclaration","scope":4204,"src":"11319:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4188,"name":"bool","nodeType":"ElementaryTypeName","src":"11319:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4197,"initialValue":{"arguments":[{"id":4191,"name":"player1Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"11356:14:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4192,"name":"player1Points","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3865,"src":"11385:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4193,"name":"player2Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4144,"src":"11413:14:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4194,"name":"player2Points","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"11442:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4195,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"11470:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4190,"name":"getResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4281,"src":"11332:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_address_$_t_address_$_t_bool_$","typeString":"function (address,uint256,address,uint256,uint256) returns (address,address,bool)"}},"id":4196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11332:153:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_bool_$","typeString":"tuple(address,address,bool)"}},"nodeType":"VariableDeclarationStatement","src":"11287:198:16"},{"eventCall":{"arguments":[{"id":4199,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4185,"src":"11509:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4200,"name":"loser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"11517:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4201,"name":"draw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"11524:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4198,"name":"Match","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"11503:5:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":4202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11503:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4203,"nodeType":"EmitStatement","src":"11498:31:16"}]},"id":4205,"implemented":true,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"7496:18:16","nodeType":"FunctionDefinition","overrides":{"id":3760,"nodeType":"OverrideSpecifier","overrides":[],"src":"7598:8:16"},"parameters":{"id":3759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3755,"mutability":"mutable","name":"requestId","nameLocation":"7533:9:16","nodeType":"VariableDeclaration","scope":4205,"src":"7525:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3754,"name":"uint256","nodeType":"ElementaryTypeName","src":"7525:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3758,"mutability":"mutable","name":"randomWords","nameLocation":"7570:11:16","nodeType":"VariableDeclaration","scope":4205,"src":"7553:28:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3756,"name":"uint256","nodeType":"ElementaryTypeName","src":"7553:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3757,"nodeType":"ArrayTypeName","src":"7553:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7514:74:16"},"returnParameters":{"id":3761,"nodeType":"ParameterList","parameters":[],"src":"7607:0:16"},"scope":4625,"src":"7487:4050:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4280,"nodeType":"Block","src":"11751:606:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4224,"name":"player1Points","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4209,"src":"11766:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4225,"name":"player2Points","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"11782:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11766:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4243,"name":"player2Points","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"11931:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4244,"name":"player1Points","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4209,"src":"11947:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11931:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4277,"nodeType":"Block","src":"12092:258:16","statements":[{"expression":{"id":4270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4262,"name":"finshedGames","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"12107:12:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$3187_storage_$","typeString":"mapping(uint256 => struct GameCard.Game storage ref)"}},"id":4264,"indexExpression":{"id":4263,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"12120:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12107:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3187_storage","typeString":"struct GameCard.Game storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4266,"name":"player1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4207,"src":"12133:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4267,"name":"player2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"12142:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":4268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12151:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4265,"name":"Game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"12128:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Game_$3187_storage_ptr_$","typeString":"type(struct GameCard.Game storage pointer)"}},"id":4269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12128:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3187_memory_ptr","typeString":"struct GameCard.Game memory"}},"src":"12107:49:16","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3187_storage","typeString":"struct GameCard.Game storage ref"}},"id":4271,"nodeType":"ExpressionStatement","src":"12107:49:16"},{"expression":{"components":[{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030","id":4272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12197:42:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0000000000000000000000000000000000000000"},{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030","id":4273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12258:42:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0000000000000000000000000000000000000000"},{"hexValue":"74727565","id":4274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12319:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"id":4275,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12178:160:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_bool_$","typeString":"tuple(address,address,bool)"}},"functionReturnParameters":4223,"id":4276,"nodeType":"Return","src":"12171:167:16"}]},"id":4278,"nodeType":"IfStatement","src":"11927:423:16","trueBody":{"id":4261,"nodeType":"Block","src":"11962:124:16","statements":[{"expression":{"id":4254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4246,"name":"finshedGames","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"11977:12:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$3187_storage_$","typeString":"mapping(uint256 => struct GameCard.Game storage ref)"}},"id":4248,"indexExpression":{"id":4247,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"11990:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11977:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3187_storage","typeString":"struct GameCard.Game storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4250,"name":"player2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"12003:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4251,"name":"player1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4207,"src":"12012:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":4252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12021:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4249,"name":"Game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"11998:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Game_$3187_storage_ptr_$","typeString":"type(struct GameCard.Game storage pointer)"}},"id":4253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11998:29:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3187_memory_ptr","typeString":"struct GameCard.Game memory"}},"src":"11977:50:16","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3187_storage","typeString":"struct GameCard.Game storage ref"}},"id":4255,"nodeType":"ExpressionStatement","src":"11977:50:16"},{"expression":{"components":[{"id":4256,"name":"player2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"12050:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4257,"name":"player1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4207,"src":"12059:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":4258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12068:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"id":4259,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12049:25:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_bool_$","typeString":"tuple(address,address,bool)"}},"functionReturnParameters":4223,"id":4260,"nodeType":"Return","src":"12042:32:16"}]}},"id":4279,"nodeType":"IfStatement","src":"11762:588:16","trueBody":{"id":4242,"nodeType":"Block","src":"11797:124:16","statements":[{"expression":{"id":4235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4227,"name":"finshedGames","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"11812:12:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$3187_storage_$","typeString":"mapping(uint256 => struct GameCard.Game storage ref)"}},"id":4229,"indexExpression":{"id":4228,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"11825:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11812:18:16","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3187_storage","typeString":"struct GameCard.Game storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4231,"name":"player1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4207,"src":"11838:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4232,"name":"player2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"11847:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":4233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11856:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4230,"name":"Game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"11833:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Game_$3187_storage_ptr_$","typeString":"type(struct GameCard.Game storage pointer)"}},"id":4234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11833:29:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3187_memory_ptr","typeString":"struct GameCard.Game memory"}},"src":"11812:50:16","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$3187_storage","typeString":"struct GameCard.Game storage ref"}},"id":4236,"nodeType":"ExpressionStatement","src":"11812:50:16"},{"expression":{"components":[{"id":4237,"name":"player1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4207,"src":"11885:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4238,"name":"player2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"11894:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":4239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11903:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"id":4240,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11884:25:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_bool_$","typeString":"tuple(address,address,bool)"}},"functionReturnParameters":4223,"id":4241,"nodeType":"Return","src":"11877:32:16"}]}}]},"id":4281,"implemented":true,"kind":"function","modifiers":[],"name":"getResult","nameLocation":"11554:9:16","nodeType":"FunctionDefinition","parameters":{"id":4216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4207,"mutability":"mutable","name":"player1","nameLocation":"11582:7:16","nodeType":"VariableDeclaration","scope":4281,"src":"11574:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4206,"name":"address","nodeType":"ElementaryTypeName","src":"11574:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4209,"mutability":"mutable","name":"player1Points","nameLocation":"11608:13:16","nodeType":"VariableDeclaration","scope":4281,"src":"11600:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4208,"name":"uint256","nodeType":"ElementaryTypeName","src":"11600:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4211,"mutability":"mutable","name":"player2","nameLocation":"11640:7:16","nodeType":"VariableDeclaration","scope":4281,"src":"11632:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4210,"name":"address","nodeType":"ElementaryTypeName","src":"11632:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4213,"mutability":"mutable","name":"player2Points","nameLocation":"11666:13:16","nodeType":"VariableDeclaration","scope":4281,"src":"11658:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4212,"name":"uint256","nodeType":"ElementaryTypeName","src":"11658:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4215,"mutability":"mutable","name":"game","nameLocation":"11698:4:16","nodeType":"VariableDeclaration","scope":4281,"src":"11690:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4214,"name":"uint256","nodeType":"ElementaryTypeName","src":"11690:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11563:146:16"},"returnParameters":{"id":4223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4281,"src":"11727:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4217,"name":"address","nodeType":"ElementaryTypeName","src":"11727:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4281,"src":"11736:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4219,"name":"address","nodeType":"ElementaryTypeName","src":"11736:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4222,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4281,"src":"11745:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4221,"name":"bool","nodeType":"ElementaryTypeName","src":"11745:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11726:24:16"},"scope":4625,"src":"11545:812:16","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":4379,"nodeType":"Block","src":"12465:1265:16","statements":[{"assignments":[4296],"declarations":[{"constant":false,"id":4296,"mutability":"mutable","name":"player1TokenArray","nameLocation":"12494:17:16","nodeType":"VariableDeclaration","scope":4379,"src":"12476:35:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3]"},"typeName":{"baseType":{"id":4294,"name":"uint256","nodeType":"ElementaryTypeName","src":"12476:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4295,"length":{"hexValue":"33","id":4293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12484:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"12476:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage_ptr","typeString":"uint256[3]"}},"visibility":"internal"}],"id":4301,"initialValue":{"expression":{"baseExpression":{"id":4297,"name":"s_addressInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"12514:13:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$3180_storage_$","typeString":"mapping(address => struct GameCard.Player storage ref)"}},"id":4299,"indexExpression":{"id":4298,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"12528:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12514:21:16","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_storage","typeString":"struct GameCard.Player storage ref"}},"id":4300,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenIdArray","nodeType":"MemberAccess","referencedDeclaration":3174,"src":"12514:48:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage","typeString":"uint256[3] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"12476:86:16"},{"assignments":[null,4303,null,4305],"declarations":[null,{"constant":false,"id":4303,"mutability":"mutable","name":"player1tokenId1Uri","nameLocation":"12617:18:16","nodeType":"VariableDeclaration","scope":4379,"src":"12603:32:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4302,"name":"string","nodeType":"ElementaryTypeName","src":"12603:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},null,{"constant":false,"id":4305,"mutability":"mutable","name":"player1tokenId1BoxType","nameLocation":"12673:22:16","nodeType":"VariableDeclaration","scope":4379,"src":"12665:30:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4304,"name":"uint256","nodeType":"ElementaryTypeName","src":"12665:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4312,"initialValue":{"arguments":[{"baseExpression":{"id":4308,"name":"player1TokenArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4296,"src":"12738:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"id":4310,"indexExpression":{"hexValue":"30","id":4309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12756:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12738:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4306,"name":"i_contractNftBox","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"12709:16:16","typeDescriptions":{"typeIdentifier":"t_contract$_NftBox_$5533","typeString":"contract NftBox"}},"id":4307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mappingNfts","nodeType":"MemberAccess","referencedDeclaration":4702,"src":"12709:28:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$_t_string_memory_ptr_$_t_bool_$_t_uint256_$","typeString":"function (uint256) view external returns (uint256,string memory,bool,uint256)"}},"id":4311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12709:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_string_memory_ptr_$_t_bool_$_t_uint256_$","typeString":"tuple(uint256,string memory,bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"12573:186:16"},{"assignments":[null,4314,null,4316],"declarations":[null,{"constant":false,"id":4314,"mutability":"mutable","name":"player1tokenId2Uri","nameLocation":"12814:18:16","nodeType":"VariableDeclaration","scope":4379,"src":"12800:32:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4313,"name":"string","nodeType":"ElementaryTypeName","src":"12800:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},null,{"constant":false,"id":4316,"mutability":"mutable","name":"player1tokenId2BoxType","nameLocation":"12870:22:16","nodeType":"VariableDeclaration","scope":4379,"src":"12862:30:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4315,"name":"uint256","nodeType":"ElementaryTypeName","src":"12862:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4323,"initialValue":{"arguments":[{"baseExpression":{"id":4319,"name":"player1TokenArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4296,"src":"12935:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"id":4321,"indexExpression":{"hexValue":"31","id":4320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12953:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12935:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4317,"name":"i_contractNftBox","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"12906:16:16","typeDescriptions":{"typeIdentifier":"t_contract$_NftBox_$5533","typeString":"contract NftBox"}},"id":4318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mappingNfts","nodeType":"MemberAccess","referencedDeclaration":4702,"src":"12906:28:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$_t_string_memory_ptr_$_t_bool_$_t_uint256_$","typeString":"function (uint256) view external returns (uint256,string memory,bool,uint256)"}},"id":4322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12906:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_string_memory_ptr_$_t_bool_$_t_uint256_$","typeString":"tuple(uint256,string memory,bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"12770:186:16"},{"assignments":[null,4325,null,4327],"declarations":[null,{"constant":false,"id":4325,"mutability":"mutable","name":"player1tokenId3Uri","nameLocation":"13011:18:16","nodeType":"VariableDeclaration","scope":4379,"src":"12997:32:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4324,"name":"string","nodeType":"ElementaryTypeName","src":"12997:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},null,{"constant":false,"id":4327,"mutability":"mutable","name":"player1tokenId3BoxType","nameLocation":"13067:22:16","nodeType":"VariableDeclaration","scope":4379,"src":"13059:30:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4326,"name":"uint256","nodeType":"ElementaryTypeName","src":"13059:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4334,"initialValue":{"arguments":[{"baseExpression":{"id":4330,"name":"player1TokenArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4296,"src":"13132:17:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"id":4332,"indexExpression":{"hexValue":"32","id":4331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13150:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13132:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4328,"name":"i_contractNftBox","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"13103:16:16","typeDescriptions":{"typeIdentifier":"t_contract$_NftBox_$5533","typeString":"contract NftBox"}},"id":4329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mappingNfts","nodeType":"MemberAccess","referencedDeclaration":4702,"src":"13103:28:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$_t_string_memory_ptr_$_t_bool_$_t_uint256_$","typeString":"function (uint256) view external returns (uint256,string memory,bool,uint256)"}},"id":4333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13103:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_string_memory_ptr_$_t_bool_$_t_uint256_$","typeString":"tuple(uint256,string memory,bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"12967:186:16"},{"assignments":[4339],"declarations":[{"constant":false,"id":4339,"mutability":"mutable","name":"character1","nameLocation":"13191:10:16","nodeType":"VariableDeclaration","scope":4379,"src":"13166:35:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person"},"typeName":{"id":4338,"nodeType":"UserDefinedTypeName","pathNode":{"id":4337,"name":"Characters.Person","nodeType":"IdentifierPath","referencedDeclaration":2964,"src":"13166:17:16"},"referencedDeclaration":2964,"src":"13166:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_storage_ptr","typeString":"struct Characters.Person"}},"visibility":"internal"}],"id":4344,"initialValue":{"arguments":[{"id":4341,"name":"player1tokenId1BoxType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"13226:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4342,"name":"player1tokenId1Uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4303,"src":"13263:18:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4340,"name":"getData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"13204:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$_t_struct$_Person_$2964_memory_ptr_$","typeString":"function (uint256,string memory) returns (struct Characters.Person memory)"}},"id":4343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13204:88:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}},"nodeType":"VariableDeclarationStatement","src":"13166:126:16"},{"assignments":[4349],"declarations":[{"constant":false,"id":4349,"mutability":"mutable","name":"character2","nameLocation":"13328:10:16","nodeType":"VariableDeclaration","scope":4379,"src":"13303:35:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person"},"typeName":{"id":4348,"nodeType":"UserDefinedTypeName","pathNode":{"id":4347,"name":"Characters.Person","nodeType":"IdentifierPath","referencedDeclaration":2964,"src":"13303:17:16"},"referencedDeclaration":2964,"src":"13303:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_storage_ptr","typeString":"struct Characters.Person"}},"visibility":"internal"}],"id":4354,"initialValue":{"arguments":[{"id":4351,"name":"player1tokenId2BoxType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"13363:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4352,"name":"player1tokenId2Uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4314,"src":"13400:18:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4350,"name":"getData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"13341:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$_t_struct$_Person_$2964_memory_ptr_$","typeString":"function (uint256,string memory) returns (struct Characters.Person memory)"}},"id":4353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13341:88:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}},"nodeType":"VariableDeclarationStatement","src":"13303:126:16"},{"assignments":[4359],"declarations":[{"constant":false,"id":4359,"mutability":"mutable","name":"character3","nameLocation":"13465:10:16","nodeType":"VariableDeclaration","scope":4379,"src":"13440:35:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person"},"typeName":{"id":4358,"nodeType":"UserDefinedTypeName","pathNode":{"id":4357,"name":"Characters.Person","nodeType":"IdentifierPath","referencedDeclaration":2964,"src":"13440:17:16"},"referencedDeclaration":2964,"src":"13440:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_storage_ptr","typeString":"struct Characters.Person"}},"visibility":"internal"}],"id":4364,"initialValue":{"arguments":[{"id":4361,"name":"player1tokenId3BoxType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4327,"src":"13500:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4362,"name":"player1tokenId3Uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4325,"src":"13537:18:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4360,"name":"getData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"13478:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$_t_struct$_Person_$2964_memory_ptr_$","typeString":"function (uint256,string memory) returns (struct Characters.Person memory)"}},"id":4363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13478:88:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}},"nodeType":"VariableDeclarationStatement","src":"13440:126:16"},{"assignments":[4371],"declarations":[{"constant":false,"id":4371,"mutability":"mutable","name":"array","nameLocation":"13605:5:16","nodeType":"VariableDeclaration","scope":4379,"src":"13577:33:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_memory_ptr_$3_memory_ptr","typeString":"struct Characters.Person[3]"},"typeName":{"baseType":{"id":4369,"nodeType":"UserDefinedTypeName","pathNode":{"id":4368,"name":"Characters.Person","nodeType":"IdentifierPath","referencedDeclaration":2964,"src":"13577:17:16"},"referencedDeclaration":2964,"src":"13577:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_storage_ptr","typeString":"struct Characters.Person"}},"id":4370,"length":{"hexValue":"33","id":4367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13595:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"13577:20:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_storage_$3_storage_ptr","typeString":"struct Characters.Person[3]"}},"visibility":"internal"}],"id":4376,"initialValue":{"components":[{"id":4372,"name":"character1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"13628:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}},{"id":4373,"name":"character2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4349,"src":"13653:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}},{"id":4374,"name":"character3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"13678:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}}],"id":4375,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13613:86:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_memory_ptr_$3_memory_ptr","typeString":"struct Characters.Person memory[3] memory"}},"nodeType":"VariableDeclarationStatement","src":"13577:122:16"},{"expression":{"id":4377,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4371,"src":"13717:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_memory_ptr_$3_memory_ptr","typeString":"struct Characters.Person memory[3] memory"}},"functionReturnParameters":4290,"id":4378,"nodeType":"Return","src":"13710:12:16"}]},"id":4380,"implemented":true,"kind":"function","modifiers":[],"name":"getCharacter","nameLocation":"12374:12:16","nodeType":"FunctionDefinition","parameters":{"id":4284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4283,"mutability":"mutable","name":"player","nameLocation":"12405:6:16","nodeType":"VariableDeclaration","scope":4380,"src":"12397:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4282,"name":"address","nodeType":"ElementaryTypeName","src":"12397:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12386:32:16"},"returnParameters":{"id":4290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4289,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4380,"src":"12436:27:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_memory_ptr_$3_memory_ptr","typeString":"struct Characters.Person[3]"},"typeName":{"baseType":{"id":4286,"nodeType":"UserDefinedTypeName","pathNode":{"id":4285,"name":"Characters.Person","nodeType":"IdentifierPath","referencedDeclaration":2964,"src":"12436:17:16"},"referencedDeclaration":2964,"src":"12436:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_storage_ptr","typeString":"struct Characters.Person"}},"id":4288,"length":{"hexValue":"33","id":4287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12454:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"12436:20:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Person_$2964_storage_$3_storage_ptr","typeString":"struct Characters.Person[3]"}},"visibility":"internal"}],"src":"12435:29:16"},"scope":4625,"src":"12365:1365:16","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":4597,"nodeType":"Block","src":"13864:3288:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4390,"name":"boxType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4382,"src":"13879:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13890:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13879:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4458,"name":"boxType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4382,"src":"14970:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14981:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14970:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4526,"name":"boxType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4382,"src":"16055:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"32","id":4527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16066:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"16055:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4594,"nodeType":"IfStatement","src":"16051:1094:16","trueBody":{"id":4593,"nodeType":"Block","src":"16069:1076:16","statements":[{"body":{"id":4591,"nodeType":"Block","src":"16225:909:16","statements":[{"assignments":[4542,null,null,null],"declarations":[{"constant":false,"id":4542,"mutability":"mutable","name":"tokenUriLoop","nameLocation":"16259:12:16","nodeType":"VariableDeclaration","scope":4591,"src":"16245:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4541,"name":"string","nodeType":"ElementaryTypeName","src":"16245:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},null,null,null],"id":4547,"initialValue":{"arguments":[{"id":4545,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"16340:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4543,"name":"i_contractCharacter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"16281:19:16","typeDescriptions":{"typeIdentifier":"t_contract$_Characters_$3143","typeString":"contract Characters"}},"id":4544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"legendaryPersons","nodeType":"MemberAccess","referencedDeclaration":2976,"src":"16281:58:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"function (uint256) view external returns (string memory,uint256,uint256,uint256)"}},"id":4546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16281:61:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(string memory,uint256,uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16244:98:16"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":4551,"name":"tokenUriLoop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4542,"src":"16414:12:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4549,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16397:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"16397:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16397:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4548,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"16387:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16387:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":4557,"name":"tokenUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4384,"src":"16480:8:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4555,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16463:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"16463:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16463:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4554,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"16453:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16453:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"16387:103:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4590,"nodeType":"IfStatement","src":"16361:758:16","trueBody":{"id":4589,"nodeType":"Block","src":"16510:609:16","statements":[{"assignments":[4562,4564,4566,4568],"declarations":[{"constant":false,"id":4562,"mutability":"mutable","name":"tokenUri","nameLocation":"16574:8:16","nodeType":"VariableDeclaration","scope":4589,"src":"16560:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4561,"name":"string","nodeType":"ElementaryTypeName","src":"16560:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4564,"mutability":"mutable","name":"strength","nameLocation":"16617:8:16","nodeType":"VariableDeclaration","scope":4589,"src":"16609:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4563,"name":"uint256","nodeType":"ElementaryTypeName","src":"16609:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4566,"mutability":"mutable","name":"dexterity","nameLocation":"16660:9:16","nodeType":"VariableDeclaration","scope":4589,"src":"16652:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4565,"name":"uint256","nodeType":"ElementaryTypeName","src":"16652:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4568,"mutability":"mutable","name":"intellect","nameLocation":"16704:9:16","nodeType":"VariableDeclaration","scope":4589,"src":"16696:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4567,"name":"uint256","nodeType":"ElementaryTypeName","src":"16696:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4573,"initialValue":{"arguments":[{"id":4571,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"16776:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4569,"name":"i_contractCharacter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"16739:19:16","typeDescriptions":{"typeIdentifier":"t_contract$_Characters_$3143","typeString":"contract Characters"}},"id":4570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"legendaryPersons","nodeType":"MemberAccess","referencedDeclaration":2976,"src":"16739:36:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"function (uint256) view external returns (string memory,uint256,uint256,uint256)"}},"id":4572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16739:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(string memory,uint256,uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16533:245:16"},{"assignments":[4578],"declarations":[{"constant":false,"id":4578,"mutability":"mutable","name":"character","nameLocation":"16828:9:16","nodeType":"VariableDeclaration","scope":4589,"src":"16803:34:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person"},"typeName":{"id":4577,"nodeType":"UserDefinedTypeName","pathNode":{"id":4576,"name":"Characters.Person","nodeType":"IdentifierPath","referencedDeclaration":2964,"src":"16803:17:16"},"referencedDeclaration":2964,"src":"16803:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_storage_ptr","typeString":"struct Characters.Person"}},"visibility":"internal"}],"id":4586,"initialValue":{"arguments":[{"id":4581,"name":"tokenUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"16895:8:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4582,"name":"strength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4564,"src":"16938:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4583,"name":"dexterity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"16982:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4584,"name":"intellect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4568,"src":"17027:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4579,"name":"Characters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"16840:10:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Characters_$3143_$","typeString":"type(contract Characters)"}},"id":4580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"Person","nodeType":"MemberAccess","referencedDeclaration":2964,"src":"16840:17:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Person_$2964_storage_ptr_$","typeString":"type(struct Characters.Person storage pointer)"}},"id":4585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["tokenUri","attack","defence","tactics"],"nodeType":"FunctionCall","src":"16840:220:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}},"nodeType":"VariableDeclarationStatement","src":"16803:257:16"},{"expression":{"id":4587,"name":"character","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"17090:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}},"functionReturnParameters":4389,"id":4588,"nodeType":"Return","src":"17083:16:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4533,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"16139:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4534,"name":"i_contractCharacter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"16143:19:16","typeDescriptions":{"typeIdentifier":"t_contract$_Characters_$3143","typeString":"contract Characters"}},"id":4535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"legendaryPersonsLength","nodeType":"MemberAccess","referencedDeclaration":3142,"src":"16143:42:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":4536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16143:44:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16139:48:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4592,"initializationExpression":{"assignments":[4530],"declarations":[{"constant":false,"id":4530,"mutability":"mutable","name":"i","nameLocation":"16115:1:16","nodeType":"VariableDeclaration","scope":4592,"src":"16107:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4529,"name":"uint256","nodeType":"ElementaryTypeName","src":"16107:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4532,"initialValue":{"hexValue":"30","id":4531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16119:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"16107:13:16"},"loopExpression":{"expression":{"id":4539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"16206:3:16","subExpression":{"id":4538,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"16206:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4540,"nodeType":"ExpressionStatement","src":"16206:3:16"},"nodeType":"ForStatement","src":"16084:1050:16"}]}},"id":4595,"nodeType":"IfStatement","src":"14966:2179:16","trueBody":{"id":4525,"nodeType":"Block","src":"14984:1061:16","statements":[{"body":{"id":4523,"nodeType":"Block","src":"15135:899:16","statements":[{"assignments":[4474,null,null,null],"declarations":[{"constant":false,"id":4474,"mutability":"mutable","name":"tokenUriLoop","nameLocation":"15169:12:16","nodeType":"VariableDeclaration","scope":4523,"src":"15155:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4473,"name":"string","nodeType":"ElementaryTypeName","src":"15155:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},null,null,null],"id":4479,"initialValue":{"arguments":[{"id":4477,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4462,"src":"15245:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4475,"name":"i_contractCharacter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"15191:19:16","typeDescriptions":{"typeIdentifier":"t_contract$_Characters_$3143","typeString":"contract Characters"}},"id":4476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"rarePersons","nodeType":"MemberAccess","referencedDeclaration":2972,"src":"15191:53:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"function (uint256) view external returns (string memory,uint256,uint256,uint256)"}},"id":4478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15191:56:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(string memory,uint256,uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15154:93:16"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":4483,"name":"tokenUriLoop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4474,"src":"15319:12:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4481,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"15302:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"15302:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15302:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4480,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"15292:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15292:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":4489,"name":"tokenUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4384,"src":"15385:8:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4487,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"15368:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"15368:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15368:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4486,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"15358:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15358:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"15292:103:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4522,"nodeType":"IfStatement","src":"15266:753:16","trueBody":{"id":4521,"nodeType":"Block","src":"15415:604:16","statements":[{"assignments":[4494,4496,4498,4500],"declarations":[{"constant":false,"id":4494,"mutability":"mutable","name":"tokenUri","nameLocation":"15479:8:16","nodeType":"VariableDeclaration","scope":4521,"src":"15465:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4493,"name":"string","nodeType":"ElementaryTypeName","src":"15465:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4496,"mutability":"mutable","name":"strength","nameLocation":"15522:8:16","nodeType":"VariableDeclaration","scope":4521,"src":"15514:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4495,"name":"uint256","nodeType":"ElementaryTypeName","src":"15514:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4498,"mutability":"mutable","name":"dexterity","nameLocation":"15565:9:16","nodeType":"VariableDeclaration","scope":4521,"src":"15557:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4497,"name":"uint256","nodeType":"ElementaryTypeName","src":"15557:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4500,"mutability":"mutable","name":"intellect","nameLocation":"15609:9:16","nodeType":"VariableDeclaration","scope":4521,"src":"15601:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4499,"name":"uint256","nodeType":"ElementaryTypeName","src":"15601:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4505,"initialValue":{"arguments":[{"id":4503,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4462,"src":"15676:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4501,"name":"i_contractCharacter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"15644:19:16","typeDescriptions":{"typeIdentifier":"t_contract$_Characters_$3143","typeString":"contract Characters"}},"id":4502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"rarePersons","nodeType":"MemberAccess","referencedDeclaration":2972,"src":"15644:31:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"function (uint256) view external returns (string memory,uint256,uint256,uint256)"}},"id":4504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15644:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(string memory,uint256,uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15438:240:16"},{"assignments":[4510],"declarations":[{"constant":false,"id":4510,"mutability":"mutable","name":"character","nameLocation":"15728:9:16","nodeType":"VariableDeclaration","scope":4521,"src":"15703:34:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person"},"typeName":{"id":4509,"nodeType":"UserDefinedTypeName","pathNode":{"id":4508,"name":"Characters.Person","nodeType":"IdentifierPath","referencedDeclaration":2964,"src":"15703:17:16"},"referencedDeclaration":2964,"src":"15703:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_storage_ptr","typeString":"struct Characters.Person"}},"visibility":"internal"}],"id":4518,"initialValue":{"arguments":[{"id":4513,"name":"tokenUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4494,"src":"15795:8:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4514,"name":"strength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"15838:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4515,"name":"dexterity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"15882:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4516,"name":"intellect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4500,"src":"15927:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4511,"name":"Characters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"15740:10:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Characters_$3143_$","typeString":"type(contract Characters)"}},"id":4512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"Person","nodeType":"MemberAccess","referencedDeclaration":2964,"src":"15740:17:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Person_$2964_storage_ptr_$","typeString":"type(struct Characters.Person storage pointer)"}},"id":4517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["tokenUri","attack","defence","tactics"],"nodeType":"FunctionCall","src":"15740:220:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}},"nodeType":"VariableDeclarationStatement","src":"15703:257:16"},{"expression":{"id":4519,"name":"character","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4510,"src":"15990:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}},"functionReturnParameters":4389,"id":4520,"nodeType":"Return","src":"15983:16:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4465,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4462,"src":"15054:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4466,"name":"i_contractCharacter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"15058:19:16","typeDescriptions":{"typeIdentifier":"t_contract$_Characters_$3143","typeString":"contract Characters"}},"id":4467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"rarePersonsLength","nodeType":"MemberAccess","referencedDeclaration":3133,"src":"15058:37:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15058:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15054:43:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4524,"initializationExpression":{"assignments":[4462],"declarations":[{"constant":false,"id":4462,"mutability":"mutable","name":"i","nameLocation":"15030:1:16","nodeType":"VariableDeclaration","scope":4524,"src":"15022:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4461,"name":"uint256","nodeType":"ElementaryTypeName","src":"15022:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4464,"initialValue":{"hexValue":"30","id":4463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15034:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"15022:13:16"},"loopExpression":{"expression":{"id":4471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15116:3:16","subExpression":{"id":4470,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4462,"src":"15116:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4472,"nodeType":"ExpressionStatement","src":"15116:3:16"},"nodeType":"ForStatement","src":"14999:1035:16"}]}},"id":4596,"nodeType":"IfStatement","src":"13875:3270:16","trueBody":{"id":4457,"nodeType":"Block","src":"13893:1067:16","statements":[{"body":{"id":4455,"nodeType":"Block","src":"14046:903:16","statements":[{"assignments":[4406,null,null,null],"declarations":[{"constant":false,"id":4406,"mutability":"mutable","name":"tokenUriLoop","nameLocation":"14080:12:16","nodeType":"VariableDeclaration","scope":4455,"src":"14066:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4405,"name":"string","nodeType":"ElementaryTypeName","src":"14066:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},null,null,null],"id":4411,"initialValue":{"arguments":[{"id":4409,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4394,"src":"14158:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4407,"name":"i_contractCharacter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"14102:19:16","typeDescriptions":{"typeIdentifier":"t_contract$_Characters_$3143","typeString":"contract Characters"}},"id":4408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"normalPersons","nodeType":"MemberAccess","referencedDeclaration":2968,"src":"14102:55:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"function (uint256) view external returns (string memory,uint256,uint256,uint256)"}},"id":4410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14102:58:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(string memory,uint256,uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"14065:95:16"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":4415,"name":"tokenUriLoop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4406,"src":"14232:12:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4413,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"14215:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"14215:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14215:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4412,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"14205:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14205:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":4421,"name":"tokenUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4384,"src":"14298:8:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4419,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"14281:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"14281:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14281:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4418,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"14271:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14271:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"14205:103:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4454,"nodeType":"IfStatement","src":"14179:755:16","trueBody":{"id":4453,"nodeType":"Block","src":"14328:606:16","statements":[{"assignments":[4426,4428,4430,4432],"declarations":[{"constant":false,"id":4426,"mutability":"mutable","name":"tokenUri","nameLocation":"14392:8:16","nodeType":"VariableDeclaration","scope":4453,"src":"14378:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4425,"name":"string","nodeType":"ElementaryTypeName","src":"14378:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4428,"mutability":"mutable","name":"strength","nameLocation":"14435:8:16","nodeType":"VariableDeclaration","scope":4453,"src":"14427:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4427,"name":"uint256","nodeType":"ElementaryTypeName","src":"14427:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4430,"mutability":"mutable","name":"dexterity","nameLocation":"14478:9:16","nodeType":"VariableDeclaration","scope":4453,"src":"14470:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4429,"name":"uint256","nodeType":"ElementaryTypeName","src":"14470:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4432,"mutability":"mutable","name":"intellect","nameLocation":"14522:9:16","nodeType":"VariableDeclaration","scope":4453,"src":"14514:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4431,"name":"uint256","nodeType":"ElementaryTypeName","src":"14514:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4437,"initialValue":{"arguments":[{"id":4435,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4394,"src":"14591:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4433,"name":"i_contractCharacter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"14557:19:16","typeDescriptions":{"typeIdentifier":"t_contract$_Characters_$3143","typeString":"contract Characters"}},"id":4434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"normalPersons","nodeType":"MemberAccess","referencedDeclaration":2968,"src":"14557:33:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"function (uint256) view external returns (string memory,uint256,uint256,uint256)"}},"id":4436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14557:36:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(string memory,uint256,uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"14351:242:16"},{"assignments":[4442],"declarations":[{"constant":false,"id":4442,"mutability":"mutable","name":"character","nameLocation":"14643:9:16","nodeType":"VariableDeclaration","scope":4453,"src":"14618:34:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person"},"typeName":{"id":4441,"nodeType":"UserDefinedTypeName","pathNode":{"id":4440,"name":"Characters.Person","nodeType":"IdentifierPath","referencedDeclaration":2964,"src":"14618:17:16"},"referencedDeclaration":2964,"src":"14618:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_storage_ptr","typeString":"struct Characters.Person"}},"visibility":"internal"}],"id":4450,"initialValue":{"arguments":[{"id":4445,"name":"tokenUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4426,"src":"14710:8:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4446,"name":"strength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4428,"src":"14753:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4447,"name":"dexterity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4430,"src":"14797:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4448,"name":"intellect","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"14842:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4443,"name":"Characters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"14655:10:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Characters_$3143_$","typeString":"type(contract Characters)"}},"id":4444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"Person","nodeType":"MemberAccess","referencedDeclaration":2964,"src":"14655:17:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Person_$2964_storage_ptr_$","typeString":"type(struct Characters.Person storage pointer)"}},"id":4449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["tokenUri","attack","defence","tactics"],"nodeType":"FunctionCall","src":"14655:220:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}},"nodeType":"VariableDeclarationStatement","src":"14618:257:16"},{"expression":{"id":4451,"name":"character","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4442,"src":"14905:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person memory"}},"functionReturnParameters":4389,"id":4452,"nodeType":"Return","src":"14898:16:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4397,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4394,"src":"13963:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4398,"name":"i_contractCharacter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"13967:19:16","typeDescriptions":{"typeIdentifier":"t_contract$_Characters_$3143","typeString":"contract Characters"}},"id":4399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"normalPersonsLength","nodeType":"MemberAccess","referencedDeclaration":3124,"src":"13967:39:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":4400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13967:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13963:45:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4456,"initializationExpression":{"assignments":[4394],"declarations":[{"constant":false,"id":4394,"mutability":"mutable","name":"i","nameLocation":"13939:1:16","nodeType":"VariableDeclaration","scope":4456,"src":"13931:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4393,"name":"uint256","nodeType":"ElementaryTypeName","src":"13931:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4396,"initialValue":{"hexValue":"30","id":4395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13943:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13931:13:16"},"loopExpression":{"expression":{"id":4403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14027:3:16","subExpression":{"id":4402,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4394,"src":"14027:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4404,"nodeType":"ExpressionStatement","src":"14027:3:16"},"nodeType":"ForStatement","src":"13908:1041:16"}]}}]},"id":4598,"implemented":true,"kind":"function","modifiers":[],"name":"getData","nameLocation":"13747:7:16","nodeType":"FunctionDefinition","parameters":{"id":4385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4382,"mutability":"mutable","name":"boxType","nameLocation":"13773:7:16","nodeType":"VariableDeclaration","scope":4598,"src":"13765:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4381,"name":"uint256","nodeType":"ElementaryTypeName","src":"13765:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4384,"mutability":"mutable","name":"tokenUri","nameLocation":"13805:8:16","nodeType":"VariableDeclaration","scope":4598,"src":"13791:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4383,"name":"string","nodeType":"ElementaryTypeName","src":"13791:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13754:66:16"},"returnParameters":{"id":4389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4598,"src":"13838:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_memory_ptr","typeString":"struct Characters.Person"},"typeName":{"id":4387,"nodeType":"UserDefinedTypeName","pathNode":{"id":4386,"name":"Characters.Person","nodeType":"IdentifierPath","referencedDeclaration":2964,"src":"13838:17:16"},"referencedDeclaration":2964,"src":"13838:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_Person_$2964_storage_ptr","typeString":"struct Characters.Person"}},"visibility":"internal"}],"src":"13837:26:16"},"scope":4625,"src":"13738:3414:16","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":4606,"nodeType":"Block","src":"17219:47:16","statements":[{"expression":{"expression":{"id":4603,"name":"currentPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"17237:14:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"17237:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4602,"id":4605,"nodeType":"Return","src":"17230:28:16"}]},"functionSelector":"02cac05c","id":4607,"implemented":true,"kind":"function","modifiers":[],"name":"getCurrentPlayers","nameLocation":"17169:17:16","nodeType":"FunctionDefinition","parameters":{"id":4599,"nodeType":"ParameterList","parameters":[],"src":"17186:2:16"},"returnParameters":{"id":4602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4601,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4607,"src":"17210:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4600,"name":"uint256","nodeType":"ElementaryTypeName","src":"17210:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17209:9:16"},"scope":4625,"src":"17160:106:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4623,"nodeType":"Block","src":"17379:65:16","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":4616,"name":"s_addressInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"17397:13:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$3180_storage_$","typeString":"mapping(address => struct GameCard.Player storage ref)"}},"id":4618,"indexExpression":{"id":4617,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4609,"src":"17411:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17397:19:16","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3180_storage","typeString":"struct GameCard.Player storage ref"}},"id":4619,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenIdArray","nodeType":"MemberAccess","referencedDeclaration":3174,"src":"17397:32:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage","typeString":"uint256[3] storage ref"}},"id":4621,"indexExpression":{"id":4620,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4611,"src":"17430:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17397:39:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4615,"id":4622,"nodeType":"Return","src":"17390:46:16"}]},"functionSelector":"570d2f20","id":4624,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenIds","nameLocation":"17283:11:16","nodeType":"FunctionDefinition","parameters":{"id":4612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4609,"mutability":"mutable","name":"user","nameLocation":"17313:4:16","nodeType":"VariableDeclaration","scope":4624,"src":"17305:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4608,"name":"address","nodeType":"ElementaryTypeName","src":"17305:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4611,"mutability":"mutable","name":"index","nameLocation":"17336:5:16","nodeType":"VariableDeclaration","scope":4624,"src":"17328:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4610,"name":"uint256","nodeType":"ElementaryTypeName","src":"17328:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17294:54:16"},"returnParameters":{"id":4615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4614,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4624,"src":"17370:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4613,"name":"uint256","nodeType":"ElementaryTypeName","src":"17370:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17369:9:16"},"scope":4625,"src":"17274:170:16","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":4626,"src":"431:17016:16","usedErrors":[8,3151,3153,3155,3157,3159]}],"src":"33:17416:16"},"id":16},"contracts/NftBox.sol":{"ast":{"absolutePath":"contracts/NftBox.sol","exportedSymbols":{"Address":[1855],"AggregatorV3Interface":[103],"Characters":[3143],"Context":[1877],"ERC165":[2076],"ERC721":[1239],"ERC721URIStorage":[1498],"IERC165":[2088],"IERC721":[1355],"IERC721Metadata":[1525],"IERC721Receiver":[1373],"Math":[2953],"NftBox":[5533],"NftBox__AlreadyOpened":[4641],"NftBox__NeedMoreETHSent":[4635],"NftBox__NotNftAddressCalling":[4645],"NftBox__NotOwner":[4637],"NftBox__TokenIdNotExist":[4639],"NftBox__TransferFailed":[4643],"Ownable":[312],"Strings":[2052],"VRFConsumerBaseV2":[57],"VRFCoordinatorV2Interface":[199]},"id":5534,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4627,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"33:23:17"},{"absolutePath":"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol","file":"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol","id":4628,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5534,"sourceUnit":58,"src":"60:61:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","id":4629,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5534,"sourceUnit":200,"src":"123:80:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","id":4630,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5534,"sourceUnit":1499,"src":"207:78:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","id":4631,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5534,"sourceUnit":104,"src":"287:76:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":4632,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5534,"sourceUnit":313,"src":"365:52:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/Characters.sol","file":"./Characters.sol","id":4633,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5534,"sourceUnit":3144,"src":"421:26:17","symbolAliases":[],"unitAlias":""},{"id":4635,"name":"NftBox__NeedMoreETHSent","nameLocation":"457:23:17","nodeType":"ErrorDefinition","parameters":{"id":4634,"nodeType":"ParameterList","parameters":[],"src":"480:2:17"},"src":"451:32:17"},{"id":4637,"name":"NftBox__NotOwner","nameLocation":"491:16:17","nodeType":"ErrorDefinition","parameters":{"id":4636,"nodeType":"ParameterList","parameters":[],"src":"507:2:17"},"src":"485:25:17"},{"id":4639,"name":"NftBox__TokenIdNotExist","nameLocation":"518:23:17","nodeType":"ErrorDefinition","parameters":{"id":4638,"nodeType":"ParameterList","parameters":[],"src":"541:2:17"},"src":"512:32:17"},{"id":4641,"name":"NftBox__AlreadyOpened","nameLocation":"552:21:17","nodeType":"ErrorDefinition","parameters":{"id":4640,"nodeType":"ParameterList","parameters":[],"src":"573:2:17"},"src":"546:30:17"},{"id":4643,"name":"NftBox__TransferFailed","nameLocation":"584:22:17","nodeType":"ErrorDefinition","parameters":{"id":4642,"nodeType":"ParameterList","parameters":[],"src":"606:2:17"},"src":"578:31:17"},{"id":4645,"name":"NftBox__NotNftAddressCalling","nameLocation":"617:28:17","nodeType":"ErrorDefinition","parameters":{"id":4644,"nodeType":"ParameterList","parameters":[],"src":"645:2:17"},"src":"611:37:17"},{"abstract":false,"baseContracts":[{"baseName":{"id":4646,"name":"VRFConsumerBaseV2","nodeType":"IdentifierPath","referencedDeclaration":57,"src":"671:17:17"},"id":4647,"nodeType":"InheritanceSpecifier","src":"671:17:17"},{"baseName":{"id":4648,"name":"ERC721URIStorage","nodeType":"IdentifierPath","referencedDeclaration":1498,"src":"690:16:17"},"id":4649,"nodeType":"InheritanceSpecifier","src":"690:16:17"},{"baseName":{"id":4650,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":312,"src":"708:7:17"},"id":4651,"nodeType":"InheritanceSpecifier","src":"708:7:17"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5533,"linearizedBaseContracts":[5533,312,1498,1239,1525,1355,2076,2088,1877,57],"name":"NftBox","nameLocation":"661:6:17","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"8607d5c9","id":4654,"mutability":"mutable","name":"i_charactersContract","nameLocation":"741:20:17","nodeType":"VariableDeclaration","scope":5533,"src":"723:38:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Characters_$3143","typeString":"contract Characters"},"typeName":{"id":4653,"nodeType":"UserDefinedTypeName","pathNode":{"id":4652,"name":"Characters","nodeType":"IdentifierPath","referencedDeclaration":3143,"src":"723:10:17"},"referencedDeclaration":3143,"src":"723:10:17","typeDescriptions":{"typeIdentifier":"t_contract$_Characters_$3143","typeString":"contract Characters"}},"visibility":"public"},{"constant":false,"functionSelector":"05114490","id":4656,"mutability":"mutable","name":"tradeNftAddress","nameLocation":"828:15:17","nodeType":"VariableDeclaration","scope":5533,"src":"813:30:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4655,"name":"address","nodeType":"ElementaryTypeName","src":"813:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":4658,"mutability":"mutable","name":"s_tokenCounter","nameLocation":"886:14:17","nodeType":"VariableDeclaration","scope":5533,"src":"870:30:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4657,"name":"uint256","nodeType":"ElementaryTypeName","src":"870:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":4661,"mutability":"mutable","name":"NftBoxesUri","nameLocation":"968:11:17","nodeType":"VariableDeclaration","scope":5533,"src":"951:28:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string[]"},"typeName":{"baseType":{"id":4659,"name":"string","nodeType":"ElementaryTypeName","src":"951:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":4660,"nodeType":"ArrayTypeName","src":"951:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"private"},{"canonicalName":"NftBox.Nft","id":4670,"members":[{"constant":false,"id":4663,"mutability":"mutable","name":"tokenId","nameLocation":"1044:7:17","nodeType":"VariableDeclaration","scope":4670,"src":"1036:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4662,"name":"uint256","nodeType":"ElementaryTypeName","src":"1036:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4665,"mutability":"mutable","name":"tokenUri","nameLocation":"1069:8:17","nodeType":"VariableDeclaration","scope":4670,"src":"1062:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4664,"name":"string","nodeType":"ElementaryTypeName","src":"1062:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4667,"mutability":"mutable","name":"Boxopened","nameLocation":"1093:9:17","nodeType":"VariableDeclaration","scope":4670,"src":"1088:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4666,"name":"bool","nodeType":"ElementaryTypeName","src":"1088:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4669,"mutability":"mutable","name":"boxType","nameLocation":"1121:7:17","nodeType":"VariableDeclaration","scope":4670,"src":"1113:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4668,"name":"uint256","nodeType":"ElementaryTypeName","src":"1113:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Nft","nameLocation":"1021:3:17","nodeType":"StructDefinition","scope":5533,"src":"1014:165:17","visibility":"public"},{"constant":true,"functionSelector":"5ea83561","id":4673,"mutability":"constant","name":"PRICE_NORMAL_BOX_USD","nameLocation":"1230:20:17","nodeType":"VariableDeclaration","scope":5533,"src":"1206:49:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4671,"name":"uint256","nodeType":"ElementaryTypeName","src":"1206:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130","id":4672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1253:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"visibility":"public"},{"constant":true,"functionSelector":"2ce9e693","id":4676,"mutability":"constant","name":"PRICE_RARE_BOX_USD","nameLocation":"1286:18:17","nodeType":"VariableDeclaration","scope":5533,"src":"1262:47:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4674,"name":"uint256","nodeType":"ElementaryTypeName","src":"1262:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3530","id":4675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1307:2:17","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"visibility":"public"},{"constant":true,"functionSelector":"f5cb797c","id":4679,"mutability":"constant","name":"PRICE_LEGENDARY_BOX_USD","nameLocation":"1340:23:17","nodeType":"VariableDeclaration","scope":5533,"src":"1316:53:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4677,"name":"uint256","nodeType":"ElementaryTypeName","src":"1316:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313030","id":4678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1366:3:17","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"public"},{"constant":false,"id":4682,"mutability":"immutable","name":"i_vrfCoordinator","nameLocation":"1460:16:17","nodeType":"VariableDeclaration","scope":5533,"src":"1416:60:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$199","typeString":"contract VRFCoordinatorV2Interface"},"typeName":{"id":4681,"nodeType":"UserDefinedTypeName","pathNode":{"id":4680,"name":"VRFCoordinatorV2Interface","nodeType":"IdentifierPath","referencedDeclaration":199,"src":"1416:25:17"},"referencedDeclaration":199,"src":"1416:25:17","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$199","typeString":"contract VRFCoordinatorV2Interface"}},"visibility":"private"},{"constant":false,"id":4684,"mutability":"immutable","name":"i_subscriptionId","nameLocation":"1508:16:17","nodeType":"VariableDeclaration","scope":5533,"src":"1483:41:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4683,"name":"uint64","nodeType":"ElementaryTypeName","src":"1483:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"private"},{"constant":false,"id":4686,"mutability":"immutable","name":"i_gasLane","nameLocation":"1557:9:17","nodeType":"VariableDeclaration","scope":5533,"src":"1531:35:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4685,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1531:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4688,"mutability":"immutable","name":"i_callbackGasLimit","nameLocation":"1598:18:17","nodeType":"VariableDeclaration","scope":5533,"src":"1573:43:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4687,"name":"uint32","nodeType":"ElementaryTypeName","src":"1573:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"private"},{"constant":true,"id":4691,"mutability":"constant","name":"REQUEST_CONFIRMATIONS","nameLocation":"1647:21:17","nodeType":"VariableDeclaration","scope":5533,"src":"1623:49:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4689,"name":"uint16","nodeType":"ElementaryTypeName","src":"1623:6:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"33","id":4690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1671:1:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"private"},{"constant":true,"id":4694,"mutability":"constant","name":"NUM_WORDS","nameLocation":"1703:9:17","nodeType":"VariableDeclaration","scope":5533,"src":"1679:37:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4692,"name":"uint32","nodeType":"ElementaryTypeName","src":"1679:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"31","id":4693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1715:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":false,"id":4697,"mutability":"immutable","name":"i_priceFeed","nameLocation":"1781:11:17","nodeType":"VariableDeclaration","scope":5533,"src":"1741:51:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$103","typeString":"contract AggregatorV3Interface"},"typeName":{"id":4696,"nodeType":"UserDefinedTypeName","pathNode":{"id":4695,"name":"AggregatorV3Interface","nodeType":"IdentifierPath","referencedDeclaration":103,"src":"1741:21:17"},"referencedDeclaration":103,"src":"1741:21:17","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$103","typeString":"contract AggregatorV3Interface"}},"visibility":"private"},{"constant":false,"functionSelector":"bdc60bf9","id":4702,"mutability":"mutable","name":"mappingNfts","nameLocation":"1846:11:17","nodeType":"VariableDeclaration","scope":5533,"src":"1815:42:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Nft_$4670_storage_$","typeString":"mapping(uint256 => struct NftBox.Nft)"},"typeName":{"id":4701,"keyType":{"id":4698,"name":"uint256","nodeType":"ElementaryTypeName","src":"1823:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1815:23:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Nft_$4670_storage_$","typeString":"mapping(uint256 => struct NftBox.Nft)"},"valueType":{"id":4700,"nodeType":"UserDefinedTypeName","pathNode":{"id":4699,"name":"Nft","nodeType":"IdentifierPath","referencedDeclaration":4670,"src":"1834:3:17"},"referencedDeclaration":4670,"src":"1834:3:17","typeDescriptions":{"typeIdentifier":"t_struct$_Nft_$4670_storage_ptr","typeString":"struct NftBox.Nft"}}},"visibility":"public"},{"constant":false,"functionSelector":"007bb968","id":4706,"mutability":"mutable","name":"mappingRequestToToken","nameLocation":"1899:21:17","nodeType":"VariableDeclaration","scope":5533,"src":"1864:56:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":4705,"keyType":{"id":4703,"name":"uint256","nodeType":"ElementaryTypeName","src":"1872:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1864:27:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":4704,"name":"uint256","nodeType":"ElementaryTypeName","src":"1883:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"anonymous":false,"id":4716,"name":"NormalBoxMinted","nameLocation":"1949:15:17","nodeType":"EventDefinition","parameters":{"id":4715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4708,"indexed":false,"mutability":"mutable","name":"owner","nameLocation":"1983:5:17","nodeType":"VariableDeclaration","scope":4716,"src":"1975:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4707,"name":"address","nodeType":"ElementaryTypeName","src":"1975:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4710,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"2007:7:17","nodeType":"VariableDeclaration","scope":4716,"src":"1999:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4709,"name":"uint256","nodeType":"ElementaryTypeName","src":"1999:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4712,"indexed":false,"mutability":"mutable","name":"tokenUri","nameLocation":"2032:8:17","nodeType":"VariableDeclaration","scope":4716,"src":"2025:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4711,"name":"string","nodeType":"ElementaryTypeName","src":"2025:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4714,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"2059:5:17","nodeType":"VariableDeclaration","scope":4716,"src":"2051:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4713,"name":"uint256","nodeType":"ElementaryTypeName","src":"2051:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1964:107:17"},"src":"1943:129:17"},{"anonymous":false,"id":4726,"name":"RareBoxMinted","nameLocation":"2084:13:17","nodeType":"EventDefinition","parameters":{"id":4725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4718,"indexed":false,"mutability":"mutable","name":"owner","nameLocation":"2116:5:17","nodeType":"VariableDeclaration","scope":4726,"src":"2108:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4717,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4720,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"2140:7:17","nodeType":"VariableDeclaration","scope":4726,"src":"2132:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4719,"name":"uint256","nodeType":"ElementaryTypeName","src":"2132:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4722,"indexed":false,"mutability":"mutable","name":"tokenUri","nameLocation":"2165:8:17","nodeType":"VariableDeclaration","scope":4726,"src":"2158:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4721,"name":"string","nodeType":"ElementaryTypeName","src":"2158:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4724,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"2192:5:17","nodeType":"VariableDeclaration","scope":4726,"src":"2184:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4723,"name":"uint256","nodeType":"ElementaryTypeName","src":"2184:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2097:107:17"},"src":"2078:127:17"},{"anonymous":false,"id":4736,"name":"LegendaryBoxMinted","nameLocation":"2217:18:17","nodeType":"EventDefinition","parameters":{"id":4735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4728,"indexed":false,"mutability":"mutable","name":"owner","nameLocation":"2254:5:17","nodeType":"VariableDeclaration","scope":4736,"src":"2246:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4727,"name":"address","nodeType":"ElementaryTypeName","src":"2246:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4730,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"2278:7:17","nodeType":"VariableDeclaration","scope":4736,"src":"2270:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4729,"name":"uint256","nodeType":"ElementaryTypeName","src":"2270:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4732,"indexed":false,"mutability":"mutable","name":"tokenUri","nameLocation":"2303:8:17","nodeType":"VariableDeclaration","scope":4736,"src":"2296:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4731,"name":"string","nodeType":"ElementaryTypeName","src":"2296:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4734,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"2330:5:17","nodeType":"VariableDeclaration","scope":4736,"src":"2322:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4733,"name":"uint256","nodeType":"ElementaryTypeName","src":"2322:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2235:107:17"},"src":"2211:132:17"},{"anonymous":false,"id":4742,"name":"OpenBoxRandomRequested","nameLocation":"2355:22:17","nodeType":"EventDefinition","parameters":{"id":4741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4738,"indexed":false,"mutability":"mutable","name":"requestId","nameLocation":"2386:9:17","nodeType":"VariableDeclaration","scope":4742,"src":"2378:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4737,"name":"uint256","nodeType":"ElementaryTypeName","src":"2378:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4740,"indexed":false,"mutability":"mutable","name":"sender","nameLocation":"2405:6:17","nodeType":"VariableDeclaration","scope":4742,"src":"2397:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4739,"name":"address","nodeType":"ElementaryTypeName","src":"2397:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2377:35:17"},"src":"2349:64:17"},{"anonymous":false,"id":4750,"name":"BoxOpened","nameLocation":"2425:9:17","nodeType":"EventDefinition","parameters":{"id":4749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4744,"indexed":false,"mutability":"mutable","name":"owner","nameLocation":"2443:5:17","nodeType":"VariableDeclaration","scope":4750,"src":"2435:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4743,"name":"address","nodeType":"ElementaryTypeName","src":"2435:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4746,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"2458:7:17","nodeType":"VariableDeclaration","scope":4750,"src":"2450:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4745,"name":"uint256","nodeType":"ElementaryTypeName","src":"2450:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4748,"indexed":false,"mutability":"mutable","name":"tokenUri","nameLocation":"2474:8:17","nodeType":"VariableDeclaration","scope":4750,"src":"2467:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4747,"name":"string","nodeType":"ElementaryTypeName","src":"2467:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2434:49:17"},"src":"2419:65:17"},{"body":{"id":4771,"nodeType":"Block","src":"2558:147:17","statements":[{"assignments":[4757],"declarations":[{"constant":false,"id":4757,"mutability":"mutable","name":"owner","nameLocation":"2577:5:17","nodeType":"VariableDeclaration","scope":4771,"src":"2569:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4756,"name":"address","nodeType":"ElementaryTypeName","src":"2569:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4761,"initialValue":{"arguments":[{"id":4759,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4752,"src":"2593:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4758,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"2585:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":4760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2585:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2569:32:17"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4762,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4754,"src":"2616:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4763,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4757,"src":"2627:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2616:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4769,"nodeType":"IfStatement","src":"2612:74:17","trueBody":{"id":4768,"nodeType":"Block","src":"2634:52:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4765,"name":"NftBox__NotOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"2656:16:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2656:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4767,"nodeType":"RevertStatement","src":"2649:25:17"}]}},{"id":4770,"nodeType":"PlaceholderStatement","src":"2696:1:17"}]},"id":4772,"name":"isOwner","nameLocation":"2516:7:17","nodeType":"ModifierDefinition","parameters":{"id":4755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4752,"mutability":"mutable","name":"tokenId","nameLocation":"2532:7:17","nodeType":"VariableDeclaration","scope":4772,"src":"2524:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4751,"name":"uint256","nodeType":"ElementaryTypeName","src":"2524:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4754,"mutability":"mutable","name":"spender","nameLocation":"2549:7:17","nodeType":"VariableDeclaration","scope":4772,"src":"2541:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4753,"name":"address","nodeType":"ElementaryTypeName","src":"2541:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2523:34:17"},"src":"2507:198:17","virtual":false,"visibility":"internal"},{"body":{"id":4792,"nodeType":"Block","src":"2766:145:17","statements":[{"assignments":[4779],"declarations":[{"constant":false,"id":4779,"mutability":"mutable","name":"success","nameLocation":"2782:7:17","nodeType":"VariableDeclaration","scope":4792,"src":"2777:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4778,"name":"bool","nodeType":"ElementaryTypeName","src":"2777:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4783,"initialValue":{"arguments":[{"id":4781,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4776,"src":"2800:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4780,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"2792:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":4782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2792:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"2777:31:17"},{"condition":{"id":4785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2823:8:17","subExpression":{"id":4784,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"2824:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4790,"nodeType":"IfStatement","src":"2819:73:17","trueBody":{"id":4789,"nodeType":"Block","src":"2833:59:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4786,"name":"NftBox__TokenIdNotExist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4639,"src":"2855:23:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2855:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4788,"nodeType":"RevertStatement","src":"2848:32:17"}]}},{"id":4791,"nodeType":"PlaceholderStatement","src":"2902:1:17"}]},"id":4793,"name":"tokenIdExists","nameLocation":"2720:13:17","nodeType":"ModifierDefinition","parameters":{"id":4777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4774,"mutability":"mutable","name":"owner","nameLocation":"2742:5:17","nodeType":"VariableDeclaration","scope":4793,"src":"2734:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4773,"name":"address","nodeType":"ElementaryTypeName","src":"2734:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4776,"mutability":"mutable","name":"tokenId","nameLocation":"2757:7:17","nodeType":"VariableDeclaration","scope":4793,"src":"2749:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4775,"name":"uint256","nodeType":"ElementaryTypeName","src":"2749:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2733:32:17"},"src":"2711:200:17","virtual":false,"visibility":"internal"},{"body":{"id":4859,"nodeType":"Block","src":"3278:392:17","statements":[{"expression":{"id":4825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4821,"name":"i_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"3289:16:17","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$199","typeString":"contract VRFCoordinatorV2Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4823,"name":"vrfCoordinatorV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4795,"src":"3334:16:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4822,"name":"VRFCoordinatorV2Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"3308:25:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFCoordinatorV2Interface_$199_$","typeString":"type(contract VRFCoordinatorV2Interface)"}},"id":4824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3308:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$199","typeString":"contract VRFCoordinatorV2Interface"}},"src":"3289:62:17","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$199","typeString":"contract VRFCoordinatorV2Interface"}},"id":4826,"nodeType":"ExpressionStatement","src":"3289:62:17"},{"expression":{"id":4829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4827,"name":"i_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4684,"src":"3362:16:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4828,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4797,"src":"3381:14:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"3362:33:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":4830,"nodeType":"ExpressionStatement","src":"3362:33:17"},{"expression":{"id":4833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4831,"name":"i_gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4686,"src":"3406:9:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4832,"name":"gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4799,"src":"3418:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3406:19:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4834,"nodeType":"ExpressionStatement","src":"3406:19:17"},{"expression":{"id":4837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4835,"name":"i_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4688,"src":"3436:18:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4836,"name":"callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"3457:16:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"3436:37:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":4838,"nodeType":"ExpressionStatement","src":"3436:37:17"},{"expression":{"id":4841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4839,"name":"NftBoxesUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"3484:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4840,"name":"boxesUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4805,"src":"3498:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$3_memory_ptr","typeString":"string memory[3] memory"}},"src":"3484:22:17","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":4842,"nodeType":"ExpressionStatement","src":"3484:22:17"},{"expression":{"id":4847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4843,"name":"i_priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4697,"src":"3517:11:17","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$103","typeString":"contract AggregatorV3Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4845,"name":"priceFeedAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4807,"src":"3553:16:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4844,"name":"AggregatorV3Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"3531:21:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AggregatorV3Interface_$103_$","typeString":"type(contract AggregatorV3Interface)"}},"id":4846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3531:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$103","typeString":"contract AggregatorV3Interface"}},"src":"3517:53:17","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$103","typeString":"contract AggregatorV3Interface"}},"id":4848,"nodeType":"ExpressionStatement","src":"3517:53:17"},{"expression":{"id":4851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4849,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"3581:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3598:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3581:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4852,"nodeType":"ExpressionStatement","src":"3581:18:17"},{"expression":{"id":4857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4853,"name":"i_charactersContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"3610:20:17","typeDescriptions":{"typeIdentifier":"t_contract$_Characters_$3143","typeString":"contract Characters"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4855,"name":"charactersAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"3644:17:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4854,"name":"Characters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"3633:10:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Characters_$3143_$","typeString":"type(contract Characters)"}},"id":4856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3633:29:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Characters_$3143","typeString":"contract Characters"}},"src":"3610:52:17","typeDescriptions":{"typeIdentifier":"t_contract$_Characters_$3143","typeString":"contract Characters"}},"id":4858,"nodeType":"ExpressionStatement","src":"3610:52:17"}]},"id":4860,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"43617264426f786573","id":4812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3188:11:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_5805f6054b4521ebf11b173fad8d6560bac72097e3d2f1fd7cd612814cf9d547","typeString":"literal_string \"CardBoxes\""},"value":"CardBoxes"},{"hexValue":"4341424f","id":4813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3201:6:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_326955b0b53b42b5ab0ffa6c70aa8c39aa3ab57557a819db102c66704080fadd","typeString":"literal_string \"CABO\""},"value":"CABO"}],"id":4814,"kind":"baseConstructorSpecifier","modifierName":{"id":4811,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":1239,"src":"3181:6:17"},"nodeType":"ModifierInvocation","src":"3181:27:17"},{"arguments":[{"id":4816,"name":"vrfCoordinatorV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4795,"src":"3236:16:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4817,"kind":"baseConstructorSpecifier","modifierName":{"id":4815,"name":"VRFConsumerBaseV2","nodeType":"IdentifierPath","referencedDeclaration":57,"src":"3218:17:17"},"nodeType":"ModifierInvocation","src":"3218:35:17"},{"arguments":[],"id":4819,"kind":"baseConstructorSpecifier","modifierName":{"id":4818,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":312,"src":"3263:7:17"},"nodeType":"ModifierInvocation","src":"3263:9:17"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4795,"mutability":"mutable","name":"vrfCoordinatorV2","nameLocation":"2949:16:17","nodeType":"VariableDeclaration","scope":4860,"src":"2941:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4794,"name":"address","nodeType":"ElementaryTypeName","src":"2941:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4797,"mutability":"mutable","name":"subscriptionId","nameLocation":"2983:14:17","nodeType":"VariableDeclaration","scope":4860,"src":"2976:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4796,"name":"uint64","nodeType":"ElementaryTypeName","src":"2976:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4799,"mutability":"mutable","name":"gasLane","nameLocation":"3016:7:17","nodeType":"VariableDeclaration","scope":4860,"src":"3008:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4798,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3008:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4801,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"3041:16:17","nodeType":"VariableDeclaration","scope":4860,"src":"3034:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4800,"name":"uint32","nodeType":"ElementaryTypeName","src":"3034:6:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4805,"mutability":"mutable","name":"boxesUri","nameLocation":"3085:8:17","nodeType":"VariableDeclaration","scope":4860,"src":"3068:25:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$3_memory_ptr","typeString":"string[3]"},"typeName":{"baseType":{"id":4802,"name":"string","nodeType":"ElementaryTypeName","src":"3068:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":4804,"length":{"hexValue":"33","id":4803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3075:1:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"3068:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$3_storage_ptr","typeString":"string[3]"}},"visibility":"internal"},{"constant":false,"id":4807,"mutability":"mutable","name":"priceFeedAddress","nameLocation":"3112:16:17","nodeType":"VariableDeclaration","scope":4860,"src":"3104:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4806,"name":"address","nodeType":"ElementaryTypeName","src":"3104:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4809,"mutability":"mutable","name":"charactersAddress","nameLocation":"3147:17:17","nodeType":"VariableDeclaration","scope":4860,"src":"3139:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4808,"name":"address","nodeType":"ElementaryTypeName","src":"3139:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2930:241:17"},"returnParameters":{"id":4820,"nodeType":"ParameterList","parameters":[],"src":"3278:0:17"},"scope":5533,"src":"2919:751:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4924,"nodeType":"Block","src":"3717:702:17","statements":[{"assignments":[4864],"declarations":[{"constant":false,"id":4864,"mutability":"mutable","name":"usdPriceInEth","nameLocation":"3736:13:17","nodeType":"VariableDeclaration","scope":4924,"src":"3728:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4863,"name":"uint256","nodeType":"ElementaryTypeName","src":"3728:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4868,"initialValue":{"arguments":[{"id":4866,"name":"PRICE_NORMAL_BOX_USD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4673,"src":"3770:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4865,"name":"priceFeedUsdToEth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5532,"src":"3752:17:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":4867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3752:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3728:63:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4869,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3806:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"3806:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4871,"name":"usdPriceInEth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"3818:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3806:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4877,"nodeType":"IfStatement","src":"3802:90:17","trueBody":{"id":4876,"nodeType":"Block","src":"3833:59:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4873,"name":"NftBox__NeedMoreETHSent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4635,"src":"3855:23:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3855:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4875,"nodeType":"RevertStatement","src":"3848:32:17"}]}},{"assignments":[4879],"declarations":[{"constant":false,"id":4879,"mutability":"mutable","name":"newTokenId","nameLocation":"3910:10:17","nodeType":"VariableDeclaration","scope":4924,"src":"3902:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4878,"name":"uint256","nodeType":"ElementaryTypeName","src":"3902:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4881,"initialValue":{"id":4880,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"3923:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3902:35:17"},{"expression":{"id":4886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4882,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"4009:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4883,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"4026:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4043:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4026:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4009:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4887,"nodeType":"ExpressionStatement","src":"4009:35:17"},{"expression":{"arguments":[{"expression":{"id":4889,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4065:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4065:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4891,"name":"newTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4879,"src":"4077:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4888,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[807,836],"referencedDeclaration":807,"src":"4055:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4055:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4893,"nodeType":"ExpressionStatement","src":"4055:33:17"},{"assignments":[4895],"declarations":[{"constant":false,"id":4895,"mutability":"mutable","name":"tokenURI","nameLocation":"4113:8:17","nodeType":"VariableDeclaration","scope":4924,"src":"4099:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4894,"name":"string","nodeType":"ElementaryTypeName","src":"4099:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":4899,"initialValue":{"baseExpression":{"id":4896,"name":"NftBoxesUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"4124:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":4898,"indexExpression":{"hexValue":"30","id":4897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4136:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4124:14:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4099:39:17"},{"expression":{"arguments":[{"id":4901,"name":"newTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4879,"src":"4162:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4902,"name":"tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4895,"src":"4174:8:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4900,"name":"_setTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"4149:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":4903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4149:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4904,"nodeType":"ExpressionStatement","src":"4149:34:17"},{"expression":{"id":4914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4905,"name":"mappingNfts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4702,"src":"4194:11:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Nft_$4670_storage_$","typeString":"mapping(uint256 => struct NftBox.Nft storage ref)"}},"id":4907,"indexExpression":{"id":4906,"name":"newTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4879,"src":"4206:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4194:23:17","typeDescriptions":{"typeIdentifier":"t_struct$_Nft_$4670_storage","typeString":"struct NftBox.Nft storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4909,"name":"newTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4879,"src":"4224:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4910,"name":"tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4895,"src":"4236:8:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"66616c7365","id":4911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4246:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4253:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4908,"name":"Nft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"4220:3:17","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Nft_$4670_storage_ptr_$","typeString":"type(struct NftBox.Nft storage pointer)"}},"id":4913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4220:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Nft_$4670_memory_ptr","typeString":"struct NftBox.Nft memory"}},"src":"4194:61:17","typeDescriptions":{"typeIdentifier":"t_struct$_Nft_$4670_storage","typeString":"struct NftBox.Nft storage ref"}},"id":4915,"nodeType":"ExpressionStatement","src":"4194:61:17"},{"eventCall":{"arguments":[{"expression":{"id":4917,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4303:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4303:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4919,"name":"newTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4879,"src":"4339:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4920,"name":"tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4895,"src":"4364:8:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4921,"name":"usdPriceInEth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"4387:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4916,"name":"NormalBoxMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4716,"src":"4273:15:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (address,uint256,string memory,uint256)"}},"id":4922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4273:138:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4923,"nodeType":"EmitStatement","src":"4268:143:17"}]},"functionSelector":"e6a4ee15","id":4925,"implemented":true,"kind":"function","modifiers":[],"name":"buyNormalBox","nameLocation":"3687:12:17","nodeType":"FunctionDefinition","parameters":{"id":4861,"nodeType":"ParameterList","parameters":[],"src":"3699:2:17"},"returnParameters":{"id":4862,"nodeType":"ParameterList","parameters":[],"src":"3717:0:17"},"scope":5533,"src":"3678:741:17","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":4989,"nodeType":"Block","src":"4464:748:17","statements":[{"assignments":[4929],"declarations":[{"constant":false,"id":4929,"mutability":"mutable","name":"usdPriceInEth","nameLocation":"4483:13:17","nodeType":"VariableDeclaration","scope":4989,"src":"4475:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4928,"name":"uint256","nodeType":"ElementaryTypeName","src":"4475:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4933,"initialValue":{"arguments":[{"id":4931,"name":"PRICE_RARE_BOX_USD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4676,"src":"4517:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4930,"name":"priceFeedUsdToEth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5532,"src":"4499:17:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":4932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4499:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4475:61:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4934,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4551:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"4551:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4936,"name":"usdPriceInEth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"4563:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4551:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4942,"nodeType":"IfStatement","src":"4547:90:17","trueBody":{"id":4941,"nodeType":"Block","src":"4578:59:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4938,"name":"NftBox__NeedMoreETHSent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4635,"src":"4600:23:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4600:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4940,"nodeType":"RevertStatement","src":"4593:32:17"}]}},{"assignments":[4944],"declarations":[{"constant":false,"id":4944,"mutability":"mutable","name":"newTokenId","nameLocation":"4655:10:17","nodeType":"VariableDeclaration","scope":4989,"src":"4647:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4943,"name":"uint256","nodeType":"ElementaryTypeName","src":"4647:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4946,"initialValue":{"id":4945,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"4668:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4647:35:17"},{"expression":{"id":4951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4947,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"4754:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4948,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"4771:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4788:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4771:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4754:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4952,"nodeType":"ExpressionStatement","src":"4754:35:17"},{"expression":{"arguments":[{"expression":{"id":4954,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4810:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4810:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4956,"name":"newTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4944,"src":"4822:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4953,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[807,836],"referencedDeclaration":807,"src":"4800:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4800:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4958,"nodeType":"ExpressionStatement","src":"4800:33:17"},{"assignments":[4960],"declarations":[{"constant":false,"id":4960,"mutability":"mutable","name":"tokenURI","nameLocation":"4858:8:17","nodeType":"VariableDeclaration","scope":4989,"src":"4844:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4959,"name":"string","nodeType":"ElementaryTypeName","src":"4844:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":4964,"initialValue":{"baseExpression":{"id":4961,"name":"NftBoxesUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"4869:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":4963,"indexExpression":{"hexValue":"31","id":4962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4881:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4869:14:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4844:39:17"},{"expression":{"arguments":[{"id":4966,"name":"newTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4944,"src":"4907:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4967,"name":"tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4960,"src":"4919:8:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4965,"name":"_setTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"4894:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":4968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4894:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4969,"nodeType":"ExpressionStatement","src":"4894:34:17"},{"expression":{"id":4979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4970,"name":"mappingNfts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4702,"src":"4939:11:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Nft_$4670_storage_$","typeString":"mapping(uint256 => struct NftBox.Nft storage ref)"}},"id":4972,"indexExpression":{"id":4971,"name":"newTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4944,"src":"4951:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4939:23:17","typeDescriptions":{"typeIdentifier":"t_struct$_Nft_$4670_storage","typeString":"struct NftBox.Nft storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4974,"name":"newTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4944,"src":"4969:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4975,"name":"tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4960,"src":"4981:8:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"66616c7365","id":4976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4991:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"31","id":4977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4998:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":4973,"name":"Nft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"4965:3:17","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Nft_$4670_storage_ptr_$","typeString":"type(struct NftBox.Nft storage pointer)"}},"id":4978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4965:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Nft_$4670_memory_ptr","typeString":"struct NftBox.Nft memory"}},"src":"4939:61:17","typeDescriptions":{"typeIdentifier":"t_struct$_Nft_$4670_storage","typeString":"struct NftBox.Nft storage ref"}},"id":4980,"nodeType":"ExpressionStatement","src":"4939:61:17"},{"eventCall":{"arguments":[{"expression":{"id":4982,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5044:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5044:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4984,"name":"newTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4944,"src":"5080:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4985,"name":"tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4960,"src":"5105:8:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4986,"name":"usdPriceInEth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"5128:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4981,"name":"RareBoxMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4726,"src":"5016:13:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (address,uint256,string memory,uint256)"}},"id":4987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5016:136:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4988,"nodeType":"EmitStatement","src":"5011:141:17"}]},"functionSelector":"d1a6bc87","id":4990,"implemented":true,"kind":"function","modifiers":[],"name":"buyRareBox","nameLocation":"4436:10:17","nodeType":"FunctionDefinition","parameters":{"id":4926,"nodeType":"ParameterList","parameters":[],"src":"4446:2:17"},"returnParameters":{"id":4927,"nodeType":"ParameterList","parameters":[],"src":"4464:0:17"},"scope":5533,"src":"4427:785:17","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":5054,"nodeType":"Block","src":"5262:695:17","statements":[{"assignments":[4994],"declarations":[{"constant":false,"id":4994,"mutability":"mutable","name":"usdPriceInEth","nameLocation":"5281:13:17","nodeType":"VariableDeclaration","scope":5054,"src":"5273:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4993,"name":"uint256","nodeType":"ElementaryTypeName","src":"5273:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4998,"initialValue":{"arguments":[{"id":4996,"name":"PRICE_LEGENDARY_BOX_USD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4679,"src":"5315:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4995,"name":"priceFeedUsdToEth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5532,"src":"5297:17:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":4997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5297:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5273:66:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4999,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5354:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"5354:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5001,"name":"usdPriceInEth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"5366:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5354:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5007,"nodeType":"IfStatement","src":"5350:90:17","trueBody":{"id":5006,"nodeType":"Block","src":"5381:59:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5003,"name":"NftBox__NeedMoreETHSent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4635,"src":"5403:23:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5403:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5005,"nodeType":"RevertStatement","src":"5396:32:17"}]}},{"assignments":[5009],"declarations":[{"constant":false,"id":5009,"mutability":"mutable","name":"newTokenId","nameLocation":"5458:10:17","nodeType":"VariableDeclaration","scope":5054,"src":"5450:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5008,"name":"uint256","nodeType":"ElementaryTypeName","src":"5450:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5011,"initialValue":{"id":5010,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"5471:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5450:35:17"},{"expression":{"id":5016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5012,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"5557:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5013,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"5574:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5591:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5574:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5557:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5017,"nodeType":"ExpressionStatement","src":"5557:35:17"},{"expression":{"arguments":[{"expression":{"id":5019,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5613:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5613:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5021,"name":"newTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5009,"src":"5625:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5018,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[807,836],"referencedDeclaration":807,"src":"5603:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5603:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5023,"nodeType":"ExpressionStatement","src":"5603:33:17"},{"assignments":[5025],"declarations":[{"constant":false,"id":5025,"mutability":"mutable","name":"tokenURI","nameLocation":"5661:8:17","nodeType":"VariableDeclaration","scope":5054,"src":"5647:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5024,"name":"string","nodeType":"ElementaryTypeName","src":"5647:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":5029,"initialValue":{"baseExpression":{"id":5026,"name":"NftBoxesUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"5672:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":5028,"indexExpression":{"hexValue":"32","id":5027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5684:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5672:14:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5647:39:17"},{"expression":{"arguments":[{"id":5031,"name":"newTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5009,"src":"5710:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5032,"name":"tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"5722:8:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5030,"name":"_setTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"5697:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":5033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5697:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5034,"nodeType":"ExpressionStatement","src":"5697:34:17"},{"expression":{"id":5044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5035,"name":"mappingNfts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4702,"src":"5742:11:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Nft_$4670_storage_$","typeString":"mapping(uint256 => struct NftBox.Nft storage ref)"}},"id":5037,"indexExpression":{"id":5036,"name":"newTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5009,"src":"5754:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5742:23:17","typeDescriptions":{"typeIdentifier":"t_struct$_Nft_$4670_storage","typeString":"struct NftBox.Nft storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5039,"name":"newTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5009,"src":"5772:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5040,"name":"tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"5784:8:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"66616c7365","id":5041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5794:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"32","id":5042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5801:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"id":5038,"name":"Nft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"5768:3:17","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Nft_$4670_storage_ptr_$","typeString":"type(struct NftBox.Nft storage pointer)"}},"id":5043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5768:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Nft_$4670_memory_ptr","typeString":"struct NftBox.Nft memory"}},"src":"5742:61:17","typeDescriptions":{"typeIdentifier":"t_struct$_Nft_$4670_storage","typeString":"struct NftBox.Nft storage ref"}},"id":5045,"nodeType":"ExpressionStatement","src":"5742:61:17"},{"eventCall":{"arguments":[{"expression":{"id":5047,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5852:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5852:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5049,"name":"newTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5009,"src":"5877:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5050,"name":"tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"5902:8:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5051,"name":"usdPriceInEth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4994,"src":"5925:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5046,"name":"LegendaryBoxMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4736,"src":"5819:18:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (address,uint256,string memory,uint256)"}},"id":5052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5819:130:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5053,"nodeType":"EmitStatement","src":"5814:135:17"}]},"functionSelector":"4deea57e","id":5055,"implemented":true,"kind":"function","modifiers":[],"name":"buyLegendaryBox","nameLocation":"5229:15:17","nodeType":"FunctionDefinition","parameters":{"id":4991,"nodeType":"ParameterList","parameters":[],"src":"5244:2:17"},"returnParameters":{"id":4992,"nodeType":"ParameterList","parameters":[],"src":"5262:0:17"},"scope":5533,"src":"5220:737:17","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":5109,"nodeType":"Block","src":"6155:473:17","statements":[{"assignments":[5074],"declarations":[{"constant":false,"id":5074,"mutability":"mutable","name":"nft","nameLocation":"6177:3:17","nodeType":"VariableDeclaration","scope":5109,"src":"6166:14:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Nft_$4670_memory_ptr","typeString":"struct NftBox.Nft"},"typeName":{"id":5073,"nodeType":"UserDefinedTypeName","pathNode":{"id":5072,"name":"Nft","nodeType":"IdentifierPath","referencedDeclaration":4670,"src":"6166:3:17"},"referencedDeclaration":4670,"src":"6166:3:17","typeDescriptions":{"typeIdentifier":"t_struct$_Nft_$4670_storage_ptr","typeString":"struct NftBox.Nft"}},"visibility":"internal"}],"id":5078,"initialValue":{"baseExpression":{"id":5075,"name":"mappingNfts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4702,"src":"6183:11:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Nft_$4670_storage_$","typeString":"mapping(uint256 => struct NftBox.Nft storage ref)"}},"id":5077,"indexExpression":{"id":5076,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5057,"src":"6195:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6183:20:17","typeDescriptions":{"typeIdentifier":"t_struct$_Nft_$4670_storage","typeString":"struct NftBox.Nft storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6166:37:17"},{"condition":{"expression":{"id":5079,"name":"nft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"6218:3:17","typeDescriptions":{"typeIdentifier":"t_struct$_Nft_$4670_memory_ptr","typeString":"struct NftBox.Nft memory"}},"id":5080,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"Boxopened","nodeType":"MemberAccess","referencedDeclaration":4667,"src":"6218:13:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5085,"nodeType":"IfStatement","src":"6214:76:17","trueBody":{"id":5084,"nodeType":"Block","src":"6233:57:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5081,"name":"NftBox__AlreadyOpened","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"6255:21:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6255:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5083,"nodeType":"RevertStatement","src":"6248:30:17"}]}},{"expression":{"id":5095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5086,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5070,"src":"6300:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5089,"name":"i_gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4686,"src":"6362:9:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5090,"name":"i_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4684,"src":"6386:16:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":5091,"name":"REQUEST_CONFIRMATIONS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4691,"src":"6417:21:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":5092,"name":"i_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4688,"src":"6453:18:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":5093,"name":"NUM_WORDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4694,"src":"6486:9:17","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":5087,"name":"i_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"6312:16:17","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$199","typeString":"contract VRFCoordinatorV2Interface"}},"id":5088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"requestRandomWords","nodeType":"MemberAccess","referencedDeclaration":132,"src":"6312:35:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_uint64_$_t_uint16_$_t_uint32_$_t_uint32_$returns$_t_uint256_$","typeString":"function (bytes32,uint64,uint16,uint32,uint32) external returns (uint256)"}},"id":5094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6312:194:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6300:206:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5096,"nodeType":"ExpressionStatement","src":"6300:206:17"},{"expression":{"id":5101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5097,"name":"mappingRequestToToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4706,"src":"6517:21:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":5099,"indexExpression":{"id":5098,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5070,"src":"6539:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6517:32:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5100,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5057,"src":"6552:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6517:42:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5102,"nodeType":"ExpressionStatement","src":"6517:42:17"},{"eventCall":{"arguments":[{"id":5104,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5070,"src":"6598:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5105,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6609:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6609:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5103,"name":"OpenBoxRandomRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4742,"src":"6575:22:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":5107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6575:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5108,"nodeType":"EmitStatement","src":"6570:50:17"}]},"functionSelector":"b1e5e2b7","id":5110,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"expression":{"id":5060,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6054:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6054:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5062,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5057,"src":"6066:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5063,"kind":"modifierInvocation","modifierName":{"id":5059,"name":"tokenIdExists","nodeType":"IdentifierPath","referencedDeclaration":4793,"src":"6040:13:17"},"nodeType":"ModifierInvocation","src":"6040:34:17"},{"arguments":[{"id":5065,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5057,"src":"6092:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5066,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6101:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6101:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5068,"kind":"modifierInvocation","modifierName":{"id":5064,"name":"isOwner","nodeType":"IdentifierPath","referencedDeclaration":4772,"src":"6084:7:17"},"nodeType":"ModifierInvocation","src":"6084:28:17"}],"name":"openBox","nameLocation":"5974:7:17","nodeType":"FunctionDefinition","parameters":{"id":5058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5057,"mutability":"mutable","name":"tokenId","nameLocation":"6000:7:17","nodeType":"VariableDeclaration","scope":5110,"src":"5992:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5056,"name":"uint256","nodeType":"ElementaryTypeName","src":"5992:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5981:33:17"},"returnParameters":{"id":5071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5070,"mutability":"mutable","name":"requestId","nameLocation":"6139:9:17","nodeType":"VariableDeclaration","scope":5110,"src":"6131:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5069,"name":"uint256","nodeType":"ElementaryTypeName","src":"6131:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6130:19:17"},"scope":5533,"src":"5965:663:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[30],"body":{"id":5251,"nodeType":"Block","src":"6756:1376:17","statements":[{"assignments":[5120],"declarations":[{"constant":false,"id":5120,"mutability":"mutable","name":"tokenId","nameLocation":"6775:7:17","nodeType":"VariableDeclaration","scope":5251,"src":"6767:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5119,"name":"uint256","nodeType":"ElementaryTypeName","src":"6767:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5124,"initialValue":{"baseExpression":{"id":5121,"name":"mappingRequestToToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4706,"src":"6785:21:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":5123,"indexExpression":{"id":5122,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5112,"src":"6807:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6785:32:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6767:50:17"},{"assignments":[5127],"declarations":[{"constant":false,"id":5127,"mutability":"mutable","name":"nft","nameLocation":"6839:3:17","nodeType":"VariableDeclaration","scope":5251,"src":"6828:14:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Nft_$4670_memory_ptr","typeString":"struct NftBox.Nft"},"typeName":{"id":5126,"nodeType":"UserDefinedTypeName","pathNode":{"id":5125,"name":"Nft","nodeType":"IdentifierPath","referencedDeclaration":4670,"src":"6828:3:17"},"referencedDeclaration":4670,"src":"6828:3:17","typeDescriptions":{"typeIdentifier":"t_struct$_Nft_$4670_storage_ptr","typeString":"struct NftBox.Nft"}},"visibility":"internal"}],"id":5131,"initialValue":{"baseExpression":{"id":5128,"name":"mappingNfts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4702,"src":"6845:11:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Nft_$4670_storage_$","typeString":"mapping(uint256 => struct NftBox.Nft storage ref)"}},"id":5130,"indexExpression":{"id":5129,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5120,"src":"6857:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6845:20:17","typeDescriptions":{"typeIdentifier":"t_struct$_Nft_$4670_storage","typeString":"struct NftBox.Nft storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6828:37:17"},{"condition":{"expression":{"id":5132,"name":"nft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5127,"src":"6880:3:17","typeDescriptions":{"typeIdentifier":"t_struct$_Nft_$4670_memory_ptr","typeString":"struct NftBox.Nft memory"}},"id":5133,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"Boxopened","nodeType":"MemberAccess","referencedDeclaration":4667,"src":"6880:13:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5138,"nodeType":"IfStatement","src":"6876:76:17","trueBody":{"id":5137,"nodeType":"Block","src":"6895:57:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5134,"name":"NftBox__AlreadyOpened","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"6917:21:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6917:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5136,"nodeType":"RevertStatement","src":"6910:30:17"}]}},{"assignments":[5140],"declarations":[{"constant":false,"id":5140,"mutability":"mutable","name":"newUri","nameLocation":"6976:6:17","nodeType":"VariableDeclaration","scope":5251,"src":"6962:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5139,"name":"string","nodeType":"ElementaryTypeName","src":"6962:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":5141,"nodeType":"VariableDeclarationStatement","src":"6962:20:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5142,"name":"nft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5127,"src":"6997:3:17","typeDescriptions":{"typeIdentifier":"t_struct$_Nft_$4670_memory_ptr","typeString":"struct NftBox.Nft memory"}},"id":5143,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"boxType","nodeType":"MemberAccess","referencedDeclaration":4669,"src":"6997:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7012:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6997:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5168,"name":"nft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5127,"src":"7299:3:17","typeDescriptions":{"typeIdentifier":"t_struct$_Nft_$4670_memory_ptr","typeString":"struct NftBox.Nft memory"}},"id":5169,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"boxType","nodeType":"MemberAccess","referencedDeclaration":4669,"src":"7299:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7314:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7299:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5194,"name":"nft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5127,"src":"7597:3:17","typeDescriptions":{"typeIdentifier":"t_struct$_Nft_$4670_memory_ptr","typeString":"struct NftBox.Nft memory"}},"id":5195,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"boxType","nodeType":"MemberAccess","referencedDeclaration":4669,"src":"7597:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"32","id":5196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7612:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"7597:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5223,"nodeType":"Block","src":"7901:57:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5220,"name":"NftBox__AlreadyOpened","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"7923:21:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7923:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5222,"nodeType":"RevertStatement","src":"7916:30:17"}]},"id":5224,"nodeType":"IfStatement","src":"7593:365:17","trueBody":{"id":5219,"nodeType":"Block","src":"7615:280:17","statements":[{"assignments":[5199],"declarations":[{"constant":false,"id":5199,"mutability":"mutable","name":"randomIndex","nameLocation":"7638:11:17","nodeType":"VariableDeclaration","scope":5219,"src":"7630:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5198,"name":"uint256","nodeType":"ElementaryTypeName","src":"7630:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5207,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5200,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5115,"src":"7652:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5202,"indexExpression":{"hexValue":"30","id":5201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7664:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7652:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5203,"name":"i_charactersContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"7686:20:17","typeDescriptions":{"typeIdentifier":"t_contract$_Characters_$3143","typeString":"contract Characters"}},"id":5204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"legendaryPersonsLength","nodeType":"MemberAccess","referencedDeclaration":3142,"src":"7686:43:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":5205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7686:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7652:79:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7630:101:17"},{"assignments":[5209,null,null,null],"declarations":[{"constant":false,"id":5209,"mutability":"mutable","name":"uri","nameLocation":"7761:3:17","nodeType":"VariableDeclaration","scope":5219,"src":"7747:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5208,"name":"string","nodeType":"ElementaryTypeName","src":"7747:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},null,null,null],"id":5214,"initialValue":{"arguments":[{"id":5212,"name":"randomIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5199,"src":"7830:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5210,"name":"i_charactersContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"7774:20:17","typeDescriptions":{"typeIdentifier":"t_contract$_Characters_$3143","typeString":"contract Characters"}},"id":5211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"legendaryPersons","nodeType":"MemberAccess","referencedDeclaration":2976,"src":"7774:37:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"function (uint256) view external returns (string memory,uint256,uint256,uint256)"}},"id":5213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7774:82:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(string memory,uint256,uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7746:110:17"},{"expression":{"id":5217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5215,"name":"newUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5140,"src":"7871:6:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5216,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"7880:3:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"7871:12:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":5218,"nodeType":"ExpressionStatement","src":"7871:12:17"}]}},"id":5225,"nodeType":"IfStatement","src":"7295:663:17","trueBody":{"id":5193,"nodeType":"Block","src":"7317:270:17","statements":[{"assignments":[5173],"declarations":[{"constant":false,"id":5173,"mutability":"mutable","name":"randomIndex","nameLocation":"7340:11:17","nodeType":"VariableDeclaration","scope":5193,"src":"7332:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5172,"name":"uint256","nodeType":"ElementaryTypeName","src":"7332:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5181,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5174,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5115,"src":"7354:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5176,"indexExpression":{"hexValue":"30","id":5175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7366:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7354:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5177,"name":"i_charactersContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"7388:20:17","typeDescriptions":{"typeIdentifier":"t_contract$_Characters_$3143","typeString":"contract Characters"}},"id":5178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"rarePersonsLength","nodeType":"MemberAccess","referencedDeclaration":3133,"src":"7388:38:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":5179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7388:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7354:74:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7332:96:17"},{"assignments":[5183,null,null,null],"declarations":[{"constant":false,"id":5183,"mutability":"mutable","name":"uri","nameLocation":"7458:3:17","nodeType":"VariableDeclaration","scope":5193,"src":"7444:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5182,"name":"string","nodeType":"ElementaryTypeName","src":"7444:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},null,null,null],"id":5188,"initialValue":{"arguments":[{"id":5186,"name":"randomIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5173,"src":"7522:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5184,"name":"i_charactersContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"7471:20:17","typeDescriptions":{"typeIdentifier":"t_contract$_Characters_$3143","typeString":"contract Characters"}},"id":5185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"rarePersons","nodeType":"MemberAccess","referencedDeclaration":2972,"src":"7471:32:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"function (uint256) view external returns (string memory,uint256,uint256,uint256)"}},"id":5187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7471:77:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(string memory,uint256,uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7443:105:17"},{"expression":{"id":5191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5189,"name":"newUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5140,"src":"7563:6:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5190,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5183,"src":"7572:3:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"7563:12:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":5192,"nodeType":"ExpressionStatement","src":"7563:12:17"}]}},"id":5226,"nodeType":"IfStatement","src":"6993:965:17","trueBody":{"id":5167,"nodeType":"Block","src":"7015:274:17","statements":[{"assignments":[5147],"declarations":[{"constant":false,"id":5147,"mutability":"mutable","name":"randomIndex","nameLocation":"7038:11:17","nodeType":"VariableDeclaration","scope":5167,"src":"7030:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5146,"name":"uint256","nodeType":"ElementaryTypeName","src":"7030:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5155,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5148,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5115,"src":"7052:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5150,"indexExpression":{"hexValue":"30","id":5149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7064:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7052:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5151,"name":"i_charactersContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"7086:20:17","typeDescriptions":{"typeIdentifier":"t_contract$_Characters_$3143","typeString":"contract Characters"}},"id":5152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"normalPersonsLength","nodeType":"MemberAccess","referencedDeclaration":3124,"src":"7086:40:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":5153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7086:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7052:76:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7030:98:17"},{"assignments":[5157,null,null,null],"declarations":[{"constant":false,"id":5157,"mutability":"mutable","name":"uri","nameLocation":"7158:3:17","nodeType":"VariableDeclaration","scope":5167,"src":"7144:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5156,"name":"string","nodeType":"ElementaryTypeName","src":"7144:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},null,null,null],"id":5162,"initialValue":{"arguments":[{"id":5160,"name":"randomIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5147,"src":"7224:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5158,"name":"i_charactersContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"7171:20:17","typeDescriptions":{"typeIdentifier":"t_contract$_Characters_$3143","typeString":"contract Characters"}},"id":5159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"normalPersons","nodeType":"MemberAccess","referencedDeclaration":2968,"src":"7171:34:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"function (uint256) view external returns (string memory,uint256,uint256,uint256)"}},"id":5161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7171:79:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(string memory,uint256,uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7143:107:17"},{"expression":{"id":5165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5163,"name":"newUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5140,"src":"7265:6:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5164,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"7274:3:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"7265:12:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":5166,"nodeType":"ExpressionStatement","src":"7265:12:17"}]}},{"expression":{"id":5237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5227,"name":"mappingNfts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4702,"src":"7968:11:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Nft_$4670_storage_$","typeString":"mapping(uint256 => struct NftBox.Nft storage ref)"}},"id":5229,"indexExpression":{"id":5228,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5120,"src":"7980:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7968:20:17","typeDescriptions":{"typeIdentifier":"t_struct$_Nft_$4670_storage","typeString":"struct NftBox.Nft storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5231,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5120,"src":"7995:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5232,"name":"newUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5140,"src":"8004:6:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"74727565","id":5233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8012:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":5234,"name":"nft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5127,"src":"8018:3:17","typeDescriptions":{"typeIdentifier":"t_struct$_Nft_$4670_memory_ptr","typeString":"struct NftBox.Nft memory"}},"id":5235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"boxType","nodeType":"MemberAccess","referencedDeclaration":4669,"src":"8018:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5230,"name":"Nft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"7991:3:17","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Nft_$4670_storage_ptr_$","typeString":"type(struct NftBox.Nft storage pointer)"}},"id":5236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7991:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Nft_$4670_memory_ptr","typeString":"struct NftBox.Nft memory"}},"src":"7968:62:17","typeDescriptions":{"typeIdentifier":"t_struct$_Nft_$4670_storage","typeString":"struct NftBox.Nft storage ref"}},"id":5238,"nodeType":"ExpressionStatement","src":"7968:62:17"},{"expression":{"arguments":[{"id":5240,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5120,"src":"8054:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5241,"name":"newUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5140,"src":"8063:6:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5239,"name":"_setTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"8041:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":5242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8041:29:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5243,"nodeType":"ExpressionStatement","src":"8041:29:17"},{"eventCall":{"arguments":[{"expression":{"id":5245,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8096:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"8096:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5247,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5120,"src":"8108:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5248,"name":"newUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5140,"src":"8117:6:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5244,"name":"BoxOpened","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4750,"src":"8086:9:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,uint256,string memory)"}},"id":5249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8086:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5250,"nodeType":"EmitStatement","src":"8081:43:17"}]},"id":5252,"implemented":true,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"6645:18:17","nodeType":"FunctionDefinition","overrides":{"id":5117,"nodeType":"OverrideSpecifier","overrides":[],"src":"6747:8:17"},"parameters":{"id":5116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5112,"mutability":"mutable","name":"requestId","nameLocation":"6682:9:17","nodeType":"VariableDeclaration","scope":5252,"src":"6674:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5111,"name":"uint256","nodeType":"ElementaryTypeName","src":"6674:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5115,"mutability":"mutable","name":"randomWords","nameLocation":"6719:11:17","nodeType":"VariableDeclaration","scope":5252,"src":"6702:28:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5113,"name":"uint256","nodeType":"ElementaryTypeName","src":"6702:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5114,"nodeType":"ArrayTypeName","src":"6702:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6663:74:17"},"returnParameters":{"id":5118,"nodeType":"ParameterList","parameters":[],"src":"6756:0:17"},"scope":5533,"src":"6636:1496:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5285,"nodeType":"Block","src":"8177:212:17","statements":[{"assignments":[5258],"declarations":[{"constant":false,"id":5258,"mutability":"mutable","name":"amount","nameLocation":"8196:6:17","nodeType":"VariableDeclaration","scope":5285,"src":"8188:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5257,"name":"uint256","nodeType":"ElementaryTypeName","src":"8188:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5264,"initialValue":{"expression":{"arguments":[{"id":5261,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8213:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_NftBox_$5533","typeString":"contract NftBox"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NftBox_$5533","typeString":"contract NftBox"}],"id":5260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8205:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5259,"name":"address","nodeType":"ElementaryTypeName","src":"8205:7:17","typeDescriptions":{}}},"id":5262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8205:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"8205:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8188:38:17"},{"assignments":[5266,null],"declarations":[{"constant":false,"id":5266,"mutability":"mutable","name":"success","nameLocation":"8243:7:17","nodeType":"VariableDeclaration","scope":5285,"src":"8238:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5265,"name":"bool","nodeType":"ElementaryTypeName","src":"8238:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":5277,"initialValue":{"arguments":[{"hexValue":"","id":5275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8296:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"expression":{"id":5269,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8264:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"8264:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8256:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":5267,"name":"address","nodeType":"ElementaryTypeName","src":"8256:8:17","stateMutability":"payable","typeDescriptions":{}}},"id":5271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8256:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":5272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"8256:24:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":5274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":5273,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5258,"src":"8288:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"8256:39:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":5276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8256:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"8237:62:17"},{"condition":{"id":5279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8314:8:17","subExpression":{"id":5278,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5266,"src":"8315:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5284,"nodeType":"IfStatement","src":"8310:72:17","trueBody":{"id":5283,"nodeType":"Block","src":"8324:58:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5280,"name":"NftBox__TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4643,"src":"8346:22:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8346:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5282,"nodeType":"RevertStatement","src":"8339:31:17"}]}}]},"functionSelector":"3ccfd60b","id":5286,"implemented":true,"kind":"function","modifiers":[{"id":5255,"kind":"modifierInvocation","modifierName":{"id":5254,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":231,"src":"8167:9:17"},"nodeType":"ModifierInvocation","src":"8167:9:17"}],"name":"withdraw","nameLocation":"8149:8:17","nodeType":"FunctionDefinition","parameters":{"id":5253,"nodeType":"ParameterList","parameters":[],"src":"8157:2:17"},"returnParameters":{"id":5256,"nodeType":"ParameterList","parameters":[],"src":"8177:0:17"},"scope":5533,"src":"8140:249:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5374,"nodeType":"Block","src":"8480:572:17","statements":[{"assignments":[5298],"declarations":[{"constant":false,"id":5298,"mutability":"mutable","name":"tokenArray","nameLocation":"8508:10:17","nodeType":"VariableDeclaration","scope":5374,"src":"8491:27:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5296,"name":"uint256","nodeType":"ElementaryTypeName","src":"8491:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5297,"nodeType":"ArrayTypeName","src":"8491:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":5304,"initialValue":{"arguments":[{"id":5302,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"8535:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8521:13:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":5299,"name":"uint256","nodeType":"ElementaryTypeName","src":"8525:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5300,"nodeType":"ArrayTypeName","src":"8525:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":5303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8521:29:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8491:59:17"},{"assignments":[5306],"declarations":[{"constant":false,"id":5306,"mutability":"mutable","name":"count","nameLocation":"8569:5:17","nodeType":"VariableDeclaration","scope":5374,"src":"8561:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5305,"name":"uint256","nodeType":"ElementaryTypeName","src":"8561:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5308,"initialValue":{"hexValue":"30","id":5307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8577:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8561:17:17"},{"body":{"id":5339,"nodeType":"Block","src":"8634:173:17","statements":[{"assignments":[5320],"declarations":[{"constant":false,"id":5320,"mutability":"mutable","name":"spender","nameLocation":"8657:7:17","nodeType":"VariableDeclaration","scope":5339,"src":"8649:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5319,"name":"address","nodeType":"ElementaryTypeName","src":"8649:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5324,"initialValue":{"arguments":[{"id":5322,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5310,"src":"8675:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5321,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"8667:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":5323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8667:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8649:28:17"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5325,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"8696:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5326,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5288,"src":"8707:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8696:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5338,"nodeType":"IfStatement","src":"8692:104:17","trueBody":{"id":5337,"nodeType":"Block","src":"8714:82:17","statements":[{"expression":{"id":5332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5328,"name":"tokenArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"8733:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5330,"indexExpression":{"id":5329,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"8744:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8733:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5331,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5310,"src":"8753:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8733:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5333,"nodeType":"ExpressionStatement","src":"8733:21:17"},{"expression":{"id":5335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8773:7:17","subExpression":{"id":5334,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"8773:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5336,"nodeType":"ExpressionStatement","src":"8773:7:17"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5313,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5310,"src":"8609:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5314,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"8613:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:18:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5340,"initializationExpression":{"assignments":[5310],"declarations":[{"constant":false,"id":5310,"mutability":"mutable","name":"i","nameLocation":"8602:1:17","nodeType":"VariableDeclaration","scope":5340,"src":"8594:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5309,"name":"uint256","nodeType":"ElementaryTypeName","src":"8594:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5312,"initialValue":{"hexValue":"30","id":5311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8606:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8594:13:17"},"loopExpression":{"expression":{"id":5317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8629:3:17","subExpression":{"id":5316,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5310,"src":"8629:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5318,"nodeType":"ExpressionStatement","src":"8629:3:17"},"nodeType":"ForStatement","src":"8589:218:17"},{"assignments":[5345],"declarations":[{"constant":false,"id":5345,"mutability":"mutable","name":"result","nameLocation":"8893:6:17","nodeType":"VariableDeclaration","scope":5374,"src":"8876:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5343,"name":"uint256","nodeType":"ElementaryTypeName","src":"8876:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5344,"nodeType":"ArrayTypeName","src":"8876:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":5351,"initialValue":{"arguments":[{"id":5349,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"8916:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8902:13:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":5346,"name":"uint256","nodeType":"ElementaryTypeName","src":"8906:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5347,"nodeType":"ArrayTypeName","src":"8906:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":5350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8902:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8876:46:17"},{"body":{"id":5370,"nodeType":"Block","src":"8969:52:17","statements":[{"expression":{"id":5368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5362,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5345,"src":"8984:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5364,"indexExpression":{"id":5363,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5353,"src":"8991:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8984:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":5365,"name":"tokenArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"8996:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5367,"indexExpression":{"id":5366,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5353,"src":"9007:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8996:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8984:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5369,"nodeType":"ExpressionStatement","src":"8984:25:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5356,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5353,"src":"8953:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5357,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"8957:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8953:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5371,"initializationExpression":{"assignments":[5353],"declarations":[{"constant":false,"id":5353,"mutability":"mutable","name":"i","nameLocation":"8946:1:17","nodeType":"VariableDeclaration","scope":5371,"src":"8938:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5352,"name":"uint256","nodeType":"ElementaryTypeName","src":"8938:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5355,"initialValue":{"hexValue":"30","id":5354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8950:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8938:13:17"},"loopExpression":{"expression":{"id":5360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8964:3:17","subExpression":{"id":5359,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5353,"src":"8964:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5361,"nodeType":"ExpressionStatement","src":"8964:3:17"},"nodeType":"ForStatement","src":"8933:88:17"},{"expression":{"id":5372,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5345,"src":"9038:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":5293,"id":5373,"nodeType":"Return","src":"9031:13:17"}]},"functionSelector":"d004b036","id":5375,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenIds","nameLocation":"8414:11:17","nodeType":"FunctionDefinition","parameters":{"id":5289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5288,"mutability":"mutable","name":"owner","nameLocation":"8434:5:17","nodeType":"VariableDeclaration","scope":5375,"src":"8426:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5287,"name":"address","nodeType":"ElementaryTypeName","src":"8426:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8425:15:17"},"returnParameters":{"id":5293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5292,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5375,"src":"8462:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5290,"name":"uint256","nodeType":"ElementaryTypeName","src":"8462:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5291,"nodeType":"ArrayTypeName","src":"8462:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"8461:18:17"},"scope":5533,"src":"8405:647:17","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5391,"nodeType":"Block","src":"9134:109:17","statements":[{"assignments":[5383,null,null,null],"declarations":[{"constant":false,"id":5383,"mutability":"mutable","name":"uri","nameLocation":"9160:3:17","nodeType":"VariableDeclaration","scope":5391,"src":"9146:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5382,"name":"string","nodeType":"ElementaryTypeName","src":"9146:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},null,null,null],"id":5388,"initialValue":{"arguments":[{"id":5386,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"9208:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5384,"name":"i_charactersContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"9173:20:17","typeDescriptions":{"typeIdentifier":"t_contract$_Characters_$3143","typeString":"contract Characters"}},"id":5385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"normalPersons","nodeType":"MemberAccess","referencedDeclaration":2968,"src":"9173:34:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"function (uint256) view external returns (string memory,uint256,uint256,uint256)"}},"id":5387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9173:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(string memory,uint256,uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"9145:69:17"},{"expression":{"id":5389,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5383,"src":"9232:3:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5381,"id":5390,"nodeType":"Return","src":"9225:10:17"}]},"functionSelector":"919fb5bb","id":5392,"implemented":true,"kind":"function","modifiers":[],"name":"getNormalCard","nameLocation":"9069:13:17","nodeType":"FunctionDefinition","parameters":{"id":5378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5377,"mutability":"mutable","name":"index","nameLocation":"9091:5:17","nodeType":"VariableDeclaration","scope":5392,"src":"9083:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5376,"name":"uint256","nodeType":"ElementaryTypeName","src":"9083:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9082:15:17"},"returnParameters":{"id":5381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5380,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5392,"src":"9119:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5379,"name":"string","nodeType":"ElementaryTypeName","src":"9119:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9118:15:17"},"scope":5533,"src":"9060:183:17","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5408,"nodeType":"Block","src":"9323:107:17","statements":[{"assignments":[5400,null,null,null],"declarations":[{"constant":false,"id":5400,"mutability":"mutable","name":"uri","nameLocation":"9349:3:17","nodeType":"VariableDeclaration","scope":5408,"src":"9335:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5399,"name":"string","nodeType":"ElementaryTypeName","src":"9335:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},null,null,null],"id":5405,"initialValue":{"arguments":[{"id":5403,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"9395:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5401,"name":"i_charactersContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"9362:20:17","typeDescriptions":{"typeIdentifier":"t_contract$_Characters_$3143","typeString":"contract Characters"}},"id":5402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"rarePersons","nodeType":"MemberAccess","referencedDeclaration":2972,"src":"9362:32:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"function (uint256) view external returns (string memory,uint256,uint256,uint256)"}},"id":5404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9362:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(string memory,uint256,uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"9334:67:17"},{"expression":{"id":5406,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5400,"src":"9419:3:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5398,"id":5407,"nodeType":"Return","src":"9412:10:17"}]},"functionSelector":"7c3b1829","id":5409,"implemented":true,"kind":"function","modifiers":[],"name":"getRareCard","nameLocation":"9260:11:17","nodeType":"FunctionDefinition","parameters":{"id":5395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5394,"mutability":"mutable","name":"index","nameLocation":"9280:5:17","nodeType":"VariableDeclaration","scope":5409,"src":"9272:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5393,"name":"uint256","nodeType":"ElementaryTypeName","src":"9272:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9271:15:17"},"returnParameters":{"id":5398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5397,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5409,"src":"9308:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5396,"name":"string","nodeType":"ElementaryTypeName","src":"9308:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9307:15:17"},"scope":5533,"src":"9251:179:17","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5425,"nodeType":"Block","src":"9531:136:17","statements":[{"assignments":[5417,null,null,null],"declarations":[{"constant":false,"id":5417,"mutability":"mutable","name":"uri","nameLocation":"9557:3:17","nodeType":"VariableDeclaration","scope":5425,"src":"9543:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5416,"name":"string","nodeType":"ElementaryTypeName","src":"9543:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},null,null,null],"id":5422,"initialValue":{"arguments":[{"id":5420,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5411,"src":"9622:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5418,"name":"i_charactersContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"9570:20:17","typeDescriptions":{"typeIdentifier":"t_contract$_Characters_$3143","typeString":"contract Characters"}},"id":5419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"legendaryPersons","nodeType":"MemberAccess","referencedDeclaration":2976,"src":"9570:37:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"function (uint256) view external returns (string memory,uint256,uint256,uint256)"}},"id":5421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9570:68:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(string memory,uint256,uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"9542:96:17"},{"expression":{"id":5423,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5417,"src":"9656:3:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5415,"id":5424,"nodeType":"Return","src":"9649:10:17"}]},"functionSelector":"a2e18eb7","id":5426,"implemented":true,"kind":"function","modifiers":[],"name":"getLegendaryCard","nameLocation":"9447:16:17","nodeType":"FunctionDefinition","parameters":{"id":5412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5411,"mutability":"mutable","name":"index","nameLocation":"9482:5:17","nodeType":"VariableDeclaration","scope":5426,"src":"9474:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5410,"name":"uint256","nodeType":"ElementaryTypeName","src":"9474:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9463:31:17"},"returnParameters":{"id":5415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5426,"src":"9516:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5413,"name":"string","nodeType":"ElementaryTypeName","src":"9516:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9515:15:17"},"scope":5533,"src":"9438:229:17","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5435,"nodeType":"Block","src":"9740:68:17","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5431,"name":"i_charactersContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"9758:20:17","typeDescriptions":{"typeIdentifier":"t_contract$_Characters_$3143","typeString":"contract Characters"}},"id":5432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"normalPersonsLength","nodeType":"MemberAccess","referencedDeclaration":3124,"src":"9758:40:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":5433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9758:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5430,"id":5434,"nodeType":"Return","src":"9751:49:17"}]},"functionSelector":"2e566b70","id":5436,"implemented":true,"kind":"function","modifiers":[],"name":"getNormalCardUrisLength","nameLocation":"9684:23:17","nodeType":"FunctionDefinition","parameters":{"id":5427,"nodeType":"ParameterList","parameters":[],"src":"9707:2:17"},"returnParameters":{"id":5430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5436,"src":"9731:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5428,"name":"uint256","nodeType":"ElementaryTypeName","src":"9731:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9730:9:17"},"scope":5533,"src":"9675:133:17","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5445,"nodeType":"Block","src":"9879:66:17","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5441,"name":"i_charactersContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"9897:20:17","typeDescriptions":{"typeIdentifier":"t_contract$_Characters_$3143","typeString":"contract Characters"}},"id":5442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"rarePersonsLength","nodeType":"MemberAccess","referencedDeclaration":3133,"src":"9897:38:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":5443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9897:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5440,"id":5444,"nodeType":"Return","src":"9890:47:17"}]},"functionSelector":"88916b9a","id":5446,"implemented":true,"kind":"function","modifiers":[],"name":"getRareCardUrisLength","nameLocation":"9825:21:17","nodeType":"FunctionDefinition","parameters":{"id":5437,"nodeType":"ParameterList","parameters":[],"src":"9846:2:17"},"returnParameters":{"id":5440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5446,"src":"9870:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5438,"name":"uint256","nodeType":"ElementaryTypeName","src":"9870:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9869:9:17"},"scope":5533,"src":"9816:129:17","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5455,"nodeType":"Block","src":"10021:71:17","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5451,"name":"i_charactersContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"10039:20:17","typeDescriptions":{"typeIdentifier":"t_contract$_Characters_$3143","typeString":"contract Characters"}},"id":5452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"legendaryPersonsLength","nodeType":"MemberAccess","referencedDeclaration":3142,"src":"10039:43:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":5453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10039:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5450,"id":5454,"nodeType":"Return","src":"10032:52:17"}]},"functionSelector":"3d9ccde0","id":5456,"implemented":true,"kind":"function","modifiers":[],"name":"getLegendaryCardUrisLength","nameLocation":"9962:26:17","nodeType":"FunctionDefinition","parameters":{"id":5447,"nodeType":"ParameterList","parameters":[],"src":"9988:2:17"},"returnParameters":{"id":5450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5449,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5456,"src":"10012:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5448,"name":"uint256","nodeType":"ElementaryTypeName","src":"10012:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10011:9:17"},"scope":5533,"src":"9953:139:17","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5464,"nodeType":"Block","src":"10168:37:17","statements":[{"expression":{"id":5462,"name":"i_priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4697,"src":"10186:11:17","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$103","typeString":"contract AggregatorV3Interface"}},"functionReturnParameters":5461,"id":5463,"nodeType":"Return","src":"10179:18:17"}]},"functionSelector":"9e87a5cd","id":5465,"implemented":true,"kind":"function","modifiers":[],"name":"getPriceFeed","nameLocation":"10109:12:17","nodeType":"FunctionDefinition","parameters":{"id":5457,"nodeType":"ParameterList","parameters":[],"src":"10121:2:17"},"returnParameters":{"id":5461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5460,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5465,"src":"10145:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$103","typeString":"contract AggregatorV3Interface"},"typeName":{"id":5459,"nodeType":"UserDefinedTypeName","pathNode":{"id":5458,"name":"AggregatorV3Interface","nodeType":"IdentifierPath","referencedDeclaration":103,"src":"10145:21:17"},"referencedDeclaration":103,"src":"10145:21:17","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$103","typeString":"contract AggregatorV3Interface"}},"visibility":"internal"}],"src":"10144:23:17"},"scope":5533,"src":"10100:105:17","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5472,"nodeType":"Block","src":"10270:40:17","statements":[{"expression":{"id":5470,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"10288:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5469,"id":5471,"nodeType":"Return","src":"10281:21:17"}]},"functionSelector":"6e02007d","id":5473,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenCounter","nameLocation":"10222:15:17","nodeType":"FunctionDefinition","parameters":{"id":5466,"nodeType":"ParameterList","parameters":[],"src":"10237:2:17"},"returnParameters":{"id":5469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5468,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5473,"src":"10261:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5467,"name":"uint256","nodeType":"ElementaryTypeName","src":"10261:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10260:9:17"},"scope":5533,"src":"10213:97:17","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5485,"nodeType":"Block","src":"10384:46:17","statements":[{"expression":{"baseExpression":{"id":5481,"name":"mappingNfts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4702,"src":"10402:11:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Nft_$4670_storage_$","typeString":"mapping(uint256 => struct NftBox.Nft storage ref)"}},"id":5483,"indexExpression":{"id":5482,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5475,"src":"10414:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10402:20:17","typeDescriptions":{"typeIdentifier":"t_struct$_Nft_$4670_storage","typeString":"struct NftBox.Nft storage ref"}},"functionReturnParameters":5480,"id":5484,"nodeType":"Return","src":"10395:27:17"}]},"functionSelector":"41f63bfd","id":5486,"implemented":true,"kind":"function","modifiers":[],"name":"getNft","nameLocation":"10327:6:17","nodeType":"FunctionDefinition","parameters":{"id":5476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5475,"mutability":"mutable","name":"tokenId","nameLocation":"10342:7:17","nodeType":"VariableDeclaration","scope":5486,"src":"10334:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5474,"name":"uint256","nodeType":"ElementaryTypeName","src":"10334:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10333:17:17"},"returnParameters":{"id":5480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5479,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5486,"src":"10372:10:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Nft_$4670_memory_ptr","typeString":"struct NftBox.Nft"},"typeName":{"id":5478,"nodeType":"UserDefinedTypeName","pathNode":{"id":5477,"name":"Nft","nodeType":"IdentifierPath","referencedDeclaration":4670,"src":"10372:3:17"},"referencedDeclaration":4670,"src":"10372:3:17","typeDescriptions":{"typeIdentifier":"t_struct$_Nft_$4670_storage_ptr","typeString":"struct NftBox.Nft"}},"visibility":"internal"}],"src":"10371:12:17"},"scope":5533,"src":"10318:112:17","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5497,"nodeType":"Block","src":"10513:44:17","statements":[{"expression":{"baseExpression":{"id":5493,"name":"NftBoxesUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"10531:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":5495,"indexExpression":{"id":5494,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5488,"src":"10543:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10531:18:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":5492,"id":5496,"nodeType":"Return","src":"10524:25:17"}]},"functionSelector":"4cf5db48","id":5498,"implemented":true,"kind":"function","modifiers":[],"name":"getNftBoxesUri","nameLocation":"10447:14:17","nodeType":"FunctionDefinition","parameters":{"id":5489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5488,"mutability":"mutable","name":"index","nameLocation":"10470:5:17","nodeType":"VariableDeclaration","scope":5498,"src":"10462:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5487,"name":"uint256","nodeType":"ElementaryTypeName","src":"10462:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10461:15:17"},"returnParameters":{"id":5492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5498,"src":"10498:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5490,"name":"string","nodeType":"ElementaryTypeName","src":"10498:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10497:15:17"},"scope":5533,"src":"10438:119:17","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5531,"nodeType":"Block","src":"10635:170:17","statements":[{"assignments":[null,5506,null,null,null],"declarations":[null,{"constant":false,"id":5506,"mutability":"mutable","name":"Price","nameLocation":"10656:5:17","nodeType":"VariableDeclaration","scope":5531,"src":"10649:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5505,"name":"int256","nodeType":"ElementaryTypeName","src":"10649:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},null,null,null],"id":5510,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5507,"name":"i_priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4697,"src":"10671:11:17","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$103","typeString":"contract AggregatorV3Interface"}},"id":5508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"latestRoundData","nodeType":"MemberAccess","referencedDeclaration":102,"src":"10671:27:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"function () view external returns (uint80,int256,uint256,uint256,uint80)"}},"id":5509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10671:29:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"tuple(uint80,int256,uint256,uint256,uint80)"}},"nodeType":"VariableDeclarationStatement","src":"10646:54:17"},{"assignments":[5512],"declarations":[{"constant":false,"id":5512,"mutability":"mutable","name":"price","nameLocation":"10719:5:17","nodeType":"VariableDeclaration","scope":5531,"src":"10711:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5511,"name":"uint256","nodeType":"ElementaryTypeName","src":"10711:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5525,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5513,"name":"usd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"10728:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653336","id":5514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10734:4:17","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(29 digits omitted)...0000"},"value":"1e36"},"src":"10728:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5516,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10727:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5519,"name":"Price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5506,"src":"10751:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10743:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5517,"name":"uint256","nodeType":"ElementaryTypeName","src":"10743:7:17","typeDescriptions":{}}},"id":5520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10743:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653130","id":5521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10760:4:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"},"value":"1e10"},"src":"10743:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5523,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10742:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10727:38:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10711:54:17"},{"expression":{"arguments":[{"id":5528,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5512,"src":"10791:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10783:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5526,"name":"uint256","nodeType":"ElementaryTypeName","src":"10783:7:17","typeDescriptions":{}}},"id":5529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10783:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5504,"id":5530,"nodeType":"Return","src":"10776:21:17"}]},"functionSelector":"506805da","id":5532,"implemented":true,"kind":"function","modifiers":[],"name":"priceFeedUsdToEth","nameLocation":"10574:17:17","nodeType":"FunctionDefinition","parameters":{"id":5501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5500,"mutability":"mutable","name":"usd","nameLocation":"10600:3:17","nodeType":"VariableDeclaration","scope":5532,"src":"10592:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5499,"name":"uint256","nodeType":"ElementaryTypeName","src":"10592:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10591:13:17"},"returnParameters":{"id":5504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5503,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5532,"src":"10626:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5502,"name":"uint256","nodeType":"ElementaryTypeName","src":"10626:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10625:9:17"},"scope":5533,"src":"10565:240:17","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":5534,"src":"652:10156:17","usedErrors":[8,4635,4637,4639,4641,4643]}],"src":"33:10777:17"},"id":17}},"contracts":{"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol":{"VRFConsumerBaseV2":{"abi":[{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).","kind":"dev","methods":{"constructor":{"params":{"_vrfCoordinator":"address of VRFCoordinator contract"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"rawFulfillRandomWords(uint256,uint256[])":"1fe543e3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_vrfCoordinator\":\"address of VRFCoordinator contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":\"VRFConsumerBaseV2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************","version":1}}},"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"AggregatorV3Interface":{"abi":[{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"description","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint80","name":"_roundId","type":"uint80"}],"name":"getRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"decimals()":"313ce567","description()":"7284e416","getRoundData(uint80)":"9a6fc8f5","latestRoundData()":"feaf968c","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"VRFCoordinatorV2Interface":{"abi":[{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getRequestConfig","outputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"pendingRequestExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"uint32","name":"numWords","type":"uint32"}],"name":"requestRandomWords","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"acceptSubscriptionOwnerTransfer(uint64)":{"details":"will revert if original owner of subId has not requested that msg.sender become the new owner.","params":{"subId":"- ID of the subscription"}},"addConsumer(uint64,address)":{"params":{"consumer":"- New consumer which can use the subscription","subId":"- ID of the subscription"}},"cancelSubscription(uint64,address)":{"params":{"subId":"- ID of the subscription","to":"- Where to send the remaining LINK to"}},"createSubscription()":{"details":"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));","returns":{"subId":"- A unique subscription id."}},"getRequestConfig()":{"returns":{"_0":"minimumRequestConfirmations global min for request confirmations","_1":"maxGasLimit global max for request gas limit","_2":"s_provingKeyHashes list of registered key hashes"}},"getSubscription(uint64)":{"params":{"subId":"- ID of the subscription"},"returns":{"balance":"- LINK balance of the subscription in juels.","consumers":"- list of consumer address which are able to use this subscription.","owner":"- owner of the subscription.","reqCount":"- number of requests for this subscription, determines fee tier."}},"removeConsumer(uint64,address)":{"params":{"consumer":"- Consumer to remove from the subscription","subId":"- ID of the subscription"}},"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":{"params":{"callbackGasLimit":"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]","keyHash":"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.","minimumRequestConfirmations":"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].","numWords":"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.","subId":"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash."},"returns":{"requestId":"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords."}},"requestSubscriptionOwnerTransfer(uint64,address)":{"params":{"newOwner":"- proposed new owner of the subscription","subId":"- ID of the subscription"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptSubscriptionOwnerTransfer(uint64)":"82359740","addConsumer(uint64,address)":"7341c10c","cancelSubscription(uint64,address)":"d7ae1d30","createSubscription()":"a21a23e4","getRequestConfig()":"00012291","getSubscription(uint64)":"a47c7696","pendingRequestExists(uint64)":"e82ad7d4","removeConsumer(uint64,address)":"9f87fad7","requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":"5d3b1d30","requestSubscriptionOwnerTransfer(uint64,address)":"04c357cb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint64,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"getRequestConfig()\":{\"returns\":{\"_0\":\"minimumRequestConfirmations global min for request confirmations\",\"_1\":\"maxGasLimit global max for request gas limit\",\"_2\":\"s_provingKeyHashes list of registered key hashes\"}},\"getSubscription(uint64)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- number of requests for this subscription, determines fee tier.\"}},\"removeConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"params\":{\"callbackGasLimit\":\"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]\",\"keyHash\":\"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.\",\"minimumRequestConfirmations\":\"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].\",\"numWords\":\"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.\",\"subId\":\"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash.\"},\"returns\":{\"requestId\":\"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords.\"}},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"notice\":\"Request subscription owner transfer.\"},\"addConsumer(uint64,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint64,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"getRequestConfig()\":{\"notice\":\"Get configuration relevant for making requests\"},\"getSubscription(uint64)\":{\"notice\":\"Get a VRF subscription.\"},\"removeConsumer(uint64,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"notice\":\"Request a set of random words.\"},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"notice\":\"Request subscription owner transfer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":\"VRFCoordinatorV2Interface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig()\\n    external\\n    view\\n    returns (\\n      uint16,\\n      uint32,\\n      bytes32[] memory\\n    );\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(uint64 subId)\\n    external\\n    view\\n    returns (\\n      uint96 balance,\\n      uint64 reqCount,\\n      address owner,\\n      address[] memory consumers\\n    );\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint64 subId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x54cdc97717cbae1a51a5500c8ee4875ebf056c95b54d2155a9544a79cb4f4494\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"acceptSubscriptionOwnerTransfer(uint64)":{"notice":"Request subscription owner transfer."},"addConsumer(uint64,address)":{"notice":"Add a consumer to a VRF subscription."},"cancelSubscription(uint64,address)":{"notice":"Cancel a subscription"},"createSubscription()":{"notice":"Create a VRF subscription."},"getRequestConfig()":{"notice":"Get configuration relevant for making requests"},"getSubscription(uint64)":{"notice":"Get a VRF subscription."},"removeConsumer(uint64,address)":{"notice":"Remove a consumer from a VRF subscription."},"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":{"notice":"Request a set of random words."},"requestSubscriptionOwnerTransfer(uint64,address)":{"notice":"Request subscription owner transfer."}},"version":1}}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":207,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.","kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"constructor":{"details":"Initializes the contract by setting a `name` and a `symbol` to the token collection."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_375":{"entryPoint":null,"id":375,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":289,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":364,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":415,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":548,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":579,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":589,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":643,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":697,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":751,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x22":{"entryPoint":805,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":852,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":899,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":904,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":909,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":914,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":919,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4093:18","statements":[{"body":{"nodeType":"YulBlock","src":"102:326:18","statements":[{"nodeType":"YulAssignment","src":"112:75:18","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"179:6:18"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"137:41:18"},"nodeType":"YulFunctionCall","src":"137:49:18"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"121:15:18"},"nodeType":"YulFunctionCall","src":"121:66:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"112:5:18"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"203:5:18"},{"name":"length","nodeType":"YulIdentifier","src":"210:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"196:6:18"},"nodeType":"YulFunctionCall","src":"196:21:18"},"nodeType":"YulExpressionStatement","src":"196:21:18"},{"nodeType":"YulVariableDeclaration","src":"226:27:18","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"241:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"248:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"237:3:18"},"nodeType":"YulFunctionCall","src":"237:16:18"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"230:3:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"291:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"293:77:18"},"nodeType":"YulFunctionCall","src":"293:79:18"},"nodeType":"YulExpressionStatement","src":"293:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"272:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"277:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"268:3:18"},"nodeType":"YulFunctionCall","src":"268:16:18"},{"name":"end","nodeType":"YulIdentifier","src":"286:3:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"265:2:18"},"nodeType":"YulFunctionCall","src":"265:25:18"},"nodeType":"YulIf","src":"262:112:18"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"405:3:18"},{"name":"dst","nodeType":"YulIdentifier","src":"410:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"415:6:18"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"383:21:18"},"nodeType":"YulFunctionCall","src":"383:39:18"},"nodeType":"YulExpressionStatement","src":"383:39:18"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"75:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"80:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"88:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"96:5:18","type":""}],"src":"7:421:18"},{"body":{"nodeType":"YulBlock","src":"521:282:18","statements":[{"body":{"nodeType":"YulBlock","src":"570:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"572:77:18"},"nodeType":"YulFunctionCall","src":"572:79:18"},"nodeType":"YulExpressionStatement","src":"572:79:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"549:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"557:4:18","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"545:3:18"},"nodeType":"YulFunctionCall","src":"545:17:18"},{"name":"end","nodeType":"YulIdentifier","src":"564:3:18"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"541:3:18"},"nodeType":"YulFunctionCall","src":"541:27:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"534:6:18"},"nodeType":"YulFunctionCall","src":"534:35:18"},"nodeType":"YulIf","src":"531:122:18"},{"nodeType":"YulVariableDeclaration","src":"662:27:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"682:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"676:5:18"},"nodeType":"YulFunctionCall","src":"676:13:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"666:6:18","type":""}]},{"nodeType":"YulAssignment","src":"698:99:18","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"770:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"778:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"766:3:18"},"nodeType":"YulFunctionCall","src":"766:17:18"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:18"},{"name":"end","nodeType":"YulIdentifier","src":"793:3:18"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"707:58:18"},"nodeType":"YulFunctionCall","src":"707:90:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"698:5:18"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"499:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"507:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"515:5:18","type":""}],"src":"448:355:18"},{"body":{"nodeType":"YulBlock","src":"923:739:18","statements":[{"body":{"nodeType":"YulBlock","src":"969:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"971:77:18"},"nodeType":"YulFunctionCall","src":"971:79:18"},"nodeType":"YulExpressionStatement","src":"971:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"944:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"953:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"940:3:18"},"nodeType":"YulFunctionCall","src":"940:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"965:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"936:3:18"},"nodeType":"YulFunctionCall","src":"936:32:18"},"nodeType":"YulIf","src":"933:119:18"},{"nodeType":"YulBlock","src":"1062:291:18","statements":[{"nodeType":"YulVariableDeclaration","src":"1077:38:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1101:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1112:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1097:3:18"},"nodeType":"YulFunctionCall","src":"1097:17:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1091:5:18"},"nodeType":"YulFunctionCall","src":"1091:24:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1081:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"1162:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"1164:77:18"},"nodeType":"YulFunctionCall","src":"1164:79:18"},"nodeType":"YulExpressionStatement","src":"1164:79:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1134:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"1142:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1131:2:18"},"nodeType":"YulFunctionCall","src":"1131:30:18"},"nodeType":"YulIf","src":"1128:117:18"},{"nodeType":"YulAssignment","src":"1259:84:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1315:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"1326:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1311:3:18"},"nodeType":"YulFunctionCall","src":"1311:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1335:7:18"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"1269:41:18"},"nodeType":"YulFunctionCall","src":"1269:74:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1259:6:18"}]}]},{"nodeType":"YulBlock","src":"1363:292:18","statements":[{"nodeType":"YulVariableDeclaration","src":"1378:39:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1402:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1413:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1398:3:18"},"nodeType":"YulFunctionCall","src":"1398:18:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1392:5:18"},"nodeType":"YulFunctionCall","src":"1392:25:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1382:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"1464:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"1466:77:18"},"nodeType":"YulFunctionCall","src":"1466:79:18"},"nodeType":"YulExpressionStatement","src":"1466:79:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1436:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"1444:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1433:2:18"},"nodeType":"YulFunctionCall","src":"1433:30:18"},"nodeType":"YulIf","src":"1430:117:18"},{"nodeType":"YulAssignment","src":"1561:84:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1617:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"1628:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1613:3:18"},"nodeType":"YulFunctionCall","src":"1613:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1637:7:18"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"1571:41:18"},"nodeType":"YulFunctionCall","src":"1571:74:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1561:6:18"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"885:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"896:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"908:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"916:6:18","type":""}],"src":"809:853:18"},{"body":{"nodeType":"YulBlock","src":"1709:88:18","statements":[{"nodeType":"YulAssignment","src":"1719:30:18","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1729:18:18"},"nodeType":"YulFunctionCall","src":"1729:20:18"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1719:6:18"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1778:6:18"},{"name":"size","nodeType":"YulIdentifier","src":"1786:4:18"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1758:19:18"},"nodeType":"YulFunctionCall","src":"1758:33:18"},"nodeType":"YulExpressionStatement","src":"1758:33:18"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1693:4:18","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1702:6:18","type":""}],"src":"1668:129:18"},{"body":{"nodeType":"YulBlock","src":"1843:35:18","statements":[{"nodeType":"YulAssignment","src":"1853:19:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1869:2:18","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1863:5:18"},"nodeType":"YulFunctionCall","src":"1863:9:18"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1853:6:18"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1836:6:18","type":""}],"src":"1803:75:18"},{"body":{"nodeType":"YulBlock","src":"1951:241:18","statements":[{"body":{"nodeType":"YulBlock","src":"2056:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2058:16:18"},"nodeType":"YulFunctionCall","src":"2058:18:18"},"nodeType":"YulExpressionStatement","src":"2058:18:18"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2028:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"2036:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2025:2:18"},"nodeType":"YulFunctionCall","src":"2025:30:18"},"nodeType":"YulIf","src":"2022:56:18"},{"nodeType":"YulAssignment","src":"2088:37:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2118:6:18"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2096:21:18"},"nodeType":"YulFunctionCall","src":"2096:29:18"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2088:4:18"}]},{"nodeType":"YulAssignment","src":"2162:23:18","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2174:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"2180:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2170:3:18"},"nodeType":"YulFunctionCall","src":"2170:15:18"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2162:4:18"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1935:6:18","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1946:4:18","type":""}],"src":"1884:308:18"},{"body":{"nodeType":"YulBlock","src":"2247:258:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2257:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"2266:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2261:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"2326:63:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2351:3:18"},{"name":"i","nodeType":"YulIdentifier","src":"2356:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2347:3:18"},"nodeType":"YulFunctionCall","src":"2347:11:18"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2370:3:18"},{"name":"i","nodeType":"YulIdentifier","src":"2375:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2366:3:18"},"nodeType":"YulFunctionCall","src":"2366:11:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2360:5:18"},"nodeType":"YulFunctionCall","src":"2360:18:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2340:6:18"},"nodeType":"YulFunctionCall","src":"2340:39:18"},"nodeType":"YulExpressionStatement","src":"2340:39:18"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2287:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"2290:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2284:2:18"},"nodeType":"YulFunctionCall","src":"2284:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2298:19:18","statements":[{"nodeType":"YulAssignment","src":"2300:15:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2309:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"2312:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2305:3:18"},"nodeType":"YulFunctionCall","src":"2305:10:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2300:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"2280:3:18","statements":[]},"src":"2276:113:18"},{"body":{"nodeType":"YulBlock","src":"2423:76:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2473:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"2478:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2469:3:18"},"nodeType":"YulFunctionCall","src":"2469:16:18"},{"kind":"number","nodeType":"YulLiteral","src":"2487:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2462:6:18"},"nodeType":"YulFunctionCall","src":"2462:27:18"},"nodeType":"YulExpressionStatement","src":"2462:27:18"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2404:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"2407:6:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2401:2:18"},"nodeType":"YulFunctionCall","src":"2401:13:18"},"nodeType":"YulIf","src":"2398:101:18"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2229:3:18","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2234:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"2239:6:18","type":""}],"src":"2198:307:18"},{"body":{"nodeType":"YulBlock","src":"2562:269:18","statements":[{"nodeType":"YulAssignment","src":"2572:22:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2586:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"2592:1:18","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2582:3:18"},"nodeType":"YulFunctionCall","src":"2582:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2572:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"2603:38:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2633:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"2639:1:18","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2629:3:18"},"nodeType":"YulFunctionCall","src":"2629:12:18"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2607:18:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"2680:51:18","statements":[{"nodeType":"YulAssignment","src":"2694:27:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2708:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"2716:4:18","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2704:3:18"},"nodeType":"YulFunctionCall","src":"2704:17:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2694:6:18"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2660:18:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2653:6:18"},"nodeType":"YulFunctionCall","src":"2653:26:18"},"nodeType":"YulIf","src":"2650:81:18"},{"body":{"nodeType":"YulBlock","src":"2783:42:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"2797:16:18"},"nodeType":"YulFunctionCall","src":"2797:18:18"},"nodeType":"YulExpressionStatement","src":"2797:18:18"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2747:18:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2770:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"2778:2:18","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2767:2:18"},"nodeType":"YulFunctionCall","src":"2767:14:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2744:2:18"},"nodeType":"YulFunctionCall","src":"2744:38:18"},"nodeType":"YulIf","src":"2741:84:18"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2546:4:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2555:6:18","type":""}],"src":"2511:320:18"},{"body":{"nodeType":"YulBlock","src":"2880:238:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2890:58:18","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2912:6:18"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2942:4:18"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2920:21:18"},"nodeType":"YulFunctionCall","src":"2920:27:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2908:3:18"},"nodeType":"YulFunctionCall","src":"2908:40:18"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2894:10:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"3059:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3061:16:18"},"nodeType":"YulFunctionCall","src":"3061:18:18"},"nodeType":"YulExpressionStatement","src":"3061:18:18"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3002:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"3014:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2999:2:18"},"nodeType":"YulFunctionCall","src":"2999:34:18"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3038:10:18"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3050:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3035:2:18"},"nodeType":"YulFunctionCall","src":"3035:22:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2996:2:18"},"nodeType":"YulFunctionCall","src":"2996:62:18"},"nodeType":"YulIf","src":"2993:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3097:2:18","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3101:10:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3090:6:18"},"nodeType":"YulFunctionCall","src":"3090:22:18"},"nodeType":"YulExpressionStatement","src":"3090:22:18"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2866:6:18","type":""},{"name":"size","nodeType":"YulTypedName","src":"2874:4:18","type":""}],"src":"2837:281:18"},{"body":{"nodeType":"YulBlock","src":"3152:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3169:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3172:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3162:6:18"},"nodeType":"YulFunctionCall","src":"3162:88:18"},"nodeType":"YulExpressionStatement","src":"3162:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3266:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3269:4:18","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3259:6:18"},"nodeType":"YulFunctionCall","src":"3259:15:18"},"nodeType":"YulExpressionStatement","src":"3259:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3290:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3293:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3283:6:18"},"nodeType":"YulFunctionCall","src":"3283:15:18"},"nodeType":"YulExpressionStatement","src":"3283:15:18"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3124:180:18"},{"body":{"nodeType":"YulBlock","src":"3338:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3355:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3358:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3348:6:18"},"nodeType":"YulFunctionCall","src":"3348:88:18"},"nodeType":"YulExpressionStatement","src":"3348:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3452:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3455:4:18","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3445:6:18"},"nodeType":"YulFunctionCall","src":"3445:15:18"},"nodeType":"YulExpressionStatement","src":"3445:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3476:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3479:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3469:6:18"},"nodeType":"YulFunctionCall","src":"3469:15:18"},"nodeType":"YulExpressionStatement","src":"3469:15:18"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3310:180:18"},{"body":{"nodeType":"YulBlock","src":"3585:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3602:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3605:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3595:6:18"},"nodeType":"YulFunctionCall","src":"3595:12:18"},"nodeType":"YulExpressionStatement","src":"3595:12:18"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"3496:117:18"},{"body":{"nodeType":"YulBlock","src":"3708:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3725:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3728:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3718:6:18"},"nodeType":"YulFunctionCall","src":"3718:12:18"},"nodeType":"YulExpressionStatement","src":"3718:12:18"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"3619:117:18"},{"body":{"nodeType":"YulBlock","src":"3831:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3848:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3851:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3841:6:18"},"nodeType":"YulFunctionCall","src":"3841:12:18"},"nodeType":"YulExpressionStatement","src":"3841:12:18"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"3742:117:18"},{"body":{"nodeType":"YulBlock","src":"3954:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3971:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3974:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3964:6:18"},"nodeType":"YulFunctionCall","src":"3964:12:18"},"nodeType":"YulExpressionStatement","src":"3964:12:18"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"3865:117:18"},{"body":{"nodeType":"YulBlock","src":"4036:54:18","statements":[{"nodeType":"YulAssignment","src":"4046:38:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4064:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"4071:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4060:3:18"},"nodeType":"YulFunctionCall","src":"4060:14:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4080:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4076:3:18"},"nodeType":"YulFunctionCall","src":"4076:7:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4056:3:18"},"nodeType":"YulFunctionCall","src":"4056:28:18"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4046:6:18"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4019:5:18","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4029:6:18","type":""}],"src":"3988:102:18"}]},"contents":"{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n}\n","id":18,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620025013803806200250183398181016040528101906200003791906200019f565b81600090805190602001906200004f92919062000071565b5080600190805190602001906200006892919062000071565b505050620003a8565b8280546200007f90620002b9565b90600052602060002090601f016020900481019282620000a35760008555620000ef565b82601f10620000be57805160ff1916838001178555620000ef565b82800160010185558215620000ef579182015b82811115620000ee578251825591602001919060010190620000d1565b5b509050620000fe919062000102565b5090565b5b808211156200011d57600081600090555060010162000103565b5090565b60006200013862000132846200024d565b62000224565b90508281526020810184848401111562000157576200015662000388565b5b6200016484828562000283565b509392505050565b600082601f83011262000184576200018362000383565b5b81516200019684826020860162000121565b91505092915050565b60008060408385031215620001b957620001b862000392565b5b600083015167ffffffffffffffff811115620001da57620001d96200038d565b5b620001e8858286016200016c565b925050602083015167ffffffffffffffff8111156200020c576200020b6200038d565b5b6200021a858286016200016c565b9150509250929050565b60006200023062000243565b90506200023e8282620002ef565b919050565b6000604051905090565b600067ffffffffffffffff8211156200026b576200026a62000354565b5b620002768262000397565b9050602081019050919050565b60005b83811015620002a357808201518184015260208101905062000286565b83811115620002b3576000848401525b50505050565b60006002820490506001821680620002d257607f821691505b60208210811415620002e957620002e862000325565b5b50919050565b620002fa8262000397565b810181811067ffffffffffffffff821117156200031c576200031b62000354565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61214980620003b86000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e99190611743565b6102bc565b6040516100fb9190611a60565b60405180910390f35b61010c61039e565b6040516101199190611a7b565b60405180910390f35b61013c6004803603810190610137919061179d565b610430565b60405161014991906119f9565b60405180910390f35b61016c60048036038101906101679190611703565b610476565b005b610188600480360381019061018391906115ed565b61058e565b005b6101a4600480360381019061019f91906115ed565b6105ee565b005b6101c060048036038101906101bb919061179d565b61060e565b6040516101cd91906119f9565b60405180910390f35b6101f060048036038101906101eb9190611580565b610695565b6040516101fd9190611bbd565b60405180910390f35b61020e61074d565b60405161021b9190611a7b565b60405180910390f35b61023e600480360381019061023991906116c3565b6107df565b005b61025a60048036038101906102559190611640565b6107f5565b005b6102766004803603810190610271919061179d565b610857565b6040516102839190611a7b565b60405180910390f35b6102a660048036038101906102a191906115ad565b6108bf565b6040516102b39190611a60565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610397575061039682610953565b5b9050919050565b6060600080546103ad90611d27565b80601f01602080910402602001604051908101604052809291908181526020018280546103d990611d27565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b826109bd565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104818261060e565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e990611b7d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610511610a08565b73ffffffffffffffffffffffffffffffffffffffff161480610540575061053f8161053a610a08565b6108bf565b5b61057f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057690611b9d565b60405180910390fd5b6105898383610a10565b505050565b61059f610599610a08565b82610ac9565b6105de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d590611a9d565b60405180910390fd5b6105e9838383610b5e565b505050565b610609838383604051806020016040528060008152506107f5565b505050565b60008061061a83610e58565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561068c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068390611b5d565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610706576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fd90611b3d565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461075c90611d27565b80601f016020809104026020016040519081016040528092919081815260200182805461078890611d27565b80156107d55780601f106107aa576101008083540402835291602001916107d5565b820191906000526020600020905b8154815290600101906020018083116107b857829003601f168201915b5050505050905090565b6107f16107ea610a08565b8383610e95565b5050565b610806610800610a08565b83610ac9565b610845576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083c90611a9d565b60405180910390fd5b61085184848484611002565b50505050565b6060610862826109bd565b600061086c61105e565b9050600081511161088c57604051806020016040528060008152506108b7565b8061089684611075565b6040516020016108a79291906119d5565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109c68161114d565b610a05576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fc90611b5d565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610a838361060e565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610ad58361060e565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b175750610b1681856108bf565b5b80610b5557508373ffffffffffffffffffffffffffffffffffffffff16610b3d84610430565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610b7e8261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610bd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bcb90611add565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3b90611afd565b60405180910390fd5b610c51838383600161118e565b8273ffffffffffffffffffffffffffffffffffffffff16610c718261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610cc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbe90611add565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610e538383836001611194565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610efb90611b1d565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ff59190611a60565b60405180910390a3505050565b61100d848484610b5e565b6110198484848461119a565b611058576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104f90611abd565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b60606000600161108484611331565b01905060008167ffffffffffffffff8111156110a3576110a2611de8565b5b6040519080825280601f01601f1916602001820160405280156110d55781602001600182028036833780820191505090505b509050600082602001820190505b600115611142578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161112c5761112b611d8a565b5b049450600085141561113d57611142565b6110e3565b819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff1661116f83610e58565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b50505050565b50505050565b60006111bb8473ffffffffffffffffffffffffffffffffffffffff16611484565b15611324578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026111e4610a08565b8786866040518563ffffffff1660e01b81526004016112069493929190611a14565b602060405180830381600087803b15801561122057600080fd5b505af192505050801561125157506040513d601f19601f8201168201806040525081019061124e9190611770565b60015b6112d4573d8060008114611281576040519150601f19603f3d011682016040523d82523d6000602084013e611286565b606091505b506000815114156112cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c390611abd565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611329565b600190505b949350505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061138f577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161138557611384611d8a565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106113cc576d04ee2d6d415b85acef810000000083816113c2576113c1611d8a565b5b0492506020810190505b662386f26fc1000083106113fb57662386f26fc1000083816113f1576113f0611d8a565b5b0492506010810190505b6305f5e1008310611424576305f5e100838161141a57611419611d8a565b5b0492506008810190505b612710831061144957612710838161143f5761143e611d8a565b5b0492506004810190505b6064831061146c576064838161146257611461611d8a565b5b0492506002810190505b600a831061147b576001810190505b80915050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60006114ba6114b584611bfd565b611bd8565b9050828152602081018484840111156114d6576114d5611e1c565b5b6114e1848285611ce5565b509392505050565b6000813590506114f8816120b7565b92915050565b60008135905061150d816120ce565b92915050565b600081359050611522816120e5565b92915050565b600081519050611537816120e5565b92915050565b600082601f83011261155257611551611e17565b5b81356115628482602086016114a7565b91505092915050565b60008135905061157a816120fc565b92915050565b60006020828403121561159657611595611e26565b5b60006115a4848285016114e9565b91505092915050565b600080604083850312156115c4576115c3611e26565b5b60006115d2858286016114e9565b92505060206115e3858286016114e9565b9150509250929050565b60008060006060848603121561160657611605611e26565b5b6000611614868287016114e9565b9350506020611625868287016114e9565b92505060406116368682870161156b565b9150509250925092565b6000806000806080858703121561165a57611659611e26565b5b6000611668878288016114e9565b9450506020611679878288016114e9565b935050604061168a8782880161156b565b925050606085013567ffffffffffffffff8111156116ab576116aa611e21565b5b6116b78782880161153d565b91505092959194509250565b600080604083850312156116da576116d9611e26565b5b60006116e8858286016114e9565b92505060206116f9858286016114fe565b9150509250929050565b6000806040838503121561171a57611719611e26565b5b6000611728858286016114e9565b92505060206117398582860161156b565b9150509250929050565b60006020828403121561175957611758611e26565b5b600061176784828501611513565b91505092915050565b60006020828403121561178657611785611e26565b5b600061179484828501611528565b91505092915050565b6000602082840312156117b3576117b2611e26565b5b60006117c18482850161156b565b91505092915050565b6117d381611c71565b82525050565b6117e281611c83565b82525050565b60006117f382611c2e565b6117fd8185611c44565b935061180d818560208601611cf4565b61181681611e2b565b840191505092915050565b600061182c82611c39565b6118368185611c55565b9350611846818560208601611cf4565b61184f81611e2b565b840191505092915050565b600061186582611c39565b61186f8185611c66565b935061187f818560208601611cf4565b80840191505092915050565b6000611898602d83611c55565b91506118a382611e3c565b604082019050919050565b60006118bb603283611c55565b91506118c682611e8b565b604082019050919050565b60006118de602583611c55565b91506118e982611eda565b604082019050919050565b6000611901602483611c55565b915061190c82611f29565b604082019050919050565b6000611924601983611c55565b915061192f82611f78565b602082019050919050565b6000611947602983611c55565b915061195282611fa1565b604082019050919050565b600061196a601883611c55565b915061197582611ff0565b602082019050919050565b600061198d602183611c55565b915061199882612019565b604082019050919050565b60006119b0603d83611c55565b91506119bb82612068565b604082019050919050565b6119cf81611cdb565b82525050565b60006119e1828561185a565b91506119ed828461185a565b91508190509392505050565b6000602082019050611a0e60008301846117ca565b92915050565b6000608082019050611a2960008301876117ca565b611a3660208301866117ca565b611a4360408301856119c6565b8181036060830152611a5581846117e8565b905095945050505050565b6000602082019050611a7560008301846117d9565b92915050565b60006020820190508181036000830152611a958184611821565b905092915050565b60006020820190508181036000830152611ab68161188b565b9050919050565b60006020820190508181036000830152611ad6816118ae565b9050919050565b60006020820190508181036000830152611af6816118d1565b9050919050565b60006020820190508181036000830152611b16816118f4565b9050919050565b60006020820190508181036000830152611b3681611917565b9050919050565b60006020820190508181036000830152611b568161193a565b9050919050565b60006020820190508181036000830152611b768161195d565b9050919050565b60006020820190508181036000830152611b9681611980565b9050919050565b60006020820190508181036000830152611bb6816119a3565b9050919050565b6000602082019050611bd260008301846119c6565b92915050565b6000611be2611bf3565b9050611bee8282611d59565b919050565b6000604051905090565b600067ffffffffffffffff821115611c1857611c17611de8565b5b611c2182611e2b565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000611c7c82611cbb565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611d12578082015181840152602081019050611cf7565b83811115611d21576000848401525b50505050565b60006002820490506001821680611d3f57607f821691505b60208210811415611d5357611d52611db9565b5b50919050565b611d6282611e2b565b810181811067ffffffffffffffff82111715611d8157611d80611de8565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b6120c081611c71565b81146120cb57600080fd5b50565b6120d781611c83565b81146120e257600080fd5b50565b6120ee81611c8f565b81146120f957600080fd5b50565b61210581611cdb565b811461211057600080fd5b5056fea26469706673582212207ea616c3cfcb7ae2793ccdc4e12c0bdfcb8d51636bec2dfb47d1b4570f7e529464736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2501 CODESIZE SUB DUP1 PUSH3 0x2501 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x19F JUMP JUMPDEST DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP POP POP PUSH3 0x3A8 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x7F SWAP1 PUSH3 0x2B9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xA3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xBE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xEF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xEE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xD1 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xFE SWAP2 SWAP1 PUSH3 0x102 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x11D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x103 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x138 PUSH3 0x132 DUP5 PUSH3 0x24D JUMP JUMPDEST PUSH3 0x224 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x157 JUMPI PUSH3 0x156 PUSH3 0x388 JUMP JUMPDEST JUMPDEST PUSH3 0x164 DUP5 DUP3 DUP6 PUSH3 0x283 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x184 JUMPI PUSH3 0x183 PUSH3 0x383 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x196 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x121 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1B9 JUMPI PUSH3 0x1B8 PUSH3 0x392 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1DA JUMPI PUSH3 0x1D9 PUSH3 0x38D JUMP JUMPDEST JUMPDEST PUSH3 0x1E8 DUP6 DUP3 DUP7 ADD PUSH3 0x16C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x20C JUMPI PUSH3 0x20B PUSH3 0x38D JUMP JUMPDEST JUMPDEST PUSH3 0x21A DUP6 DUP3 DUP7 ADD PUSH3 0x16C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x230 PUSH3 0x243 JUMP JUMPDEST SWAP1 POP PUSH3 0x23E DUP3 DUP3 PUSH3 0x2EF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x26B JUMPI PUSH3 0x26A PUSH3 0x354 JUMP JUMPDEST JUMPDEST PUSH3 0x276 DUP3 PUSH3 0x397 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x2A3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x286 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x2B3 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2D2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x2E9 JUMPI PUSH3 0x2E8 PUSH3 0x325 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2FA DUP3 PUSH3 0x397 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x31C JUMPI PUSH3 0x31B PUSH3 0x354 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2149 DUP1 PUSH3 0x3B8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x1743 JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x1A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x1A7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x179D JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x19F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x1703 JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x15ED JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x15ED JUMP JUMPDEST PUSH2 0x5EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x179D JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x19F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x1580 JUMP JUMPDEST PUSH2 0x695 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1BBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x74D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x1A7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x16C3 JUMP JUMPDEST PUSH2 0x7DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x1640 JUMP JUMPDEST PUSH2 0x7F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x179D JUMP JUMPDEST PUSH2 0x857 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x1A7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x15AD JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x1A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0x953 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x1D27 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x1D27 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x481 DUP3 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E9 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x511 PUSH2 0xA08 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x540 JUMPI POP PUSH2 0x53F DUP2 PUSH2 0x53A PUSH2 0xA08 JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST JUMPDEST PUSH2 0x57F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x1B9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x589 DUP4 DUP4 PUSH2 0xA10 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x59F PUSH2 0x599 PUSH2 0xA08 JUMP JUMPDEST DUP3 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x5DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1A9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E9 DUP4 DUP4 DUP4 PUSH2 0xB5E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x609 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7F5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x61A DUP4 PUSH2 0xE58 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x68C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x683 SWAP1 PUSH2 0x1B5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x706 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FD SWAP1 PUSH2 0x1B3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x75C SWAP1 PUSH2 0x1D27 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x788 SWAP1 PUSH2 0x1D27 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7F1 PUSH2 0x7EA PUSH2 0xA08 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE95 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x806 PUSH2 0x800 PUSH2 0xA08 JUMP JUMPDEST DUP4 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x845 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP1 PUSH2 0x1A9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x851 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1002 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x862 DUP3 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86C PUSH2 0x105E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x88C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8B7 JUMP JUMPDEST DUP1 PUSH2 0x896 DUP5 PUSH2 0x1075 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8A7 SWAP3 SWAP2 SWAP1 PUSH2 0x19D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C6 DUP2 PUSH2 0x114D JUMP JUMPDEST PUSH2 0xA05 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FC SWAP1 PUSH2 0x1B5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA83 DUP4 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAD5 DUP4 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB17 JUMPI POP PUSH2 0xB16 DUP2 DUP6 PUSH2 0x8BF JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB55 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB3D DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB7E DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCB SWAP1 PUSH2 0x1ADD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3B SWAP1 PUSH2 0x1AFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC51 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x118E JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC71 DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBE SWAP1 PUSH2 0x1ADD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE53 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1194 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFB SWAP1 PUSH2 0x1B1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFF5 SWAP2 SWAP1 PUSH2 0x1A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x100D DUP5 DUP5 DUP5 PUSH2 0xB5E JUMP JUMPDEST PUSH2 0x1019 DUP5 DUP5 DUP5 DUP5 PUSH2 0x119A JUMP JUMPDEST PUSH2 0x1058 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104F SWAP1 PUSH2 0x1ABD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1084 DUP5 PUSH2 0x1331 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10A3 JUMPI PUSH2 0x10A2 PUSH2 0x1DE8 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10D5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1142 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x112C JUMPI PUSH2 0x112B PUSH2 0x1D8A JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x113D JUMPI PUSH2 0x1142 JUMP JUMPDEST PUSH2 0x10E3 JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x116F DUP4 PUSH2 0xE58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11BB DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1484 JUMP JUMPDEST ISZERO PUSH2 0x1324 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x11E4 PUSH2 0xA08 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1206 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A14 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1251 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x124E SWAP2 SWAP1 PUSH2 0x1770 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12D4 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1281 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1286 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x12CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12C3 SWAP1 PUSH2 0x1ABD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x138F JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1385 JUMPI PUSH2 0x1384 PUSH2 0x1D8A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x13CC JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x13C2 JUMPI PUSH2 0x13C1 PUSH2 0x1D8A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x13FB JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x13F1 JUMPI PUSH2 0x13F0 PUSH2 0x1D8A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1424 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x141A JUMPI PUSH2 0x1419 PUSH2 0x1D8A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1449 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x143F JUMPI PUSH2 0x143E PUSH2 0x1D8A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x146C JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1462 JUMPI PUSH2 0x1461 PUSH2 0x1D8A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x147B JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14BA PUSH2 0x14B5 DUP5 PUSH2 0x1BFD JUMP JUMPDEST PUSH2 0x1BD8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x14D6 JUMPI PUSH2 0x14D5 PUSH2 0x1E1C JUMP JUMPDEST JUMPDEST PUSH2 0x14E1 DUP5 DUP3 DUP6 PUSH2 0x1CE5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14F8 DUP2 PUSH2 0x20B7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x150D DUP2 PUSH2 0x20CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1522 DUP2 PUSH2 0x20E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1537 DUP2 PUSH2 0x20E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1552 JUMPI PUSH2 0x1551 PUSH2 0x1E17 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1562 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x14A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x157A DUP2 PUSH2 0x20FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1596 JUMPI PUSH2 0x1595 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15A4 DUP5 DUP3 DUP6 ADD PUSH2 0x14E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15C4 JUMPI PUSH2 0x15C3 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15D2 DUP6 DUP3 DUP7 ADD PUSH2 0x14E9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15E3 DUP6 DUP3 DUP7 ADD PUSH2 0x14E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1606 JUMPI PUSH2 0x1605 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1614 DUP7 DUP3 DUP8 ADD PUSH2 0x14E9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1625 DUP7 DUP3 DUP8 ADD PUSH2 0x14E9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1636 DUP7 DUP3 DUP8 ADD PUSH2 0x156B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x165A JUMPI PUSH2 0x1659 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1668 DUP8 DUP3 DUP9 ADD PUSH2 0x14E9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1679 DUP8 DUP3 DUP9 ADD PUSH2 0x14E9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x168A DUP8 DUP3 DUP9 ADD PUSH2 0x156B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16AB JUMPI PUSH2 0x16AA PUSH2 0x1E21 JUMP JUMPDEST JUMPDEST PUSH2 0x16B7 DUP8 DUP3 DUP9 ADD PUSH2 0x153D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16DA JUMPI PUSH2 0x16D9 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16E8 DUP6 DUP3 DUP7 ADD PUSH2 0x14E9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16F9 DUP6 DUP3 DUP7 ADD PUSH2 0x14FE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x171A JUMPI PUSH2 0x1719 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1728 DUP6 DUP3 DUP7 ADD PUSH2 0x14E9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1739 DUP6 DUP3 DUP7 ADD PUSH2 0x156B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1759 JUMPI PUSH2 0x1758 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1767 DUP5 DUP3 DUP6 ADD PUSH2 0x1513 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1786 JUMPI PUSH2 0x1785 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1794 DUP5 DUP3 DUP6 ADD PUSH2 0x1528 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17B3 JUMPI PUSH2 0x17B2 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17C1 DUP5 DUP3 DUP6 ADD PUSH2 0x156B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17D3 DUP2 PUSH2 0x1C71 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x17E2 DUP2 PUSH2 0x1C83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17F3 DUP3 PUSH2 0x1C2E JUMP JUMPDEST PUSH2 0x17FD DUP2 DUP6 PUSH2 0x1C44 JUMP JUMPDEST SWAP4 POP PUSH2 0x180D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CF4 JUMP JUMPDEST PUSH2 0x1816 DUP2 PUSH2 0x1E2B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x182C DUP3 PUSH2 0x1C39 JUMP JUMPDEST PUSH2 0x1836 DUP2 DUP6 PUSH2 0x1C55 JUMP JUMPDEST SWAP4 POP PUSH2 0x1846 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CF4 JUMP JUMPDEST PUSH2 0x184F DUP2 PUSH2 0x1E2B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1865 DUP3 PUSH2 0x1C39 JUMP JUMPDEST PUSH2 0x186F DUP2 DUP6 PUSH2 0x1C66 JUMP JUMPDEST SWAP4 POP PUSH2 0x187F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CF4 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1898 PUSH1 0x2D DUP4 PUSH2 0x1C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x18A3 DUP3 PUSH2 0x1E3C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18BB PUSH1 0x32 DUP4 PUSH2 0x1C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x18C6 DUP3 PUSH2 0x1E8B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18DE PUSH1 0x25 DUP4 PUSH2 0x1C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x18E9 DUP3 PUSH2 0x1EDA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1901 PUSH1 0x24 DUP4 PUSH2 0x1C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x190C DUP3 PUSH2 0x1F29 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1924 PUSH1 0x19 DUP4 PUSH2 0x1C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x192F DUP3 PUSH2 0x1F78 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1947 PUSH1 0x29 DUP4 PUSH2 0x1C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x1952 DUP3 PUSH2 0x1FA1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x196A PUSH1 0x18 DUP4 PUSH2 0x1C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x1975 DUP3 PUSH2 0x1FF0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x198D PUSH1 0x21 DUP4 PUSH2 0x1C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x1998 DUP3 PUSH2 0x2019 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B0 PUSH1 0x3D DUP4 PUSH2 0x1C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x19BB DUP3 PUSH2 0x2068 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19CF DUP2 PUSH2 0x1CDB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19E1 DUP3 DUP6 PUSH2 0x185A JUMP JUMPDEST SWAP2 POP PUSH2 0x19ED DUP3 DUP5 PUSH2 0x185A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A0E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1A29 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x17CA JUMP JUMPDEST PUSH2 0x1A36 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x17CA JUMP JUMPDEST PUSH2 0x1A43 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x19C6 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1A55 DUP2 DUP5 PUSH2 0x17E8 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A75 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A95 DUP2 DUP5 PUSH2 0x1821 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AB6 DUP2 PUSH2 0x188B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AD6 DUP2 PUSH2 0x18AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AF6 DUP2 PUSH2 0x18D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B16 DUP2 PUSH2 0x18F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B36 DUP2 PUSH2 0x1917 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B56 DUP2 PUSH2 0x193A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B76 DUP2 PUSH2 0x195D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B96 DUP2 PUSH2 0x1980 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BB6 DUP2 PUSH2 0x19A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BD2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BE2 PUSH2 0x1BF3 JUMP JUMPDEST SWAP1 POP PUSH2 0x1BEE DUP3 DUP3 PUSH2 0x1D59 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1C18 JUMPI PUSH2 0x1C17 PUSH2 0x1DE8 JUMP JUMPDEST JUMPDEST PUSH2 0x1C21 DUP3 PUSH2 0x1E2B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C7C DUP3 PUSH2 0x1CBB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D12 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1CF7 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1D21 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1D3F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1D53 JUMPI PUSH2 0x1D52 PUSH2 0x1DB9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D62 DUP3 PUSH2 0x1E2B JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1D81 JUMPI PUSH2 0x1D80 PUSH2 0x1DE8 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x20C0 DUP2 PUSH2 0x1C71 JUMP JUMPDEST DUP2 EQ PUSH2 0x20CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x20D7 DUP2 PUSH2 0x1C83 JUMP JUMPDEST DUP2 EQ PUSH2 0x20E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x20EE DUP2 PUSH2 0x1C8F JUMP JUMPDEST DUP2 EQ PUSH2 0x20F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2105 DUP2 PUSH2 0x1CDB JUMP JUMPDEST DUP2 EQ PUSH2 0x2110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0xA616C3CFCB7AE2793CCDC4E12C0BDFCB8D51636BEC2DFB47D1B4570F7E5294 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"628:16679:4:-:0;;;1390:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1464:5;1456;:13;;;;;;;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;;;;;;;:::i;:::-;;1390:113;;628:16679;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:421:18:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:112;;;293:79;;:::i;:::-;262:112;383:39;415:6;410:3;405;383:39;:::i;:::-;102:326;7:421;;;;;:::o;448:355::-;515:5;564:3;557:4;549:6;545:17;541:27;531:122;;572:79;;:::i;:::-;531:122;682:6;676:13;707:90;793:3;785:6;778:4;770:6;766:17;707:90;:::i;:::-;698:99;;521:282;448:355;;;;:::o;809:853::-;908:6;916;965:2;953:9;944:7;940:23;936:32;933:119;;;971:79;;:::i;:::-;933:119;1112:1;1101:9;1097:17;1091:24;1142:18;1134:6;1131:30;1128:117;;;1164:79;;:::i;:::-;1128:117;1269:74;1335:7;1326:6;1315:9;1311:22;1269:74;:::i;:::-;1259:84;;1062:291;1413:2;1402:9;1398:18;1392:25;1444:18;1436:6;1433:30;1430:117;;;1466:79;;:::i;:::-;1430:117;1571:74;1637:7;1628:6;1617:9;1613:22;1571:74;:::i;:::-;1561:84;;1363:292;809:853;;;;;:::o;1668:129::-;1702:6;1729:20;;:::i;:::-;1719:30;;1758:33;1786:4;1778:6;1758:33;:::i;:::-;1668:129;;;:::o;1803:75::-;1836:6;1869:2;1863:9;1853:19;;1803:75;:::o;1884:308::-;1946:4;2036:18;2028:6;2025:30;2022:56;;;2058:18;;:::i;:::-;2022:56;2096:29;2118:6;2096:29;:::i;:::-;2088:37;;2180:4;2174;2170:15;2162:23;;1884:308;;;:::o;2198:307::-;2266:1;2276:113;2290:6;2287:1;2284:13;2276:113;;;2375:1;2370:3;2366:11;2360:18;2356:1;2351:3;2347:11;2340:39;2312:2;2309:1;2305:10;2300:15;;2276:113;;;2407:6;2404:1;2401:13;2398:101;;;2487:1;2478:6;2473:3;2469:16;2462:27;2398:101;2247:258;2198:307;;;:::o;2511:320::-;2555:6;2592:1;2586:4;2582:12;2572:22;;2639:1;2633:4;2629:12;2660:18;2650:81;;2716:4;2708:6;2704:17;2694:27;;2650:81;2778:2;2770:6;2767:14;2747:18;2744:38;2741:84;;;2797:18;;:::i;:::-;2741:84;2562:269;2511:320;;;:::o;2837:281::-;2920:27;2942:4;2920:27;:::i;:::-;2912:6;2908:40;3050:6;3038:10;3035:22;3014:18;3002:10;2999:34;2996:62;2993:88;;;3061:18;;:::i;:::-;2993:88;3101:10;3097:2;3090:22;2880:238;2837:281;;:::o;3124:180::-;3172:77;3169:1;3162:88;3269:4;3266:1;3259:15;3293:4;3290:1;3283:15;3310:180;3358:77;3355:1;3348:88;3455:4;3452:1;3445:15;3479:4;3476:1;3469:15;3496:117;3605:1;3602;3595:12;3619:117;3728:1;3725;3718:12;3742:117;3851:1;3848;3841:12;3865:117;3974:1;3971;3964:12;3988:102;4029:6;4080:2;4076:7;4071:2;4064:5;4060:14;4056:28;4046:38;;3988:102;;;:::o;628:16679:4:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_1223":{"entryPoint":4500,"id":1223,"parameterSlots":4,"returnSlots":0},"@_approve_1089":{"entryPoint":2576,"id":1089,"parameterSlots":2,"returnSlots":0},"@_baseURI_526":{"entryPoint":4190,"id":526,"parameterSlots":0,"returnSlots":1},"@_beforeTokenTransfer_1210":{"entryPoint":4494,"id":1210,"parameterSlots":4,"returnSlots":0},"@_checkOnERC721Received_1197":{"entryPoint":4506,"id":1197,"parameterSlots":4,"returnSlots":1},"@_exists_758":{"entryPoint":4429,"id":758,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_792":{"entryPoint":2761,"id":792,"parameterSlots":2,"returnSlots":1},"@_msgSender_1867":{"entryPoint":2568,"id":1867,"parameterSlots":0,"returnSlots":1},"@_ownerOf_740":{"entryPoint":3672,"id":740,"parameterSlots":1,"returnSlots":1},"@_requireMinted_1135":{"entryPoint":2493,"id":1135,"parameterSlots":1,"returnSlots":0},"@_safeTransfer_727":{"entryPoint":4098,"id":727,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_1121":{"entryPoint":3733,"id":1121,"parameterSlots":3,"returnSlots":0},"@_transfer_1065":{"entryPoint":2910,"id":1065,"parameterSlots":3,"returnSlots":0},"@approve_569":{"entryPoint":1142,"id":569,"parameterSlots":2,"returnSlots":0},"@balanceOf_430":{"entryPoint":1685,"id":430,"parameterSlots":1,"returnSlots":1},"@getApproved_587":{"entryPoint":1072,"id":587,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_622":{"entryPoint":2239,"id":622,"parameterSlots":2,"returnSlots":1},"@isContract_1543":{"entryPoint":5252,"id":1543,"parameterSlots":1,"returnSlots":1},"@log10_2790":{"entryPoint":4913,"id":2790,"parameterSlots":1,"returnSlots":1},"@name_468":{"entryPoint":926,"id":468,"parameterSlots":0,"returnSlots":1},"@ownerOf_458":{"entryPoint":1550,"id":458,"parameterSlots":1,"returnSlots":1},"@safeTransferFrom_668":{"entryPoint":1518,"id":668,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_698":{"entryPoint":2037,"id":698,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_604":{"entryPoint":2015,"id":604,"parameterSlots":2,"returnSlots":0},"@supportsInterface_2075":{"entryPoint":2387,"id":2075,"parameterSlots":1,"returnSlots":1},"@supportsInterface_406":{"entryPoint":700,"id":406,"parameterSlots":1,"returnSlots":1},"@symbol_478":{"entryPoint":1869,"id":478,"parameterSlots":0,"returnSlots":1},"@toString_1935":{"entryPoint":4213,"id":1935,"parameterSlots":1,"returnSlots":1},"@tokenURI_517":{"entryPoint":2135,"id":517,"parameterSlots":1,"returnSlots":1},"@transferFrom_649":{"entryPoint":1422,"id":649,"parameterSlots":3,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":5287,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":5353,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":5374,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":5395,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":5416,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":5437,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":5483,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":5504,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":5549,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":5613,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":5696,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":5827,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":5891,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":5955,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":6000,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":6045,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":6090,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":6105,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":6120,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":6177,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6234,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack":{"entryPoint":6283,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack":{"entryPoint":6318,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack":{"entryPoint":6353,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack":{"entryPoint":6388,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack":{"entryPoint":6423,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack":{"entryPoint":6458,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack":{"entryPoint":6493,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack":{"entryPoint":6528,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack":{"entryPoint":6563,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":6598,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":6613,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":6649,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":6676,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":6752,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6779,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6813,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6845,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6877,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6909,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6941,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6973,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7005,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7037,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7069,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":7101,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":7128,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":7155,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":7165,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":7214,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":7225,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":7236,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":7253,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7270,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":7281,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":7299,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":7311,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":7355,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":7387,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":7397,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":7412,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":7463,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":7513,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x12":{"entryPoint":7562,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":7609,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":7656,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":7703,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":7708,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":7713,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":7718,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":7723,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af":{"entryPoint":7740,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e":{"entryPoint":7819,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48":{"entryPoint":7898,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4":{"entryPoint":7977,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05":{"entryPoint":8056,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159":{"entryPoint":8097,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f":{"entryPoint":8176,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942":{"entryPoint":8217,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83":{"entryPoint":8296,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":8375,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":8398,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":8421,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":8444,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:23167:18","statements":[{"body":{"nodeType":"YulBlock","src":"90:327:18","statements":[{"nodeType":"YulAssignment","src":"100:74:18","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"166:6:18"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"125:40:18"},"nodeType":"YulFunctionCall","src":"125:48:18"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"109:15:18"},"nodeType":"YulFunctionCall","src":"109:65:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"100:5:18"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"190:5:18"},{"name":"length","nodeType":"YulIdentifier","src":"197:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"183:6:18"},"nodeType":"YulFunctionCall","src":"183:21:18"},"nodeType":"YulExpressionStatement","src":"183:21:18"},{"nodeType":"YulVariableDeclaration","src":"213:27:18","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"228:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"235:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"224:3:18"},"nodeType":"YulFunctionCall","src":"224:16:18"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"217:3:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"278:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"280:77:18"},"nodeType":"YulFunctionCall","src":"280:79:18"},"nodeType":"YulExpressionStatement","src":"280:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"259:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"264:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"255:3:18"},"nodeType":"YulFunctionCall","src":"255:16:18"},{"name":"end","nodeType":"YulIdentifier","src":"273:3:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"252:2:18"},"nodeType":"YulFunctionCall","src":"252:25:18"},"nodeType":"YulIf","src":"249:112:18"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"394:3:18"},{"name":"dst","nodeType":"YulIdentifier","src":"399:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"404:6:18"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"370:23:18"},"nodeType":"YulFunctionCall","src":"370:41:18"},"nodeType":"YulExpressionStatement","src":"370:41:18"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"63:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"68:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"76:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"84:5:18","type":""}],"src":"7:410:18"},{"body":{"nodeType":"YulBlock","src":"475:87:18","statements":[{"nodeType":"YulAssignment","src":"485:29:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"507:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"494:12:18"},"nodeType":"YulFunctionCall","src":"494:20:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"485:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:18"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"523:26:18"},"nodeType":"YulFunctionCall","src":"523:33:18"},"nodeType":"YulExpressionStatement","src":"523:33:18"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"453:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"461:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"469:5:18","type":""}],"src":"423:139:18"},{"body":{"nodeType":"YulBlock","src":"617:84:18","statements":[{"nodeType":"YulAssignment","src":"627:29:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"649:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"636:12:18"},"nodeType":"YulFunctionCall","src":"636:20:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"627:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"689:5:18"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"665:23:18"},"nodeType":"YulFunctionCall","src":"665:30:18"},"nodeType":"YulExpressionStatement","src":"665:30:18"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"595:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"603:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"611:5:18","type":""}],"src":"568:133:18"},{"body":{"nodeType":"YulBlock","src":"758:86:18","statements":[{"nodeType":"YulAssignment","src":"768:29:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"790:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"777:12:18"},"nodeType":"YulFunctionCall","src":"777:20:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"768:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"832:5:18"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"806:25:18"},"nodeType":"YulFunctionCall","src":"806:32:18"},"nodeType":"YulExpressionStatement","src":"806:32:18"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"736:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"744:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"752:5:18","type":""}],"src":"707:137:18"},{"body":{"nodeType":"YulBlock","src":"912:79:18","statements":[{"nodeType":"YulAssignment","src":"922:22:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"937:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"931:5:18"},"nodeType":"YulFunctionCall","src":"931:13:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"922:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"979:5:18"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"953:25:18"},"nodeType":"YulFunctionCall","src":"953:32:18"},"nodeType":"YulExpressionStatement","src":"953:32:18"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"890:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"898:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"906:5:18","type":""}],"src":"850:141:18"},{"body":{"nodeType":"YulBlock","src":"1071:277:18","statements":[{"body":{"nodeType":"YulBlock","src":"1120:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"1122:77:18"},"nodeType":"YulFunctionCall","src":"1122:79:18"},"nodeType":"YulExpressionStatement","src":"1122:79:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1099:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"1107:4:18","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1095:3:18"},"nodeType":"YulFunctionCall","src":"1095:17:18"},{"name":"end","nodeType":"YulIdentifier","src":"1114:3:18"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1091:3:18"},"nodeType":"YulFunctionCall","src":"1091:27:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1084:6:18"},"nodeType":"YulFunctionCall","src":"1084:35:18"},"nodeType":"YulIf","src":"1081:122:18"},{"nodeType":"YulVariableDeclaration","src":"1212:34:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1239:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1226:12:18"},"nodeType":"YulFunctionCall","src":"1226:20:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1216:6:18","type":""}]},{"nodeType":"YulAssignment","src":"1255:87:18","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1315:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"1323:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1311:3:18"},"nodeType":"YulFunctionCall","src":"1311:17:18"},{"name":"length","nodeType":"YulIdentifier","src":"1330:6:18"},{"name":"end","nodeType":"YulIdentifier","src":"1338:3:18"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"1264:46:18"},"nodeType":"YulFunctionCall","src":"1264:78:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1255:5:18"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1049:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"1057:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1065:5:18","type":""}],"src":"1010:338:18"},{"body":{"nodeType":"YulBlock","src":"1406:87:18","statements":[{"nodeType":"YulAssignment","src":"1416:29:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1438:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1425:12:18"},"nodeType":"YulFunctionCall","src":"1425:20:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1416:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1481:5:18"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1454:26:18"},"nodeType":"YulFunctionCall","src":"1454:33:18"},"nodeType":"YulExpressionStatement","src":"1454:33:18"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1384:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"1392:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1400:5:18","type":""}],"src":"1354:139:18"},{"body":{"nodeType":"YulBlock","src":"1565:263:18","statements":[{"body":{"nodeType":"YulBlock","src":"1611:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1613:77:18"},"nodeType":"YulFunctionCall","src":"1613:79:18"},"nodeType":"YulExpressionStatement","src":"1613:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1586:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"1595:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1582:3:18"},"nodeType":"YulFunctionCall","src":"1582:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"1607:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1578:3:18"},"nodeType":"YulFunctionCall","src":"1578:32:18"},"nodeType":"YulIf","src":"1575:119:18"},{"nodeType":"YulBlock","src":"1704:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"1719:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"1733:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1723:6:18","type":""}]},{"nodeType":"YulAssignment","src":"1748:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1783:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"1794:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1779:3:18"},"nodeType":"YulFunctionCall","src":"1779:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1803:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1758:20:18"},"nodeType":"YulFunctionCall","src":"1758:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1748:6:18"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1535:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1546:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1558:6:18","type":""}],"src":"1499:329:18"},{"body":{"nodeType":"YulBlock","src":"1917:391:18","statements":[{"body":{"nodeType":"YulBlock","src":"1963:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1965:77:18"},"nodeType":"YulFunctionCall","src":"1965:79:18"},"nodeType":"YulExpressionStatement","src":"1965:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1938:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"1947:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1934:3:18"},"nodeType":"YulFunctionCall","src":"1934:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"1959:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1930:3:18"},"nodeType":"YulFunctionCall","src":"1930:32:18"},"nodeType":"YulIf","src":"1927:119:18"},{"nodeType":"YulBlock","src":"2056:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2071:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"2085:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2075:6:18","type":""}]},{"nodeType":"YulAssignment","src":"2100:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2135:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"2146:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2131:3:18"},"nodeType":"YulFunctionCall","src":"2131:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2155:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2110:20:18"},"nodeType":"YulFunctionCall","src":"2110:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2100:6:18"}]}]},{"nodeType":"YulBlock","src":"2183:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2198:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"2212:2:18","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2202:6:18","type":""}]},{"nodeType":"YulAssignment","src":"2228:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2263:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"2274:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2259:3:18"},"nodeType":"YulFunctionCall","src":"2259:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2283:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2238:20:18"},"nodeType":"YulFunctionCall","src":"2238:53:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2228:6:18"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1879:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1890:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1902:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1910:6:18","type":""}],"src":"1834:474:18"},{"body":{"nodeType":"YulBlock","src":"2414:519:18","statements":[{"body":{"nodeType":"YulBlock","src":"2460:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2462:77:18"},"nodeType":"YulFunctionCall","src":"2462:79:18"},"nodeType":"YulExpressionStatement","src":"2462:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2435:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"2444:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2431:3:18"},"nodeType":"YulFunctionCall","src":"2431:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"2456:2:18","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2427:3:18"},"nodeType":"YulFunctionCall","src":"2427:32:18"},"nodeType":"YulIf","src":"2424:119:18"},{"nodeType":"YulBlock","src":"2553:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2568:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"2582:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2572:6:18","type":""}]},{"nodeType":"YulAssignment","src":"2597:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2632:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"2643:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2628:3:18"},"nodeType":"YulFunctionCall","src":"2628:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2652:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2607:20:18"},"nodeType":"YulFunctionCall","src":"2607:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2597:6:18"}]}]},{"nodeType":"YulBlock","src":"2680:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2695:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"2709:2:18","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2699:6:18","type":""}]},{"nodeType":"YulAssignment","src":"2725:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2760:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"2771:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2756:3:18"},"nodeType":"YulFunctionCall","src":"2756:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2780:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2735:20:18"},"nodeType":"YulFunctionCall","src":"2735:53:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2725:6:18"}]}]},{"nodeType":"YulBlock","src":"2808:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2823:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"2837:2:18","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2827:6:18","type":""}]},{"nodeType":"YulAssignment","src":"2853:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2888:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"2899:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2884:3:18"},"nodeType":"YulFunctionCall","src":"2884:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2908:7:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2863:20:18"},"nodeType":"YulFunctionCall","src":"2863:53:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2853:6:18"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2368:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2379:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2391:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2399:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2407:6:18","type":""}],"src":"2314:619:18"},{"body":{"nodeType":"YulBlock","src":"3065:817:18","statements":[{"body":{"nodeType":"YulBlock","src":"3112:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3114:77:18"},"nodeType":"YulFunctionCall","src":"3114:79:18"},"nodeType":"YulExpressionStatement","src":"3114:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3086:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"3095:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3082:3:18"},"nodeType":"YulFunctionCall","src":"3082:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"3107:3:18","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3078:3:18"},"nodeType":"YulFunctionCall","src":"3078:33:18"},"nodeType":"YulIf","src":"3075:120:18"},{"nodeType":"YulBlock","src":"3205:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"3220:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"3234:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3224:6:18","type":""}]},{"nodeType":"YulAssignment","src":"3249:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3284:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"3295:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3280:3:18"},"nodeType":"YulFunctionCall","src":"3280:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3304:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3259:20:18"},"nodeType":"YulFunctionCall","src":"3259:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3249:6:18"}]}]},{"nodeType":"YulBlock","src":"3332:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"3347:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"3361:2:18","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3351:6:18","type":""}]},{"nodeType":"YulAssignment","src":"3377:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3412:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"3423:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3408:3:18"},"nodeType":"YulFunctionCall","src":"3408:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3432:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3387:20:18"},"nodeType":"YulFunctionCall","src":"3387:53:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3377:6:18"}]}]},{"nodeType":"YulBlock","src":"3460:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"3475:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"3489:2:18","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3479:6:18","type":""}]},{"nodeType":"YulAssignment","src":"3505:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3540:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"3551:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3536:3:18"},"nodeType":"YulFunctionCall","src":"3536:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3560:7:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3515:20:18"},"nodeType":"YulFunctionCall","src":"3515:53:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3505:6:18"}]}]},{"nodeType":"YulBlock","src":"3588:287:18","statements":[{"nodeType":"YulVariableDeclaration","src":"3603:46:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3634:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3645:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3630:3:18"},"nodeType":"YulFunctionCall","src":"3630:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3617:12:18"},"nodeType":"YulFunctionCall","src":"3617:32:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3607:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"3696:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3698:77:18"},"nodeType":"YulFunctionCall","src":"3698:79:18"},"nodeType":"YulExpressionStatement","src":"3698:79:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3668:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"3676:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3665:2:18"},"nodeType":"YulFunctionCall","src":"3665:30:18"},"nodeType":"YulIf","src":"3662:117:18"},{"nodeType":"YulAssignment","src":"3793:72:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3837:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"3848:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3833:3:18"},"nodeType":"YulFunctionCall","src":"3833:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3857:7:18"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"3803:29:18"},"nodeType":"YulFunctionCall","src":"3803:62:18"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3793:6:18"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3011:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3022:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3034:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3042:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3050:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3058:6:18","type":""}],"src":"2939:943:18"},{"body":{"nodeType":"YulBlock","src":"3968:388:18","statements":[{"body":{"nodeType":"YulBlock","src":"4014:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4016:77:18"},"nodeType":"YulFunctionCall","src":"4016:79:18"},"nodeType":"YulExpressionStatement","src":"4016:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3989:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"3998:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3985:3:18"},"nodeType":"YulFunctionCall","src":"3985:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"4010:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3981:3:18"},"nodeType":"YulFunctionCall","src":"3981:32:18"},"nodeType":"YulIf","src":"3978:119:18"},{"nodeType":"YulBlock","src":"4107:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"4122:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"4136:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4126:6:18","type":""}]},{"nodeType":"YulAssignment","src":"4151:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4186:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"4197:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4182:3:18"},"nodeType":"YulFunctionCall","src":"4182:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4206:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4161:20:18"},"nodeType":"YulFunctionCall","src":"4161:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4151:6:18"}]}]},{"nodeType":"YulBlock","src":"4234:115:18","statements":[{"nodeType":"YulVariableDeclaration","src":"4249:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"4263:2:18","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4253:6:18","type":""}]},{"nodeType":"YulAssignment","src":"4279:60:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4311:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"4322:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4307:3:18"},"nodeType":"YulFunctionCall","src":"4307:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4331:7:18"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"4289:17:18"},"nodeType":"YulFunctionCall","src":"4289:50:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4279:6:18"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3930:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3941:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3953:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3961:6:18","type":""}],"src":"3888:468:18"},{"body":{"nodeType":"YulBlock","src":"4445:391:18","statements":[{"body":{"nodeType":"YulBlock","src":"4491:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4493:77:18"},"nodeType":"YulFunctionCall","src":"4493:79:18"},"nodeType":"YulExpressionStatement","src":"4493:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4466:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"4475:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4462:3:18"},"nodeType":"YulFunctionCall","src":"4462:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"4487:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4458:3:18"},"nodeType":"YulFunctionCall","src":"4458:32:18"},"nodeType":"YulIf","src":"4455:119:18"},{"nodeType":"YulBlock","src":"4584:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"4599:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"4613:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4603:6:18","type":""}]},{"nodeType":"YulAssignment","src":"4628:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4663:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"4674:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4659:3:18"},"nodeType":"YulFunctionCall","src":"4659:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4683:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4638:20:18"},"nodeType":"YulFunctionCall","src":"4638:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4628:6:18"}]}]},{"nodeType":"YulBlock","src":"4711:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"4726:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"4740:2:18","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4730:6:18","type":""}]},{"nodeType":"YulAssignment","src":"4756:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4791:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"4802:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4787:3:18"},"nodeType":"YulFunctionCall","src":"4787:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4811:7:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4766:20:18"},"nodeType":"YulFunctionCall","src":"4766:53:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4756:6:18"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4407:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4418:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4430:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4438:6:18","type":""}],"src":"4362:474:18"},{"body":{"nodeType":"YulBlock","src":"4907:262:18","statements":[{"body":{"nodeType":"YulBlock","src":"4953:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4955:77:18"},"nodeType":"YulFunctionCall","src":"4955:79:18"},"nodeType":"YulExpressionStatement","src":"4955:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4928:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"4937:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4924:3:18"},"nodeType":"YulFunctionCall","src":"4924:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"4949:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4920:3:18"},"nodeType":"YulFunctionCall","src":"4920:32:18"},"nodeType":"YulIf","src":"4917:119:18"},{"nodeType":"YulBlock","src":"5046:116:18","statements":[{"nodeType":"YulVariableDeclaration","src":"5061:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"5075:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5065:6:18","type":""}]},{"nodeType":"YulAssignment","src":"5090:62:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5124:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"5135:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5120:3:18"},"nodeType":"YulFunctionCall","src":"5120:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5144:7:18"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"5100:19:18"},"nodeType":"YulFunctionCall","src":"5100:52:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5090:6:18"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4877:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4888:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4900:6:18","type":""}],"src":"4842:327:18"},{"body":{"nodeType":"YulBlock","src":"5251:273:18","statements":[{"body":{"nodeType":"YulBlock","src":"5297:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5299:77:18"},"nodeType":"YulFunctionCall","src":"5299:79:18"},"nodeType":"YulExpressionStatement","src":"5299:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5272:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"5281:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5268:3:18"},"nodeType":"YulFunctionCall","src":"5268:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"5293:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5264:3:18"},"nodeType":"YulFunctionCall","src":"5264:32:18"},"nodeType":"YulIf","src":"5261:119:18"},{"nodeType":"YulBlock","src":"5390:127:18","statements":[{"nodeType":"YulVariableDeclaration","src":"5405:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"5419:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5409:6:18","type":""}]},{"nodeType":"YulAssignment","src":"5434:73:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5479:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"5490:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5475:3:18"},"nodeType":"YulFunctionCall","src":"5475:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5499:7:18"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"5444:30:18"},"nodeType":"YulFunctionCall","src":"5444:63:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5434:6:18"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5221:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5232:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5244:6:18","type":""}],"src":"5175:349:18"},{"body":{"nodeType":"YulBlock","src":"5596:263:18","statements":[{"body":{"nodeType":"YulBlock","src":"5642:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5644:77:18"},"nodeType":"YulFunctionCall","src":"5644:79:18"},"nodeType":"YulExpressionStatement","src":"5644:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5617:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"5626:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5613:3:18"},"nodeType":"YulFunctionCall","src":"5613:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"5638:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5609:3:18"},"nodeType":"YulFunctionCall","src":"5609:32:18"},"nodeType":"YulIf","src":"5606:119:18"},{"nodeType":"YulBlock","src":"5735:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"5750:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"5764:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5754:6:18","type":""}]},{"nodeType":"YulAssignment","src":"5779:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5814:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"5825:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5810:3:18"},"nodeType":"YulFunctionCall","src":"5810:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5834:7:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5789:20:18"},"nodeType":"YulFunctionCall","src":"5789:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5779:6:18"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5566:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5577:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5589:6:18","type":""}],"src":"5530:329:18"},{"body":{"nodeType":"YulBlock","src":"5930:53:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5947:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5970:5:18"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5952:17:18"},"nodeType":"YulFunctionCall","src":"5952:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5940:6:18"},"nodeType":"YulFunctionCall","src":"5940:37:18"},"nodeType":"YulExpressionStatement","src":"5940:37:18"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5918:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5925:3:18","type":""}],"src":"5865:118:18"},{"body":{"nodeType":"YulBlock","src":"6048:50:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6065:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6085:5:18"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"6070:14:18"},"nodeType":"YulFunctionCall","src":"6070:21:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6058:6:18"},"nodeType":"YulFunctionCall","src":"6058:34:18"},"nodeType":"YulExpressionStatement","src":"6058:34:18"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6036:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6043:3:18","type":""}],"src":"5989:109:18"},{"body":{"nodeType":"YulBlock","src":"6194:270:18","statements":[{"nodeType":"YulVariableDeclaration","src":"6204:52:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6250:5:18"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"6218:31:18"},"nodeType":"YulFunctionCall","src":"6218:38:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6208:6:18","type":""}]},{"nodeType":"YulAssignment","src":"6265:77:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6330:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"6335:6:18"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6272:57:18"},"nodeType":"YulFunctionCall","src":"6272:70:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6265:3:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6377:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"6384:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6373:3:18"},"nodeType":"YulFunctionCall","src":"6373:16:18"},{"name":"pos","nodeType":"YulIdentifier","src":"6391:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"6396:6:18"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"6351:21:18"},"nodeType":"YulFunctionCall","src":"6351:52:18"},"nodeType":"YulExpressionStatement","src":"6351:52:18"},{"nodeType":"YulAssignment","src":"6412:46:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6423:3:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6450:6:18"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6428:21:18"},"nodeType":"YulFunctionCall","src":"6428:29:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6419:3:18"},"nodeType":"YulFunctionCall","src":"6419:39:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6412:3:18"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6175:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6182:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6190:3:18","type":""}],"src":"6104:360:18"},{"body":{"nodeType":"YulBlock","src":"6562:272:18","statements":[{"nodeType":"YulVariableDeclaration","src":"6572:53:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6619:5:18"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6586:32:18"},"nodeType":"YulFunctionCall","src":"6586:39:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6576:6:18","type":""}]},{"nodeType":"YulAssignment","src":"6634:78:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6700:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"6705:6:18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6641:58:18"},"nodeType":"YulFunctionCall","src":"6641:71:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6634:3:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6747:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"6754:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6743:3:18"},"nodeType":"YulFunctionCall","src":"6743:16:18"},{"name":"pos","nodeType":"YulIdentifier","src":"6761:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"6766:6:18"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"6721:21:18"},"nodeType":"YulFunctionCall","src":"6721:52:18"},"nodeType":"YulExpressionStatement","src":"6721:52:18"},{"nodeType":"YulAssignment","src":"6782:46:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6793:3:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6820:6:18"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6798:21:18"},"nodeType":"YulFunctionCall","src":"6798:29:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6789:3:18"},"nodeType":"YulFunctionCall","src":"6789:39:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6782:3:18"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6543:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6550:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6558:3:18","type":""}],"src":"6470:364:18"},{"body":{"nodeType":"YulBlock","src":"6950:267:18","statements":[{"nodeType":"YulVariableDeclaration","src":"6960:53:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7007:5:18"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"6974:32:18"},"nodeType":"YulFunctionCall","src":"6974:39:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6964:6:18","type":""}]},{"nodeType":"YulAssignment","src":"7022:96:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7106:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"7111:6:18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"7029:76:18"},"nodeType":"YulFunctionCall","src":"7029:89:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7022:3:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7153:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"7160:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7149:3:18"},"nodeType":"YulFunctionCall","src":"7149:16:18"},{"name":"pos","nodeType":"YulIdentifier","src":"7167:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"7172:6:18"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"7127:21:18"},"nodeType":"YulFunctionCall","src":"7127:52:18"},"nodeType":"YulExpressionStatement","src":"7127:52:18"},{"nodeType":"YulAssignment","src":"7188:23:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7199:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"7204:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7195:3:18"},"nodeType":"YulFunctionCall","src":"7195:16:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7188:3:18"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6931:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6938:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6946:3:18","type":""}],"src":"6840:377:18"},{"body":{"nodeType":"YulBlock","src":"7369:220:18","statements":[{"nodeType":"YulAssignment","src":"7379:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7445:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"7450:2:18","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7386:58:18"},"nodeType":"YulFunctionCall","src":"7386:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7379:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7551:3:18"}],"functionName":{"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulIdentifier","src":"7462:88:18"},"nodeType":"YulFunctionCall","src":"7462:93:18"},"nodeType":"YulExpressionStatement","src":"7462:93:18"},{"nodeType":"YulAssignment","src":"7564:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7575:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"7580:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7571:3:18"},"nodeType":"YulFunctionCall","src":"7571:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7564:3:18"}]}]},"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7357:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7365:3:18","type":""}],"src":"7223:366:18"},{"body":{"nodeType":"YulBlock","src":"7741:220:18","statements":[{"nodeType":"YulAssignment","src":"7751:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7817:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"7822:2:18","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7758:58:18"},"nodeType":"YulFunctionCall","src":"7758:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7751:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7923:3:18"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"7834:88:18"},"nodeType":"YulFunctionCall","src":"7834:93:18"},"nodeType":"YulExpressionStatement","src":"7834:93:18"},{"nodeType":"YulAssignment","src":"7936:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7947:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"7952:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7943:3:18"},"nodeType":"YulFunctionCall","src":"7943:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7936:3:18"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7729:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7737:3:18","type":""}],"src":"7595:366:18"},{"body":{"nodeType":"YulBlock","src":"8113:220:18","statements":[{"nodeType":"YulAssignment","src":"8123:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8189:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"8194:2:18","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8130:58:18"},"nodeType":"YulFunctionCall","src":"8130:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8123:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8295:3:18"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulIdentifier","src":"8206:88:18"},"nodeType":"YulFunctionCall","src":"8206:93:18"},"nodeType":"YulExpressionStatement","src":"8206:93:18"},{"nodeType":"YulAssignment","src":"8308:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8319:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"8324:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8315:3:18"},"nodeType":"YulFunctionCall","src":"8315:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8308:3:18"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8101:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8109:3:18","type":""}],"src":"7967:366:18"},{"body":{"nodeType":"YulBlock","src":"8485:220:18","statements":[{"nodeType":"YulAssignment","src":"8495:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8561:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"8566:2:18","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8502:58:18"},"nodeType":"YulFunctionCall","src":"8502:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8495:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8667:3:18"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"8578:88:18"},"nodeType":"YulFunctionCall","src":"8578:93:18"},"nodeType":"YulExpressionStatement","src":"8578:93:18"},{"nodeType":"YulAssignment","src":"8680:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8691:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"8696:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8687:3:18"},"nodeType":"YulFunctionCall","src":"8687:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8680:3:18"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8473:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8481:3:18","type":""}],"src":"8339:366:18"},{"body":{"nodeType":"YulBlock","src":"8857:220:18","statements":[{"nodeType":"YulAssignment","src":"8867:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8933:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"8938:2:18","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8874:58:18"},"nodeType":"YulFunctionCall","src":"8874:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8867:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9039:3:18"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"8950:88:18"},"nodeType":"YulFunctionCall","src":"8950:93:18"},"nodeType":"YulExpressionStatement","src":"8950:93:18"},{"nodeType":"YulAssignment","src":"9052:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9063:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"9068:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9059:3:18"},"nodeType":"YulFunctionCall","src":"9059:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9052:3:18"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8845:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8853:3:18","type":""}],"src":"8711:366:18"},{"body":{"nodeType":"YulBlock","src":"9229:220:18","statements":[{"nodeType":"YulAssignment","src":"9239:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9305:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"9310:2:18","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9246:58:18"},"nodeType":"YulFunctionCall","src":"9246:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9239:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9411:3:18"}],"functionName":{"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulIdentifier","src":"9322:88:18"},"nodeType":"YulFunctionCall","src":"9322:93:18"},"nodeType":"YulExpressionStatement","src":"9322:93:18"},{"nodeType":"YulAssignment","src":"9424:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9435:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"9440:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9431:3:18"},"nodeType":"YulFunctionCall","src":"9431:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9424:3:18"}]}]},"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9217:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9225:3:18","type":""}],"src":"9083:366:18"},{"body":{"nodeType":"YulBlock","src":"9601:220:18","statements":[{"nodeType":"YulAssignment","src":"9611:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9677:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"9682:2:18","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9618:58:18"},"nodeType":"YulFunctionCall","src":"9618:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9611:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9783:3:18"}],"functionName":{"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulIdentifier","src":"9694:88:18"},"nodeType":"YulFunctionCall","src":"9694:93:18"},"nodeType":"YulExpressionStatement","src":"9694:93:18"},{"nodeType":"YulAssignment","src":"9796:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9807:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"9812:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9803:3:18"},"nodeType":"YulFunctionCall","src":"9803:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9796:3:18"}]}]},"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9589:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9597:3:18","type":""}],"src":"9455:366:18"},{"body":{"nodeType":"YulBlock","src":"9973:220:18","statements":[{"nodeType":"YulAssignment","src":"9983:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10049:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"10054:2:18","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9990:58:18"},"nodeType":"YulFunctionCall","src":"9990:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9983:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10155:3:18"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"10066:88:18"},"nodeType":"YulFunctionCall","src":"10066:93:18"},"nodeType":"YulExpressionStatement","src":"10066:93:18"},{"nodeType":"YulAssignment","src":"10168:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10179:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"10184:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10175:3:18"},"nodeType":"YulFunctionCall","src":"10175:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10168:3:18"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9961:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9969:3:18","type":""}],"src":"9827:366:18"},{"body":{"nodeType":"YulBlock","src":"10345:220:18","statements":[{"nodeType":"YulAssignment","src":"10355:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10421:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"10426:2:18","type":"","value":"61"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10362:58:18"},"nodeType":"YulFunctionCall","src":"10362:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10355:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10527:3:18"}],"functionName":{"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulIdentifier","src":"10438:88:18"},"nodeType":"YulFunctionCall","src":"10438:93:18"},"nodeType":"YulExpressionStatement","src":"10438:93:18"},{"nodeType":"YulAssignment","src":"10540:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10551:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"10556:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10547:3:18"},"nodeType":"YulFunctionCall","src":"10547:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10540:3:18"}]}]},"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10333:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10341:3:18","type":""}],"src":"10199:366:18"},{"body":{"nodeType":"YulBlock","src":"10636:53:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10653:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10676:5:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10658:17:18"},"nodeType":"YulFunctionCall","src":"10658:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10646:6:18"},"nodeType":"YulFunctionCall","src":"10646:37:18"},"nodeType":"YulExpressionStatement","src":"10646:37:18"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10624:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10631:3:18","type":""}],"src":"10571:118:18"},{"body":{"nodeType":"YulBlock","src":"10879:251:18","statements":[{"nodeType":"YulAssignment","src":"10890:102:18","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10979:6:18"},{"name":"pos","nodeType":"YulIdentifier","src":"10988:3:18"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"10897:81:18"},"nodeType":"YulFunctionCall","src":"10897:95:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10890:3:18"}]},{"nodeType":"YulAssignment","src":"11002:102:18","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11091:6:18"},{"name":"pos","nodeType":"YulIdentifier","src":"11100:3:18"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"11009:81:18"},"nodeType":"YulFunctionCall","src":"11009:95:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11002:3:18"}]},{"nodeType":"YulAssignment","src":"11114:10:18","value":{"name":"pos","nodeType":"YulIdentifier","src":"11121:3:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11114:3:18"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10850:3:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10856:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10864:6:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10875:3:18","type":""}],"src":"10695:435:18"},{"body":{"nodeType":"YulBlock","src":"11234:124:18","statements":[{"nodeType":"YulAssignment","src":"11244:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11256:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11267:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11252:3:18"},"nodeType":"YulFunctionCall","src":"11252:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11244:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11324:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11337:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11348:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11333:3:18"},"nodeType":"YulFunctionCall","src":"11333:17:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11280:43:18"},"nodeType":"YulFunctionCall","src":"11280:71:18"},"nodeType":"YulExpressionStatement","src":"11280:71:18"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11206:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11218:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11229:4:18","type":""}],"src":"11136:222:18"},{"body":{"nodeType":"YulBlock","src":"11564:440:18","statements":[{"nodeType":"YulAssignment","src":"11574:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11586:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11597:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11582:3:18"},"nodeType":"YulFunctionCall","src":"11582:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11574:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11655:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11668:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11679:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11664:3:18"},"nodeType":"YulFunctionCall","src":"11664:17:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11611:43:18"},"nodeType":"YulFunctionCall","src":"11611:71:18"},"nodeType":"YulExpressionStatement","src":"11611:71:18"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11736:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11749:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11760:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11745:3:18"},"nodeType":"YulFunctionCall","src":"11745:18:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11692:43:18"},"nodeType":"YulFunctionCall","src":"11692:72:18"},"nodeType":"YulExpressionStatement","src":"11692:72:18"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11818:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11831:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11842:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11827:3:18"},"nodeType":"YulFunctionCall","src":"11827:18:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11774:43:18"},"nodeType":"YulFunctionCall","src":"11774:72:18"},"nodeType":"YulExpressionStatement","src":"11774:72:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11867:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11878:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11863:3:18"},"nodeType":"YulFunctionCall","src":"11863:18:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11887:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"11893:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11883:3:18"},"nodeType":"YulFunctionCall","src":"11883:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11856:6:18"},"nodeType":"YulFunctionCall","src":"11856:48:18"},"nodeType":"YulExpressionStatement","src":"11856:48:18"},{"nodeType":"YulAssignment","src":"11913:84:18","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"11983:6:18"},{"name":"tail","nodeType":"YulIdentifier","src":"11992:4:18"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11921:61:18"},"nodeType":"YulFunctionCall","src":"11921:76:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11913:4:18"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11512:9:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11524:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11532:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11540:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11548:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11559:4:18","type":""}],"src":"11364:640:18"},{"body":{"nodeType":"YulBlock","src":"12102:118:18","statements":[{"nodeType":"YulAssignment","src":"12112:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12124:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12135:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12120:3:18"},"nodeType":"YulFunctionCall","src":"12120:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12112:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12186:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12199:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12210:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12195:3:18"},"nodeType":"YulFunctionCall","src":"12195:17:18"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"12148:37:18"},"nodeType":"YulFunctionCall","src":"12148:65:18"},"nodeType":"YulExpressionStatement","src":"12148:65:18"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12074:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12086:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12097:4:18","type":""}],"src":"12010:210:18"},{"body":{"nodeType":"YulBlock","src":"12344:195:18","statements":[{"nodeType":"YulAssignment","src":"12354:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12366:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12377:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12362:3:18"},"nodeType":"YulFunctionCall","src":"12362:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12354:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12401:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12412:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12397:3:18"},"nodeType":"YulFunctionCall","src":"12397:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12420:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"12426:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12416:3:18"},"nodeType":"YulFunctionCall","src":"12416:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12390:6:18"},"nodeType":"YulFunctionCall","src":"12390:47:18"},"nodeType":"YulExpressionStatement","src":"12390:47:18"},{"nodeType":"YulAssignment","src":"12446:86:18","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12518:6:18"},{"name":"tail","nodeType":"YulIdentifier","src":"12527:4:18"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12454:63:18"},"nodeType":"YulFunctionCall","src":"12454:78:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12446:4:18"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12316:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12328:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12339:4:18","type":""}],"src":"12226:313:18"},{"body":{"nodeType":"YulBlock","src":"12716:248:18","statements":[{"nodeType":"YulAssignment","src":"12726:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12738:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12749:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12734:3:18"},"nodeType":"YulFunctionCall","src":"12734:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12726:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12773:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12784:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12769:3:18"},"nodeType":"YulFunctionCall","src":"12769:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12792:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"12798:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12788:3:18"},"nodeType":"YulFunctionCall","src":"12788:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12762:6:18"},"nodeType":"YulFunctionCall","src":"12762:47:18"},"nodeType":"YulExpressionStatement","src":"12762:47:18"},{"nodeType":"YulAssignment","src":"12818:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12952:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12826:124:18"},"nodeType":"YulFunctionCall","src":"12826:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12818:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12696:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12711:4:18","type":""}],"src":"12545:419:18"},{"body":{"nodeType":"YulBlock","src":"13141:248:18","statements":[{"nodeType":"YulAssignment","src":"13151:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13163:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13174:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13159:3:18"},"nodeType":"YulFunctionCall","src":"13159:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13151:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13198:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13209:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13194:3:18"},"nodeType":"YulFunctionCall","src":"13194:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13217:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"13223:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13213:3:18"},"nodeType":"YulFunctionCall","src":"13213:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13187:6:18"},"nodeType":"YulFunctionCall","src":"13187:47:18"},"nodeType":"YulExpressionStatement","src":"13187:47:18"},{"nodeType":"YulAssignment","src":"13243:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13377:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13251:124:18"},"nodeType":"YulFunctionCall","src":"13251:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13243:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13121:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13136:4:18","type":""}],"src":"12970:419:18"},{"body":{"nodeType":"YulBlock","src":"13566:248:18","statements":[{"nodeType":"YulAssignment","src":"13576:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13588:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13599:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13584:3:18"},"nodeType":"YulFunctionCall","src":"13584:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13576:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13623:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13634:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13619:3:18"},"nodeType":"YulFunctionCall","src":"13619:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13642:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"13648:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13638:3:18"},"nodeType":"YulFunctionCall","src":"13638:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13612:6:18"},"nodeType":"YulFunctionCall","src":"13612:47:18"},"nodeType":"YulExpressionStatement","src":"13612:47:18"},{"nodeType":"YulAssignment","src":"13668:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13802:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13676:124:18"},"nodeType":"YulFunctionCall","src":"13676:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13668:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13546:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13561:4:18","type":""}],"src":"13395:419:18"},{"body":{"nodeType":"YulBlock","src":"13991:248:18","statements":[{"nodeType":"YulAssignment","src":"14001:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14013:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14024:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14009:3:18"},"nodeType":"YulFunctionCall","src":"14009:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14001:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14048:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14059:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14044:3:18"},"nodeType":"YulFunctionCall","src":"14044:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14067:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"14073:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14063:3:18"},"nodeType":"YulFunctionCall","src":"14063:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14037:6:18"},"nodeType":"YulFunctionCall","src":"14037:47:18"},"nodeType":"YulExpressionStatement","src":"14037:47:18"},{"nodeType":"YulAssignment","src":"14093:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14227:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14101:124:18"},"nodeType":"YulFunctionCall","src":"14101:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14093:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13971:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13986:4:18","type":""}],"src":"13820:419:18"},{"body":{"nodeType":"YulBlock","src":"14416:248:18","statements":[{"nodeType":"YulAssignment","src":"14426:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14438:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14449:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14434:3:18"},"nodeType":"YulFunctionCall","src":"14434:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14426:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14473:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14484:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14469:3:18"},"nodeType":"YulFunctionCall","src":"14469:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14492:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"14498:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14488:3:18"},"nodeType":"YulFunctionCall","src":"14488:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14462:6:18"},"nodeType":"YulFunctionCall","src":"14462:47:18"},"nodeType":"YulExpressionStatement","src":"14462:47:18"},{"nodeType":"YulAssignment","src":"14518:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14652:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14526:124:18"},"nodeType":"YulFunctionCall","src":"14526:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14518:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14396:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14411:4:18","type":""}],"src":"14245:419:18"},{"body":{"nodeType":"YulBlock","src":"14841:248:18","statements":[{"nodeType":"YulAssignment","src":"14851:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14863:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14874:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14859:3:18"},"nodeType":"YulFunctionCall","src":"14859:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14851:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14898:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14909:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14894:3:18"},"nodeType":"YulFunctionCall","src":"14894:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14917:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"14923:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14913:3:18"},"nodeType":"YulFunctionCall","src":"14913:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14887:6:18"},"nodeType":"YulFunctionCall","src":"14887:47:18"},"nodeType":"YulExpressionStatement","src":"14887:47:18"},{"nodeType":"YulAssignment","src":"14943:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15077:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14951:124:18"},"nodeType":"YulFunctionCall","src":"14951:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14943:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14821:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14836:4:18","type":""}],"src":"14670:419:18"},{"body":{"nodeType":"YulBlock","src":"15266:248:18","statements":[{"nodeType":"YulAssignment","src":"15276:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15288:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15299:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15284:3:18"},"nodeType":"YulFunctionCall","src":"15284:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15276:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15323:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15334:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15319:3:18"},"nodeType":"YulFunctionCall","src":"15319:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15342:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"15348:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15338:3:18"},"nodeType":"YulFunctionCall","src":"15338:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15312:6:18"},"nodeType":"YulFunctionCall","src":"15312:47:18"},"nodeType":"YulExpressionStatement","src":"15312:47:18"},{"nodeType":"YulAssignment","src":"15368:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15502:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15376:124:18"},"nodeType":"YulFunctionCall","src":"15376:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15368:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15246:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15261:4:18","type":""}],"src":"15095:419:18"},{"body":{"nodeType":"YulBlock","src":"15691:248:18","statements":[{"nodeType":"YulAssignment","src":"15701:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15713:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15724:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15709:3:18"},"nodeType":"YulFunctionCall","src":"15709:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15701:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15748:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15759:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15744:3:18"},"nodeType":"YulFunctionCall","src":"15744:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15767:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"15773:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15763:3:18"},"nodeType":"YulFunctionCall","src":"15763:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15737:6:18"},"nodeType":"YulFunctionCall","src":"15737:47:18"},"nodeType":"YulExpressionStatement","src":"15737:47:18"},{"nodeType":"YulAssignment","src":"15793:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15927:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15801:124:18"},"nodeType":"YulFunctionCall","src":"15801:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15793:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15671:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15686:4:18","type":""}],"src":"15520:419:18"},{"body":{"nodeType":"YulBlock","src":"16116:248:18","statements":[{"nodeType":"YulAssignment","src":"16126:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16138:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"16149:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16134:3:18"},"nodeType":"YulFunctionCall","src":"16134:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16126:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16173:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"16184:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16169:3:18"},"nodeType":"YulFunctionCall","src":"16169:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16192:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"16198:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16188:3:18"},"nodeType":"YulFunctionCall","src":"16188:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16162:6:18"},"nodeType":"YulFunctionCall","src":"16162:47:18"},"nodeType":"YulExpressionStatement","src":"16162:47:18"},{"nodeType":"YulAssignment","src":"16218:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16352:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16226:124:18"},"nodeType":"YulFunctionCall","src":"16226:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16218:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16096:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16111:4:18","type":""}],"src":"15945:419:18"},{"body":{"nodeType":"YulBlock","src":"16468:124:18","statements":[{"nodeType":"YulAssignment","src":"16478:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16490:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"16501:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16486:3:18"},"nodeType":"YulFunctionCall","src":"16486:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16478:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16558:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16571:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"16582:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16567:3:18"},"nodeType":"YulFunctionCall","src":"16567:17:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"16514:43:18"},"nodeType":"YulFunctionCall","src":"16514:71:18"},"nodeType":"YulExpressionStatement","src":"16514:71:18"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16440:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16452:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16463:4:18","type":""}],"src":"16370:222:18"},{"body":{"nodeType":"YulBlock","src":"16639:88:18","statements":[{"nodeType":"YulAssignment","src":"16649:30:18","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"16659:18:18"},"nodeType":"YulFunctionCall","src":"16659:20:18"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16649:6:18"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16708:6:18"},{"name":"size","nodeType":"YulIdentifier","src":"16716:4:18"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"16688:19:18"},"nodeType":"YulFunctionCall","src":"16688:33:18"},"nodeType":"YulExpressionStatement","src":"16688:33:18"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"16623:4:18","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"16632:6:18","type":""}],"src":"16598:129:18"},{"body":{"nodeType":"YulBlock","src":"16773:35:18","statements":[{"nodeType":"YulAssignment","src":"16783:19:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16799:2:18","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16793:5:18"},"nodeType":"YulFunctionCall","src":"16793:9:18"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16783:6:18"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"16766:6:18","type":""}],"src":"16733:75:18"},{"body":{"nodeType":"YulBlock","src":"16880:241:18","statements":[{"body":{"nodeType":"YulBlock","src":"16985:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"16987:16:18"},"nodeType":"YulFunctionCall","src":"16987:18:18"},"nodeType":"YulExpressionStatement","src":"16987:18:18"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16957:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"16965:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16954:2:18"},"nodeType":"YulFunctionCall","src":"16954:30:18"},"nodeType":"YulIf","src":"16951:56:18"},{"nodeType":"YulAssignment","src":"17017:37:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"17047:6:18"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"17025:21:18"},"nodeType":"YulFunctionCall","src":"17025:29:18"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"17017:4:18"}]},{"nodeType":"YulAssignment","src":"17091:23:18","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"17103:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"17109:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17099:3:18"},"nodeType":"YulFunctionCall","src":"17099:15:18"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"17091:4:18"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"16864:6:18","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"16875:4:18","type":""}],"src":"16814:307:18"},{"body":{"nodeType":"YulBlock","src":"17185:40:18","statements":[{"nodeType":"YulAssignment","src":"17196:22:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17212:5:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17206:5:18"},"nodeType":"YulFunctionCall","src":"17206:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"17196:6:18"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17168:5:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"17178:6:18","type":""}],"src":"17127:98:18"},{"body":{"nodeType":"YulBlock","src":"17290:40:18","statements":[{"nodeType":"YulAssignment","src":"17301:22:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17317:5:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17311:5:18"},"nodeType":"YulFunctionCall","src":"17311:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"17301:6:18"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17273:5:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"17283:6:18","type":""}],"src":"17231:99:18"},{"body":{"nodeType":"YulBlock","src":"17431:73:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17448:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"17453:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17441:6:18"},"nodeType":"YulFunctionCall","src":"17441:19:18"},"nodeType":"YulExpressionStatement","src":"17441:19:18"},{"nodeType":"YulAssignment","src":"17469:29:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17488:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"17493:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17484:3:18"},"nodeType":"YulFunctionCall","src":"17484:14:18"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17469:11:18"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17403:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"17408:6:18","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17419:11:18","type":""}],"src":"17336:168:18"},{"body":{"nodeType":"YulBlock","src":"17606:73:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17623:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"17628:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17616:6:18"},"nodeType":"YulFunctionCall","src":"17616:19:18"},"nodeType":"YulExpressionStatement","src":"17616:19:18"},{"nodeType":"YulAssignment","src":"17644:29:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17663:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"17668:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17659:3:18"},"nodeType":"YulFunctionCall","src":"17659:14:18"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17644:11:18"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17578:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"17583:6:18","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17594:11:18","type":""}],"src":"17510:169:18"},{"body":{"nodeType":"YulBlock","src":"17799:34:18","statements":[{"nodeType":"YulAssignment","src":"17809:18:18","value":{"name":"pos","nodeType":"YulIdentifier","src":"17824:3:18"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17809:11:18"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17771:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"17776:6:18","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17787:11:18","type":""}],"src":"17685:148:18"},{"body":{"nodeType":"YulBlock","src":"17884:51:18","statements":[{"nodeType":"YulAssignment","src":"17894:35:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17923:5:18"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"17905:17:18"},"nodeType":"YulFunctionCall","src":"17905:24:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17894:7:18"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17866:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17876:7:18","type":""}],"src":"17839:96:18"},{"body":{"nodeType":"YulBlock","src":"17983:48:18","statements":[{"nodeType":"YulAssignment","src":"17993:32:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18018:5:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18011:6:18"},"nodeType":"YulFunctionCall","src":"18011:13:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18004:6:18"},"nodeType":"YulFunctionCall","src":"18004:21:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17993:7:18"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17965:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17975:7:18","type":""}],"src":"17941:90:18"},{"body":{"nodeType":"YulBlock","src":"18081:105:18","statements":[{"nodeType":"YulAssignment","src":"18091:89:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18106:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"18113:66:18","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18102:3:18"},"nodeType":"YulFunctionCall","src":"18102:78:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18091:7:18"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18063:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18073:7:18","type":""}],"src":"18037:149:18"},{"body":{"nodeType":"YulBlock","src":"18237:81:18","statements":[{"nodeType":"YulAssignment","src":"18247:65:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18262:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"18269:42:18","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18258:3:18"},"nodeType":"YulFunctionCall","src":"18258:54:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18247:7:18"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18219:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18229:7:18","type":""}],"src":"18192:126:18"},{"body":{"nodeType":"YulBlock","src":"18369:32:18","statements":[{"nodeType":"YulAssignment","src":"18379:16:18","value":{"name":"value","nodeType":"YulIdentifier","src":"18390:5:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18379:7:18"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18351:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18361:7:18","type":""}],"src":"18324:77:18"},{"body":{"nodeType":"YulBlock","src":"18458:103:18","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"18481:3:18"},{"name":"src","nodeType":"YulIdentifier","src":"18486:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"18491:6:18"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"18468:12:18"},"nodeType":"YulFunctionCall","src":"18468:30:18"},"nodeType":"YulExpressionStatement","src":"18468:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"18539:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"18544:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18535:3:18"},"nodeType":"YulFunctionCall","src":"18535:16:18"},{"kind":"number","nodeType":"YulLiteral","src":"18553:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18528:6:18"},"nodeType":"YulFunctionCall","src":"18528:27:18"},"nodeType":"YulExpressionStatement","src":"18528:27:18"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"18440:3:18","type":""},{"name":"dst","nodeType":"YulTypedName","src":"18445:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"18450:6:18","type":""}],"src":"18407:154:18"},{"body":{"nodeType":"YulBlock","src":"18616:258:18","statements":[{"nodeType":"YulVariableDeclaration","src":"18626:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"18635:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"18630:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"18695:63:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"18720:3:18"},{"name":"i","nodeType":"YulIdentifier","src":"18725:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18716:3:18"},"nodeType":"YulFunctionCall","src":"18716:11:18"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"18739:3:18"},{"name":"i","nodeType":"YulIdentifier","src":"18744:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18735:3:18"},"nodeType":"YulFunctionCall","src":"18735:11:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18729:5:18"},"nodeType":"YulFunctionCall","src":"18729:18:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18709:6:18"},"nodeType":"YulFunctionCall","src":"18709:39:18"},"nodeType":"YulExpressionStatement","src":"18709:39:18"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18656:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"18659:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18653:2:18"},"nodeType":"YulFunctionCall","src":"18653:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"18667:19:18","statements":[{"nodeType":"YulAssignment","src":"18669:15:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18678:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"18681:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18674:3:18"},"nodeType":"YulFunctionCall","src":"18674:10:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"18669:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"18649:3:18","statements":[]},"src":"18645:113:18"},{"body":{"nodeType":"YulBlock","src":"18792:76:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"18842:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"18847:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18838:3:18"},"nodeType":"YulFunctionCall","src":"18838:16:18"},{"kind":"number","nodeType":"YulLiteral","src":"18856:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18831:6:18"},"nodeType":"YulFunctionCall","src":"18831:27:18"},"nodeType":"YulExpressionStatement","src":"18831:27:18"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18773:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"18776:6:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18770:2:18"},"nodeType":"YulFunctionCall","src":"18770:13:18"},"nodeType":"YulIf","src":"18767:101:18"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"18598:3:18","type":""},{"name":"dst","nodeType":"YulTypedName","src":"18603:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"18608:6:18","type":""}],"src":"18567:307:18"},{"body":{"nodeType":"YulBlock","src":"18931:269:18","statements":[{"nodeType":"YulAssignment","src":"18941:22:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"18955:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"18961:1:18","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"18951:3:18"},"nodeType":"YulFunctionCall","src":"18951:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"18941:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"18972:38:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"19002:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"19008:1:18","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18998:3:18"},"nodeType":"YulFunctionCall","src":"18998:12:18"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"18976:18:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"19049:51:18","statements":[{"nodeType":"YulAssignment","src":"19063:27:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"19077:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"19085:4:18","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19073:3:18"},"nodeType":"YulFunctionCall","src":"19073:17:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"19063:6:18"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"19029:18:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19022:6:18"},"nodeType":"YulFunctionCall","src":"19022:26:18"},"nodeType":"YulIf","src":"19019:81:18"},{"body":{"nodeType":"YulBlock","src":"19152:42:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"19166:16:18"},"nodeType":"YulFunctionCall","src":"19166:18:18"},"nodeType":"YulExpressionStatement","src":"19166:18:18"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"19116:18:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"19139:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"19147:2:18","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19136:2:18"},"nodeType":"YulFunctionCall","src":"19136:14:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"19113:2:18"},"nodeType":"YulFunctionCall","src":"19113:38:18"},"nodeType":"YulIf","src":"19110:84:18"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"18915:4:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"18924:6:18","type":""}],"src":"18880:320:18"},{"body":{"nodeType":"YulBlock","src":"19249:238:18","statements":[{"nodeType":"YulVariableDeclaration","src":"19259:58:18","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19281:6:18"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"19311:4:18"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"19289:21:18"},"nodeType":"YulFunctionCall","src":"19289:27:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19277:3:18"},"nodeType":"YulFunctionCall","src":"19277:40:18"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"19263:10:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"19428:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"19430:16:18"},"nodeType":"YulFunctionCall","src":"19430:18:18"},"nodeType":"YulExpressionStatement","src":"19430:18:18"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"19371:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"19383:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19368:2:18"},"nodeType":"YulFunctionCall","src":"19368:34:18"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"19407:10:18"},{"name":"memPtr","nodeType":"YulIdentifier","src":"19419:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19404:2:18"},"nodeType":"YulFunctionCall","src":"19404:22:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"19365:2:18"},"nodeType":"YulFunctionCall","src":"19365:62:18"},"nodeType":"YulIf","src":"19362:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19466:2:18","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"19470:10:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19459:6:18"},"nodeType":"YulFunctionCall","src":"19459:22:18"},"nodeType":"YulExpressionStatement","src":"19459:22:18"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19235:6:18","type":""},{"name":"size","nodeType":"YulTypedName","src":"19243:4:18","type":""}],"src":"19206:281:18"},{"body":{"nodeType":"YulBlock","src":"19521:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19538:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19541:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19531:6:18"},"nodeType":"YulFunctionCall","src":"19531:88:18"},"nodeType":"YulExpressionStatement","src":"19531:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19635:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19638:4:18","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19628:6:18"},"nodeType":"YulFunctionCall","src":"19628:15:18"},"nodeType":"YulExpressionStatement","src":"19628:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19659:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19662:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19652:6:18"},"nodeType":"YulFunctionCall","src":"19652:15:18"},"nodeType":"YulExpressionStatement","src":"19652:15:18"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"19493:180:18"},{"body":{"nodeType":"YulBlock","src":"19707:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19724:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19727:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19717:6:18"},"nodeType":"YulFunctionCall","src":"19717:88:18"},"nodeType":"YulExpressionStatement","src":"19717:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19821:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19824:4:18","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19814:6:18"},"nodeType":"YulFunctionCall","src":"19814:15:18"},"nodeType":"YulExpressionStatement","src":"19814:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19845:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19848:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19838:6:18"},"nodeType":"YulFunctionCall","src":"19838:15:18"},"nodeType":"YulExpressionStatement","src":"19838:15:18"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"19679:180:18"},{"body":{"nodeType":"YulBlock","src":"19893:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19910:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19913:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19903:6:18"},"nodeType":"YulFunctionCall","src":"19903:88:18"},"nodeType":"YulExpressionStatement","src":"19903:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20007:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20010:4:18","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20000:6:18"},"nodeType":"YulFunctionCall","src":"20000:15:18"},"nodeType":"YulExpressionStatement","src":"20000:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20031:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20034:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20024:6:18"},"nodeType":"YulFunctionCall","src":"20024:15:18"},"nodeType":"YulExpressionStatement","src":"20024:15:18"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"19865:180:18"},{"body":{"nodeType":"YulBlock","src":"20140:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20157:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20160:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20150:6:18"},"nodeType":"YulFunctionCall","src":"20150:12:18"},"nodeType":"YulExpressionStatement","src":"20150:12:18"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"20051:117:18"},{"body":{"nodeType":"YulBlock","src":"20263:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20280:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20283:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20273:6:18"},"nodeType":"YulFunctionCall","src":"20273:12:18"},"nodeType":"YulExpressionStatement","src":"20273:12:18"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"20174:117:18"},{"body":{"nodeType":"YulBlock","src":"20386:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20403:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20406:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20396:6:18"},"nodeType":"YulFunctionCall","src":"20396:12:18"},"nodeType":"YulExpressionStatement","src":"20396:12:18"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"20297:117:18"},{"body":{"nodeType":"YulBlock","src":"20509:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20526:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20529:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20519:6:18"},"nodeType":"YulFunctionCall","src":"20519:12:18"},"nodeType":"YulExpressionStatement","src":"20519:12:18"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"20420:117:18"},{"body":{"nodeType":"YulBlock","src":"20591:54:18","statements":[{"nodeType":"YulAssignment","src":"20601:38:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20619:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"20626:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20615:3:18"},"nodeType":"YulFunctionCall","src":"20615:14:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20635:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"20631:3:18"},"nodeType":"YulFunctionCall","src":"20631:7:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20611:3:18"},"nodeType":"YulFunctionCall","src":"20611:28:18"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"20601:6:18"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20574:5:18","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"20584:6:18","type":""}],"src":"20543:102:18"},{"body":{"nodeType":"YulBlock","src":"20757:126:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20779:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"20787:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20775:3:18"},"nodeType":"YulFunctionCall","src":"20775:14:18"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"20791:34:18","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20768:6:18"},"nodeType":"YulFunctionCall","src":"20768:58:18"},"nodeType":"YulExpressionStatement","src":"20768:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20847:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"20855:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20843:3:18"},"nodeType":"YulFunctionCall","src":"20843:15:18"},{"hexValue":"72206f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"20860:15:18","type":"","value":"r or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20836:6:18"},"nodeType":"YulFunctionCall","src":"20836:40:18"},"nodeType":"YulExpressionStatement","src":"20836:40:18"}]},"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20749:6:18","type":""}],"src":"20651:232:18"},{"body":{"nodeType":"YulBlock","src":"20995:131:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21017:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"21025:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21013:3:18"},"nodeType":"YulFunctionCall","src":"21013:14:18"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"21029:34:18","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21006:6:18"},"nodeType":"YulFunctionCall","src":"21006:58:18"},"nodeType":"YulExpressionStatement","src":"21006:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21085:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"21093:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21081:3:18"},"nodeType":"YulFunctionCall","src":"21081:15:18"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"21098:20:18","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21074:6:18"},"nodeType":"YulFunctionCall","src":"21074:45:18"},"nodeType":"YulExpressionStatement","src":"21074:45:18"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20987:6:18","type":""}],"src":"20889:237:18"},{"body":{"nodeType":"YulBlock","src":"21238:118:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21260:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"21268:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21256:3:18"},"nodeType":"YulFunctionCall","src":"21256:14:18"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"21272:34:18","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21249:6:18"},"nodeType":"YulFunctionCall","src":"21249:58:18"},"nodeType":"YulExpressionStatement","src":"21249:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21328:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"21336:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21324:3:18"},"nodeType":"YulFunctionCall","src":"21324:15:18"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"21341:7:18","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21317:6:18"},"nodeType":"YulFunctionCall","src":"21317:32:18"},"nodeType":"YulExpressionStatement","src":"21317:32:18"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21230:6:18","type":""}],"src":"21132:224:18"},{"body":{"nodeType":"YulBlock","src":"21468:117:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21490:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"21498:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21486:3:18"},"nodeType":"YulFunctionCall","src":"21486:14:18"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"21502:34:18","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21479:6:18"},"nodeType":"YulFunctionCall","src":"21479:58:18"},"nodeType":"YulExpressionStatement","src":"21479:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21558:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"21566:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21554:3:18"},"nodeType":"YulFunctionCall","src":"21554:15:18"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"21571:6:18","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21547:6:18"},"nodeType":"YulFunctionCall","src":"21547:31:18"},"nodeType":"YulExpressionStatement","src":"21547:31:18"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21460:6:18","type":""}],"src":"21362:223:18"},{"body":{"nodeType":"YulBlock","src":"21697:69:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21719:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"21727:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21715:3:18"},"nodeType":"YulFunctionCall","src":"21715:14:18"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"21731:27:18","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21708:6:18"},"nodeType":"YulFunctionCall","src":"21708:51:18"},"nodeType":"YulExpressionStatement","src":"21708:51:18"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21689:6:18","type":""}],"src":"21591:175:18"},{"body":{"nodeType":"YulBlock","src":"21878:122:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21900:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"21908:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21896:3:18"},"nodeType":"YulFunctionCall","src":"21896:14:18"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nodeType":"YulLiteral","src":"21912:34:18","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21889:6:18"},"nodeType":"YulFunctionCall","src":"21889:58:18"},"nodeType":"YulExpressionStatement","src":"21889:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21968:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"21976:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21964:3:18"},"nodeType":"YulFunctionCall","src":"21964:15:18"},{"hexValue":"6c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"21981:11:18","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21957:6:18"},"nodeType":"YulFunctionCall","src":"21957:36:18"},"nodeType":"YulExpressionStatement","src":"21957:36:18"}]},"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21870:6:18","type":""}],"src":"21772:228:18"},{"body":{"nodeType":"YulBlock","src":"22112:68:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22134:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"22142:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22130:3:18"},"nodeType":"YulFunctionCall","src":"22130:14:18"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"22146:26:18","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22123:6:18"},"nodeType":"YulFunctionCall","src":"22123:50:18"},"nodeType":"YulExpressionStatement","src":"22123:50:18"}]},"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22104:6:18","type":""}],"src":"22006:174:18"},{"body":{"nodeType":"YulBlock","src":"22292:114:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22314:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"22322:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22310:3:18"},"nodeType":"YulFunctionCall","src":"22310:14:18"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"22326:34:18","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22303:6:18"},"nodeType":"YulFunctionCall","src":"22303:58:18"},"nodeType":"YulExpressionStatement","src":"22303:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22382:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"22390:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22378:3:18"},"nodeType":"YulFunctionCall","src":"22378:15:18"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"22395:3:18","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22371:6:18"},"nodeType":"YulFunctionCall","src":"22371:28:18"},"nodeType":"YulExpressionStatement","src":"22371:28:18"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22284:6:18","type":""}],"src":"22186:220:18"},{"body":{"nodeType":"YulBlock","src":"22518:142:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22540:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"22548:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22536:3:18"},"nodeType":"YulFunctionCall","src":"22536:14:18"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"22552:34:18","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22529:6:18"},"nodeType":"YulFunctionCall","src":"22529:58:18"},"nodeType":"YulExpressionStatement","src":"22529:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22608:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"22616:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22604:3:18"},"nodeType":"YulFunctionCall","src":"22604:15:18"},{"hexValue":"6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"22621:31:18","type":"","value":"ken owner or approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22597:6:18"},"nodeType":"YulFunctionCall","src":"22597:56:18"},"nodeType":"YulExpressionStatement","src":"22597:56:18"}]},"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22510:6:18","type":""}],"src":"22412:248:18"},{"body":{"nodeType":"YulBlock","src":"22709:79:18","statements":[{"body":{"nodeType":"YulBlock","src":"22766:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22775:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22778:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22768:6:18"},"nodeType":"YulFunctionCall","src":"22768:12:18"},"nodeType":"YulExpressionStatement","src":"22768:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22732:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22757:5:18"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"22739:17:18"},"nodeType":"YulFunctionCall","src":"22739:24:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"22729:2:18"},"nodeType":"YulFunctionCall","src":"22729:35:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22722:6:18"},"nodeType":"YulFunctionCall","src":"22722:43:18"},"nodeType":"YulIf","src":"22719:63:18"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22702:5:18","type":""}],"src":"22666:122:18"},{"body":{"nodeType":"YulBlock","src":"22834:76:18","statements":[{"body":{"nodeType":"YulBlock","src":"22888:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22897:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22900:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22890:6:18"},"nodeType":"YulFunctionCall","src":"22890:12:18"},"nodeType":"YulExpressionStatement","src":"22890:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22857:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22879:5:18"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"22864:14:18"},"nodeType":"YulFunctionCall","src":"22864:21:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"22854:2:18"},"nodeType":"YulFunctionCall","src":"22854:32:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22847:6:18"},"nodeType":"YulFunctionCall","src":"22847:40:18"},"nodeType":"YulIf","src":"22844:60:18"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22827:5:18","type":""}],"src":"22794:116:18"},{"body":{"nodeType":"YulBlock","src":"22958:78:18","statements":[{"body":{"nodeType":"YulBlock","src":"23014:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23023:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23026:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23016:6:18"},"nodeType":"YulFunctionCall","src":"23016:12:18"},"nodeType":"YulExpressionStatement","src":"23016:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22981:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23005:5:18"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"22988:16:18"},"nodeType":"YulFunctionCall","src":"22988:23:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"22978:2:18"},"nodeType":"YulFunctionCall","src":"22978:34:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22971:6:18"},"nodeType":"YulFunctionCall","src":"22971:42:18"},"nodeType":"YulIf","src":"22968:62:18"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22951:5:18","type":""}],"src":"22916:120:18"},{"body":{"nodeType":"YulBlock","src":"23085:79:18","statements":[{"body":{"nodeType":"YulBlock","src":"23142:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23151:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23154:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23144:6:18"},"nodeType":"YulFunctionCall","src":"23144:12:18"},"nodeType":"YulExpressionStatement","src":"23144:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23108:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23133:5:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23115:17:18"},"nodeType":"YulFunctionCall","src":"23115:24:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"23105:2:18"},"nodeType":"YulFunctionCall","src":"23105:35:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23098:6:18"},"nodeType":"YulFunctionCall","src":"23098:43:18"},"nodeType":"YulIf","src":"23095:63:18"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23078:5:18","type":""}],"src":"23042:122:18"}]},"contents":"{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n        store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r or approved\")\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner or approved for all\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":18,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e99190611743565b6102bc565b6040516100fb9190611a60565b60405180910390f35b61010c61039e565b6040516101199190611a7b565b60405180910390f35b61013c6004803603810190610137919061179d565b610430565b60405161014991906119f9565b60405180910390f35b61016c60048036038101906101679190611703565b610476565b005b610188600480360381019061018391906115ed565b61058e565b005b6101a4600480360381019061019f91906115ed565b6105ee565b005b6101c060048036038101906101bb919061179d565b61060e565b6040516101cd91906119f9565b60405180910390f35b6101f060048036038101906101eb9190611580565b610695565b6040516101fd9190611bbd565b60405180910390f35b61020e61074d565b60405161021b9190611a7b565b60405180910390f35b61023e600480360381019061023991906116c3565b6107df565b005b61025a60048036038101906102559190611640565b6107f5565b005b6102766004803603810190610271919061179d565b610857565b6040516102839190611a7b565b60405180910390f35b6102a660048036038101906102a191906115ad565b6108bf565b6040516102b39190611a60565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610397575061039682610953565b5b9050919050565b6060600080546103ad90611d27565b80601f01602080910402602001604051908101604052809291908181526020018280546103d990611d27565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b826109bd565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104818261060e565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e990611b7d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610511610a08565b73ffffffffffffffffffffffffffffffffffffffff161480610540575061053f8161053a610a08565b6108bf565b5b61057f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057690611b9d565b60405180910390fd5b6105898383610a10565b505050565b61059f610599610a08565b82610ac9565b6105de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d590611a9d565b60405180910390fd5b6105e9838383610b5e565b505050565b610609838383604051806020016040528060008152506107f5565b505050565b60008061061a83610e58565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561068c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068390611b5d565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610706576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fd90611b3d565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461075c90611d27565b80601f016020809104026020016040519081016040528092919081815260200182805461078890611d27565b80156107d55780601f106107aa576101008083540402835291602001916107d5565b820191906000526020600020905b8154815290600101906020018083116107b857829003601f168201915b5050505050905090565b6107f16107ea610a08565b8383610e95565b5050565b610806610800610a08565b83610ac9565b610845576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083c90611a9d565b60405180910390fd5b61085184848484611002565b50505050565b6060610862826109bd565b600061086c61105e565b9050600081511161088c57604051806020016040528060008152506108b7565b8061089684611075565b6040516020016108a79291906119d5565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109c68161114d565b610a05576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fc90611b5d565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610a838361060e565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610ad58361060e565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b175750610b1681856108bf565b5b80610b5557508373ffffffffffffffffffffffffffffffffffffffff16610b3d84610430565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610b7e8261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610bd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bcb90611add565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3b90611afd565b60405180910390fd5b610c51838383600161118e565b8273ffffffffffffffffffffffffffffffffffffffff16610c718261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610cc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbe90611add565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610e538383836001611194565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610efb90611b1d565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ff59190611a60565b60405180910390a3505050565b61100d848484610b5e565b6110198484848461119a565b611058576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104f90611abd565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b60606000600161108484611331565b01905060008167ffffffffffffffff8111156110a3576110a2611de8565b5b6040519080825280601f01601f1916602001820160405280156110d55781602001600182028036833780820191505090505b509050600082602001820190505b600115611142578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161112c5761112b611d8a565b5b049450600085141561113d57611142565b6110e3565b819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff1661116f83610e58565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b50505050565b50505050565b60006111bb8473ffffffffffffffffffffffffffffffffffffffff16611484565b15611324578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026111e4610a08565b8786866040518563ffffffff1660e01b81526004016112069493929190611a14565b602060405180830381600087803b15801561122057600080fd5b505af192505050801561125157506040513d601f19601f8201168201806040525081019061124e9190611770565b60015b6112d4573d8060008114611281576040519150601f19603f3d011682016040523d82523d6000602084013e611286565b606091505b506000815114156112cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c390611abd565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611329565b600190505b949350505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061138f577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161138557611384611d8a565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106113cc576d04ee2d6d415b85acef810000000083816113c2576113c1611d8a565b5b0492506020810190505b662386f26fc1000083106113fb57662386f26fc1000083816113f1576113f0611d8a565b5b0492506010810190505b6305f5e1008310611424576305f5e100838161141a57611419611d8a565b5b0492506008810190505b612710831061144957612710838161143f5761143e611d8a565b5b0492506004810190505b6064831061146c576064838161146257611461611d8a565b5b0492506002810190505b600a831061147b576001810190505b80915050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60006114ba6114b584611bfd565b611bd8565b9050828152602081018484840111156114d6576114d5611e1c565b5b6114e1848285611ce5565b509392505050565b6000813590506114f8816120b7565b92915050565b60008135905061150d816120ce565b92915050565b600081359050611522816120e5565b92915050565b600081519050611537816120e5565b92915050565b600082601f83011261155257611551611e17565b5b81356115628482602086016114a7565b91505092915050565b60008135905061157a816120fc565b92915050565b60006020828403121561159657611595611e26565b5b60006115a4848285016114e9565b91505092915050565b600080604083850312156115c4576115c3611e26565b5b60006115d2858286016114e9565b92505060206115e3858286016114e9565b9150509250929050565b60008060006060848603121561160657611605611e26565b5b6000611614868287016114e9565b9350506020611625868287016114e9565b92505060406116368682870161156b565b9150509250925092565b6000806000806080858703121561165a57611659611e26565b5b6000611668878288016114e9565b9450506020611679878288016114e9565b935050604061168a8782880161156b565b925050606085013567ffffffffffffffff8111156116ab576116aa611e21565b5b6116b78782880161153d565b91505092959194509250565b600080604083850312156116da576116d9611e26565b5b60006116e8858286016114e9565b92505060206116f9858286016114fe565b9150509250929050565b6000806040838503121561171a57611719611e26565b5b6000611728858286016114e9565b92505060206117398582860161156b565b9150509250929050565b60006020828403121561175957611758611e26565b5b600061176784828501611513565b91505092915050565b60006020828403121561178657611785611e26565b5b600061179484828501611528565b91505092915050565b6000602082840312156117b3576117b2611e26565b5b60006117c18482850161156b565b91505092915050565b6117d381611c71565b82525050565b6117e281611c83565b82525050565b60006117f382611c2e565b6117fd8185611c44565b935061180d818560208601611cf4565b61181681611e2b565b840191505092915050565b600061182c82611c39565b6118368185611c55565b9350611846818560208601611cf4565b61184f81611e2b565b840191505092915050565b600061186582611c39565b61186f8185611c66565b935061187f818560208601611cf4565b80840191505092915050565b6000611898602d83611c55565b91506118a382611e3c565b604082019050919050565b60006118bb603283611c55565b91506118c682611e8b565b604082019050919050565b60006118de602583611c55565b91506118e982611eda565b604082019050919050565b6000611901602483611c55565b915061190c82611f29565b604082019050919050565b6000611924601983611c55565b915061192f82611f78565b602082019050919050565b6000611947602983611c55565b915061195282611fa1565b604082019050919050565b600061196a601883611c55565b915061197582611ff0565b602082019050919050565b600061198d602183611c55565b915061199882612019565b604082019050919050565b60006119b0603d83611c55565b91506119bb82612068565b604082019050919050565b6119cf81611cdb565b82525050565b60006119e1828561185a565b91506119ed828461185a565b91508190509392505050565b6000602082019050611a0e60008301846117ca565b92915050565b6000608082019050611a2960008301876117ca565b611a3660208301866117ca565b611a4360408301856119c6565b8181036060830152611a5581846117e8565b905095945050505050565b6000602082019050611a7560008301846117d9565b92915050565b60006020820190508181036000830152611a958184611821565b905092915050565b60006020820190508181036000830152611ab68161188b565b9050919050565b60006020820190508181036000830152611ad6816118ae565b9050919050565b60006020820190508181036000830152611af6816118d1565b9050919050565b60006020820190508181036000830152611b16816118f4565b9050919050565b60006020820190508181036000830152611b3681611917565b9050919050565b60006020820190508181036000830152611b568161193a565b9050919050565b60006020820190508181036000830152611b768161195d565b9050919050565b60006020820190508181036000830152611b9681611980565b9050919050565b60006020820190508181036000830152611bb6816119a3565b9050919050565b6000602082019050611bd260008301846119c6565b92915050565b6000611be2611bf3565b9050611bee8282611d59565b919050565b6000604051905090565b600067ffffffffffffffff821115611c1857611c17611de8565b5b611c2182611e2b565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000611c7c82611cbb565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611d12578082015181840152602081019050611cf7565b83811115611d21576000848401525b50505050565b60006002820490506001821680611d3f57607f821691505b60208210811415611d5357611d52611db9565b5b50919050565b611d6282611e2b565b810181811067ffffffffffffffff82111715611d8157611d80611de8565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b6120c081611c71565b81146120cb57600080fd5b50565b6120d781611c83565b81146120e257600080fd5b50565b6120ee81611c8f565b81146120f957600080fd5b50565b61210581611cdb565b811461211057600080fd5b5056fea26469706673582212207ea616c3cfcb7ae2793ccdc4e12c0bdfcb8d51636bec2dfb47d1b4570f7e529464736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x1743 JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x1A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x1A7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x179D JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x19F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x1703 JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x15ED JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x15ED JUMP JUMPDEST PUSH2 0x5EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x179D JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x19F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x1580 JUMP JUMPDEST PUSH2 0x695 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1BBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x74D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x1A7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x16C3 JUMP JUMPDEST PUSH2 0x7DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x1640 JUMP JUMPDEST PUSH2 0x7F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x179D JUMP JUMPDEST PUSH2 0x857 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x1A7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x15AD JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x1A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0x953 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x1D27 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x1D27 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x481 DUP3 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E9 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x511 PUSH2 0xA08 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x540 JUMPI POP PUSH2 0x53F DUP2 PUSH2 0x53A PUSH2 0xA08 JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST JUMPDEST PUSH2 0x57F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x1B9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x589 DUP4 DUP4 PUSH2 0xA10 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x59F PUSH2 0x599 PUSH2 0xA08 JUMP JUMPDEST DUP3 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x5DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1A9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E9 DUP4 DUP4 DUP4 PUSH2 0xB5E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x609 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7F5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x61A DUP4 PUSH2 0xE58 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x68C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x683 SWAP1 PUSH2 0x1B5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x706 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FD SWAP1 PUSH2 0x1B3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x75C SWAP1 PUSH2 0x1D27 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x788 SWAP1 PUSH2 0x1D27 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7F1 PUSH2 0x7EA PUSH2 0xA08 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE95 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x806 PUSH2 0x800 PUSH2 0xA08 JUMP JUMPDEST DUP4 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x845 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP1 PUSH2 0x1A9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x851 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1002 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x862 DUP3 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86C PUSH2 0x105E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x88C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8B7 JUMP JUMPDEST DUP1 PUSH2 0x896 DUP5 PUSH2 0x1075 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8A7 SWAP3 SWAP2 SWAP1 PUSH2 0x19D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C6 DUP2 PUSH2 0x114D JUMP JUMPDEST PUSH2 0xA05 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FC SWAP1 PUSH2 0x1B5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA83 DUP4 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAD5 DUP4 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB17 JUMPI POP PUSH2 0xB16 DUP2 DUP6 PUSH2 0x8BF JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB55 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB3D DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB7E DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCB SWAP1 PUSH2 0x1ADD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3B SWAP1 PUSH2 0x1AFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC51 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x118E JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC71 DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBE SWAP1 PUSH2 0x1ADD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE53 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1194 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFB SWAP1 PUSH2 0x1B1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFF5 SWAP2 SWAP1 PUSH2 0x1A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x100D DUP5 DUP5 DUP5 PUSH2 0xB5E JUMP JUMPDEST PUSH2 0x1019 DUP5 DUP5 DUP5 DUP5 PUSH2 0x119A JUMP JUMPDEST PUSH2 0x1058 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104F SWAP1 PUSH2 0x1ABD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1084 DUP5 PUSH2 0x1331 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10A3 JUMPI PUSH2 0x10A2 PUSH2 0x1DE8 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10D5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1142 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x112C JUMPI PUSH2 0x112B PUSH2 0x1D8A JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x113D JUMPI PUSH2 0x1142 JUMP JUMPDEST PUSH2 0x10E3 JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x116F DUP4 PUSH2 0xE58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11BB DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1484 JUMP JUMPDEST ISZERO PUSH2 0x1324 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x11E4 PUSH2 0xA08 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1206 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A14 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1251 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x124E SWAP2 SWAP1 PUSH2 0x1770 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12D4 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1281 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1286 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x12CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12C3 SWAP1 PUSH2 0x1ABD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x138F JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1385 JUMPI PUSH2 0x1384 PUSH2 0x1D8A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x13CC JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x13C2 JUMPI PUSH2 0x13C1 PUSH2 0x1D8A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x13FB JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x13F1 JUMPI PUSH2 0x13F0 PUSH2 0x1D8A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1424 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x141A JUMPI PUSH2 0x1419 PUSH2 0x1D8A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1449 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x143F JUMPI PUSH2 0x143E PUSH2 0x1D8A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x146C JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1462 JUMPI PUSH2 0x1461 PUSH2 0x1D8A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x147B JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14BA PUSH2 0x14B5 DUP5 PUSH2 0x1BFD JUMP JUMPDEST PUSH2 0x1BD8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x14D6 JUMPI PUSH2 0x14D5 PUSH2 0x1E1C JUMP JUMPDEST JUMPDEST PUSH2 0x14E1 DUP5 DUP3 DUP6 PUSH2 0x1CE5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14F8 DUP2 PUSH2 0x20B7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x150D DUP2 PUSH2 0x20CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1522 DUP2 PUSH2 0x20E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1537 DUP2 PUSH2 0x20E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1552 JUMPI PUSH2 0x1551 PUSH2 0x1E17 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1562 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x14A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x157A DUP2 PUSH2 0x20FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1596 JUMPI PUSH2 0x1595 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15A4 DUP5 DUP3 DUP6 ADD PUSH2 0x14E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15C4 JUMPI PUSH2 0x15C3 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15D2 DUP6 DUP3 DUP7 ADD PUSH2 0x14E9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15E3 DUP6 DUP3 DUP7 ADD PUSH2 0x14E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1606 JUMPI PUSH2 0x1605 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1614 DUP7 DUP3 DUP8 ADD PUSH2 0x14E9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1625 DUP7 DUP3 DUP8 ADD PUSH2 0x14E9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1636 DUP7 DUP3 DUP8 ADD PUSH2 0x156B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x165A JUMPI PUSH2 0x1659 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1668 DUP8 DUP3 DUP9 ADD PUSH2 0x14E9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1679 DUP8 DUP3 DUP9 ADD PUSH2 0x14E9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x168A DUP8 DUP3 DUP9 ADD PUSH2 0x156B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16AB JUMPI PUSH2 0x16AA PUSH2 0x1E21 JUMP JUMPDEST JUMPDEST PUSH2 0x16B7 DUP8 DUP3 DUP9 ADD PUSH2 0x153D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16DA JUMPI PUSH2 0x16D9 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16E8 DUP6 DUP3 DUP7 ADD PUSH2 0x14E9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16F9 DUP6 DUP3 DUP7 ADD PUSH2 0x14FE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x171A JUMPI PUSH2 0x1719 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1728 DUP6 DUP3 DUP7 ADD PUSH2 0x14E9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1739 DUP6 DUP3 DUP7 ADD PUSH2 0x156B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1759 JUMPI PUSH2 0x1758 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1767 DUP5 DUP3 DUP6 ADD PUSH2 0x1513 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1786 JUMPI PUSH2 0x1785 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1794 DUP5 DUP3 DUP6 ADD PUSH2 0x1528 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17B3 JUMPI PUSH2 0x17B2 PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17C1 DUP5 DUP3 DUP6 ADD PUSH2 0x156B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17D3 DUP2 PUSH2 0x1C71 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x17E2 DUP2 PUSH2 0x1C83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17F3 DUP3 PUSH2 0x1C2E JUMP JUMPDEST PUSH2 0x17FD DUP2 DUP6 PUSH2 0x1C44 JUMP JUMPDEST SWAP4 POP PUSH2 0x180D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CF4 JUMP JUMPDEST PUSH2 0x1816 DUP2 PUSH2 0x1E2B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x182C DUP3 PUSH2 0x1C39 JUMP JUMPDEST PUSH2 0x1836 DUP2 DUP6 PUSH2 0x1C55 JUMP JUMPDEST SWAP4 POP PUSH2 0x1846 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CF4 JUMP JUMPDEST PUSH2 0x184F DUP2 PUSH2 0x1E2B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1865 DUP3 PUSH2 0x1C39 JUMP JUMPDEST PUSH2 0x186F DUP2 DUP6 PUSH2 0x1C66 JUMP JUMPDEST SWAP4 POP PUSH2 0x187F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CF4 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1898 PUSH1 0x2D DUP4 PUSH2 0x1C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x18A3 DUP3 PUSH2 0x1E3C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18BB PUSH1 0x32 DUP4 PUSH2 0x1C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x18C6 DUP3 PUSH2 0x1E8B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18DE PUSH1 0x25 DUP4 PUSH2 0x1C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x18E9 DUP3 PUSH2 0x1EDA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1901 PUSH1 0x24 DUP4 PUSH2 0x1C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x190C DUP3 PUSH2 0x1F29 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1924 PUSH1 0x19 DUP4 PUSH2 0x1C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x192F DUP3 PUSH2 0x1F78 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1947 PUSH1 0x29 DUP4 PUSH2 0x1C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x1952 DUP3 PUSH2 0x1FA1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x196A PUSH1 0x18 DUP4 PUSH2 0x1C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x1975 DUP3 PUSH2 0x1FF0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x198D PUSH1 0x21 DUP4 PUSH2 0x1C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x1998 DUP3 PUSH2 0x2019 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19B0 PUSH1 0x3D DUP4 PUSH2 0x1C55 JUMP JUMPDEST SWAP2 POP PUSH2 0x19BB DUP3 PUSH2 0x2068 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19CF DUP2 PUSH2 0x1CDB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19E1 DUP3 DUP6 PUSH2 0x185A JUMP JUMPDEST SWAP2 POP PUSH2 0x19ED DUP3 DUP5 PUSH2 0x185A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A0E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1A29 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x17CA JUMP JUMPDEST PUSH2 0x1A36 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x17CA JUMP JUMPDEST PUSH2 0x1A43 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x19C6 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1A55 DUP2 DUP5 PUSH2 0x17E8 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A75 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A95 DUP2 DUP5 PUSH2 0x1821 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AB6 DUP2 PUSH2 0x188B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AD6 DUP2 PUSH2 0x18AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AF6 DUP2 PUSH2 0x18D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B16 DUP2 PUSH2 0x18F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B36 DUP2 PUSH2 0x1917 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B56 DUP2 PUSH2 0x193A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B76 DUP2 PUSH2 0x195D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B96 DUP2 PUSH2 0x1980 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BB6 DUP2 PUSH2 0x19A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BD2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BE2 PUSH2 0x1BF3 JUMP JUMPDEST SWAP1 POP PUSH2 0x1BEE DUP3 DUP3 PUSH2 0x1D59 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1C18 JUMPI PUSH2 0x1C17 PUSH2 0x1DE8 JUMP JUMPDEST JUMPDEST PUSH2 0x1C21 DUP3 PUSH2 0x1E2B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C7C DUP3 PUSH2 0x1CBB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D12 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1CF7 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1D21 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1D3F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1D53 JUMPI PUSH2 0x1D52 PUSH2 0x1DB9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D62 DUP3 PUSH2 0x1E2B JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1D81 JUMPI PUSH2 0x1D80 PUSH2 0x1DE8 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x20C0 DUP2 PUSH2 0x1C71 JUMP JUMPDEST DUP2 EQ PUSH2 0x20CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x20D7 DUP2 PUSH2 0x1C83 JUMP JUMPDEST DUP2 EQ PUSH2 0x20E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x20EE DUP2 PUSH2 0x1C8F JUMP JUMPDEST DUP2 EQ PUSH2 0x20F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2105 DUP2 PUSH2 0x1CDB JUMP JUMPDEST DUP2 EQ PUSH2 0x2110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0xA616C3CFCB7AE2793CCDC4E12C0BDFCB8D51636BEC2DFB47D1B4570F7E5294 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"628:16679:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3468:406;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:326;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5004:179;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2190:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2633:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5249:314;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2801:276;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4388:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1570:300;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;3605:11;;:2;:11;;;;3597:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3702:5;3686:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3711:37;3728:5;3735:12;:10;:12::i;:::-;3711:16;:37::i;:::-;3686:62;3665:170;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;4612:326::-;4801:41;4820:12;:10;:12::i;:::-;4834:7;4801:18;:41::i;:::-;4793:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;4903:28;4913:4;4919:2;4923:7;4903:9;:28::i;:::-;4612:326;;;:::o;5004:179::-;5137:39;5154:4;5160:2;5164:7;5137:39;;;;;;;;;;;;:16;:39::i;:::-;5004:179;;;:::o;2190:219::-;2262:7;2281:13;2297:17;2306:7;2297:8;:17::i;:::-;2281:33;;2349:1;2332:19;;:5;:19;;;;2324:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2397:5;2390:12;;;2190:219;;;:::o;1929:204::-;2001:7;2045:1;2028:19;;:5;:19;;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;2633:102::-;2689:13;2721:7;2714:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2633:102;:::o;4169:153::-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;5249:314::-;5417:41;5436:12;:10;:12::i;:::-;5450:7;5417:18;:41::i;:::-;5409:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;5518:38;5532:4;5538:2;5542:7;5551:4;5518:13;:38::i;:::-;5249:314;;;;:::o;2801:276::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;:8;:10::i;:::-;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2984:86;2977:93;;;2801:276;;;:::o;4388:162::-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;829:155:12:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;13466:133:4:-;13547:16;13555:7;13547;:16::i;:::-;13539:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;13466:133;:::o;640:96:10:-;693:7;719:10;712:17;;640:96;:::o;12768:171:4:-;12869:2;12842:15;:24;12858:7;12842:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12924:7;12920:2;12886:46;;12895:23;12910:7;12895:14;:23::i;:::-;12886:46;;;;;;;;;;;;12768:171;;:::o;7540:261::-;7633:4;7649:13;7665:23;7680:7;7665:14;:23::i;:::-;7649:39;;7717:5;7706:16;;:7;:16;;;:52;;;;7726:32;7743:5;7750:7;7726:16;:32::i;:::-;7706:52;:87;;;;7786:7;7762:31;;:20;7774:7;7762:11;:20::i;:::-;:31;;;7706:87;7698:96;;;7540:261;;;;:::o;11423:1233::-;11577:4;11550:31;;:23;11565:7;11550:14;:23::i;:::-;:31;;;11542:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11655:1;11641:16;;:2;:16;;;;11633:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;11709:42;11730:4;11736:2;11740:7;11749:1;11709:20;:42::i;:::-;11878:4;11851:31;;:23;11866:7;11851:14;:23::i;:::-;:31;;;11843:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11993:15;:24;12009:7;11993:24;;;;;;;;;;;;11986:31;;;;;;;;;;;12480:1;12461:9;:15;12471:4;12461:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;12512:1;12495:9;:13;12505:2;12495:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;12552:2;12533:7;:16;12541:7;12533:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;12589:7;12585:2;12570:27;;12579:4;12570:27;;;;;;;;;;;;12608:41;12628:4;12634:2;12638:7;12647:1;12608:19;:41::i;:::-;11423:1233;;;:::o;6838:115::-;6904:7;6930;:16;6938:7;6930:16;;;;;;;;;;;;;;;;;;;;;6923:23;;6838:115;;;:::o;13075:307::-;13225:8;13216:17;;:5;:17;;;;13208:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;13311:8;13273:18;:25;13292:5;13273:25;;;;;;;;;;;;;;;:35;13299:8;13273:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13356:8;13334:41;;13349:5;13334:41;;;13366:8;13334:41;;;;;;:::i;:::-;;;;;;;;13075:307;;;:::o;6424:305::-;6574:28;6584:4;6590:2;6594:7;6574:9;:28::i;:::-;6620:47;6643:4;6649:2;6653:7;6662:4;6620:22;:47::i;:::-;6612:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6424:305;;;;:::o;3319:92::-;3370:13;3395:9;;;;;;;;;;;;;;3319:92;:::o;415:696:11:-;471:13;520:14;557:1;537:17;548:5;537:10;:17::i;:::-;:21;520:38;;572:20;606:6;595:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;572:41;;627:11;753:6;749:2;745:15;737:6;733:28;726:35;;788:280;795:4;788:280;;;819:5;;;;;;;;958:8;953:2;946:5;942:14;937:30;932:3;924:44;1012:2;1003:11;;;;;;:::i;:::-;;;;;1045:1;1036:5;:10;1032:21;;;1048:5;;1032:21;788:280;;;1088:6;1081:13;;;;;415:696;;;:::o;7256:126:4:-;7321:4;7373:1;7344:31;;:17;7353:7;7344:8;:17::i;:::-;:31;;;;7337:38;;7256:126;;;:::o;15698:154::-;;;;;:::o;16558:153::-;;;;;:::o;14151:831::-;14300:4;14320:15;:2;:13;;;:15::i;:::-;14316:660;;;14371:2;14355:36;;;14392:12;:10;:12::i;:::-;14406:4;14412:7;14421:4;14355:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14351:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14610:1;14593:6;:13;:18;14589:321;;;14635:60;;;;;;;;;;:::i;:::-;;;;;;;;14589:321;14862:6;14856:13;14847:6;14843:2;14839:15;14832:38;14351:573;14486:41;;;14476:51;;;:6;:51;;;;14469:58;;;;;14316:660;14961:4;14954:11;;14151:831;;;;;;;:::o;9889:890:14:-;9942:7;9961:14;9978:1;9961:18;;10026:6;10017:5;:15;10013:99;;10061:6;10052:15;;;;;;:::i;:::-;;;;;10095:2;10085:12;;;;10013:99;10138:6;10129:5;:15;10125:99;;10173:6;10164:15;;;;;;:::i;:::-;;;;;10207:2;10197:12;;;;10125:99;10250:6;10241:5;:15;10237:99;;10285:6;10276:15;;;;;;:::i;:::-;;;;;10319:2;10309:12;;;;10237:99;10362:5;10353;:14;10349:96;;10396:5;10387:14;;;;;;:::i;:::-;;;;;10429:1;10419:11;;;;10349:96;10471:5;10462;:14;10458:96;;10505:5;10496:14;;;;;;:::i;:::-;;;;;10538:1;10528:11;;;;10458:96;10580:5;10571;:14;10567:96;;10614:5;10605:14;;;;;;:::i;:::-;;;;;10647:1;10637:11;;;;10567:96;10689:5;10680;:14;10676:64;;10724:1;10714:11;;;;10676:64;10766:6;10759:13;;;9889:890;;;:::o;1175:320:9:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7:410:18:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:112;;;280:79;;:::i;:::-;249:112;370:41;404:6;399:3;394;370:41;:::i;:::-;90:327;7:410;;;;;:::o;423:139::-;469:5;507:6;494:20;485:29;;523:33;550:5;523:33;:::i;:::-;423:139;;;;:::o;568:133::-;611:5;649:6;636:20;627:29;;665:30;689:5;665:30;:::i;:::-;568:133;;;;:::o;707:137::-;752:5;790:6;777:20;768:29;;806:32;832:5;806:32;:::i;:::-;707:137;;;;:::o;850:141::-;906:5;937:6;931:13;922:22;;953:32;979:5;953:32;:::i;:::-;850:141;;;;:::o;1010:338::-;1065:5;1114:3;1107:4;1099:6;1095:17;1091:27;1081:122;;1122:79;;:::i;:::-;1081:122;1239:6;1226:20;1264:78;1338:3;1330:6;1323:4;1315:6;1311:17;1264:78;:::i;:::-;1255:87;;1071:277;1010:338;;;;:::o;1354:139::-;1400:5;1438:6;1425:20;1416:29;;1454:33;1481:5;1454:33;:::i;:::-;1354:139;;;;:::o;1499:329::-;1558:6;1607:2;1595:9;1586:7;1582:23;1578:32;1575:119;;;1613:79;;:::i;:::-;1575:119;1733:1;1758:53;1803:7;1794:6;1783:9;1779:22;1758:53;:::i;:::-;1748:63;;1704:117;1499:329;;;;:::o;1834:474::-;1902:6;1910;1959:2;1947:9;1938:7;1934:23;1930:32;1927:119;;;1965:79;;:::i;:::-;1927:119;2085:1;2110:53;2155:7;2146:6;2135:9;2131:22;2110:53;:::i;:::-;2100:63;;2056:117;2212:2;2238:53;2283:7;2274:6;2263:9;2259:22;2238:53;:::i;:::-;2228:63;;2183:118;1834:474;;;;;:::o;2314:619::-;2391:6;2399;2407;2456:2;2444:9;2435:7;2431:23;2427:32;2424:119;;;2462:79;;:::i;:::-;2424:119;2582:1;2607:53;2652:7;2643:6;2632:9;2628:22;2607:53;:::i;:::-;2597:63;;2553:117;2709:2;2735:53;2780:7;2771:6;2760:9;2756:22;2735:53;:::i;:::-;2725:63;;2680:118;2837:2;2863:53;2908:7;2899:6;2888:9;2884:22;2863:53;:::i;:::-;2853:63;;2808:118;2314:619;;;;;:::o;2939:943::-;3034:6;3042;3050;3058;3107:3;3095:9;3086:7;3082:23;3078:33;3075:120;;;3114:79;;:::i;:::-;3075:120;3234:1;3259:53;3304:7;3295:6;3284:9;3280:22;3259:53;:::i;:::-;3249:63;;3205:117;3361:2;3387:53;3432:7;3423:6;3412:9;3408:22;3387:53;:::i;:::-;3377:63;;3332:118;3489:2;3515:53;3560:7;3551:6;3540:9;3536:22;3515:53;:::i;:::-;3505:63;;3460:118;3645:2;3634:9;3630:18;3617:32;3676:18;3668:6;3665:30;3662:117;;;3698:79;;:::i;:::-;3662:117;3803:62;3857:7;3848:6;3837:9;3833:22;3803:62;:::i;:::-;3793:72;;3588:287;2939:943;;;;;;;:::o;3888:468::-;3953:6;3961;4010:2;3998:9;3989:7;3985:23;3981:32;3978:119;;;4016:79;;:::i;:::-;3978:119;4136:1;4161:53;4206:7;4197:6;4186:9;4182:22;4161:53;:::i;:::-;4151:63;;4107:117;4263:2;4289:50;4331:7;4322:6;4311:9;4307:22;4289:50;:::i;:::-;4279:60;;4234:115;3888:468;;;;;:::o;4362:474::-;4430:6;4438;4487:2;4475:9;4466:7;4462:23;4458:32;4455:119;;;4493:79;;:::i;:::-;4455:119;4613:1;4638:53;4683:7;4674:6;4663:9;4659:22;4638:53;:::i;:::-;4628:63;;4584:117;4740:2;4766:53;4811:7;4802:6;4791:9;4787:22;4766:53;:::i;:::-;4756:63;;4711:118;4362:474;;;;;:::o;4842:327::-;4900:6;4949:2;4937:9;4928:7;4924:23;4920:32;4917:119;;;4955:79;;:::i;:::-;4917:119;5075:1;5100:52;5144:7;5135:6;5124:9;5120:22;5100:52;:::i;:::-;5090:62;;5046:116;4842:327;;;;:::o;5175:349::-;5244:6;5293:2;5281:9;5272:7;5268:23;5264:32;5261:119;;;5299:79;;:::i;:::-;5261:119;5419:1;5444:63;5499:7;5490:6;5479:9;5475:22;5444:63;:::i;:::-;5434:73;;5390:127;5175:349;;;;:::o;5530:329::-;5589:6;5638:2;5626:9;5617:7;5613:23;5609:32;5606:119;;;5644:79;;:::i;:::-;5606:119;5764:1;5789:53;5834:7;5825:6;5814:9;5810:22;5789:53;:::i;:::-;5779:63;;5735:117;5530:329;;;;:::o;5865:118::-;5952:24;5970:5;5952:24;:::i;:::-;5947:3;5940:37;5865:118;;:::o;5989:109::-;6070:21;6085:5;6070:21;:::i;:::-;6065:3;6058:34;5989:109;;:::o;6104:360::-;6190:3;6218:38;6250:5;6218:38;:::i;:::-;6272:70;6335:6;6330:3;6272:70;:::i;:::-;6265:77;;6351:52;6396:6;6391:3;6384:4;6377:5;6373:16;6351:52;:::i;:::-;6428:29;6450:6;6428:29;:::i;:::-;6423:3;6419:39;6412:46;;6194:270;6104:360;;;;:::o;6470:364::-;6558:3;6586:39;6619:5;6586:39;:::i;:::-;6641:71;6705:6;6700:3;6641:71;:::i;:::-;6634:78;;6721:52;6766:6;6761:3;6754:4;6747:5;6743:16;6721:52;:::i;:::-;6798:29;6820:6;6798:29;:::i;:::-;6793:3;6789:39;6782:46;;6562:272;6470:364;;;;:::o;6840:377::-;6946:3;6974:39;7007:5;6974:39;:::i;:::-;7029:89;7111:6;7106:3;7029:89;:::i;:::-;7022:96;;7127:52;7172:6;7167:3;7160:4;7153:5;7149:16;7127:52;:::i;:::-;7204:6;7199:3;7195:16;7188:23;;6950:267;6840:377;;;;:::o;7223:366::-;7365:3;7386:67;7450:2;7445:3;7386:67;:::i;:::-;7379:74;;7462:93;7551:3;7462:93;:::i;:::-;7580:2;7575:3;7571:12;7564:19;;7223:366;;;:::o;7595:::-;7737:3;7758:67;7822:2;7817:3;7758:67;:::i;:::-;7751:74;;7834:93;7923:3;7834:93;:::i;:::-;7952:2;7947:3;7943:12;7936:19;;7595:366;;;:::o;7967:::-;8109:3;8130:67;8194:2;8189:3;8130:67;:::i;:::-;8123:74;;8206:93;8295:3;8206:93;:::i;:::-;8324:2;8319:3;8315:12;8308:19;;7967:366;;;:::o;8339:::-;8481:3;8502:67;8566:2;8561:3;8502:67;:::i;:::-;8495:74;;8578:93;8667:3;8578:93;:::i;:::-;8696:2;8691:3;8687:12;8680:19;;8339:366;;;:::o;8711:::-;8853:3;8874:67;8938:2;8933:3;8874:67;:::i;:::-;8867:74;;8950:93;9039:3;8950:93;:::i;:::-;9068:2;9063:3;9059:12;9052:19;;8711:366;;;:::o;9083:::-;9225:3;9246:67;9310:2;9305:3;9246:67;:::i;:::-;9239:74;;9322:93;9411:3;9322:93;:::i;:::-;9440:2;9435:3;9431:12;9424:19;;9083:366;;;:::o;9455:::-;9597:3;9618:67;9682:2;9677:3;9618:67;:::i;:::-;9611:74;;9694:93;9783:3;9694:93;:::i;:::-;9812:2;9807:3;9803:12;9796:19;;9455:366;;;:::o;9827:::-;9969:3;9990:67;10054:2;10049:3;9990:67;:::i;:::-;9983:74;;10066:93;10155:3;10066:93;:::i;:::-;10184:2;10179:3;10175:12;10168:19;;9827:366;;;:::o;10199:::-;10341:3;10362:67;10426:2;10421:3;10362:67;:::i;:::-;10355:74;;10438:93;10527:3;10438:93;:::i;:::-;10556:2;10551:3;10547:12;10540:19;;10199:366;;;:::o;10571:118::-;10658:24;10676:5;10658:24;:::i;:::-;10653:3;10646:37;10571:118;;:::o;10695:435::-;10875:3;10897:95;10988:3;10979:6;10897:95;:::i;:::-;10890:102;;11009:95;11100:3;11091:6;11009:95;:::i;:::-;11002:102;;11121:3;11114:10;;10695:435;;;;;:::o;11136:222::-;11229:4;11267:2;11256:9;11252:18;11244:26;;11280:71;11348:1;11337:9;11333:17;11324:6;11280:71;:::i;:::-;11136:222;;;;:::o;11364:640::-;11559:4;11597:3;11586:9;11582:19;11574:27;;11611:71;11679:1;11668:9;11664:17;11655:6;11611:71;:::i;:::-;11692:72;11760:2;11749:9;11745:18;11736:6;11692:72;:::i;:::-;11774;11842:2;11831:9;11827:18;11818:6;11774:72;:::i;:::-;11893:9;11887:4;11883:20;11878:2;11867:9;11863:18;11856:48;11921:76;11992:4;11983:6;11921:76;:::i;:::-;11913:84;;11364:640;;;;;;;:::o;12010:210::-;12097:4;12135:2;12124:9;12120:18;12112:26;;12148:65;12210:1;12199:9;12195:17;12186:6;12148:65;:::i;:::-;12010:210;;;;:::o;12226:313::-;12339:4;12377:2;12366:9;12362:18;12354:26;;12426:9;12420:4;12416:20;12412:1;12401:9;12397:17;12390:47;12454:78;12527:4;12518:6;12454:78;:::i;:::-;12446:86;;12226:313;;;;:::o;12545:419::-;12711:4;12749:2;12738:9;12734:18;12726:26;;12798:9;12792:4;12788:20;12784:1;12773:9;12769:17;12762:47;12826:131;12952:4;12826:131;:::i;:::-;12818:139;;12545:419;;;:::o;12970:::-;13136:4;13174:2;13163:9;13159:18;13151:26;;13223:9;13217:4;13213:20;13209:1;13198:9;13194:17;13187:47;13251:131;13377:4;13251:131;:::i;:::-;13243:139;;12970:419;;;:::o;13395:::-;13561:4;13599:2;13588:9;13584:18;13576:26;;13648:9;13642:4;13638:20;13634:1;13623:9;13619:17;13612:47;13676:131;13802:4;13676:131;:::i;:::-;13668:139;;13395:419;;;:::o;13820:::-;13986:4;14024:2;14013:9;14009:18;14001:26;;14073:9;14067:4;14063:20;14059:1;14048:9;14044:17;14037:47;14101:131;14227:4;14101:131;:::i;:::-;14093:139;;13820:419;;;:::o;14245:::-;14411:4;14449:2;14438:9;14434:18;14426:26;;14498:9;14492:4;14488:20;14484:1;14473:9;14469:17;14462:47;14526:131;14652:4;14526:131;:::i;:::-;14518:139;;14245:419;;;:::o;14670:::-;14836:4;14874:2;14863:9;14859:18;14851:26;;14923:9;14917:4;14913:20;14909:1;14898:9;14894:17;14887:47;14951:131;15077:4;14951:131;:::i;:::-;14943:139;;14670:419;;;:::o;15095:::-;15261:4;15299:2;15288:9;15284:18;15276:26;;15348:9;15342:4;15338:20;15334:1;15323:9;15319:17;15312:47;15376:131;15502:4;15376:131;:::i;:::-;15368:139;;15095:419;;;:::o;15520:::-;15686:4;15724:2;15713:9;15709:18;15701:26;;15773:9;15767:4;15763:20;15759:1;15748:9;15744:17;15737:47;15801:131;15927:4;15801:131;:::i;:::-;15793:139;;15520:419;;;:::o;15945:::-;16111:4;16149:2;16138:9;16134:18;16126:26;;16198:9;16192:4;16188:20;16184:1;16173:9;16169:17;16162:47;16226:131;16352:4;16226:131;:::i;:::-;16218:139;;15945:419;;;:::o;16370:222::-;16463:4;16501:2;16490:9;16486:18;16478:26;;16514:71;16582:1;16571:9;16567:17;16558:6;16514:71;:::i;:::-;16370:222;;;;:::o;16598:129::-;16632:6;16659:20;;:::i;:::-;16649:30;;16688:33;16716:4;16708:6;16688:33;:::i;:::-;16598:129;;;:::o;16733:75::-;16766:6;16799:2;16793:9;16783:19;;16733:75;:::o;16814:307::-;16875:4;16965:18;16957:6;16954:30;16951:56;;;16987:18;;:::i;:::-;16951:56;17025:29;17047:6;17025:29;:::i;:::-;17017:37;;17109:4;17103;17099:15;17091:23;;16814:307;;;:::o;17127:98::-;17178:6;17212:5;17206:12;17196:22;;17127:98;;;:::o;17231:99::-;17283:6;17317:5;17311:12;17301:22;;17231:99;;;:::o;17336:168::-;17419:11;17453:6;17448:3;17441:19;17493:4;17488:3;17484:14;17469:29;;17336:168;;;;:::o;17510:169::-;17594:11;17628:6;17623:3;17616:19;17668:4;17663:3;17659:14;17644:29;;17510:169;;;;:::o;17685:148::-;17787:11;17824:3;17809:18;;17685:148;;;;:::o;17839:96::-;17876:7;17905:24;17923:5;17905:24;:::i;:::-;17894:35;;17839:96;;;:::o;17941:90::-;17975:7;18018:5;18011:13;18004:21;17993:32;;17941:90;;;:::o;18037:149::-;18073:7;18113:66;18106:5;18102:78;18091:89;;18037:149;;;:::o;18192:126::-;18229:7;18269:42;18262:5;18258:54;18247:65;;18192:126;;;:::o;18324:77::-;18361:7;18390:5;18379:16;;18324:77;;;:::o;18407:154::-;18491:6;18486:3;18481;18468:30;18553:1;18544:6;18539:3;18535:16;18528:27;18407:154;;;:::o;18567:307::-;18635:1;18645:113;18659:6;18656:1;18653:13;18645:113;;;18744:1;18739:3;18735:11;18729:18;18725:1;18720:3;18716:11;18709:39;18681:2;18678:1;18674:10;18669:15;;18645:113;;;18776:6;18773:1;18770:13;18767:101;;;18856:1;18847:6;18842:3;18838:16;18831:27;18767:101;18616:258;18567:307;;;:::o;18880:320::-;18924:6;18961:1;18955:4;18951:12;18941:22;;19008:1;19002:4;18998:12;19029:18;19019:81;;19085:4;19077:6;19073:17;19063:27;;19019:81;19147:2;19139:6;19136:14;19116:18;19113:38;19110:84;;;19166:18;;:::i;:::-;19110:84;18931:269;18880:320;;;:::o;19206:281::-;19289:27;19311:4;19289:27;:::i;:::-;19281:6;19277:40;19419:6;19407:10;19404:22;19383:18;19371:10;19368:34;19365:62;19362:88;;;19430:18;;:::i;:::-;19362:88;19470:10;19466:2;19459:22;19249:238;19206:281;;:::o;19493:180::-;19541:77;19538:1;19531:88;19638:4;19635:1;19628:15;19662:4;19659:1;19652:15;19679:180;19727:77;19724:1;19717:88;19824:4;19821:1;19814:15;19848:4;19845:1;19838:15;19865:180;19913:77;19910:1;19903:88;20010:4;20007:1;20000:15;20034:4;20031:1;20024:15;20051:117;20160:1;20157;20150:12;20174:117;20283:1;20280;20273:12;20297:117;20406:1;20403;20396:12;20420:117;20529:1;20526;20519:12;20543:102;20584:6;20635:2;20631:7;20626:2;20619:5;20615:14;20611:28;20601:38;;20543:102;;;:::o;20651:232::-;20791:34;20787:1;20779:6;20775:14;20768:58;20860:15;20855:2;20847:6;20843:15;20836:40;20651:232;:::o;20889:237::-;21029:34;21025:1;21017:6;21013:14;21006:58;21098:20;21093:2;21085:6;21081:15;21074:45;20889:237;:::o;21132:224::-;21272:34;21268:1;21260:6;21256:14;21249:58;21341:7;21336:2;21328:6;21324:15;21317:32;21132:224;:::o;21362:223::-;21502:34;21498:1;21490:6;21486:14;21479:58;21571:6;21566:2;21558:6;21554:15;21547:31;21362:223;:::o;21591:175::-;21731:27;21727:1;21719:6;21715:14;21708:51;21591:175;:::o;21772:228::-;21912:34;21908:1;21900:6;21896:14;21889:58;21981:11;21976:2;21968:6;21964:15;21957:36;21772:228;:::o;22006:174::-;22146:26;22142:1;22134:6;22130:14;22123:50;22006:174;:::o;22186:220::-;22326:34;22322:1;22314:6;22310:14;22303:58;22395:3;22390:2;22382:6;22378:15;22371:28;22186:220;:::o;22412:248::-;22552:34;22548:1;22540:6;22536:14;22529:58;22621:31;22616:2;22608:6;22604:15;22597:56;22412:248;:::o;22666:122::-;22739:24;22757:5;22739:24;:::i;:::-;22732:5;22729:35;22719:63;;22778:1;22775;22768:12;22719:63;22666:122;:::o;22794:116::-;22864:21;22879:5;22864:21;:::i;:::-;22857:5;22854:32;22844:60;;22900:1;22897;22890:12;22844:60;22794:116;:::o;22916:120::-;22988:23;23005:5;22988:23;:::i;:::-;22981:5;22978:34;22968:62;;23026:1;23023;23016:12;22968:62;22916:120;:::o;23042:122::-;23115:24;23133:5;23115:24;:::i;:::-;23108:5;23105:35;23095:63;;23154:1;23151;23144:12;23095:63;23042:122;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1704200","executionCost":"infinite","totalCost":"infinite"},"external":{"approve(address,uint256)":"infinite","balanceOf(address)":"2924","getApproved(uint256)":"5277","isApprovedForAll(address,address)":"infinite","name()":"infinite","ownerOf(uint256)":"3025","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"infinite","supportsInterface(bytes4)":"774","symbol()":"infinite","tokenURI(uint256)":"3467","transferFrom(address,address,uint256)":"infinite"},"internal":{"__unsafe_increaseBalance(address,uint256)":"infinite","_afterTokenTransfer(address,address,uint256,uint256)":"17","_approve(address,uint256)":"infinite","_baseURI()":"infinite","_beforeTokenTransfer(address,address,uint256,uint256)":"17","_burn(uint256)":"infinite","_checkOnERC721Received(address,address,uint256,bytes memory)":"infinite","_exists(uint256)":"2312","_isApprovedOrOwner(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_ownerOf(uint256)":"2248","_requireMinted(uint256)":"infinite","_safeMint(address,uint256)":"infinite","_safeMint(address,uint256,bytes memory)":"infinite","_safeTransfer(address,address,uint256,bytes memory)":"infinite","_setApprovalForAll(address,address,bool)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.2) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner or approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _ownerOf(tokenId) != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\\n\\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        unchecked {\\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\\n            // Given that tokens are minted one by one, it is impossible in practice that\\n            // this ever happens. Might change if we allow batch minting.\\n            // The ERC fails to describe this case.\\n            _balances[to] += 1;\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\\n\\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\\n        owner = ERC721.ownerOf(tokenId);\\n\\n        // Clear approvals\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // Cannot overflow, as that would require more tokens to be burned/transferred\\n            // out than the owner initially received through minting and transferring in.\\n            _balances[owner] -= 1;\\n        }\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId, 1);\\n\\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n\\n        // Clear approvals from the previous owner\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\\n            // `from`'s balance is the number of token held, which is at least one before the current\\n            // transfer.\\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\\n            // all 2**256 token ids to be minted, which in practice is impossible.\\n            _balances[from] -= 1;\\n            _balances[to] += 1;\\n        }\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\\n     * - When `from` is zero, the tokens will be minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 firstTokenId,\\n        uint256 batchSize\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\\n     * - When `from` is zero, the tokens were minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens were burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 firstTokenId,\\n        uint256 batchSize\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Unsafe write access to the balances, used by extensions that \\\"mint\\\" tokens using an {ownerOf} override.\\n     *\\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\\n     * that `ownerOf(tokenId)` is `a`.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\\n        _balances[account] += amount;\\n    }\\n}\\n\",\"keccak256\":\"0x1e854874c68bec05be100dc0092cb5fbbc71253d370ae98ddef248bbfc3fe118\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":338,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":340,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":344,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":348,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":352,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":358,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Required interface of an ERC721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.","kind":"dev","methods":{"onERC721Received(address,address,uint256,bytes)":{"details":"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."}},"title":"ERC721 token receiver interface","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ERC721URIStorage":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"ERC721 token with storage based token URI management.","kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.2) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner or approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _ownerOf(tokenId) != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\\n\\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        unchecked {\\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\\n            // Given that tokens are minted one by one, it is impossible in practice that\\n            // this ever happens. Might change if we allow batch minting.\\n            // The ERC fails to describe this case.\\n            _balances[to] += 1;\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\\n\\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\\n        owner = ERC721.ownerOf(tokenId);\\n\\n        // Clear approvals\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // Cannot overflow, as that would require more tokens to be burned/transferred\\n            // out than the owner initially received through minting and transferring in.\\n            _balances[owner] -= 1;\\n        }\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId, 1);\\n\\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n\\n        // Clear approvals from the previous owner\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\\n            // `from`'s balance is the number of token held, which is at least one before the current\\n            // transfer.\\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\\n            // all 2**256 token ids to be minted, which in practice is impossible.\\n            _balances[from] -= 1;\\n            _balances[to] += 1;\\n        }\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\\n     * - When `from` is zero, the tokens will be minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 firstTokenId,\\n        uint256 batchSize\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\\n     * - When `from` is zero, the tokens were minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens were burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 firstTokenId,\\n        uint256 batchSize\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Unsafe write access to the balances, used by extensions that \\\"mint\\\" tokens using an {ownerOf} override.\\n     *\\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\\n     * that `ownerOf(tokenId)` is `a`.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\\n        _balances[account] += amount;\\n    }\\n}\\n\",\"keccak256\":\"0x1e854874c68bec05be100dc0092cb5fbbc71253d370ae98ddef248bbfc3fe118\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/extensions/ERC721URIStorage.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\n\\n/**\\n * @dev ERC721 token with storage based token URI management.\\n */\\nabstract contract ERC721URIStorage is ERC721 {\\n    using Strings for uint256;\\n\\n    // Optional mapping for token URIs\\n    mapping(uint256 => string) private _tokenURIs;\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory _tokenURI = _tokenURIs[tokenId];\\n        string memory base = _baseURI();\\n\\n        // If there is no base URI, return the token URI.\\n        if (bytes(base).length == 0) {\\n            return _tokenURI;\\n        }\\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\\n        if (bytes(_tokenURI).length > 0) {\\n            return string(abi.encodePacked(base, _tokenURI));\\n        }\\n\\n        return super.tokenURI(tokenId);\\n    }\\n\\n    /**\\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\\n        require(_exists(tokenId), \\\"ERC721URIStorage: URI set of nonexistent token\\\");\\n        _tokenURIs[tokenId] = _tokenURI;\\n    }\\n\\n    /**\\n     * @dev See {ERC721-_burn}. This override additionally checks to see if a\\n     * token-specific URI was set for the token, and if so, it deletes the token URI from\\n     * the storage mapping.\\n     */\\n    function _burn(uint256 tokenId) internal virtual override {\\n        super._burn(tokenId);\\n\\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\\n            delete _tokenURIs[tokenId];\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5c3501c1b70fcfc64417e9da5cc6a3597191baa354781e508e1e14cc0e50a038\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":338,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":340,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":344,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":348,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":352,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":358,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":1386,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_tokenURIs","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_string_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_string_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => string)","numberOfBytes":"32","value":"t_string_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-721","kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"name()":{"details":"Returns the token collection name."},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"symbol()":{"details":"Returns the token collection symbol."},"tokenURI(uint256)":{"details":"Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"ERC-721 Non-Fungible Token Standard, optional metadata extension","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122080fee02d62f18fb661f56930df7c1f126654f6b3a78ce5cc32cdcb32151203fd64736f6c63430008070033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 INVALID 0xE0 0x2D PUSH3 0xF18FB6 PUSH2 0xF569 ADDRESS 0xDF PUSH29 0x1F126654F6B3A78CE5CC32CDCB32151203FD64736F6C63430008070033 ","sourceMap":"194:8964:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122080fee02d62f18fb661f56930df7c1f126654f6b3a78ce5cc32cdcb32151203fd64736f6c63430008070033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 INVALID 0xE0 0x2D PUSH3 0xF18FB6 PUSH2 0xF569 ADDRESS 0xDF PUSH29 0x1F126654F6B3A78CE5CC32CDCB32151203FD64736F6C63430008070033 ","sourceMap":"194:8964:9:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204e54bbe508058abc16ba9ab18b15d60304dcfbec11b06791a21ce393f6c77ed564736f6c63430008070033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E SLOAD 0xBB 0xE5 ADDMOD SDIV DUP11 0xBC AND 0xBA SWAP11 0xB1 DUP12 ISZERO 0xD6 SUB DIV 0xDC 0xFB 0xEC GT 0xB0 PUSH8 0x91A21CE393F6C77E 0xD5 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"188:2065:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204e54bbe508058abc16ba9ab18b15d60304dcfbec11b06791a21ce393f6c77ed564736f6c63430008070033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E SLOAD 0xBB 0xE5 ADDMOD SDIV DUP11 0xBC AND 0xBA SWAP11 0xB1 DUP12 ISZERO 0xD6 SUB DIV 0xDC 0xFB 0xEC GT 0xB0 PUSH8 0x91A21CE393F6C77E 0xD5 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"188:2065:11:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"toHexString(address)":"infinite","toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"devdoc":{"details":"Standard math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220adc8bca8ac6496ed9b3beb6b4c3a022305dad7b59bb328b83de1bdab7925719c64736f6c63430008070033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD 0xC8 0xBC 0xA8 0xAC PUSH5 0x96ED9B3BEB PUSH12 0x4C3A022305DAD7B59BB328B8 RETURNDATASIZE 0xE1 0xBD 0xAB PUSH26 0x25719C64736F6C63430008070033000000000000000000000000 ","sourceMap":"202:12302:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220adc8bca8ac6496ed9b3beb6b4c3a022305dad7b59bb328b83de1bdab7925719c64736f6c63430008070033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD 0xC8 0xBC 0xA8 0xAC PUSH5 0x96ED9B3BEB PUSH12 0x4C3A022305DAD7B59BB328B8 RETURNDATASIZE 0xE1 0xBD 0xAB PUSH26 0x25719C64736F6C63430008070033000000000000000000000000 ","sourceMap":"202:12302:14:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"average(uint256,uint256)":"infinite","ceilDiv(uint256,uint256)":"infinite","log10(uint256)":"infinite","log10(uint256,enum Math.Rounding)":"infinite","log2(uint256)":"infinite","log2(uint256,enum Math.Rounding)":"infinite","log256(uint256)":"infinite","log256(uint256,enum Math.Rounding)":"infinite","max(uint256,uint256)":"infinite","min(uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256,enum Math.Rounding)":"infinite","sqrt(uint256)":"infinite","sqrt(uint256,enum Math.Rounding)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Characters.sol":{"Characters":{"abi":[{"inputs":[{"internalType":"string[]","name":"tokenUriNormal","type":"string[]"},{"internalType":"uint256[][]","name":"normalStats","type":"uint256[][]"},{"internalType":"string[]","name":"tokenUriRare","type":"string[]"},{"internalType":"uint256[][]","name":"statsRare","type":"uint256[][]"},{"internalType":"string[]","name":"tokenUriLegendary","type":"string[]"},{"internalType":"uint256[][]","name":"statsLegendary","type":"uint256[][]"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"legendaryPersons","outputs":[{"internalType":"string","name":"tokenUri","type":"string"},{"internalType":"uint256","name":"attack","type":"uint256"},{"internalType":"uint256","name":"defence","type":"uint256"},{"internalType":"uint256","name":"tactics","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"legendaryPersonsLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"normalPersons","outputs":[{"internalType":"string","name":"tokenUri","type":"string"},{"internalType":"uint256","name":"attack","type":"uint256"},{"internalType":"uint256","name":"defence","type":"uint256"},{"internalType":"uint256","name":"tactics","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"normalPersonsLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"rarePersons","outputs":[{"internalType":"string","name":"tokenUri","type":"string"},{"internalType":"uint256","name":"attack","type":"uint256"},{"internalType":"uint256","name":"defence","type":"uint256"},{"internalType":"uint256","name":"tactics","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rarePersonsLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_3115":{"entryPoint":null,"id":3115,"parameterSlots":6,"returnSlots":0},"abi_decode_available_length_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_fromMemory":{"entryPoint":1386,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory":{"entryPoint":1542,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory":{"entryPoint":1698,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":1821,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_fromMemory":{"entryPoint":1896,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory":{"entryPoint":1947,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory":{"entryPoint":1998,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":2049,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":2100,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptrt_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptrt_array$_t_string_memory_ptr_$dyn_memory_ptrt_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptrt_array$_t_string_memory_ptr_$dyn_memory_ptrt_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_fromMemory":{"entryPoint":2123,"id":null,"parameterSlots":2,"returnSlots":6},"allocate_memory":{"entryPoint":2465,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":2496,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr":{"entryPoint":2506,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":2553,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":2600,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":2647,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2701,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":2711,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":2765,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":2819,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":2873,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":2951,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":2998,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":3045,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3092,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":3139,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":3144,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":3149,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":3154,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3159,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":3164,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_uint256":{"entryPoint":3181,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:11980:18","statements":[{"body":{"nodeType":"YulBlock","src":"164:879:18","statements":[{"nodeType":"YulAssignment","src":"174:115:18","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"281:6:18"}],"functionName":{"name":"array_allocation_size_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"199:81:18"},"nodeType":"YulFunctionCall","src":"199:89:18"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"183:15:18"},"nodeType":"YulFunctionCall","src":"183:106:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"174:5:18"}]},{"nodeType":"YulVariableDeclaration","src":"298:16:18","value":{"name":"array","nodeType":"YulIdentifier","src":"309:5:18"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"302:3:18","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"331:5:18"},{"name":"length","nodeType":"YulIdentifier","src":"338:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"324:6:18"},"nodeType":"YulFunctionCall","src":"324:21:18"},"nodeType":"YulExpressionStatement","src":"324:21:18"},{"nodeType":"YulAssignment","src":"354:23:18","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"365:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"372:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"361:3:18"},"nodeType":"YulFunctionCall","src":"361:16:18"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"354:3:18"}]},{"nodeType":"YulVariableDeclaration","src":"387:17:18","value":{"name":"offset","nodeType":"YulIdentifier","src":"398:6:18"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"391:3:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"453:103:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"467:77:18"},"nodeType":"YulFunctionCall","src":"467:79:18"},"nodeType":"YulExpressionStatement","src":"467:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"423:3:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"432:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"440:4:18","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"428:3:18"},"nodeType":"YulFunctionCall","src":"428:17:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"419:3:18"},"nodeType":"YulFunctionCall","src":"419:27:18"},{"name":"end","nodeType":"YulIdentifier","src":"448:3:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"416:2:18"},"nodeType":"YulFunctionCall","src":"416:36:18"},"nodeType":"YulIf","src":"413:143:18"},{"body":{"nodeType":"YulBlock","src":"625:412:18","statements":[{"nodeType":"YulVariableDeclaration","src":"640:29:18","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"665:3:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"659:5:18"},"nodeType":"YulFunctionCall","src":"659:10:18"},"variables":[{"name":"innerOffset","nodeType":"YulTypedName","src":"644:11:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"721:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"723:77:18"},"nodeType":"YulFunctionCall","src":"723:79:18"},"nodeType":"YulExpressionStatement","src":"723:79:18"}]},"condition":{"arguments":[{"name":"innerOffset","nodeType":"YulIdentifier","src":"688:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"701:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"685:2:18"},"nodeType":"YulFunctionCall","src":"685:35:18"},"nodeType":"YulIf","src":"682:122:18"},{"nodeType":"YulVariableDeclaration","src":"817:42:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"839:6:18"},{"name":"innerOffset","nodeType":"YulIdentifier","src":"847:11:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"835:3:18"},"nodeType":"YulFunctionCall","src":"835:24:18"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"821:10:18","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"880:3:18"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"942:10:18"},{"name":"end","nodeType":"YulIdentifier","src":"954:3:18"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"885:56:18"},"nodeType":"YulFunctionCall","src":"885:73:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"873:6:18"},"nodeType":"YulFunctionCall","src":"873:86:18"},"nodeType":"YulExpressionStatement","src":"873:86:18"},{"nodeType":"YulAssignment","src":"972:21:18","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"983:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"988:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:18"},"nodeType":"YulFunctionCall","src":"979:14:18"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"972:3:18"}]},{"nodeType":"YulAssignment","src":"1006:21:18","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1017:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"1022:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1013:3:18"},"nodeType":"YulFunctionCall","src":"1013:14:18"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"1006:3:18"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"587:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"590:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"584:2:18"},"nodeType":"YulFunctionCall","src":"584:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"598:18:18","statements":[{"nodeType":"YulAssignment","src":"600:14:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"609:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"612:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"605:3:18"},"nodeType":"YulFunctionCall","src":"605:9:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"600:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"569:14:18","statements":[{"nodeType":"YulVariableDeclaration","src":"571:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"580:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"575:1:18","type":""}]}]},"src":"565:472:18"}]},"name":"abi_decode_available_length_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"134:6:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"142:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"150:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"158:5:18","type":""}],"src":"26:1017:18"},{"body":{"nodeType":"YulBlock","src":"1188:849:18","statements":[{"nodeType":"YulAssignment","src":"1198:100:18","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1290:6:18"}],"functionName":{"name":"array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"1223:66:18"},"nodeType":"YulFunctionCall","src":"1223:74:18"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1207:15:18"},"nodeType":"YulFunctionCall","src":"1207:91:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1198:5:18"}]},{"nodeType":"YulVariableDeclaration","src":"1307:16:18","value":{"name":"array","nodeType":"YulIdentifier","src":"1318:5:18"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"1311:3:18","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1340:5:18"},{"name":"length","nodeType":"YulIdentifier","src":"1347:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1333:6:18"},"nodeType":"YulFunctionCall","src":"1333:21:18"},"nodeType":"YulExpressionStatement","src":"1333:21:18"},{"nodeType":"YulAssignment","src":"1363:23:18","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1374:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"1381:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1370:3:18"},"nodeType":"YulFunctionCall","src":"1370:16:18"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"1363:3:18"}]},{"nodeType":"YulVariableDeclaration","src":"1396:17:18","value":{"name":"offset","nodeType":"YulIdentifier","src":"1407:6:18"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"1400:3:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"1462:103:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"1476:77:18"},"nodeType":"YulFunctionCall","src":"1476:79:18"},"nodeType":"YulExpressionStatement","src":"1476:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1432:3:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1441:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"1449:4:18","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1437:3:18"},"nodeType":"YulFunctionCall","src":"1437:17:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1428:3:18"},"nodeType":"YulFunctionCall","src":"1428:27:18"},{"name":"end","nodeType":"YulIdentifier","src":"1457:3:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1425:2:18"},"nodeType":"YulFunctionCall","src":"1425:36:18"},"nodeType":"YulIf","src":"1422:143:18"},{"body":{"nodeType":"YulBlock","src":"1634:397:18","statements":[{"nodeType":"YulVariableDeclaration","src":"1649:29:18","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1674:3:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1668:5:18"},"nodeType":"YulFunctionCall","src":"1668:10:18"},"variables":[{"name":"innerOffset","nodeType":"YulTypedName","src":"1653:11:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"1730:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"1732:77:18"},"nodeType":"YulFunctionCall","src":"1732:79:18"},"nodeType":"YulExpressionStatement","src":"1732:79:18"}]},"condition":{"arguments":[{"name":"innerOffset","nodeType":"YulIdentifier","src":"1697:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"1710:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1694:2:18"},"nodeType":"YulFunctionCall","src":"1694:35:18"},"nodeType":"YulIf","src":"1691:122:18"},{"nodeType":"YulVariableDeclaration","src":"1826:42:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1848:6:18"},{"name":"innerOffset","nodeType":"YulIdentifier","src":"1856:11:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1844:3:18"},"nodeType":"YulFunctionCall","src":"1844:24:18"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"1830:10:18","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1889:3:18"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"1936:10:18"},{"name":"end","nodeType":"YulIdentifier","src":"1948:3:18"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"1894:41:18"},"nodeType":"YulFunctionCall","src":"1894:58:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1882:6:18"},"nodeType":"YulFunctionCall","src":"1882:71:18"},"nodeType":"YulExpressionStatement","src":"1882:71:18"},{"nodeType":"YulAssignment","src":"1966:21:18","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1977:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"1982:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1973:3:18"},"nodeType":"YulFunctionCall","src":"1973:14:18"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"1966:3:18"}]},{"nodeType":"YulAssignment","src":"2000:21:18","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2011:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"2016:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2007:3:18"},"nodeType":"YulFunctionCall","src":"2007:14:18"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"2000:3:18"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1596:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"1599:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1593:2:18"},"nodeType":"YulFunctionCall","src":"1593:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1607:18:18","statements":[{"nodeType":"YulAssignment","src":"1609:14:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1618:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"1621:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1614:3:18"},"nodeType":"YulFunctionCall","src":"1614:9:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1609:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"1578:14:18","statements":[{"nodeType":"YulVariableDeclaration","src":"1580:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"1589:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1584:1:18","type":""}]}]},"src":"1574:457:18"}]},"name":"abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1158:6:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"1166:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"1174:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1182:5:18","type":""}],"src":"1065:972:18"},{"body":{"nodeType":"YulBlock","src":"2173:631:18","statements":[{"nodeType":"YulAssignment","src":"2183:90:18","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2265:6:18"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"2208:56:18"},"nodeType":"YulFunctionCall","src":"2208:64:18"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2192:15:18"},"nodeType":"YulFunctionCall","src":"2192:81:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2183:5:18"}]},{"nodeType":"YulVariableDeclaration","src":"2282:16:18","value":{"name":"array","nodeType":"YulIdentifier","src":"2293:5:18"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2286:3:18","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2315:5:18"},{"name":"length","nodeType":"YulIdentifier","src":"2322:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2308:6:18"},"nodeType":"YulFunctionCall","src":"2308:21:18"},"nodeType":"YulExpressionStatement","src":"2308:21:18"},{"nodeType":"YulAssignment","src":"2338:23:18","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2349:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"2356:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2345:3:18"},"nodeType":"YulFunctionCall","src":"2345:16:18"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"2338:3:18"}]},{"nodeType":"YulVariableDeclaration","src":"2371:17:18","value":{"name":"offset","nodeType":"YulIdentifier","src":"2382:6:18"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"2375:3:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"2437:103:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"2451:77:18"},"nodeType":"YulFunctionCall","src":"2451:79:18"},"nodeType":"YulExpressionStatement","src":"2451:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2407:3:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2416:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"2424:4:18","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2412:3:18"},"nodeType":"YulFunctionCall","src":"2412:17:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2403:3:18"},"nodeType":"YulFunctionCall","src":"2403:27:18"},{"name":"end","nodeType":"YulIdentifier","src":"2432:3:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2400:2:18"},"nodeType":"YulFunctionCall","src":"2400:36:18"},"nodeType":"YulIf","src":"2397:143:18"},{"body":{"nodeType":"YulBlock","src":"2609:189:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2624:21:18","value":{"name":"src","nodeType":"YulIdentifier","src":"2642:3:18"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"2628:10:18","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2666:3:18"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"2703:10:18"},{"name":"end","nodeType":"YulIdentifier","src":"2715:3:18"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"2671:31:18"},"nodeType":"YulFunctionCall","src":"2671:48:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2659:6:18"},"nodeType":"YulFunctionCall","src":"2659:61:18"},"nodeType":"YulExpressionStatement","src":"2659:61:18"},{"nodeType":"YulAssignment","src":"2733:21:18","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2744:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"2749:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2740:3:18"},"nodeType":"YulFunctionCall","src":"2740:14:18"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"2733:3:18"}]},{"nodeType":"YulAssignment","src":"2767:21:18","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2778:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"2783:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2774:3:18"},"nodeType":"YulFunctionCall","src":"2774:14:18"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"2767:3:18"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2571:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"2574:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2568:2:18"},"nodeType":"YulFunctionCall","src":"2568:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2582:18:18","statements":[{"nodeType":"YulAssignment","src":"2584:14:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2593:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"2596:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2589:3:18"},"nodeType":"YulFunctionCall","src":"2589:9:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2584:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"2553:14:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2555:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"2564:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2559:1:18","type":""}]}]},"src":"2549:249:18"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2143:6:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"2151:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"2159:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2167:5:18","type":""}],"src":"2060:744:18"},{"body":{"nodeType":"YulBlock","src":"2905:326:18","statements":[{"nodeType":"YulAssignment","src":"2915:75:18","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2982:6:18"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2940:41:18"},"nodeType":"YulFunctionCall","src":"2940:49:18"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2924:15:18"},"nodeType":"YulFunctionCall","src":"2924:66:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2915:5:18"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3006:5:18"},{"name":"length","nodeType":"YulIdentifier","src":"3013:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2999:6:18"},"nodeType":"YulFunctionCall","src":"2999:21:18"},"nodeType":"YulExpressionStatement","src":"2999:21:18"},{"nodeType":"YulVariableDeclaration","src":"3029:27:18","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3044:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"3051:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3040:3:18"},"nodeType":"YulFunctionCall","src":"3040:16:18"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"3033:3:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"3094:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"3096:77:18"},"nodeType":"YulFunctionCall","src":"3096:79:18"},"nodeType":"YulExpressionStatement","src":"3096:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3075:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"3080:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3071:3:18"},"nodeType":"YulFunctionCall","src":"3071:16:18"},{"name":"end","nodeType":"YulIdentifier","src":"3089:3:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3068:2:18"},"nodeType":"YulFunctionCall","src":"3068:25:18"},"nodeType":"YulIf","src":"3065:112:18"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3208:3:18"},{"name":"dst","nodeType":"YulIdentifier","src":"3213:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"3218:6:18"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"3186:21:18"},"nodeType":"YulFunctionCall","src":"3186:39:18"},"nodeType":"YulExpressionStatement","src":"3186:39:18"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2878:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"2883:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"2891:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2899:5:18","type":""}],"src":"2810:421:18"},{"body":{"nodeType":"YulBlock","src":"3369:322:18","statements":[{"body":{"nodeType":"YulBlock","src":"3418:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"3420:77:18"},"nodeType":"YulFunctionCall","src":"3420:79:18"},"nodeType":"YulExpressionStatement","src":"3420:79:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3397:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"3405:4:18","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3393:3:18"},"nodeType":"YulFunctionCall","src":"3393:17:18"},{"name":"end","nodeType":"YulIdentifier","src":"3412:3:18"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3389:3:18"},"nodeType":"YulFunctionCall","src":"3389:27:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3382:6:18"},"nodeType":"YulFunctionCall","src":"3382:35:18"},"nodeType":"YulIf","src":"3379:122:18"},{"nodeType":"YulVariableDeclaration","src":"3510:27:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3530:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3524:5:18"},"nodeType":"YulFunctionCall","src":"3524:13:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3514:6:18","type":""}]},{"nodeType":"YulAssignment","src":"3546:139:18","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3658:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"3666:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3654:3:18"},"nodeType":"YulFunctionCall","src":"3654:17:18"},{"name":"length","nodeType":"YulIdentifier","src":"3673:6:18"},{"name":"end","nodeType":"YulIdentifier","src":"3681:3:18"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3555:98:18"},"nodeType":"YulFunctionCall","src":"3555:130:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3546:5:18"}]}]},"name":"abi_decode_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3347:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"3355:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3363:5:18","type":""}],"src":"3256:435:18"},{"body":{"nodeType":"YulBlock","src":"3811:307:18","statements":[{"body":{"nodeType":"YulBlock","src":"3860:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"3862:77:18"},"nodeType":"YulFunctionCall","src":"3862:79:18"},"nodeType":"YulExpressionStatement","src":"3862:79:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3839:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"3847:4:18","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3835:3:18"},"nodeType":"YulFunctionCall","src":"3835:17:18"},{"name":"end","nodeType":"YulIdentifier","src":"3854:3:18"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3831:3:18"},"nodeType":"YulFunctionCall","src":"3831:27:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3824:6:18"},"nodeType":"YulFunctionCall","src":"3824:35:18"},"nodeType":"YulIf","src":"3821:122:18"},{"nodeType":"YulVariableDeclaration","src":"3952:27:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3972:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3966:5:18"},"nodeType":"YulFunctionCall","src":"3966:13:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3956:6:18","type":""}]},{"nodeType":"YulAssignment","src":"3988:124:18","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4085:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"4093:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4081:3:18"},"nodeType":"YulFunctionCall","src":"4081:17:18"},{"name":"length","nodeType":"YulIdentifier","src":"4100:6:18"},{"name":"end","nodeType":"YulIdentifier","src":"4108:3:18"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3997:83:18"},"nodeType":"YulFunctionCall","src":"3997:115:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3988:5:18"}]}]},"name":"abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3789:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"3797:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3805:5:18","type":""}],"src":"3713:405:18"},{"body":{"nodeType":"YulBlock","src":"4229:297:18","statements":[{"body":{"nodeType":"YulBlock","src":"4278:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"4280:77:18"},"nodeType":"YulFunctionCall","src":"4280:79:18"},"nodeType":"YulExpressionStatement","src":"4280:79:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4257:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"4265:4:18","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4253:3:18"},"nodeType":"YulFunctionCall","src":"4253:17:18"},{"name":"end","nodeType":"YulIdentifier","src":"4272:3:18"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4249:3:18"},"nodeType":"YulFunctionCall","src":"4249:27:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4242:6:18"},"nodeType":"YulFunctionCall","src":"4242:35:18"},"nodeType":"YulIf","src":"4239:122:18"},{"nodeType":"YulVariableDeclaration","src":"4370:27:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4390:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4384:5:18"},"nodeType":"YulFunctionCall","src":"4384:13:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4374:6:18","type":""}]},{"nodeType":"YulAssignment","src":"4406:114:18","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4493:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"4501:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4489:3:18"},"nodeType":"YulFunctionCall","src":"4489:17:18"},{"name":"length","nodeType":"YulIdentifier","src":"4508:6:18"},{"name":"end","nodeType":"YulIdentifier","src":"4516:3:18"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"4415:73:18"},"nodeType":"YulFunctionCall","src":"4415:105:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4406:5:18"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4207:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"4215:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4223:5:18","type":""}],"src":"4141:385:18"},{"body":{"nodeType":"YulBlock","src":"4619:282:18","statements":[{"body":{"nodeType":"YulBlock","src":"4668:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"4670:77:18"},"nodeType":"YulFunctionCall","src":"4670:79:18"},"nodeType":"YulExpressionStatement","src":"4670:79:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4647:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"4655:4:18","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4643:3:18"},"nodeType":"YulFunctionCall","src":"4643:17:18"},{"name":"end","nodeType":"YulIdentifier","src":"4662:3:18"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4639:3:18"},"nodeType":"YulFunctionCall","src":"4639:27:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4632:6:18"},"nodeType":"YulFunctionCall","src":"4632:35:18"},"nodeType":"YulIf","src":"4629:122:18"},{"nodeType":"YulVariableDeclaration","src":"4760:27:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4780:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4774:5:18"},"nodeType":"YulFunctionCall","src":"4774:13:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4764:6:18","type":""}]},{"nodeType":"YulAssignment","src":"4796:99:18","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4868:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"4876:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4864:3:18"},"nodeType":"YulFunctionCall","src":"4864:17:18"},{"name":"length","nodeType":"YulIdentifier","src":"4883:6:18"},{"name":"end","nodeType":"YulIdentifier","src":"4891:3:18"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"4805:58:18"},"nodeType":"YulFunctionCall","src":"4805:90:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4796:5:18"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4597:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"4605:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4613:5:18","type":""}],"src":"4546:355:18"},{"body":{"nodeType":"YulBlock","src":"4970:80:18","statements":[{"nodeType":"YulAssignment","src":"4980:22:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4995:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4989:5:18"},"nodeType":"YulFunctionCall","src":"4989:13:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4980:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5038:5:18"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"5011:26:18"},"nodeType":"YulFunctionCall","src":"5011:33:18"},"nodeType":"YulExpressionStatement","src":"5011:33:18"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4948:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"4956:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4964:5:18","type":""}],"src":"4907:143:18"},{"body":{"nodeType":"YulBlock","src":"5473:2145:18","statements":[{"body":{"nodeType":"YulBlock","src":"5520:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5522:77:18"},"nodeType":"YulFunctionCall","src":"5522:79:18"},"nodeType":"YulExpressionStatement","src":"5522:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5494:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"5503:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5490:3:18"},"nodeType":"YulFunctionCall","src":"5490:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"5515:3:18","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5486:3:18"},"nodeType":"YulFunctionCall","src":"5486:33:18"},"nodeType":"YulIf","src":"5483:120:18"},{"nodeType":"YulBlock","src":"5613:316:18","statements":[{"nodeType":"YulVariableDeclaration","src":"5628:38:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5652:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5663:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5648:3:18"},"nodeType":"YulFunctionCall","src":"5648:17:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5642:5:18"},"nodeType":"YulFunctionCall","src":"5642:24:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5632:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"5713:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"5715:77:18"},"nodeType":"YulFunctionCall","src":"5715:79:18"},"nodeType":"YulExpressionStatement","src":"5715:79:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5685:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"5693:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5682:2:18"},"nodeType":"YulFunctionCall","src":"5682:30:18"},"nodeType":"YulIf","src":"5679:117:18"},{"nodeType":"YulAssignment","src":"5810:109:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5891:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"5902:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5887:3:18"},"nodeType":"YulFunctionCall","src":"5887:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5911:7:18"}],"functionName":{"name":"abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"5820:66:18"},"nodeType":"YulFunctionCall","src":"5820:99:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5810:6:18"}]}]},{"nodeType":"YulBlock","src":"5939:332:18","statements":[{"nodeType":"YulVariableDeclaration","src":"5954:39:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5978:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5989:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5974:3:18"},"nodeType":"YulFunctionCall","src":"5974:18:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5968:5:18"},"nodeType":"YulFunctionCall","src":"5968:25:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5958:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"6040:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"6042:77:18"},"nodeType":"YulFunctionCall","src":"6042:79:18"},"nodeType":"YulExpressionStatement","src":"6042:79:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6012:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"6020:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6009:2:18"},"nodeType":"YulFunctionCall","src":"6009:30:18"},"nodeType":"YulIf","src":"6006:117:18"},{"nodeType":"YulAssignment","src":"6137:124:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6233:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"6244:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6229:3:18"},"nodeType":"YulFunctionCall","src":"6229:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6253:7:18"}],"functionName":{"name":"abi_decode_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"6147:81:18"},"nodeType":"YulFunctionCall","src":"6147:114:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6137:6:18"}]}]},{"nodeType":"YulBlock","src":"6281:317:18","statements":[{"nodeType":"YulVariableDeclaration","src":"6296:39:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6320:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6331:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6316:3:18"},"nodeType":"YulFunctionCall","src":"6316:18:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6310:5:18"},"nodeType":"YulFunctionCall","src":"6310:25:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6300:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"6382:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"6384:77:18"},"nodeType":"YulFunctionCall","src":"6384:79:18"},"nodeType":"YulExpressionStatement","src":"6384:79:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6354:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"6362:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6351:2:18"},"nodeType":"YulFunctionCall","src":"6351:30:18"},"nodeType":"YulIf","src":"6348:117:18"},{"nodeType":"YulAssignment","src":"6479:109:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6560:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"6571:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6556:3:18"},"nodeType":"YulFunctionCall","src":"6556:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6580:7:18"}],"functionName":{"name":"abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"6489:66:18"},"nodeType":"YulFunctionCall","src":"6489:99:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6479:6:18"}]}]},{"nodeType":"YulBlock","src":"6608:332:18","statements":[{"nodeType":"YulVariableDeclaration","src":"6623:39:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6647:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6658:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6643:3:18"},"nodeType":"YulFunctionCall","src":"6643:18:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6637:5:18"},"nodeType":"YulFunctionCall","src":"6637:25:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6627:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"6709:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"6711:77:18"},"nodeType":"YulFunctionCall","src":"6711:79:18"},"nodeType":"YulExpressionStatement","src":"6711:79:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6681:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"6689:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6678:2:18"},"nodeType":"YulFunctionCall","src":"6678:30:18"},"nodeType":"YulIf","src":"6675:117:18"},{"nodeType":"YulAssignment","src":"6806:124:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6902:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"6913:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6898:3:18"},"nodeType":"YulFunctionCall","src":"6898:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6922:7:18"}],"functionName":{"name":"abi_decode_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"6816:81:18"},"nodeType":"YulFunctionCall","src":"6816:114:18"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"6806:6:18"}]}]},{"nodeType":"YulBlock","src":"6950:318:18","statements":[{"nodeType":"YulVariableDeclaration","src":"6965:40:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6989:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7000:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6985:3:18"},"nodeType":"YulFunctionCall","src":"6985:19:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6979:5:18"},"nodeType":"YulFunctionCall","src":"6979:26:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6969:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"7052:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7054:77:18"},"nodeType":"YulFunctionCall","src":"7054:79:18"},"nodeType":"YulExpressionStatement","src":"7054:79:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7024:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"7032:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7021:2:18"},"nodeType":"YulFunctionCall","src":"7021:30:18"},"nodeType":"YulIf","src":"7018:117:18"},{"nodeType":"YulAssignment","src":"7149:109:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7230:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"7241:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7226:3:18"},"nodeType":"YulFunctionCall","src":"7226:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7250:7:18"}],"functionName":{"name":"abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"7159:66:18"},"nodeType":"YulFunctionCall","src":"7159:99:18"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"7149:6:18"}]}]},{"nodeType":"YulBlock","src":"7278:333:18","statements":[{"nodeType":"YulVariableDeclaration","src":"7293:40:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7317:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7328:3:18","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7313:3:18"},"nodeType":"YulFunctionCall","src":"7313:19:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7307:5:18"},"nodeType":"YulFunctionCall","src":"7307:26:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7297:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"7380:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7382:77:18"},"nodeType":"YulFunctionCall","src":"7382:79:18"},"nodeType":"YulExpressionStatement","src":"7382:79:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7352:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"7360:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7349:2:18"},"nodeType":"YulFunctionCall","src":"7349:30:18"},"nodeType":"YulIf","src":"7346:117:18"},{"nodeType":"YulAssignment","src":"7477:124:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7573:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"7584:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7569:3:18"},"nodeType":"YulFunctionCall","src":"7569:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7593:7:18"}],"functionName":{"name":"abi_decode_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"7487:81:18"},"nodeType":"YulFunctionCall","src":"7487:114:18"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"7477:6:18"}]}]}]},"name":"abi_decode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptrt_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptrt_array$_t_string_memory_ptr_$dyn_memory_ptrt_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptrt_array$_t_string_memory_ptr_$dyn_memory_ptrt_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5403:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5414:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5426:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5434:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5442:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5450:6:18","type":""},{"name":"value4","nodeType":"YulTypedName","src":"5458:6:18","type":""},{"name":"value5","nodeType":"YulTypedName","src":"5466:6:18","type":""}],"src":"5056:2562:18"},{"body":{"nodeType":"YulBlock","src":"7665:88:18","statements":[{"nodeType":"YulAssignment","src":"7675:30:18","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"7685:18:18"},"nodeType":"YulFunctionCall","src":"7685:20:18"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7675:6:18"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7734:6:18"},{"name":"size","nodeType":"YulIdentifier","src":"7742:4:18"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"7714:19:18"},"nodeType":"YulFunctionCall","src":"7714:33:18"},"nodeType":"YulExpressionStatement","src":"7714:33:18"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"7649:4:18","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"7658:6:18","type":""}],"src":"7624:129:18"},{"body":{"nodeType":"YulBlock","src":"7799:35:18","statements":[{"nodeType":"YulAssignment","src":"7809:19:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7825:2:18","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7819:5:18"},"nodeType":"YulFunctionCall","src":"7819:9:18"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7809:6:18"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"7792:6:18","type":""}],"src":"7759:75:18"},{"body":{"nodeType":"YulBlock","src":"7947:229:18","statements":[{"body":{"nodeType":"YulBlock","src":"8052:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8054:16:18"},"nodeType":"YulFunctionCall","src":"8054:18:18"},"nodeType":"YulExpressionStatement","src":"8054:18:18"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8024:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"8032:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8021:2:18"},"nodeType":"YulFunctionCall","src":"8021:30:18"},"nodeType":"YulIf","src":"8018:56:18"},{"nodeType":"YulAssignment","src":"8084:25:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8096:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"8104:4:18","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8092:3:18"},"nodeType":"YulFunctionCall","src":"8092:17:18"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8084:4:18"}]},{"nodeType":"YulAssignment","src":"8146:23:18","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8158:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"8164:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8154:3:18"},"nodeType":"YulFunctionCall","src":"8154:15:18"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8146:4:18"}]}]},"name":"array_allocation_size_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"7931:6:18","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"7942:4:18","type":""}],"src":"7840:336:18"},{"body":{"nodeType":"YulBlock","src":"8274:229:18","statements":[{"body":{"nodeType":"YulBlock","src":"8379:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8381:16:18"},"nodeType":"YulFunctionCall","src":"8381:18:18"},"nodeType":"YulExpressionStatement","src":"8381:18:18"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8351:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"8359:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8348:2:18"},"nodeType":"YulFunctionCall","src":"8348:30:18"},"nodeType":"YulIf","src":"8345:56:18"},{"nodeType":"YulAssignment","src":"8411:25:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8423:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"8431:4:18","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8419:3:18"},"nodeType":"YulFunctionCall","src":"8419:17:18"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8411:4:18"}]},{"nodeType":"YulAssignment","src":"8473:23:18","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8485:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"8491:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8481:3:18"},"nodeType":"YulFunctionCall","src":"8481:15:18"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8473:4:18"}]}]},"name":"array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"8258:6:18","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"8269:4:18","type":""}],"src":"8182:321:18"},{"body":{"nodeType":"YulBlock","src":"8591:229:18","statements":[{"body":{"nodeType":"YulBlock","src":"8696:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8698:16:18"},"nodeType":"YulFunctionCall","src":"8698:18:18"},"nodeType":"YulExpressionStatement","src":"8698:18:18"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8668:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"8676:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8665:2:18"},"nodeType":"YulFunctionCall","src":"8665:30:18"},"nodeType":"YulIf","src":"8662:56:18"},{"nodeType":"YulAssignment","src":"8728:25:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8740:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"8748:4:18","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8736:3:18"},"nodeType":"YulFunctionCall","src":"8736:17:18"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8728:4:18"}]},{"nodeType":"YulAssignment","src":"8790:23:18","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8802:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"8808:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8798:3:18"},"nodeType":"YulFunctionCall","src":"8798:15:18"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8790:4:18"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"8575:6:18","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"8586:4:18","type":""}],"src":"8509:311:18"},{"body":{"nodeType":"YulBlock","src":"8893:241:18","statements":[{"body":{"nodeType":"YulBlock","src":"8998:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"9000:16:18"},"nodeType":"YulFunctionCall","src":"9000:18:18"},"nodeType":"YulExpressionStatement","src":"9000:18:18"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8970:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"8978:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8967:2:18"},"nodeType":"YulFunctionCall","src":"8967:30:18"},"nodeType":"YulIf","src":"8964:56:18"},{"nodeType":"YulAssignment","src":"9030:37:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9060:6:18"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"9038:21:18"},"nodeType":"YulFunctionCall","src":"9038:29:18"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"9030:4:18"}]},{"nodeType":"YulAssignment","src":"9104:23:18","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"9116:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"9122:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9112:3:18"},"nodeType":"YulFunctionCall","src":"9112:15:18"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"9104:4:18"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"8877:6:18","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"8888:4:18","type":""}],"src":"8826:308:18"},{"body":{"nodeType":"YulBlock","src":"9185:32:18","statements":[{"nodeType":"YulAssignment","src":"9195:16:18","value":{"name":"value","nodeType":"YulIdentifier","src":"9206:5:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"9195:7:18"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9167:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"9177:7:18","type":""}],"src":"9140:77:18"},{"body":{"nodeType":"YulBlock","src":"9272:258:18","statements":[{"nodeType":"YulVariableDeclaration","src":"9282:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"9291:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"9286:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"9351:63:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9376:3:18"},{"name":"i","nodeType":"YulIdentifier","src":"9381:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9372:3:18"},"nodeType":"YulFunctionCall","src":"9372:11:18"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9395:3:18"},{"name":"i","nodeType":"YulIdentifier","src":"9400:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9391:3:18"},"nodeType":"YulFunctionCall","src":"9391:11:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9385:5:18"},"nodeType":"YulFunctionCall","src":"9385:18:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9365:6:18"},"nodeType":"YulFunctionCall","src":"9365:39:18"},"nodeType":"YulExpressionStatement","src":"9365:39:18"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9312:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"9315:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9309:2:18"},"nodeType":"YulFunctionCall","src":"9309:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9323:19:18","statements":[{"nodeType":"YulAssignment","src":"9325:15:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9334:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"9337:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9330:3:18"},"nodeType":"YulFunctionCall","src":"9330:10:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"9325:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"9305:3:18","statements":[]},"src":"9301:113:18"},{"body":{"nodeType":"YulBlock","src":"9448:76:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9498:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"9503:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9494:3:18"},"nodeType":"YulFunctionCall","src":"9494:16:18"},{"kind":"number","nodeType":"YulLiteral","src":"9512:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9487:6:18"},"nodeType":"YulFunctionCall","src":"9487:27:18"},"nodeType":"YulExpressionStatement","src":"9487:27:18"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9429:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"9432:6:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9426:2:18"},"nodeType":"YulFunctionCall","src":"9426:13:18"},"nodeType":"YulIf","src":"9423:101:18"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"9254:3:18","type":""},{"name":"dst","nodeType":"YulTypedName","src":"9259:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"9264:6:18","type":""}],"src":"9223:307:18"},{"body":{"nodeType":"YulBlock","src":"9587:269:18","statements":[{"nodeType":"YulAssignment","src":"9597:22:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9611:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"9617:1:18","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9607:3:18"},"nodeType":"YulFunctionCall","src":"9607:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"9597:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"9628:38:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9658:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"9664:1:18","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9654:3:18"},"nodeType":"YulFunctionCall","src":"9654:12:18"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"9632:18:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"9705:51:18","statements":[{"nodeType":"YulAssignment","src":"9719:27:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9733:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"9741:4:18","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9729:3:18"},"nodeType":"YulFunctionCall","src":"9729:17:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"9719:6:18"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"9685:18:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9678:6:18"},"nodeType":"YulFunctionCall","src":"9678:26:18"},"nodeType":"YulIf","src":"9675:81:18"},{"body":{"nodeType":"YulBlock","src":"9808:42:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"9822:16:18"},"nodeType":"YulFunctionCall","src":"9822:18:18"},"nodeType":"YulExpressionStatement","src":"9822:18:18"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"9772:18:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9795:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"9803:2:18","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9792:2:18"},"nodeType":"YulFunctionCall","src":"9792:14:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9769:2:18"},"nodeType":"YulFunctionCall","src":"9769:38:18"},"nodeType":"YulIf","src":"9766:84:18"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"9571:4:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"9580:6:18","type":""}],"src":"9536:320:18"},{"body":{"nodeType":"YulBlock","src":"9905:238:18","statements":[{"nodeType":"YulVariableDeclaration","src":"9915:58:18","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9937:6:18"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"9967:4:18"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"9945:21:18"},"nodeType":"YulFunctionCall","src":"9945:27:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9933:3:18"},"nodeType":"YulFunctionCall","src":"9933:40:18"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"9919:10:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"10084:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"10086:16:18"},"nodeType":"YulFunctionCall","src":"10086:18:18"},"nodeType":"YulExpressionStatement","src":"10086:18:18"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"10027:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"10039:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10024:2:18"},"nodeType":"YulFunctionCall","src":"10024:34:18"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"10063:10:18"},{"name":"memPtr","nodeType":"YulIdentifier","src":"10075:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10060:2:18"},"nodeType":"YulFunctionCall","src":"10060:22:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"10021:2:18"},"nodeType":"YulFunctionCall","src":"10021:62:18"},"nodeType":"YulIf","src":"10018:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10122:2:18","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"10126:10:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10115:6:18"},"nodeType":"YulFunctionCall","src":"10115:22:18"},"nodeType":"YulExpressionStatement","src":"10115:22:18"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9891:6:18","type":""},{"name":"size","nodeType":"YulTypedName","src":"9899:4:18","type":""}],"src":"9862:281:18"},{"body":{"nodeType":"YulBlock","src":"10192:190:18","statements":[{"nodeType":"YulAssignment","src":"10202:33:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10229:5:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10211:17:18"},"nodeType":"YulFunctionCall","src":"10211:24:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10202:5:18"}]},{"body":{"nodeType":"YulBlock","src":"10325:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"10327:16:18"},"nodeType":"YulFunctionCall","src":"10327:18:18"},"nodeType":"YulExpressionStatement","src":"10327:18:18"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10250:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"10257:66:18","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10247:2:18"},"nodeType":"YulFunctionCall","src":"10247:77:18"},"nodeType":"YulIf","src":"10244:103:18"},{"nodeType":"YulAssignment","src":"10356:20:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10367:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"10374:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10363:3:18"},"nodeType":"YulFunctionCall","src":"10363:13:18"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"10356:3:18"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10178:5:18","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"10188:3:18","type":""}],"src":"10149:233:18"},{"body":{"nodeType":"YulBlock","src":"10416:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10433:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10436:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10426:6:18"},"nodeType":"YulFunctionCall","src":"10426:88:18"},"nodeType":"YulExpressionStatement","src":"10426:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10530:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10533:4:18","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10523:6:18"},"nodeType":"YulFunctionCall","src":"10523:15:18"},"nodeType":"YulExpressionStatement","src":"10523:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10554:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10557:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10547:6:18"},"nodeType":"YulFunctionCall","src":"10547:15:18"},"nodeType":"YulExpressionStatement","src":"10547:15:18"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"10388:180:18"},{"body":{"nodeType":"YulBlock","src":"10602:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10619:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10622:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10612:6:18"},"nodeType":"YulFunctionCall","src":"10612:88:18"},"nodeType":"YulExpressionStatement","src":"10612:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10716:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10719:4:18","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10709:6:18"},"nodeType":"YulFunctionCall","src":"10709:15:18"},"nodeType":"YulExpressionStatement","src":"10709:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10740:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10743:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10733:6:18"},"nodeType":"YulFunctionCall","src":"10733:15:18"},"nodeType":"YulExpressionStatement","src":"10733:15:18"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"10574:180:18"},{"body":{"nodeType":"YulBlock","src":"10788:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10805:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10808:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10798:6:18"},"nodeType":"YulFunctionCall","src":"10798:88:18"},"nodeType":"YulExpressionStatement","src":"10798:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10902:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10905:4:18","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10895:6:18"},"nodeType":"YulFunctionCall","src":"10895:15:18"},"nodeType":"YulExpressionStatement","src":"10895:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10926:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10929:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10919:6:18"},"nodeType":"YulFunctionCall","src":"10919:15:18"},"nodeType":"YulExpressionStatement","src":"10919:15:18"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"10760:180:18"},{"body":{"nodeType":"YulBlock","src":"10974:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10991:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10994:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10984:6:18"},"nodeType":"YulFunctionCall","src":"10984:88:18"},"nodeType":"YulExpressionStatement","src":"10984:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11088:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11091:4:18","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11081:6:18"},"nodeType":"YulFunctionCall","src":"11081:15:18"},"nodeType":"YulExpressionStatement","src":"11081:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11112:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11115:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11105:6:18"},"nodeType":"YulFunctionCall","src":"11105:15:18"},"nodeType":"YulExpressionStatement","src":"11105:15:18"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"10946:180:18"},{"body":{"nodeType":"YulBlock","src":"11221:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11238:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11241:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11231:6:18"},"nodeType":"YulFunctionCall","src":"11231:12:18"},"nodeType":"YulExpressionStatement","src":"11231:12:18"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"11132:117:18"},{"body":{"nodeType":"YulBlock","src":"11344:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11361:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11364:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11354:6:18"},"nodeType":"YulFunctionCall","src":"11354:12:18"},"nodeType":"YulExpressionStatement","src":"11354:12:18"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"11255:117:18"},{"body":{"nodeType":"YulBlock","src":"11467:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11484:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11487:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11477:6:18"},"nodeType":"YulFunctionCall","src":"11477:12:18"},"nodeType":"YulExpressionStatement","src":"11477:12:18"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"11378:117:18"},{"body":{"nodeType":"YulBlock","src":"11590:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11607:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11610:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11600:6:18"},"nodeType":"YulFunctionCall","src":"11600:12:18"},"nodeType":"YulExpressionStatement","src":"11600:12:18"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"11501:117:18"},{"body":{"nodeType":"YulBlock","src":"11713:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11730:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11733:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11723:6:18"},"nodeType":"YulFunctionCall","src":"11723:12:18"},"nodeType":"YulExpressionStatement","src":"11723:12:18"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"11624:117:18"},{"body":{"nodeType":"YulBlock","src":"11795:54:18","statements":[{"nodeType":"YulAssignment","src":"11805:38:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11823:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"11830:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11819:3:18"},"nodeType":"YulFunctionCall","src":"11819:14:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11839:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11835:3:18"},"nodeType":"YulFunctionCall","src":"11835:7:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11815:3:18"},"nodeType":"YulFunctionCall","src":"11815:28:18"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"11805:6:18"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11778:5:18","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"11788:6:18","type":""}],"src":"11747:102:18"},{"body":{"nodeType":"YulBlock","src":"11898:79:18","statements":[{"body":{"nodeType":"YulBlock","src":"11955:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11964:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11967:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11957:6:18"},"nodeType":"YulFunctionCall","src":"11957:12:18"},"nodeType":"YulExpressionStatement","src":"11957:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11921:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11946:5:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11928:17:18"},"nodeType":"YulFunctionCall","src":"11928:24:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11918:2:18"},"nodeType":"YulFunctionCall","src":"11918:35:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11911:6:18"},"nodeType":"YulFunctionCall","src":"11911:43:18"},"nodeType":"YulIf","src":"11908:63:18"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11891:5:18","type":""}],"src":"11855:122:18"}]},"contents":"{\n\n    // uint256[][]\n    function abi_decode_available_length_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let innerOffset := mload(src)\n            if gt(innerOffset, 0xffffffffffffffff) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n            let elementPos := add(offset, innerOffset)\n\n            mstore(dst, abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    // string[]\n    function abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let innerOffset := mload(src)\n            if gt(innerOffset, 0xffffffffffffffff) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n            let elementPos := add(offset, innerOffset)\n\n            mstore(dst, abi_decode_t_string_memory_ptr_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // uint256[][]\n    function abi_decode_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    // string[]\n    function abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptrt_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptrt_array$_t_string_memory_ptr_$dyn_memory_ptrt_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptrt_array$_t_string_memory_ptr_$dyn_memory_ptrt_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 160))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value5 := abi_decode_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":18,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b506040516200127d3803806200127d83398181016040528101906200003791906200084b565b60005b8651811015620001b3576000604051806080016040528089848151811062000067576200006662000be5565b5b602002602001015181526020018884815181106200008a576200008962000be5565b5b6020026020010151600081518110620000a857620000a762000be5565b5b60200260200101518152602001888481518110620000cb57620000ca62000be5565b5b6020026020010151600181518110620000e957620000e862000be5565b5b602002602001015181526020018884815181106200010c576200010b62000be5565b5b60200260200101516002815181106200012a576200012962000be5565b5b6020026020010151815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000190805190602001906200017c929190620004ba565b5060208201518160010155604082015181600201556060820151816003015550508080620001aa9062000b39565b9150506200003a565b5060005b8451811015620003305760016040518060800160405280878481518110620001e457620001e362000be5565b5b6020026020010151815260200186848151811062000207576200020662000be5565b5b602002602001015160008151811062000225576200022462000be5565b5b6020026020010151815260200186848151811062000248576200024762000be5565b5b602002602001015160018151811062000266576200026562000be5565b5b6020026020010151815260200186848151811062000289576200028862000be5565b5b6020026020010151600281518110620002a757620002a662000be5565b5b602002602001015181525090806001815401808255809150506001900390600052602060002090600402016000909190919091506000820151816000019080519060200190620002f9929190620004ba565b5060208201518160010155604082015181600201556060820151816003015550508080620003279062000b39565b915050620001b7565b5060005b8251811015620004ad576002604051806080016040528085848151811062000361576200036062000be5565b5b6020026020010151815260200184848151811062000384576200038362000be5565b5b6020026020010151600081518110620003a257620003a162000be5565b5b60200260200101518152602001848481518110620003c557620003c462000be5565b5b6020026020010151600181518110620003e357620003e262000be5565b5b6020026020010151815260200184848151811062000406576200040562000be5565b5b602002602001015160028151811062000424576200042362000be5565b5b60200260200101518152509080600181540180825580915050600190039060005260206000209060040201600090919091909150600082015181600001908051906020019062000476929190620004ba565b5060208201518160010155604082015181600201556060820151816003015550508080620004a49062000b39565b91505062000334565b5050505050505062000c87565b828054620004c89062000acd565b90600052602060002090601f016020900481019282620004ec576000855562000538565b82601f106200050757805160ff191683800117855562000538565b8280016001018555821562000538579182015b82811115620005375782518255916020019190600101906200051a565b5b5090506200054791906200054b565b5090565b5b80821115620005665760008160009055506001016200054c565b5090565b6000620005816200057b84620009ca565b620009a1565b90508083825260208201905082856020860282011115620005a757620005a662000c48565b5b60005b85811015620005fc57815167ffffffffffffffff811115620005d157620005d062000c43565b5b808601620005e08982620007ce565b85526020850194506020840193505050600181019050620005aa565b5050509392505050565b60006200061d6200061784620009f9565b620009a1565b9050808382526020820190508285602086028201111562000643576200064262000c48565b5b60005b858110156200069857815167ffffffffffffffff8111156200066d576200066c62000c43565b5b8086016200067c898262000801565b8552602085019450602084019350505060018101905062000646565b5050509392505050565b6000620006b9620006b38462000a28565b620009a1565b90508083825260208201905082856020860282011115620006df57620006de62000c48565b5b60005b85811015620007135781620006f8888262000834565b845260208401935060208301925050600181019050620006e2565b5050509392505050565b6000620007346200072e8462000a57565b620009a1565b90508281526020810184848401111562000753576200075262000c4d565b5b6200076084828562000a97565b509392505050565b600082601f83011262000780576200077f62000c43565b5b8151620007928482602086016200056a565b91505092915050565b600082601f830112620007b357620007b262000c43565b5b8151620007c584826020860162000606565b91505092915050565b600082601f830112620007e657620007e562000c43565b5b8151620007f8848260208601620006a2565b91505092915050565b600082601f83011262000819576200081862000c43565b5b81516200082b8482602086016200071d565b91505092915050565b600081519050620008458162000c6d565b92915050565b60008060008060008060c087890312156200086b576200086a62000c57565b5b600087015167ffffffffffffffff8111156200088c576200088b62000c52565b5b6200089a89828a016200079b565b965050602087015167ffffffffffffffff811115620008be57620008bd62000c52565b5b620008cc89828a0162000768565b955050604087015167ffffffffffffffff811115620008f057620008ef62000c52565b5b620008fe89828a016200079b565b945050606087015167ffffffffffffffff81111562000922576200092162000c52565b5b6200093089828a0162000768565b935050608087015167ffffffffffffffff81111562000954576200095362000c52565b5b6200096289828a016200079b565b92505060a087015167ffffffffffffffff81111562000986576200098562000c52565b5b6200099489828a0162000768565b9150509295509295509295565b6000620009ad620009c0565b9050620009bb828262000b03565b919050565b6000604051905090565b600067ffffffffffffffff821115620009e857620009e762000c14565b5b602082029050602081019050919050565b600067ffffffffffffffff82111562000a175762000a1662000c14565b5b602082029050602081019050919050565b600067ffffffffffffffff82111562000a465762000a4562000c14565b5b602082029050602081019050919050565b600067ffffffffffffffff82111562000a755762000a7462000c14565b5b62000a808262000c5c565b9050602081019050919050565b6000819050919050565b60005b8381101562000ab757808201518184015260208101905062000a9a565b8381111562000ac7576000848401525b50505050565b6000600282049050600182168062000ae657607f821691505b6020821081141562000afd5762000afc62000bb6565b5b50919050565b62000b0e8262000c5c565b810181811067ffffffffffffffff8211171562000b305762000b2f62000c14565b5b80604052505050565b600062000b468262000a8d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141562000b7c5762000b7b62000b87565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b62000c788162000a8d565b811462000c8457600080fd5b50565b6105e68062000c976000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630a83de16146100675780634132607b1461008557806365c889db146100b857806371be7002146100d65780639cfa7daa146100f4578063cff2c35914610127575b600080fd5b61006f61015a565b60405161007c91906104ae565b60405180910390f35b61009f600480360381019061009a91906103ed565b610167565b6040516100af9493929190610462565b60405180910390f35b6100c061022f565b6040516100cd91906104ae565b60405180910390f35b6100de61023b565b6040516100eb91906104ae565b60405180910390f35b61010e600480360381019061010991906103ed565b610248565b60405161011e9493929190610462565b60405180910390f35b610141600480360381019061013c91906103ed565b610310565b6040516101519493929190610462565b60405180910390f35b6000600180549050905090565b6000818154811061017757600080fd5b906000526020600020906004020160009150905080600001805461019a90610522565b80601f01602080910402602001604051908101604052809291908181526020018280546101c690610522565b80156102135780601f106101e857610100808354040283529160200191610213565b820191906000526020600020905b8154815290600101906020018083116101f657829003601f168201915b5050505050908060010154908060020154908060030154905084565b60008080549050905090565b6000600280549050905090565b6002818154811061025857600080fd5b906000526020600020906004020160009150905080600001805461027b90610522565b80601f01602080910402602001604051908101604052809291908181526020018280546102a790610522565b80156102f45780601f106102c9576101008083540402835291602001916102f4565b820191906000526020600020905b8154815290600101906020018083116102d757829003601f168201915b5050505050908060010154908060020154908060030154905084565b6001818154811061032057600080fd5b906000526020600020906004020160009150905080600001805461034390610522565b80601f016020809104026020016040519081016040528092919081815260200182805461036f90610522565b80156103bc5780601f10610391576101008083540402835291602001916103bc565b820191906000526020600020905b81548152906001019060200180831161039f57829003601f168201915b5050505050908060010154908060020154908060030154905084565b6000813590506103e781610599565b92915050565b60006020828403121561040357610402610583565b5b6000610411848285016103d8565b91505092915050565b6000610425826104c9565b61042f81856104d4565b935061043f8185602086016104ef565b61044881610588565b840191505092915050565b61045c816104e5565b82525050565b6000608082019050818103600083015261047c818761041a565b905061048b6020830186610453565b6104986040830185610453565b6104a56060830184610453565b95945050505050565b60006020820190506104c36000830184610453565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050919050565b60005b8381101561050d5780820151818401526020810190506104f2565b8381111561051c576000848401525b50505050565b6000600282049050600182168061053a57607f821691505b6020821081141561054e5761054d610554565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b6105a2816104e5565b81146105ad57600080fd5b5056fea26469706673582212208ceb9f3e0dfcda2a888728e05fc37f40d65d8befa7f329de4211654ae0f4716064736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x127D CODESIZE SUB DUP1 PUSH3 0x127D DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x84B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP7 MLOAD DUP2 LT ISZERO PUSH3 0x1B3 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP10 DUP5 DUP2 MLOAD DUP2 LT PUSH3 0x67 JUMPI PUSH3 0x66 PUSH3 0xBE5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH3 0x8A JUMPI PUSH3 0x89 PUSH3 0xBE5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH3 0xA8 JUMPI PUSH3 0xA7 PUSH3 0xBE5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH3 0xCB JUMPI PUSH3 0xCA PUSH3 0xBE5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH3 0xE9 JUMPI PUSH3 0xE8 PUSH3 0xBE5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH3 0x10C JUMPI PUSH3 0x10B PUSH3 0xBE5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH3 0x12A JUMPI PUSH3 0x129 PUSH3 0xBE5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x17C SWAP3 SWAP2 SWAP1 PUSH3 0x4BA JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE POP POP DUP1 DUP1 PUSH3 0x1AA SWAP1 PUSH3 0xB39 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x3A JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH3 0x330 JUMPI PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH3 0x1E4 JUMPI PUSH3 0x1E3 PUSH3 0xBE5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH3 0x207 JUMPI PUSH3 0x206 PUSH3 0xBE5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH3 0x225 JUMPI PUSH3 0x224 PUSH3 0xBE5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH3 0x248 JUMPI PUSH3 0x247 PUSH3 0xBE5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH3 0x266 JUMPI PUSH3 0x265 PUSH3 0xBE5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH3 0x289 JUMPI PUSH3 0x288 PUSH3 0xBE5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH3 0x2A7 JUMPI PUSH3 0x2A6 PUSH3 0xBE5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x2F9 SWAP3 SWAP2 SWAP1 PUSH3 0x4BA JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE POP POP DUP1 DUP1 PUSH3 0x327 SWAP1 PUSH3 0xB39 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x1B7 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH3 0x4AD JUMPI PUSH1 0x2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH3 0x361 JUMPI PUSH3 0x360 PUSH3 0xBE5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH3 0x384 JUMPI PUSH3 0x383 PUSH3 0xBE5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH3 0x3A2 JUMPI PUSH3 0x3A1 PUSH3 0xBE5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH3 0x3C5 JUMPI PUSH3 0x3C4 PUSH3 0xBE5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH3 0x3E3 JUMPI PUSH3 0x3E2 PUSH3 0xBE5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH3 0x406 JUMPI PUSH3 0x405 PUSH3 0xBE5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH3 0x424 JUMPI PUSH3 0x423 PUSH3 0xBE5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x476 SWAP3 SWAP2 SWAP1 PUSH3 0x4BA JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE POP POP DUP1 DUP1 PUSH3 0x4A4 SWAP1 PUSH3 0xB39 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x334 JUMP JUMPDEST POP POP POP POP POP POP POP PUSH3 0xC87 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x4C8 SWAP1 PUSH3 0xACD JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x4EC JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x538 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x507 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x538 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x538 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x537 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x51A JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x547 SWAP2 SWAP1 PUSH3 0x54B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x566 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x54C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x581 PUSH3 0x57B DUP5 PUSH3 0x9CA JUMP JUMPDEST PUSH3 0x9A1 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH3 0x5A7 JUMPI PUSH3 0x5A6 PUSH3 0xC48 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH3 0x5FC JUMPI DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x5D1 JUMPI PUSH3 0x5D0 PUSH3 0xC43 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH3 0x5E0 DUP10 DUP3 PUSH3 0x7CE JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD SWAP4 POP POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x5AA JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x61D PUSH3 0x617 DUP5 PUSH3 0x9F9 JUMP JUMPDEST PUSH3 0x9A1 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH3 0x643 JUMPI PUSH3 0x642 PUSH3 0xC48 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH3 0x698 JUMPI DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x66D JUMPI PUSH3 0x66C PUSH3 0xC43 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH3 0x67C DUP10 DUP3 PUSH3 0x801 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD SWAP4 POP POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x646 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6B9 PUSH3 0x6B3 DUP5 PUSH3 0xA28 JUMP JUMPDEST PUSH3 0x9A1 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH3 0x6DF JUMPI PUSH3 0x6DE PUSH3 0xC48 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH3 0x713 JUMPI DUP2 PUSH3 0x6F8 DUP9 DUP3 PUSH3 0x834 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x6E2 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x734 PUSH3 0x72E DUP5 PUSH3 0xA57 JUMP JUMPDEST PUSH3 0x9A1 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x753 JUMPI PUSH3 0x752 PUSH3 0xC4D JUMP JUMPDEST JUMPDEST PUSH3 0x760 DUP5 DUP3 DUP6 PUSH3 0xA97 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x780 JUMPI PUSH3 0x77F PUSH3 0xC43 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x792 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x56A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x7B3 JUMPI PUSH3 0x7B2 PUSH3 0xC43 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x7C5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x606 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x7E6 JUMPI PUSH3 0x7E5 PUSH3 0xC43 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x7F8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x6A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x819 JUMPI PUSH3 0x818 PUSH3 0xC43 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x82B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x71D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x845 DUP2 PUSH3 0xC6D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH3 0x86B JUMPI PUSH3 0x86A PUSH3 0xC57 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP8 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x88C JUMPI PUSH3 0x88B PUSH3 0xC52 JUMP JUMPDEST JUMPDEST PUSH3 0x89A DUP10 DUP3 DUP11 ADD PUSH3 0x79B JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 DUP8 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x8BE JUMPI PUSH3 0x8BD PUSH3 0xC52 JUMP JUMPDEST JUMPDEST PUSH3 0x8CC DUP10 DUP3 DUP11 ADD PUSH3 0x768 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 DUP8 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x8F0 JUMPI PUSH3 0x8EF PUSH3 0xC52 JUMP JUMPDEST JUMPDEST PUSH3 0x8FE DUP10 DUP3 DUP11 ADD PUSH3 0x79B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 DUP8 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x922 JUMPI PUSH3 0x921 PUSH3 0xC52 JUMP JUMPDEST JUMPDEST PUSH3 0x930 DUP10 DUP3 DUP11 ADD PUSH3 0x768 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x954 JUMPI PUSH3 0x953 PUSH3 0xC52 JUMP JUMPDEST JUMPDEST PUSH3 0x962 DUP10 DUP3 DUP11 ADD PUSH3 0x79B JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 DUP8 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x986 JUMPI PUSH3 0x985 PUSH3 0xC52 JUMP JUMPDEST JUMPDEST PUSH3 0x994 DUP10 DUP3 DUP11 ADD PUSH3 0x768 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x9AD PUSH3 0x9C0 JUMP JUMPDEST SWAP1 POP PUSH3 0x9BB DUP3 DUP3 PUSH3 0xB03 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x9E8 JUMPI PUSH3 0x9E7 PUSH3 0xC14 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0xA17 JUMPI PUSH3 0xA16 PUSH3 0xC14 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0xA46 JUMPI PUSH3 0xA45 PUSH3 0xC14 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0xA75 JUMPI PUSH3 0xA74 PUSH3 0xC14 JUMP JUMPDEST JUMPDEST PUSH3 0xA80 DUP3 PUSH3 0xC5C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xAB7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xA9A JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0xAC7 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0xAE6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0xAFD JUMPI PUSH3 0xAFC PUSH3 0xBB6 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xB0E DUP3 PUSH3 0xC5C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xB30 JUMPI PUSH3 0xB2F PUSH3 0xC14 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xB46 DUP3 PUSH3 0xA8D JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH3 0xB7C JUMPI PUSH3 0xB7B PUSH3 0xB87 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xC78 DUP2 PUSH3 0xA8D JUMP JUMPDEST DUP2 EQ PUSH3 0xC84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5E6 DUP1 PUSH3 0xC97 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA83DE16 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x4132607B EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0x65C889DB EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x71BE7002 EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0x9CFA7DAA EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0xCFF2C359 EQ PUSH2 0x127 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x15A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9A SWAP2 SWAP1 PUSH2 0x3ED JUMP JUMPDEST PUSH2 0x167 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x462 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC0 PUSH2 0x22F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDE PUSH2 0x23B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEB SWAP2 SWAP1 PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x109 SWAP2 SWAP1 PUSH2 0x3ED JUMP JUMPDEST PUSH2 0x248 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x462 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x3ED JUMP JUMPDEST PUSH2 0x310 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x151 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x462 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x19A SWAP1 PUSH2 0x522 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1C6 SWAP1 PUSH2 0x522 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x213 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x213 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x27B SWAP1 PUSH2 0x522 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2A7 SWAP1 PUSH2 0x522 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2F4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2C9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2F4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2D7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x343 SWAP1 PUSH2 0x522 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x36F SWAP1 PUSH2 0x522 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3BC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x391 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3BC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x39F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3E7 DUP2 PUSH2 0x599 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x403 JUMPI PUSH2 0x402 PUSH2 0x583 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x411 DUP5 DUP3 DUP6 ADD PUSH2 0x3D8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x425 DUP3 PUSH2 0x4C9 JUMP JUMPDEST PUSH2 0x42F DUP2 DUP6 PUSH2 0x4D4 JUMP JUMPDEST SWAP4 POP PUSH2 0x43F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x4EF JUMP JUMPDEST PUSH2 0x448 DUP2 PUSH2 0x588 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x45C DUP2 PUSH2 0x4E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x47C DUP2 DUP8 PUSH2 0x41A JUMP JUMPDEST SWAP1 POP PUSH2 0x48B PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x453 JUMP JUMPDEST PUSH2 0x498 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x453 JUMP JUMPDEST PUSH2 0x4A5 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x453 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4C3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x453 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x50D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4F2 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x51C JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x53A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x54E JUMPI PUSH2 0x54D PUSH2 0x554 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5A2 DUP2 PUSH2 0x4E5 JUMP JUMPDEST DUP2 EQ PUSH2 0x5AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 0xEB SWAP16 RETURNDATACOPY 0xD 0xFC 0xDA 0x2A DUP9 DUP8 0x28 0xE0 0x5F 0xC3 PUSH32 0x40D65D8BEFA7F329DE4211654AE0F4716064736F6C6343000807003300000000 ","sourceMap":"60:1878:15:-:0;;;329:1259;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;612:9;607:316;631:14;:21;627:1;:25;607:316;;;674:13;711:185;;;;;;;;740:14;755:1;740:17;;;;;;;;:::i;:::-;;;;;;;;711:185;;;;780:11;792:1;780:14;;;;;;;;:::i;:::-;;;;;;;;795:1;780:17;;;;;;;;:::i;:::-;;;;;;;;711:185;;;;820:11;832:1;820:14;;;;;;;;:::i;:::-;;;;;;;;835:1;820:17;;;;;;;;:::i;:::-;;;;;;;;711:185;;;;860:11;872:1;860:14;;;;;;;;:::i;:::-;;;;;;;;875:1;860:17;;;;;;;;:::i;:::-;;;;;;;;711:185;;;674:237;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;654:3;;;;;:::i;:::-;;;;607:316;;;;938:9;933:304;957:12;:19;953:1;:23;933:304;;;998:11;1033:177;;;;;;;;1062:12;1075:1;1062:15;;;;;;;;:::i;:::-;;;;;;;;1033:177;;;;1100:9;1110:1;1100:12;;;;;;;;:::i;:::-;;;;;;;;1113:1;1100:15;;;;;;;;:::i;:::-;;;;;;;;1033:177;;;;1138:9;1148:1;1138:12;;;;;;;;:::i;:::-;;;;;;;;1151:1;1138:15;;;;;;;;:::i;:::-;;;;;;;;1033:177;;;;1176:9;1186:1;1176:12;;;;;;;;:::i;:::-;;;;;;;;1189:1;1176:15;;;;;;;;:::i;:::-;;;;;;;;1033:177;;;998:227;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;978:3;;;;;:::i;:::-;;;;933:304;;;;1252:9;1247:334;1271:17;:24;1267:1;:28;1247:334;;;1317:16;1357:197;;;;;;;;1386:17;1404:1;1386:20;;;;;;;;:::i;:::-;;;;;;;;1357:197;;;;1429:14;1444:1;1429:17;;;;;;;;:::i;:::-;;;;;;;;1447:1;1429:20;;;;;;;;:::i;:::-;;;;;;;;1357:197;;;;1472:14;1487:1;1472:17;;;;;;;;:::i;:::-;;;;;;;;1490:1;1472:20;;;;;;;;:::i;:::-;;;;;;;;1357:197;;;;1515:14;1530:1;1515:17;;;;;;;;:::i;:::-;;;;;;;;1533:1;1515:20;;;;;;;;:::i;:::-;;;;;;;;1357:197;;;1317:252;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;1297:3;;;;;:::i;:::-;;;;1247:334;;;;329:1259;;;;;;60:1878;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;26:1017:18:-;158:5;183:106;199:89;281:6;199:89;:::i;:::-;183:106;:::i;:::-;174:115;;309:5;338:6;331:5;324:21;372:4;365:5;361:16;354:23;;398:6;448:3;440:4;432:6;428:17;423:3;419:27;416:36;413:143;;;467:79;;:::i;:::-;413:143;580:1;565:472;590:6;587:1;584:13;565:472;;;665:3;659:10;701:18;688:11;685:35;682:122;;;723:79;;:::i;:::-;682:122;847:11;839:6;835:24;885:73;954:3;942:10;885:73;:::i;:::-;880:3;873:86;988:4;983:3;979:14;972:21;;1022:4;1017:3;1013:14;1006:21;;625:412;;612:1;609;605:9;600:14;;565:472;;;569:14;164:879;;26:1017;;;;;:::o;1065:972::-;1182:5;1207:91;1223:74;1290:6;1223:74;:::i;:::-;1207:91;:::i;:::-;1198:100;;1318:5;1347:6;1340:5;1333:21;1381:4;1374:5;1370:16;1363:23;;1407:6;1457:3;1449:4;1441:6;1437:17;1432:3;1428:27;1425:36;1422:143;;;1476:79;;:::i;:::-;1422:143;1589:1;1574:457;1599:6;1596:1;1593:13;1574:457;;;1674:3;1668:10;1710:18;1697:11;1694:35;1691:122;;;1732:79;;:::i;:::-;1691:122;1856:11;1848:6;1844:24;1894:58;1948:3;1936:10;1894:58;:::i;:::-;1889:3;1882:71;1982:4;1977:3;1973:14;1966:21;;2016:4;2011:3;2007:14;2000:21;;1634:397;;1621:1;1618;1614:9;1609:14;;1574:457;;;1578:14;1188:849;;1065:972;;;;;:::o;2060:744::-;2167:5;2192:81;2208:64;2265:6;2208:64;:::i;:::-;2192:81;:::i;:::-;2183:90;;2293:5;2322:6;2315:5;2308:21;2356:4;2349:5;2345:16;2338:23;;2382:6;2432:3;2424:4;2416:6;2412:17;2407:3;2403:27;2400:36;2397:143;;;2451:79;;:::i;:::-;2397:143;2564:1;2549:249;2574:6;2571:1;2568:13;2549:249;;;2642:3;2671:48;2715:3;2703:10;2671:48;:::i;:::-;2666:3;2659:61;2749:4;2744:3;2740:14;2733:21;;2783:4;2778:3;2774:14;2767:21;;2609:189;2596:1;2593;2589:9;2584:14;;2549:249;;;2553:14;2173:631;;2060:744;;;;;:::o;2810:421::-;2899:5;2924:66;2940:49;2982:6;2940:49;:::i;:::-;2924:66;:::i;:::-;2915:75;;3013:6;3006:5;2999:21;3051:4;3044:5;3040:16;3089:3;3080:6;3075:3;3071:16;3068:25;3065:112;;;3096:79;;:::i;:::-;3065:112;3186:39;3218:6;3213:3;3208;3186:39;:::i;:::-;2905:326;2810:421;;;;;:::o;3256:435::-;3363:5;3412:3;3405:4;3397:6;3393:17;3389:27;3379:122;;3420:79;;:::i;:::-;3379:122;3530:6;3524:13;3555:130;3681:3;3673:6;3666:4;3658:6;3654:17;3555:130;:::i;:::-;3546:139;;3369:322;3256:435;;;;:::o;3713:405::-;3805:5;3854:3;3847:4;3839:6;3835:17;3831:27;3821:122;;3862:79;;:::i;:::-;3821:122;3972:6;3966:13;3997:115;4108:3;4100:6;4093:4;4085:6;4081:17;3997:115;:::i;:::-;3988:124;;3811:307;3713:405;;;;:::o;4141:385::-;4223:5;4272:3;4265:4;4257:6;4253:17;4249:27;4239:122;;4280:79;;:::i;:::-;4239:122;4390:6;4384:13;4415:105;4516:3;4508:6;4501:4;4493:6;4489:17;4415:105;:::i;:::-;4406:114;;4229:297;4141:385;;;;:::o;4546:355::-;4613:5;4662:3;4655:4;4647:6;4643:17;4639:27;4629:122;;4670:79;;:::i;:::-;4629:122;4780:6;4774:13;4805:90;4891:3;4883:6;4876:4;4868:6;4864:17;4805:90;:::i;:::-;4796:99;;4619:282;4546:355;;;;:::o;4907:143::-;4964:5;4995:6;4989:13;4980:22;;5011:33;5038:5;5011:33;:::i;:::-;4907:143;;;;:::o;5056:2562::-;5426:6;5434;5442;5450;5458;5466;5515:3;5503:9;5494:7;5490:23;5486:33;5483:120;;;5522:79;;:::i;:::-;5483:120;5663:1;5652:9;5648:17;5642:24;5693:18;5685:6;5682:30;5679:117;;;5715:79;;:::i;:::-;5679:117;5820:99;5911:7;5902:6;5891:9;5887:22;5820:99;:::i;:::-;5810:109;;5613:316;5989:2;5978:9;5974:18;5968:25;6020:18;6012:6;6009:30;6006:117;;;6042:79;;:::i;:::-;6006:117;6147:114;6253:7;6244:6;6233:9;6229:22;6147:114;:::i;:::-;6137:124;;5939:332;6331:2;6320:9;6316:18;6310:25;6362:18;6354:6;6351:30;6348:117;;;6384:79;;:::i;:::-;6348:117;6489:99;6580:7;6571:6;6560:9;6556:22;6489:99;:::i;:::-;6479:109;;6281:317;6658:2;6647:9;6643:18;6637:25;6689:18;6681:6;6678:30;6675:117;;;6711:79;;:::i;:::-;6675:117;6816:114;6922:7;6913:6;6902:9;6898:22;6816:114;:::i;:::-;6806:124;;6608:332;7000:3;6989:9;6985:19;6979:26;7032:18;7024:6;7021:30;7018:117;;;7054:79;;:::i;:::-;7018:117;7159:99;7250:7;7241:6;7230:9;7226:22;7159:99;:::i;:::-;7149:109;;6950:318;7328:3;7317:9;7313:19;7307:26;7360:18;7352:6;7349:30;7346:117;;;7382:79;;:::i;:::-;7346:117;7487:114;7593:7;7584:6;7573:9;7569:22;7487:114;:::i;:::-;7477:124;;7278:333;5056:2562;;;;;;;;:::o;7624:129::-;7658:6;7685:20;;:::i;:::-;7675:30;;7714:33;7742:4;7734:6;7714:33;:::i;:::-;7624:129;;;:::o;7759:75::-;7792:6;7825:2;7819:9;7809:19;;7759:75;:::o;7840:336::-;7942:4;8032:18;8024:6;8021:30;8018:56;;;8054:18;;:::i;:::-;8018:56;8104:4;8096:6;8092:17;8084:25;;8164:4;8158;8154:15;8146:23;;7840:336;;;:::o;8182:321::-;8269:4;8359:18;8351:6;8348:30;8345:56;;;8381:18;;:::i;:::-;8345:56;8431:4;8423:6;8419:17;8411:25;;8491:4;8485;8481:15;8473:23;;8182:321;;;:::o;8509:311::-;8586:4;8676:18;8668:6;8665:30;8662:56;;;8698:18;;:::i;:::-;8662:56;8748:4;8740:6;8736:17;8728:25;;8808:4;8802;8798:15;8790:23;;8509:311;;;:::o;8826:308::-;8888:4;8978:18;8970:6;8967:30;8964:56;;;9000:18;;:::i;:::-;8964:56;9038:29;9060:6;9038:29;:::i;:::-;9030:37;;9122:4;9116;9112:15;9104:23;;8826:308;;;:::o;9140:77::-;9177:7;9206:5;9195:16;;9140:77;;;:::o;9223:307::-;9291:1;9301:113;9315:6;9312:1;9309:13;9301:113;;;9400:1;9395:3;9391:11;9385:18;9381:1;9376:3;9372:11;9365:39;9337:2;9334:1;9330:10;9325:15;;9301:113;;;9432:6;9429:1;9426:13;9423:101;;;9512:1;9503:6;9498:3;9494:16;9487:27;9423:101;9272:258;9223:307;;;:::o;9536:320::-;9580:6;9617:1;9611:4;9607:12;9597:22;;9664:1;9658:4;9654:12;9685:18;9675:81;;9741:4;9733:6;9729:17;9719:27;;9675:81;9803:2;9795:6;9792:14;9772:18;9769:38;9766:84;;;9822:18;;:::i;:::-;9766:84;9587:269;9536:320;;;:::o;9862:281::-;9945:27;9967:4;9945:27;:::i;:::-;9937:6;9933:40;10075:6;10063:10;10060:22;10039:18;10027:10;10024:34;10021:62;10018:88;;;10086:18;;:::i;:::-;10018:88;10126:10;10122:2;10115:22;9905:238;9862:281;;:::o;10149:233::-;10188:3;10211:24;10229:5;10211:24;:::i;:::-;10202:33;;10257:66;10250:5;10247:77;10244:103;;;10327:18;;:::i;:::-;10244:103;10374:1;10367:5;10363:13;10356:20;;10149:233;;;:::o;10388:180::-;10436:77;10433:1;10426:88;10533:4;10530:1;10523:15;10557:4;10554:1;10547:15;10574:180;10622:77;10619:1;10612:88;10719:4;10716:1;10709:15;10743:4;10740:1;10733:15;10760:180;10808:77;10805:1;10798:88;10905:4;10902:1;10895:15;10929:4;10926:1;10919:15;10946:180;10994:77;10991:1;10984:88;11091:4;11088:1;11081:15;11115:4;11112:1;11105:15;11132:117;11241:1;11238;11231:12;11255:117;11364:1;11361;11354:12;11378:117;11487:1;11484;11477:12;11501:117;11610:1;11607;11600:12;11624:117;11733:1;11730;11723:12;11747:102;11788:6;11839:2;11835:7;11830:2;11823:5;11819:14;11815:28;11805:38;;11747:102;;;:::o;11855:122::-;11928:24;11946:5;11928:24;:::i;:::-;11921:5;11918:35;11908:63;;11967:1;11964;11957:12;11908:63;11855:122;:::o;60:1878:15:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@legendaryPersonsLength_3142":{"entryPoint":571,"id":3142,"parameterSlots":0,"returnSlots":1},"@legendaryPersons_2976":{"entryPoint":584,"id":2976,"parameterSlots":0,"returnSlots":0},"@normalPersonsLength_3124":{"entryPoint":559,"id":3124,"parameterSlots":0,"returnSlots":1},"@normalPersons_2968":{"entryPoint":359,"id":2968,"parameterSlots":0,"returnSlots":0},"@rarePersonsLength_3133":{"entryPoint":346,"id":3133,"parameterSlots":0,"returnSlots":1},"@rarePersons_2972":{"entryPoint":784,"id":2972,"parameterSlots":0,"returnSlots":0},"abi_decode_t_uint256":{"entryPoint":984,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":1005,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":1050,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":1107,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":1122,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":1198,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1225,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1236,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1253,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":1263,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":1314,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x22":{"entryPoint":1364,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1411,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":1416,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_uint256":{"entryPoint":1433,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3607:18","statements":[{"body":{"nodeType":"YulBlock","src":"59:87:18","statements":[{"nodeType":"YulAssignment","src":"69:29:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"91:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"78:12:18"},"nodeType":"YulFunctionCall","src":"78:20:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"69:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"134:5:18"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"107:26:18"},"nodeType":"YulFunctionCall","src":"107:33:18"},"nodeType":"YulExpressionStatement","src":"107:33:18"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"37:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"45:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:18","type":""}],"src":"7:139:18"},{"body":{"nodeType":"YulBlock","src":"218:263:18","statements":[{"body":{"nodeType":"YulBlock","src":"264:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"266:77:18"},"nodeType":"YulFunctionCall","src":"266:79:18"},"nodeType":"YulExpressionStatement","src":"266:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"239:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"248:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"235:3:18"},"nodeType":"YulFunctionCall","src":"235:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"260:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"231:3:18"},"nodeType":"YulFunctionCall","src":"231:32:18"},"nodeType":"YulIf","src":"228:119:18"},{"nodeType":"YulBlock","src":"357:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"372:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"386:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"376:6:18","type":""}]},{"nodeType":"YulAssignment","src":"401:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"436:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"447:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"432:3:18"},"nodeType":"YulFunctionCall","src":"432:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"456:7:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"411:20:18"},"nodeType":"YulFunctionCall","src":"411:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"401:6:18"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"188:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"199:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"211:6:18","type":""}],"src":"152:329:18"},{"body":{"nodeType":"YulBlock","src":"579:272:18","statements":[{"nodeType":"YulVariableDeclaration","src":"589:53:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"636:5:18"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"603:32:18"},"nodeType":"YulFunctionCall","src":"603:39:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"593:6:18","type":""}]},{"nodeType":"YulAssignment","src":"651:78:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"717:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"722:6:18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"658:58:18"},"nodeType":"YulFunctionCall","src":"658:71:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"651:3:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"764:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"771:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"760:3:18"},"nodeType":"YulFunctionCall","src":"760:16:18"},{"name":"pos","nodeType":"YulIdentifier","src":"778:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"783:6:18"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"738:21:18"},"nodeType":"YulFunctionCall","src":"738:52:18"},"nodeType":"YulExpressionStatement","src":"738:52:18"},{"nodeType":"YulAssignment","src":"799:46:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"810:3:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"837:6:18"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"815:21:18"},"nodeType":"YulFunctionCall","src":"815:29:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"806:3:18"},"nodeType":"YulFunctionCall","src":"806:39:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"799:3:18"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"560:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"567:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"575:3:18","type":""}],"src":"487:364:18"},{"body":{"nodeType":"YulBlock","src":"922:53:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"939:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"962:5:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"944:17:18"},"nodeType":"YulFunctionCall","src":"944:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"932:6:18"},"nodeType":"YulFunctionCall","src":"932:37:18"},"nodeType":"YulExpressionStatement","src":"932:37:18"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"910:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"917:3:18","type":""}],"src":"857:118:18"},{"body":{"nodeType":"YulBlock","src":"1183:442:18","statements":[{"nodeType":"YulAssignment","src":"1193:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1216:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:18"},"nodeType":"YulFunctionCall","src":"1201:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1193:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1241:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1252:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1237:3:18"},"nodeType":"YulFunctionCall","src":"1237:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1260:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"1266:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1256:3:18"},"nodeType":"YulFunctionCall","src":"1256:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1230:6:18"},"nodeType":"YulFunctionCall","src":"1230:47:18"},"nodeType":"YulExpressionStatement","src":"1230:47:18"},{"nodeType":"YulAssignment","src":"1286:86:18","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1358:6:18"},{"name":"tail","nodeType":"YulIdentifier","src":"1367:4:18"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1294:63:18"},"nodeType":"YulFunctionCall","src":"1294:78:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1286:4:18"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1426:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1439:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1450:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1435:3:18"},"nodeType":"YulFunctionCall","src":"1435:18:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"1382:43:18"},"nodeType":"YulFunctionCall","src":"1382:72:18"},"nodeType":"YulExpressionStatement","src":"1382:72:18"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"1508:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1521:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1532:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1517:3:18"},"nodeType":"YulFunctionCall","src":"1517:18:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"1464:43:18"},"nodeType":"YulFunctionCall","src":"1464:72:18"},"nodeType":"YulExpressionStatement","src":"1464:72:18"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"1590:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1603:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1614:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1599:3:18"},"nodeType":"YulFunctionCall","src":"1599:18:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"1546:43:18"},"nodeType":"YulFunctionCall","src":"1546:72:18"},"nodeType":"YulExpressionStatement","src":"1546:72:18"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1131:9:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1143:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1151:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1159:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1167:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1178:4:18","type":""}],"src":"981:644:18"},{"body":{"nodeType":"YulBlock","src":"1729:124:18","statements":[{"nodeType":"YulAssignment","src":"1739:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1751:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1762:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1747:3:18"},"nodeType":"YulFunctionCall","src":"1747:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1739:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1819:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1832:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1843:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1828:3:18"},"nodeType":"YulFunctionCall","src":"1828:17:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"1775:43:18"},"nodeType":"YulFunctionCall","src":"1775:71:18"},"nodeType":"YulExpressionStatement","src":"1775:71:18"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1701:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1713:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1724:4:18","type":""}],"src":"1631:222:18"},{"body":{"nodeType":"YulBlock","src":"1899:35:18","statements":[{"nodeType":"YulAssignment","src":"1909:19:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1925:2:18","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1919:5:18"},"nodeType":"YulFunctionCall","src":"1919:9:18"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1909:6:18"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1892:6:18","type":""}],"src":"1859:75:18"},{"body":{"nodeType":"YulBlock","src":"1999:40:18","statements":[{"nodeType":"YulAssignment","src":"2010:22:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2026:5:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2020:5:18"},"nodeType":"YulFunctionCall","src":"2020:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2010:6:18"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1982:5:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1992:6:18","type":""}],"src":"1940:99:18"},{"body":{"nodeType":"YulBlock","src":"2141:73:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2158:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"2163:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2151:6:18"},"nodeType":"YulFunctionCall","src":"2151:19:18"},"nodeType":"YulExpressionStatement","src":"2151:19:18"},{"nodeType":"YulAssignment","src":"2179:29:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2198:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"2203:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2194:3:18"},"nodeType":"YulFunctionCall","src":"2194:14:18"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"2179:11:18"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2113:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"2118:6:18","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"2129:11:18","type":""}],"src":"2045:169:18"},{"body":{"nodeType":"YulBlock","src":"2265:32:18","statements":[{"nodeType":"YulAssignment","src":"2275:16:18","value":{"name":"value","nodeType":"YulIdentifier","src":"2286:5:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2275:7:18"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2247:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2257:7:18","type":""}],"src":"2220:77:18"},{"body":{"nodeType":"YulBlock","src":"2352:258:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2362:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"2371:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2366:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"2431:63:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2456:3:18"},{"name":"i","nodeType":"YulIdentifier","src":"2461:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2452:3:18"},"nodeType":"YulFunctionCall","src":"2452:11:18"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2475:3:18"},{"name":"i","nodeType":"YulIdentifier","src":"2480:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2471:3:18"},"nodeType":"YulFunctionCall","src":"2471:11:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2465:5:18"},"nodeType":"YulFunctionCall","src":"2465:18:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2445:6:18"},"nodeType":"YulFunctionCall","src":"2445:39:18"},"nodeType":"YulExpressionStatement","src":"2445:39:18"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2392:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"2395:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2389:2:18"},"nodeType":"YulFunctionCall","src":"2389:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2403:19:18","statements":[{"nodeType":"YulAssignment","src":"2405:15:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2414:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"2417:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2410:3:18"},"nodeType":"YulFunctionCall","src":"2410:10:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2405:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"2385:3:18","statements":[]},"src":"2381:113:18"},{"body":{"nodeType":"YulBlock","src":"2528:76:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2578:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"2583:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2574:3:18"},"nodeType":"YulFunctionCall","src":"2574:16:18"},{"kind":"number","nodeType":"YulLiteral","src":"2592:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2567:6:18"},"nodeType":"YulFunctionCall","src":"2567:27:18"},"nodeType":"YulExpressionStatement","src":"2567:27:18"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2509:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"2512:6:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2506:2:18"},"nodeType":"YulFunctionCall","src":"2506:13:18"},"nodeType":"YulIf","src":"2503:101:18"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2334:3:18","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2339:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"2344:6:18","type":""}],"src":"2303:307:18"},{"body":{"nodeType":"YulBlock","src":"2667:269:18","statements":[{"nodeType":"YulAssignment","src":"2677:22:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2691:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"2697:1:18","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2687:3:18"},"nodeType":"YulFunctionCall","src":"2687:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2677:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"2708:38:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2738:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"2744:1:18","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2734:3:18"},"nodeType":"YulFunctionCall","src":"2734:12:18"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2712:18:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"2785:51:18","statements":[{"nodeType":"YulAssignment","src":"2799:27:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2813:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"2821:4:18","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2809:3:18"},"nodeType":"YulFunctionCall","src":"2809:17:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2799:6:18"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2765:18:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2758:6:18"},"nodeType":"YulFunctionCall","src":"2758:26:18"},"nodeType":"YulIf","src":"2755:81:18"},{"body":{"nodeType":"YulBlock","src":"2888:42:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"2902:16:18"},"nodeType":"YulFunctionCall","src":"2902:18:18"},"nodeType":"YulExpressionStatement","src":"2902:18:18"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2852:18:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2875:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"2883:2:18","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2872:2:18"},"nodeType":"YulFunctionCall","src":"2872:14:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2849:2:18"},"nodeType":"YulFunctionCall","src":"2849:38:18"},"nodeType":"YulIf","src":"2846:84:18"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2651:4:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2660:6:18","type":""}],"src":"2616:320:18"},{"body":{"nodeType":"YulBlock","src":"2970:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2987:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2990:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2980:6:18"},"nodeType":"YulFunctionCall","src":"2980:88:18"},"nodeType":"YulExpressionStatement","src":"2980:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3084:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3087:4:18","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3077:6:18"},"nodeType":"YulFunctionCall","src":"3077:15:18"},"nodeType":"YulExpressionStatement","src":"3077:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3108:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3111:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3101:6:18"},"nodeType":"YulFunctionCall","src":"3101:15:18"},"nodeType":"YulExpressionStatement","src":"3101:15:18"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"2942:180:18"},{"body":{"nodeType":"YulBlock","src":"3217:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3234:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3237:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3227:6:18"},"nodeType":"YulFunctionCall","src":"3227:12:18"},"nodeType":"YulExpressionStatement","src":"3227:12:18"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"3128:117:18"},{"body":{"nodeType":"YulBlock","src":"3340:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3357:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3360:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3350:6:18"},"nodeType":"YulFunctionCall","src":"3350:12:18"},"nodeType":"YulExpressionStatement","src":"3350:12:18"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"3251:117:18"},{"body":{"nodeType":"YulBlock","src":"3422:54:18","statements":[{"nodeType":"YulAssignment","src":"3432:38:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3450:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"3457:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3446:3:18"},"nodeType":"YulFunctionCall","src":"3446:14:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3466:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3462:3:18"},"nodeType":"YulFunctionCall","src":"3462:7:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3442:3:18"},"nodeType":"YulFunctionCall","src":"3442:28:18"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3432:6:18"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3405:5:18","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3415:6:18","type":""}],"src":"3374:102:18"},{"body":{"nodeType":"YulBlock","src":"3525:79:18","statements":[{"body":{"nodeType":"YulBlock","src":"3582:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3591:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3594:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3584:6:18"},"nodeType":"YulFunctionCall","src":"3584:12:18"},"nodeType":"YulExpressionStatement","src":"3584:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3548:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3573:5:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3555:17:18"},"nodeType":"YulFunctionCall","src":"3555:24:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3545:2:18"},"nodeType":"YulFunctionCall","src":"3545:35:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3538:6:18"},"nodeType":"YulFunctionCall","src":"3538:43:18"},"nodeType":"YulIf","src":"3535:63:18"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3518:5:18","type":""}],"src":"3482:122:18"}]},"contents":"{\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":18,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100625760003560e01c80630a83de16146100675780634132607b1461008557806365c889db146100b857806371be7002146100d65780639cfa7daa146100f4578063cff2c35914610127575b600080fd5b61006f61015a565b60405161007c91906104ae565b60405180910390f35b61009f600480360381019061009a91906103ed565b610167565b6040516100af9493929190610462565b60405180910390f35b6100c061022f565b6040516100cd91906104ae565b60405180910390f35b6100de61023b565b6040516100eb91906104ae565b60405180910390f35b61010e600480360381019061010991906103ed565b610248565b60405161011e9493929190610462565b60405180910390f35b610141600480360381019061013c91906103ed565b610310565b6040516101519493929190610462565b60405180910390f35b6000600180549050905090565b6000818154811061017757600080fd5b906000526020600020906004020160009150905080600001805461019a90610522565b80601f01602080910402602001604051908101604052809291908181526020018280546101c690610522565b80156102135780601f106101e857610100808354040283529160200191610213565b820191906000526020600020905b8154815290600101906020018083116101f657829003601f168201915b5050505050908060010154908060020154908060030154905084565b60008080549050905090565b6000600280549050905090565b6002818154811061025857600080fd5b906000526020600020906004020160009150905080600001805461027b90610522565b80601f01602080910402602001604051908101604052809291908181526020018280546102a790610522565b80156102f45780601f106102c9576101008083540402835291602001916102f4565b820191906000526020600020905b8154815290600101906020018083116102d757829003601f168201915b5050505050908060010154908060020154908060030154905084565b6001818154811061032057600080fd5b906000526020600020906004020160009150905080600001805461034390610522565b80601f016020809104026020016040519081016040528092919081815260200182805461036f90610522565b80156103bc5780601f10610391576101008083540402835291602001916103bc565b820191906000526020600020905b81548152906001019060200180831161039f57829003601f168201915b5050505050908060010154908060020154908060030154905084565b6000813590506103e781610599565b92915050565b60006020828403121561040357610402610583565b5b6000610411848285016103d8565b91505092915050565b6000610425826104c9565b61042f81856104d4565b935061043f8185602086016104ef565b61044881610588565b840191505092915050565b61045c816104e5565b82525050565b6000608082019050818103600083015261047c818761041a565b905061048b6020830186610453565b6104986040830185610453565b6104a56060830184610453565b95945050505050565b60006020820190506104c36000830184610453565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050919050565b60005b8381101561050d5780820151818401526020810190506104f2565b8381111561051c576000848401525b50505050565b6000600282049050600182168061053a57607f821691505b6020821081141561054e5761054d610554565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b6105a2816104e5565b81146105ad57600080fd5b5056fea26469706673582212208ceb9f3e0dfcda2a888728e05fc37f40d65d8befa7f329de4211654ae0f4716064736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA83DE16 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x4132607B EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0x65C889DB EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x71BE7002 EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0x9CFA7DAA EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0xCFF2C359 EQ PUSH2 0x127 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x15A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9A SWAP2 SWAP1 PUSH2 0x3ED JUMP JUMPDEST PUSH2 0x167 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x462 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC0 PUSH2 0x22F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDE PUSH2 0x23B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEB SWAP2 SWAP1 PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x109 SWAP2 SWAP1 PUSH2 0x3ED JUMP JUMPDEST PUSH2 0x248 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x462 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x3ED JUMP JUMPDEST PUSH2 0x310 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x151 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x462 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x19A SWAP1 PUSH2 0x522 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1C6 SWAP1 PUSH2 0x522 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x213 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x213 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x27B SWAP1 PUSH2 0x522 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2A7 SWAP1 PUSH2 0x522 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2F4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2C9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2F4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2D7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x343 SWAP1 PUSH2 0x522 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x36F SWAP1 PUSH2 0x522 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3BC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x391 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3BC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x39F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3E7 DUP2 PUSH2 0x599 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x403 JUMPI PUSH2 0x402 PUSH2 0x583 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x411 DUP5 DUP3 DUP6 ADD PUSH2 0x3D8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x425 DUP3 PUSH2 0x4C9 JUMP JUMPDEST PUSH2 0x42F DUP2 DUP6 PUSH2 0x4D4 JUMP JUMPDEST SWAP4 POP PUSH2 0x43F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x4EF JUMP JUMPDEST PUSH2 0x448 DUP2 PUSH2 0x588 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x45C DUP2 PUSH2 0x4E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x47C DUP2 DUP8 PUSH2 0x41A JUMP JUMPDEST SWAP1 POP PUSH2 0x48B PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x453 JUMP JUMPDEST PUSH2 0x498 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x453 JUMP JUMPDEST PUSH2 0x4A5 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x453 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4C3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x453 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x50D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4F2 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x51C JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x53A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x54E JUMPI PUSH2 0x54D PUSH2 0x554 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5A2 DUP2 PUSH2 0x4E5 JUMP JUMPDEST DUP2 EQ PUSH2 0x5AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 0xEB SWAP16 RETURNDATACOPY 0xD 0xFC 0xDA 0x2A DUP9 DUP8 0x28 0xE0 0x5F 0xC3 PUSH32 0x40D65D8BEFA7F329DE4211654AE0F4716064736F6C6343000807003300000000 ","sourceMap":"60:1878:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1711:103;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;218:29;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;1596:107;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1822:113;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;288:32;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;254:27;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;1711:103;1761:7;1788:11;:18;;;;1781:25;;1711:103;:::o;218:29::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1596:107::-;1648:7;1675:13;:20;;;;1668:27;;1596:107;:::o;1822:113::-;1877:7;1904:16;:23;;;;1897:30;;1822:113;:::o;288:32::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;254:27::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:139:18:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:364::-;575:3;603:39;636:5;603:39;:::i;:::-;658:71;722:6;717:3;658:71;:::i;:::-;651:78;;738:52;783:6;778:3;771:4;764:5;760:16;738:52;:::i;:::-;815:29;837:6;815:29;:::i;:::-;810:3;806:39;799:46;;579:272;487:364;;;;:::o;857:118::-;944:24;962:5;944:24;:::i;:::-;939:3;932:37;857:118;;:::o;981:644::-;1178:4;1216:3;1205:9;1201:19;1193:27;;1266:9;1260:4;1256:20;1252:1;1241:9;1237:17;1230:47;1294:78;1367:4;1358:6;1294:78;:::i;:::-;1286:86;;1382:72;1450:2;1439:9;1435:18;1426:6;1382:72;:::i;:::-;1464;1532:2;1521:9;1517:18;1508:6;1464:72;:::i;:::-;1546;1614:2;1603:9;1599:18;1590:6;1546:72;:::i;:::-;981:644;;;;;;;:::o;1631:222::-;1724:4;1762:2;1751:9;1747:18;1739:26;;1775:71;1843:1;1832:9;1828:17;1819:6;1775:71;:::i;:::-;1631:222;;;;:::o;1940:99::-;1992:6;2026:5;2020:12;2010:22;;1940:99;;;:::o;2045:169::-;2129:11;2163:6;2158:3;2151:19;2203:4;2198:3;2194:14;2179:29;;2045:169;;;;:::o;2220:77::-;2257:7;2286:5;2275:16;;2220:77;;;:::o;2303:307::-;2371:1;2381:113;2395:6;2392:1;2389:13;2381:113;;;2480:1;2475:3;2471:11;2465:18;2461:1;2456:3;2452:11;2445:39;2417:2;2414:1;2410:10;2405:15;;2381:113;;;2512:6;2509:1;2506:13;2503:101;;;2592:1;2583:6;2578:3;2574:16;2567:27;2503:101;2352:258;2303:307;;;:::o;2616:320::-;2660:6;2697:1;2691:4;2687:12;2677:22;;2744:1;2738:4;2734:12;2765:18;2755:81;;2821:4;2813:6;2809:17;2799:27;;2755:81;2883:2;2875:6;2872:14;2852:18;2849:38;2846:84;;;2902:18;;:::i;:::-;2846:84;2667:269;2616:320;;;:::o;2942:180::-;2990:77;2987:1;2980:88;3087:4;3084:1;3077:15;3111:4;3108:1;3101:15;3251:117;3360:1;3357;3350:12;3374:102;3415:6;3466:2;3462:7;3457:2;3450:5;3446:14;3442:28;3432:38;;3374:102;;;:::o;3482:122::-;3555:24;3573:5;3555:24;:::i;:::-;3548:5;3545:35;3535:63;;3594:1;3591;3584:12;3535:63;3482:122;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"302000","executionCost":"infinite","totalCost":"infinite"},"external":{"legendaryPersons(uint256)":"infinite","legendaryPersonsLength()":"2489","normalPersons(uint256)":"infinite","normalPersonsLength()":"2467","rarePersons(uint256)":"infinite","rarePersonsLength()":"2423"}},"methodIdentifiers":{"legendaryPersons(uint256)":"9cfa7daa","legendaryPersonsLength()":"71be7002","normalPersons(uint256)":"4132607b","normalPersonsLength()":"65c889db","rarePersons(uint256)":"cff2c359","rarePersonsLength()":"0a83de16"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"tokenUriNormal\",\"type\":\"string[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"normalStats\",\"type\":\"uint256[][]\"},{\"internalType\":\"string[]\",\"name\":\"tokenUriRare\",\"type\":\"string[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"statsRare\",\"type\":\"uint256[][]\"},{\"internalType\":\"string[]\",\"name\":\"tokenUriLegendary\",\"type\":\"string[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"statsLegendary\",\"type\":\"uint256[][]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"legendaryPersons\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenUri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"attack\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"defence\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tactics\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"legendaryPersonsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"normalPersons\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenUri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"attack\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"defence\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tactics\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"normalPersonsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rarePersons\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenUri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"attack\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"defence\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tactics\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rarePersonsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Characters.sol\":\"Characters\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Characters.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\ncontract Characters {\\r\\n    struct Person {\\r\\n        string tokenUri;\\r\\n        uint256 attack;\\r\\n        uint256 defence;\\r\\n        uint256 tactics;\\r\\n    }\\r\\n    Person[] public normalPersons;\\r\\n    Person[] public rarePersons;\\r\\n    Person[] public legendaryPersons;\\r\\n\\r\\n    constructor(\\r\\n        string[] memory tokenUriNormal,\\r\\n        uint256[][] memory normalStats,\\r\\n        string[] memory tokenUriRare,\\r\\n        uint256[][] memory statsRare,\\r\\n        string[] memory tokenUriLegendary,\\r\\n        uint256[][] memory statsLegendary\\r\\n    ) {\\r\\n        for (uint256 i = 0; i < tokenUriNormal.length; i++) {\\r\\n            normalPersons.push(\\r\\n                Person(\\r\\n                    tokenUriNormal[i],\\r\\n                    normalStats[i][0],\\r\\n                    normalStats[i][1],\\r\\n                    normalStats[i][2]\\r\\n                )\\r\\n            );\\r\\n        }\\r\\n        for (uint256 i = 0; i < tokenUriRare.length; i++) {\\r\\n            rarePersons.push(\\r\\n                Person(\\r\\n                    tokenUriRare[i],\\r\\n                    statsRare[i][0],\\r\\n                    statsRare[i][1],\\r\\n                    statsRare[i][2]\\r\\n                )\\r\\n            );\\r\\n        }\\r\\n        for (uint256 i = 0; i < tokenUriLegendary.length; i++) {\\r\\n            legendaryPersons.push(\\r\\n                Person(\\r\\n                    tokenUriLegendary[i],\\r\\n                    statsLegendary[i][0],\\r\\n                    statsLegendary[i][1],\\r\\n                    statsLegendary[i][2]\\r\\n                )\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function normalPersonsLength() public view returns (uint256) {\\r\\n        return normalPersons.length;\\r\\n    }\\r\\n\\r\\n    function rarePersonsLength() public view returns (uint256) {\\r\\n        return rarePersons.length;\\r\\n    }\\r\\n\\r\\n    function legendaryPersonsLength() public view returns (uint256) {\\r\\n        return legendaryPersons.length;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x71a420f0a5c1366bf3dfdcadb6bcb3bc6b08d0e12ee369b43be791374bf734e2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2968,"contract":"contracts/Characters.sol:Characters","label":"normalPersons","offset":0,"slot":"0","type":"t_array(t_struct(Person)2964_storage)dyn_storage"},{"astId":2972,"contract":"contracts/Characters.sol:Characters","label":"rarePersons","offset":0,"slot":"1","type":"t_array(t_struct(Person)2964_storage)dyn_storage"},{"astId":2976,"contract":"contracts/Characters.sol:Characters","label":"legendaryPersons","offset":0,"slot":"2","type":"t_array(t_struct(Person)2964_storage)dyn_storage"}],"types":{"t_array(t_struct(Person)2964_storage)dyn_storage":{"base":"t_struct(Person)2964_storage","encoding":"dynamic_array","label":"struct Characters.Person[]","numberOfBytes":"32"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Person)2964_storage":{"encoding":"inplace","label":"struct Characters.Person","members":[{"astId":2957,"contract":"contracts/Characters.sol:Characters","label":"tokenUri","offset":0,"slot":"0","type":"t_string_storage"},{"astId":2959,"contract":"contracts/Characters.sol:Characters","label":"attack","offset":0,"slot":"1","type":"t_uint256"},{"astId":2961,"contract":"contracts/Characters.sol:Characters","label":"defence","offset":0,"slot":"2","type":"t_uint256"},{"astId":2963,"contract":"contracts/Characters.sol:Characters","label":"tactics","offset":0,"slot":"3","type":"t_uint256"}],"numberOfBytes":"128"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/GameCard.sol":{"GameCard":{"abi":[{"inputs":[{"internalType":"address","name":"nftBoxAddress","type":"address"},{"internalType":"address","name":"characterAddress","type":"address"},{"internalType":"address","name":"vrfCoordinatorV2","type":"address"},{"internalType":"uint64","name":"subscriptionId","type":"uint64"},{"internalType":"bytes32","name":"gasLane","type":"bytes32"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"GameCard__AlreadyOpponentFound","type":"error"},{"inputs":[],"name":"GameCard__NotOpponent","type":"error"},{"inputs":[],"name":"GameCard__NotOwner","type":"error"},{"inputs":[],"name":"GameCard__PlayerNotAllowed","type":"error"},{"inputs":[],"name":"GameCard__PlayerNotFound","type":"error"},{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"caller","type":"address"},{"indexed":false,"internalType":"uint256[3]","name":"tokenId","type":"uint256[3]"},{"indexed":false,"internalType":"address","name":"opponent","type":"address"},{"indexed":false,"internalType":"enum GameCard.PlayerStatus","name":"status","type":"uint8"}],"name":"AddedToList","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"winner","type":"address"},{"indexed":false,"internalType":"address","name":"looser","type":"address"},{"indexed":false,"internalType":"bool","name":"draw","type":"bool"}],"name":"Match","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"player1","type":"address"},{"indexed":false,"internalType":"address","name":"player2","type":"address"},{"indexed":false,"internalType":"uint256","name":"requestId","type":"uint256"}],"name":"MatchBeginsSoon","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"player1","type":"address"},{"indexed":false,"internalType":"address","name":"player2","type":"address"}],"name":"MatchFound","type":"event"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"currentPlayers","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId1","type":"uint256"},{"internalType":"uint256","name":"tokenId2","type":"uint256"},{"internalType":"uint256","name":"tokenId3","type":"uint256"}],"name":"enterGame","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"finshedGames","outputs":[{"internalType":"address","name":"winner","type":"address"},{"internalType":"address","name":"loser","type":"address"},{"internalType":"bool","name":"draw","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentPlayers","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getTokenIds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"i_contractCharacter","outputs":[{"internalType":"contract Characters","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"i_contractNftBox","outputs":[{"internalType":"contract NftBox","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"s_addressInfo","outputs":[{"internalType":"uint256","name":"game","type":"uint256"},{"internalType":"address","name":"player","type":"address"},{"internalType":"address","name":"opponent","type":"address"},{"internalType":"enum GameCard.PlayerStatus","name":"status","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"s_gameCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"s_requestIdToPlayers","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_21":{"entryPoint":null,"id":21,"parameterSlots":1,"returnSlots":0},"@_3395":{"entryPoint":null,"id":3395,"parameterSlots":6,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":493,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":516,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32_fromMemory":{"entryPoint":539,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint64_fromMemory":{"entryPoint":562,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_addresst_uint64t_bytes32t_uint32_fromMemory":{"entryPoint":585,"id":null,"parameterSlots":2,"returnSlots":6},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":741,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":761,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":771,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":803,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":819,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":839,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":844,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":870,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":896,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint64":{"entryPoint":922,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3090:18","statements":[{"body":{"nodeType":"YulBlock","src":"70:80:18","statements":[{"nodeType":"YulAssignment","src":"80:22:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"89:5:18"},"nodeType":"YulFunctionCall","src":"89:13:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"80:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"138:5:18"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"111:26:18"},"nodeType":"YulFunctionCall","src":"111:33:18"},"nodeType":"YulExpressionStatement","src":"111:33:18"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"48:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"56:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"64:5:18","type":""}],"src":"7:143:18"},{"body":{"nodeType":"YulBlock","src":"219:80:18","statements":[{"nodeType":"YulAssignment","src":"229:22:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"244:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"238:5:18"},"nodeType":"YulFunctionCall","src":"238:13:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"229:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"287:5:18"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"260:26:18"},"nodeType":"YulFunctionCall","src":"260:33:18"},"nodeType":"YulExpressionStatement","src":"260:33:18"}]},"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"197:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"205:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"213:5:18","type":""}],"src":"156:143:18"},{"body":{"nodeType":"YulBlock","src":"367:79:18","statements":[{"nodeType":"YulAssignment","src":"377:22:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"392:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"386:5:18"},"nodeType":"YulFunctionCall","src":"386:13:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"377:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"434:5:18"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"408:25:18"},"nodeType":"YulFunctionCall","src":"408:32:18"},"nodeType":"YulExpressionStatement","src":"408:32:18"}]},"name":"abi_decode_t_uint32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"345:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"353:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"361:5:18","type":""}],"src":"305:141:18"},{"body":{"nodeType":"YulBlock","src":"514:79:18","statements":[{"nodeType":"YulAssignment","src":"524:22:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"539:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"533:5:18"},"nodeType":"YulFunctionCall","src":"533:13:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"524:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"581:5:18"}],"functionName":{"name":"validator_revert_t_uint64","nodeType":"YulIdentifier","src":"555:25:18"},"nodeType":"YulFunctionCall","src":"555:32:18"},"nodeType":"YulExpressionStatement","src":"555:32:18"}]},"name":"abi_decode_t_uint64_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"492:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"500:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"508:5:18","type":""}],"src":"452:141:18"},{"body":{"nodeType":"YulBlock","src":"759:970:18","statements":[{"body":{"nodeType":"YulBlock","src":"806:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"808:77:18"},"nodeType":"YulFunctionCall","src":"808:79:18"},"nodeType":"YulExpressionStatement","src":"808:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"780:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"789:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"776:3:18"},"nodeType":"YulFunctionCall","src":"776:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"801:3:18","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"772:3:18"},"nodeType":"YulFunctionCall","src":"772:33:18"},"nodeType":"YulIf","src":"769:120:18"},{"nodeType":"YulBlock","src":"899:128:18","statements":[{"nodeType":"YulVariableDeclaration","src":"914:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"928:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"918:6:18","type":""}]},{"nodeType":"YulAssignment","src":"943:74:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"989:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"1000:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"985:3:18"},"nodeType":"YulFunctionCall","src":"985:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1009:7:18"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"953:31:18"},"nodeType":"YulFunctionCall","src":"953:64:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"943:6:18"}]}]},{"nodeType":"YulBlock","src":"1037:129:18","statements":[{"nodeType":"YulVariableDeclaration","src":"1052:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"1066:2:18","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1056:6:18","type":""}]},{"nodeType":"YulAssignment","src":"1082:74:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1128:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"1139:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1124:3:18"},"nodeType":"YulFunctionCall","src":"1124:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1148:7:18"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1092:31:18"},"nodeType":"YulFunctionCall","src":"1092:64:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1082:6:18"}]}]},{"nodeType":"YulBlock","src":"1176:129:18","statements":[{"nodeType":"YulVariableDeclaration","src":"1191:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"1205:2:18","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1195:6:18","type":""}]},{"nodeType":"YulAssignment","src":"1221:74:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1267:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"1278:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1263:3:18"},"nodeType":"YulFunctionCall","src":"1263:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1287:7:18"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1231:31:18"},"nodeType":"YulFunctionCall","src":"1231:64:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1221:6:18"}]}]},{"nodeType":"YulBlock","src":"1315:128:18","statements":[{"nodeType":"YulVariableDeclaration","src":"1330:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"1344:2:18","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1334:6:18","type":""}]},{"nodeType":"YulAssignment","src":"1360:73:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1405:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"1416:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1401:3:18"},"nodeType":"YulFunctionCall","src":"1401:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1425:7:18"}],"functionName":{"name":"abi_decode_t_uint64_fromMemory","nodeType":"YulIdentifier","src":"1370:30:18"},"nodeType":"YulFunctionCall","src":"1370:63:18"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1360:6:18"}]}]},{"nodeType":"YulBlock","src":"1453:130:18","statements":[{"nodeType":"YulVariableDeclaration","src":"1468:17:18","value":{"kind":"number","nodeType":"YulLiteral","src":"1482:3:18","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1472:6:18","type":""}]},{"nodeType":"YulAssignment","src":"1499:74:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1545:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"1556:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1541:3:18"},"nodeType":"YulFunctionCall","src":"1541:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1565:7:18"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulIdentifier","src":"1509:31:18"},"nodeType":"YulFunctionCall","src":"1509:64:18"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"1499:6:18"}]}]},{"nodeType":"YulBlock","src":"1593:129:18","statements":[{"nodeType":"YulVariableDeclaration","src":"1608:17:18","value":{"kind":"number","nodeType":"YulLiteral","src":"1622:3:18","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1612:6:18","type":""}]},{"nodeType":"YulAssignment","src":"1639:73:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1684:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"1695:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1680:3:18"},"nodeType":"YulFunctionCall","src":"1680:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1704:7:18"}],"functionName":{"name":"abi_decode_t_uint32_fromMemory","nodeType":"YulIdentifier","src":"1649:30:18"},"nodeType":"YulFunctionCall","src":"1649:63:18"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"1639:6:18"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_addresst_uint64t_bytes32t_uint32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"689:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"700:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"712:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"720:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"728:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"736:6:18","type":""},{"name":"value4","nodeType":"YulTypedName","src":"744:6:18","type":""},{"name":"value5","nodeType":"YulTypedName","src":"752:6:18","type":""}],"src":"599:1130:18"},{"body":{"nodeType":"YulBlock","src":"1775:35:18","statements":[{"nodeType":"YulAssignment","src":"1785:19:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1801:2:18","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1795:5:18"},"nodeType":"YulFunctionCall","src":"1795:9:18"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1785:6:18"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1768:6:18","type":""}],"src":"1735:75:18"},{"body":{"nodeType":"YulBlock","src":"1861:51:18","statements":[{"nodeType":"YulAssignment","src":"1871:35:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1900:5:18"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1882:17:18"},"nodeType":"YulFunctionCall","src":"1882:24:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1871:7:18"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1843:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1853:7:18","type":""}],"src":"1816:96:18"},{"body":{"nodeType":"YulBlock","src":"1963:32:18","statements":[{"nodeType":"YulAssignment","src":"1973:16:18","value":{"name":"value","nodeType":"YulIdentifier","src":"1984:5:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1973:7:18"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1945:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1955:7:18","type":""}],"src":"1918:77:18"},{"body":{"nodeType":"YulBlock","src":"2046:81:18","statements":[{"nodeType":"YulAssignment","src":"2056:65:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2071:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"2078:42:18","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2067:3:18"},"nodeType":"YulFunctionCall","src":"2067:54:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2056:7:18"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2028:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2038:7:18","type":""}],"src":"2001:126:18"},{"body":{"nodeType":"YulBlock","src":"2177:49:18","statements":[{"nodeType":"YulAssignment","src":"2187:33:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2202:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"2209:10:18","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2198:3:18"},"nodeType":"YulFunctionCall","src":"2198:22:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2187:7:18"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2159:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2169:7:18","type":""}],"src":"2133:93:18"},{"body":{"nodeType":"YulBlock","src":"2276:57:18","statements":[{"nodeType":"YulAssignment","src":"2286:41:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2301:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"2308:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2297:3:18"},"nodeType":"YulFunctionCall","src":"2297:30:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2286:7:18"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2258:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2268:7:18","type":""}],"src":"2232:101:18"},{"body":{"nodeType":"YulBlock","src":"2428:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2445:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2448:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2438:6:18"},"nodeType":"YulFunctionCall","src":"2438:12:18"},"nodeType":"YulExpressionStatement","src":"2438:12:18"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"2339:117:18"},{"body":{"nodeType":"YulBlock","src":"2551:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2568:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2571:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2561:6:18"},"nodeType":"YulFunctionCall","src":"2561:12:18"},"nodeType":"YulExpressionStatement","src":"2561:12:18"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"2462:117:18"},{"body":{"nodeType":"YulBlock","src":"2628:79:18","statements":[{"body":{"nodeType":"YulBlock","src":"2685:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2694:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2697:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2687:6:18"},"nodeType":"YulFunctionCall","src":"2687:12:18"},"nodeType":"YulExpressionStatement","src":"2687:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2651:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2676:5:18"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2658:17:18"},"nodeType":"YulFunctionCall","src":"2658:24:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2648:2:18"},"nodeType":"YulFunctionCall","src":"2648:35:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2641:6:18"},"nodeType":"YulFunctionCall","src":"2641:43:18"},"nodeType":"YulIf","src":"2638:63:18"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2621:5:18","type":""}],"src":"2585:122:18"},{"body":{"nodeType":"YulBlock","src":"2756:79:18","statements":[{"body":{"nodeType":"YulBlock","src":"2813:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2822:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2825:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2815:6:18"},"nodeType":"YulFunctionCall","src":"2815:12:18"},"nodeType":"YulExpressionStatement","src":"2815:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2779:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2804:5:18"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"2786:17:18"},"nodeType":"YulFunctionCall","src":"2786:24:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2776:2:18"},"nodeType":"YulFunctionCall","src":"2776:35:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2769:6:18"},"nodeType":"YulFunctionCall","src":"2769:43:18"},"nodeType":"YulIf","src":"2766:63:18"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2749:5:18","type":""}],"src":"2713:122:18"},{"body":{"nodeType":"YulBlock","src":"2883:78:18","statements":[{"body":{"nodeType":"YulBlock","src":"2939:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2948:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2951:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2941:6:18"},"nodeType":"YulFunctionCall","src":"2941:12:18"},"nodeType":"YulExpressionStatement","src":"2941:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2906:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2930:5:18"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"2913:16:18"},"nodeType":"YulFunctionCall","src":"2913:23:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2903:2:18"},"nodeType":"YulFunctionCall","src":"2903:34:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2896:6:18"},"nodeType":"YulFunctionCall","src":"2896:42:18"},"nodeType":"YulIf","src":"2893:62:18"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2876:5:18","type":""}],"src":"2841:120:18"},{"body":{"nodeType":"YulBlock","src":"3009:78:18","statements":[{"body":{"nodeType":"YulBlock","src":"3065:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3074:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3077:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3067:6:18"},"nodeType":"YulFunctionCall","src":"3067:12:18"},"nodeType":"YulExpressionStatement","src":"3067:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3032:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3056:5:18"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"3039:16:18"},"nodeType":"YulFunctionCall","src":"3039:23:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3029:2:18"},"nodeType":"YulFunctionCall","src":"3029:34:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3022:6:18"},"nodeType":"YulFunctionCall","src":"3022:42:18"},"nodeType":"YulIf","src":"3019:62:18"}]},"name":"validator_revert_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3002:5:18","type":""}],"src":"2967:120:18"}]},"contents":"{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_t_uint32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_t_uint64_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint64t_bytes32t_uint32_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint64_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n}\n","id":18,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6101606040523480156200001257600080fd5b5060405162004fea38038062004fea833981810160405281019062000038919062000249565b838073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250505085600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508573ffffffffffffffffffffffffffffffffffffffff166101208173ffffffffffffffffffffffffffffffffffffffff1660601b815250508473ffffffffffffffffffffffffffffffffffffffff166101408173ffffffffffffffffffffffffffffffffffffffff1660601b8152505084600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508373ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508267ffffffffffffffff1660c08167ffffffffffffffff1660c01b815250508160e081815250508063ffffffff166101008163ffffffff1660e01b815250506000600581905550505050505050620003b4565b600081519050620001fe816200034c565b92915050565b600081519050620002158162000366565b92915050565b6000815190506200022c8162000380565b92915050565b60008151905062000243816200039a565b92915050565b60008060008060008060c0878903121562000269576200026862000347565b5b60006200027989828a01620001ed565b96505060206200028c89828a01620001ed565b95505060406200029f89828a01620001ed565b9450506060620002b289828a0162000232565b9350506080620002c589828a0162000204565b92505060a0620002d889828a016200021b565b9150509295509295509295565b6000620002f28262000303565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600063ffffffff82169050919050565b600067ffffffffffffffff82169050919050565b600080fd5b6200035781620002e5565b81146200036357600080fd5b50565b6200037181620002f9565b81146200037d57600080fd5b50565b6200038b8162000323565b81146200039757600080fd5b50565b620003a58162000333565b8114620003b157600080fd5b50565b60805160601c60a05160601c60c05160c01c60e0516101005160e01c6101205160601c6101405160601c614bc5620004256000396000505060006104d601526000612d0f01526000612ccb01526000612cec01526000612c8f01526000818161026801526102bc0152614bc56000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063533d765311610071578063533d765314610142578063570d2f2014610175578063703afc87146101a5578063e783c827146101d5578063e81fb49514610205578063eabfb83914610221576100a9565b806302cac05c146100ae578063123cb832146100cc5780631fe543e3146100ea5780632a3031a2146101065780632c0d555814610124575b600080fd5b6100b6610253565b6040516100c39190614674565b60405180910390f35b6100d4610260565b6040516100e19190614674565b60405180910390f35b61010460048036038101906100ff9190614226565b610266565b005b61010e610326565b60405161011b919061463e565b60405180910390f35b61012c61034c565b6040516101399190614659565b60405180910390f35b61015c600480360381019061015791906140af565b610372565b60405161016c949392919061468f565b60405180910390f35b61018f600480360381019061018a9190614109565b6103ef565b60405161019c9190614674565b60405180910390f35b6101bf60048036038101906101ba91906141cc565b61044e565b6040516101cc91906144f4565b60405180910390f35b6101ef60048036038101906101ea9190614305565b61048d565b6040516101fc91906144f4565b60405180910390f35b61021f600480360381019061021a9190614345565b6104d2565b005b61023b600480360381019061023691906141cc565b6114c6565b60405161024a93929190614538565b60405180910390f35b6000600280549050905090565b60055481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461031857337f00000000000000000000000000000000000000000000000000000000000000006040517f1cf993f400000000000000000000000000000000000000000000000000000000815260040161030f92919061450f565b60405180910390fd5b610322828261153d565b5050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050160149054906101000a900460ff16905084565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201826003811061044457610443614aae565b5b0154905092915050565b6002818154811061045e57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160205281600052604060002081600281106104a957600080fd5b016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60007f000000000000000000000000000000000000000000000000000000000000000090506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bdc60bf9866040518263ffffffff1660e01b81526004016105549190614674565b60006040518083038186803b15801561056c57600080fd5b505afa158015610580573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906105a99190614282565b50925050506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bdc60bf9866040518263ffffffff1660e01b815260040161060b9190614674565b60006040518083038186803b15801561062357600080fd5b505afa158015610637573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906106609190614282565b50925050506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bdc60bf9866040518263ffffffff1660e01b81526004016106c29190614674565b60006040518083038186803b1580156106da57600080fd5b505afa1580156106ee573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906107179190614282565b50925050503373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16636352211e896040518263ffffffff1660e01b815260040161076c9190614674565b60206040518083038186803b15801561078457600080fd5b505afa158015610798573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107bc91906140dc565b73ffffffffffffffffffffffffffffffffffffffff161415806107dd575082155b806107e757508587145b806107f157508486145b806107fb57508685145b15610832576040517f85696c6f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16636352211e886040518263ffffffff1660e01b81526004016108829190614674565b60206040518083038186803b15801561089a57600080fd5b505afa1580156108ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d291906140dc565b73ffffffffffffffffffffffffffffffffffffffff161415806108f3575081155b1561092a576040517f85696c6f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16636352211e876040518263ffffffff1660e01b815260040161097a9190614674565b60206040518083038186803b15801561099257600080fd5b505afa1580156109a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ca91906140dc565b73ffffffffffffffffffffffffffffffffffffffff161415806109eb575080155b15610a22576040517f85696c6f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016003811115610a3657610a35614a50565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050160149054906101000a900460ff166003811115610a9757610a96614a50565b5b1415610acf576040517f4173115d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006002805490501415610d59576002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040518060a0016040528060055481526020013373ffffffffffffffffffffffffffffffffffffffff16815260200160405180606001604052808a8152602001898152602001888152508152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160006003811115610bc057610bbf614a50565b5b8152506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201906003610c69929190613daf565b5060608201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160050160146101000a81548160ff02191690836003811115610cdc57610cdb614a50565b5b02179055509050507fdbef1b3fbd727e0f6d68a939317676615e5672a68159020edbd96a09f055a8463360405180606001604052808a815260200189815260200188815250600080604051610d3494939291906145a6565b60405180910390a160056000815480929190610d4f90614978565b91905055506114bd565b60006002600081548110610d7057610d6f614aae565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610e03576040517f6e04f53700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201600380602002604051908101604052809291908260038015610eea576020028201915b815481526020019060010190808311610ed6575b505050505081526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160149054906101000a900460ff166003811115610f6e57610f6d614a50565b5b6003811115610f8057610f7f614a50565b5b8152505090506040518060a00160405280826000015181526020018373ffffffffffffffffffffffffffffffffffffffff168152602001826040015181526020013373ffffffffffffffffffffffffffffffffffffffff16815260200160016003811115610ff157610ff0614a50565b5b8152506000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020190600361109a929190613daf565b5060608201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160050160146101000a81548160ff0219169083600381111561110d5761110c614a50565b5b02179055509050506040518060a00160405280826000015181526020013373ffffffffffffffffffffffffffffffffffffffff16815260200160405180606001604052808c81526020018b81526020018a81525081526020018373ffffffffffffffffffffffffffffffffffffffff1681526020016001600381111561119657611195614a50565b5b8152506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020190600361123f929190613daf565b5060608201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160050160146101000a81548160ff021916908360038111156112b2576112b1614a50565b5b021790555090505060005b600280549050811015611475578273ffffffffffffffffffffffffffffffffffffffff16600282815481106112f5576112f4614aae565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156114625760008190505b600160028054905061135491906147ef565b81101561141557600260018261136a9190614799565b8154811061137b5761137a614aae565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600282815481106113ba576113b9614aae565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808061140d90614978565b915050611342565b50600280548061142857611427614a7f565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690559055611475565b808061146d90614978565b9150506112bd565b507f3182b38841de065eded850f9e9fa30850bb37c3a57df9bef3841138a94b7295633836040516114a792919061450f565b60405180910390a16114b93383612279565b5050505b50505050505050565b60066020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900460ff16905083565b6000600160008481526020019081526020016000206002806020026040519081016040528092919082600280156115bf576020028201915b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611575575b5050505050905060006115e9826000600281106115df576115de614aae565b5b6020020151612e78565b9050600061160e8360016002811061160457611603614aae565b5b6020020151612e78565b90506040518060a001604052806000808660006002811061163257611631614aae565b5b602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015481526020018460006002811061168e5761168d614aae565b5b602002015173ffffffffffffffffffffffffffffffffffffffff168152602001600080866000600281106116c5576116c4614aae565b5b602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160038060200260405190810160405280929190826003801561173e576020028201915b81548152602001906001019080831161172a575b505050505081526020018460016002811061175c5761175b614aae565b5b602002015173ffffffffffffffffffffffffffffffffffffffff16815260200160038081111561178f5761178e614a50565b5b815250600080856000600281106117a9576117a8614aae565b5b602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201906003611850929190613daf565b5060608201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160050160146101000a81548160ff021916908360038111156118c3576118c2614a50565b5b02179055509050506040518060a00160405280600080866001600281106118ed576118ec614aae565b5b602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015481526020018460016002811061194957611948614aae565b5b602002015173ffffffffffffffffffffffffffffffffffffffff168152602001600080866001600281106119805761197f614aae565b5b602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002016003806020026040519081016040528092919082600380156119f9576020028201915b8154815260200190600101908083116119e5575b5050505050815260200184600060028110611a1757611a16614aae565b5b602002015173ffffffffffffffffffffffffffffffffffffffff168152602001600380811115611a4a57611a49614a50565b5b81525060008085600160028110611a6457611a63614aae565b5b602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201906003611b0b929190613daf565b5060608201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160050160146101000a81548160ff02191690836003811115611b7e57611b7d614a50565b5b02179055509050506000600385600081518110611b9e57611b9d614aae565b5b6020026020010151611bb091906149c1565b90506000806000915060009050838360038110611bd057611bcf614aae565b5b602002015160200151858460038110611bec57611beb614aae565b5b6020020151602001511115611c0e578180611c0690614978565b925050611c7d565b838360038110611c2157611c20614aae565b5b602002015160200151858460038110611c3d57611c3c614aae565b5b6020020151602001511015611c5f578080611c5790614978565b915050611c7c565b8180611c6a90614978565b9250508080611c7890614978565b9150505b5b6000806000600160008c8152602001908152602001600020600060028110611ca857611ca7614aae565b5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050611d12613def565b611d1a613def565b60005b6003811015611e395786811415611d3357611e26565b86811015611da657888160038110611d4e57611d4d614aae565b5b6020020151838260028110611d6657611d65614aae565b5b6020020181905250878160038110611d8157611d80614aae565b5b6020020151828260028110611d9957611d98614aae565b5b6020020181905250611e25565b888160038110611db957611db8614aae565b5b602002015183600183611dcc91906147ef565b60028110611ddd57611ddc614aae565b5b6020020181905250878160038110611df857611df7614aae565b5b602002015182600183611e0b91906147ef565b60028110611e1c57611e1b614aae565b5b60200201819052505b5b8080611e3190614978565b915050611d1d565b508060028b600181518110611e5157611e50614aae565b5b6020026020010151611e6391906149c1565b60028110611e7457611e73614aae565b5b6020020151604001518260028c600181518110611e9457611e93614aae565b5b6020026020010151611ea691906149c1565b60028110611eb757611eb6614aae565b5b6020020151604001511115611ed9578480611ed190614978565b955050611f96565b8060028b600181518110611ef057611eef614aae565b5b6020026020010151611f0291906149c1565b60028110611f1357611f12614aae565b5b6020020151604001518260028c600181518110611f3357611f32614aae565b5b6020026020010151611f4591906149c1565b60028110611f5657611f55614aae565b5b6020020151604001511015611f78578380611f7090614978565b945050611f95565b8480611f8390614978565b9550508380611f9190614978565b9450505b5b611f9e613e1c565b611fa6613e1c565b60005b60028110156121135760028d600181518110611fc857611fc7614aae565b5b6020026020010151611fda91906149c1565b811415611fe657612100565b60028d600181518110611ffc57611ffb614aae565b5b602002602001015161200e91906149c1565b8110156120805784816002811061202857612027614aae565b5b60200201518382600181106120405761203f614aae565b5b602002018190525083816002811061205b5761205a614aae565b5b602002015182826001811061207357612072614aae565b5b60200201819052506120ff565b84816002811061209357612092614aae565b5b6020020151836001836120a691906147ef565b600181106120b7576120b6614aae565b5b60200201819052508381600281106120d2576120d1614aae565b5b6020020151826001836120e591906147ef565b600181106120f6576120f5614aae565b5b60200201819052505b5b808061210b90614978565b915050611fa9565b5060008b60006002811061212a57612129614aae565b5b6020020151905060008c60016002811061214757612146614aae565b5b602002015190508260006001811061216257612161614aae565b5b6020020151606001518460006001811061217f5761217e614aae565b5b60200201516060015111156121a157888061219990614978565b995050612212565b826000600181106121b5576121b4614aae565b5b602002015160600151846000600181106121d2576121d1614aae565b5b60200201516060015110156121f45787806121ec90614978565b985050612211565b88806121ff90614978565b995050878061220d90614978565b9850505b5b6000806000612224858d868e8e6131d0565b9250925092507f73755bcca91241f24d43f19dfd87dd6903d53f215f04fe1277e6a4d826ae8e6883838360405161225d93929190614538565b60405180910390a1505050505050505050505050505050505050565b600082828173ffffffffffffffffffffffffffffffffffffffff166000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415806123a657508073ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b156123dd576040517f77be31cd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160038111156123f1576123f0614a50565b5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050160149054906101000a900460ff16600381111561245257612451614a50565b5b1415806124d257506001600381111561246e5761246d614a50565b5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050160149054906101000a900460ff1660038111156124cf576124ce614a50565b5b14155b15612509576040517f6e04f53700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614158061263257508173ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b15612669576040517f1b907f6100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201600380602002604051908101604052809291908260038015612750576020028201915b81548152602001906001019080831161273c575b505050505081526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160149054906101000a900460ff1660038111156127d4576127d3614a50565b5b60038111156127e6576127e5614a50565b5b81525050905060008060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282016003806020026040519081016040528092919082600380156128d3576020028201915b8154815260200190600101908083116128bf575b505050505081526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160149054906101000a900460ff16600381111561295757612956614a50565b5b600381111561296957612968614a50565b5b8152505090506040518060a00160405280836000015181526020018873ffffffffffffffffffffffffffffffffffffffff168152602001836040015181526020018773ffffffffffffffffffffffffffffffffffffffff168152602001600260038111156129da576129d9614a50565b5b8152506000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201906003612a83929190613daf565b5060608201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160050160146101000a81548160ff02191690836003811115612af657612af5614a50565b5b02179055509050506040518060a00160405280836000015181526020018773ffffffffffffffffffffffffffffffffffffffff168152602001826040015181526020018873ffffffffffffffffffffffffffffffffffffffff16815260200160026003811115612b6957612b68614a50565b5b8152506000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201906003612c12929190613daf565b5060608201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160050160146101000a81548160ff02191690836003811115612c8557612c84614a50565b5b02179055509050507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635d3b1d307f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000060037f000000000000000000000000000000000000000000000000000000000000000060036040518663ffffffff1660e01b8152600401612d509594939291906145eb565b602060405180830381600087803b158015612d6a57600080fd5b505af1158015612d7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612da291906141f9565b945060405180604001604052808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525060016000878152602001908152602001600020906002612e32929190613e49565b507f3e817b1c20f032334f718d10f44d60d4f63e5807f8f8f4319cdf7f5f8a98e880878787604051612e669392919061456f565b60405180910390a15050505092915050565b612e80613ec6565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201600380602002604051908101604052809291908260038015612efa576020028201915b815481526020019060010190808311612ee6575b50505050509050600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bdc60bf984600060038110612f5657612f55614aae565b5b60200201516040518263ffffffff1660e01b8152600401612f779190614674565b60006040518083038186803b158015612f8f57600080fd5b505afa158015612fa3573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190612fcc9190614282565b935050925050600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bdc60bf98660016003811061302757613026614aae565b5b60200201516040518263ffffffff1660e01b81526004016130489190614674565b60006040518083038186803b15801561306057600080fd5b505afa158015613074573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061309d9190614282565b935050925050600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bdc60bf9886002600381106130f8576130f7614aae565b5b60200201516040518263ffffffff1660e01b81526004016131199190614674565b60006040518083038186803b15801561313157600080fd5b505afa158015613145573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061316e9190614282565b93505092505060006131808688613544565b9050600061318e8587613544565b9050600061319c8486613544565b905060006040518060600160405280858152602001848152602001838152509050809b505050505050505050505050919050565b6000806000848711156132fa5760405180606001604052808973ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff168152602001600015158152506006600086815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff02191690831515021790555090505087866000925092509250613539565b8685111561341f5760405180606001604052808773ffffffffffffffffffffffffffffffffffffffff1681526020018973ffffffffffffffffffffffffffffffffffffffff168152602001600015158152506006600086815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff02191690831515021790555090505085886000925092509250613539565b60405180606001604052808973ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff168152602001600115158152506006600086815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff02191690831515021790555090505060008060019250925092505b955095509592505050565b61354c613ef3565b60008314156138165760005b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166365c889db6040518163ffffffff1660e01b815260040160206040518083038186803b1580156135c057600080fd5b505afa1580156135d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135f891906141f9565b811015613810576000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634132607b836040518263ffffffff1660e01b815260040161365c9190614674565b60006040518083038186803b15801561367457600080fd5b505afa158015613688573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906136b19190614149565b5050509050836040516020016136c791906144dd565b60405160208183030381529060405280519060200120816040516020016136ee91906144dd565b6040516020818303038152906040528051906020012014156137fc57600080600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634132607b876040518263ffffffff1660e01b815260040161376b9190614674565b60006040518083038186803b15801561378357600080fd5b505afa158015613797573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906137c09190614149565b93509350935093506000604051806080016040528086815260200185815260200184815260200183815250905080975050505050505050613da9565b50808061380890614978565b915050613558565b50613da8565b6001831415613ae05760005b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630a83de166040518163ffffffff1660e01b815260040160206040518083038186803b15801561388a57600080fd5b505afa15801561389e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138c291906141f9565b811015613ada576000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cff2c359836040518263ffffffff1660e01b81526004016139269190614674565b60006040518083038186803b15801561393e57600080fd5b505afa158015613952573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061397b9190614149565b50505090508360405160200161399191906144dd565b60405160208183030381529060405280519060200120816040516020016139b891906144dd565b604051602081830303815290604052805190602001201415613ac657600080600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cff2c359876040518263ffffffff1660e01b8152600401613a359190614674565b60006040518083038186803b158015613a4d57600080fd5b505afa158015613a61573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190613a8a9190614149565b93509350935093506000604051806080016040528086815260200185815260200184815260200183815250905080975050505050505050613da9565b508080613ad290614978565b915050613822565b50613da7565b6002831415613da65760005b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166371be70026040518163ffffffff1660e01b815260040160206040518083038186803b158015613b5457600080fd5b505afa158015613b68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613b8c91906141f9565b811015613da4576000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639cfa7daa836040518263ffffffff1660e01b8152600401613bf09190614674565b60006040518083038186803b158015613c0857600080fd5b505afa158015613c1c573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190613c459190614149565b505050905083604051602001613c5b91906144dd565b6040516020818303038152906040528051906020012081604051602001613c8291906144dd565b604051602081830303815290604052805190602001201415613d9057600080600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639cfa7daa876040518263ffffffff1660e01b8152600401613cff9190614674565b60006040518083038186803b158015613d1757600080fd5b505afa158015613d2b573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190613d549190614149565b93509350935093506000604051806080016040528086815260200185815260200184815260200183815250905080975050505050505050613da9565b508080613d9c90614978565b915050613aec565b505b5b5b5b92915050565b8260038101928215613dde579160200282015b82811115613ddd578251825591602001919060010190613dc2565b5b509050613deb9190613f1b565b5090565b60405180604001604052806002905b613e06613ef3565b815260200190600190039081613dfe5790505090565b60405180602001604052806001905b613e33613ef3565b815260200190600190039081613e2b5790505090565b8260028101928215613eb5579160200282015b82811115613eb45782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190613e5c565b5b509050613ec29190613f1b565b5090565b60405180606001604052806003905b613edd613ef3565b815260200190600190039081613ed55790505090565b6040518060800160405280606081526020016000815260200160008152602001600081525090565b5b80821115613f34576000816000905550600101613f1c565b5090565b6000613f4b613f46846146f9565b6146d4565b90508083825260208201905082856020860282011115613f6e57613f6d614b11565b5b60005b85811015613f9e5781613f848882614085565b845260208401935060208301925050600181019050613f71565b5050509392505050565b6000613fbb613fb684614725565b6146d4565b905082815260208101848484011115613fd757613fd6614b16565b5b613fe2848285614914565b509392505050565b600081359050613ff981614b4a565b92915050565b60008151905061400e81614b4a565b92915050565b600082601f83011261402957614028614b0c565b5b8135614039848260208601613f38565b91505092915050565b60008151905061405181614b61565b92915050565b600082601f83011261406c5761406b614b0c565b5b815161407c848260208601613fa8565b91505092915050565b60008135905061409481614b78565b92915050565b6000815190506140a981614b78565b92915050565b6000602082840312156140c5576140c4614b20565b5b60006140d384828501613fea565b91505092915050565b6000602082840312156140f2576140f1614b20565b5b600061410084828501613fff565b91505092915050565b600080604083850312156141205761411f614b20565b5b600061412e85828601613fea565b925050602061413f85828601614085565b9150509250929050565b6000806000806080858703121561416357614162614b20565b5b600085015167ffffffffffffffff81111561418157614180614b1b565b5b61418d87828801614057565b945050602061419e8782880161409a565b93505060406141af8782880161409a565b92505060606141c08782880161409a565b91505092959194509250565b6000602082840312156141e2576141e1614b20565b5b60006141f084828501614085565b91505092915050565b60006020828403121561420f5761420e614b20565b5b600061421d8482850161409a565b91505092915050565b6000806040838503121561423d5761423c614b20565b5b600061424b85828601614085565b925050602083013567ffffffffffffffff81111561426c5761426b614b1b565b5b61427885828601614014565b9150509250929050565b6000806000806080858703121561429c5761429b614b20565b5b60006142aa8782880161409a565b945050602085015167ffffffffffffffff8111156142cb576142ca614b1b565b5b6142d787828801614057565b93505060406142e887828801614042565b92505060606142f98782880161409a565b91505092959194509250565b6000806040838503121561431c5761431b614b20565b5b600061432a85828601614085565b925050602061433b85828601614085565b9150509250929050565b60008060006060848603121561435e5761435d614b20565b5b600061436c86828701614085565b935050602061437d86828701614085565b925050604061438e86828701614085565b9150509250925092565b60006143a483836144a1565b60208301905092915050565b6143b981614823565b82525050565b6143c881614760565b6143d28184614783565b92506143dd82614756565b8060005b8381101561440e5781516143f58782614398565b965061440083614776565b9250506001810190506143e1565b505050505050565b61441f81614835565b82525050565b61442e81614841565b82525050565b61443d816148ba565b82525050565b61444c816148cc565b82525050565b61445b816148de565b82525050565b600061446c8261476b565b614476818561478e565b9350614486818560208601614914565b80840191505092915050565b61449b8161485e565b82525050565b6144aa8161488c565b82525050565b6144b98161488c565b82525050565b6144c881614896565b82525050565b6144d7816148a6565b82525050565b60006144e98284614461565b915081905092915050565b600060208201905061450960008301846143b0565b92915050565b600060408201905061452460008301856143b0565b61453160208301846143b0565b9392505050565b600060608201905061454d60008301866143b0565b61455a60208301856143b0565b6145676040830184614416565b949350505050565b600060608201905061458460008301866143b0565b61459160208301856143b0565b61459e60408301846144b0565b949350505050565b600060c0820190506145bb60008301876143b0565b6145c860208301866143bf565b6145d560808301856143b0565b6145e260a0830184614452565b95945050505050565b600060a0820190506146006000830188614425565b61460d60208301876144ce565b61461a6040830186614492565b61462760608301856144bf565b61463460808301846144bf565b9695505050505050565b60006020820190506146536000830184614434565b92915050565b600060208201905061466e6000830184614443565b92915050565b600060208201905061468960008301846144b0565b92915050565b60006080820190506146a460008301876144b0565b6146b160208301866143b0565b6146be60408301856143b0565b6146cb6060830184614452565b95945050505050565b60006146de6146ef565b90506146ea8282614947565b919050565b6000604051905090565b600067ffffffffffffffff82111561471457614713614add565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156147405761473f614add565b5b61474982614b25565b9050602081019050919050565b6000819050919050565b600060039050919050565b600081519050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b60006147a48261488c565b91506147af8361488c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156147e4576147e36149f2565b5b828201905092915050565b60006147fa8261488c565b91506148058361488c565b925082821015614818576148176149f2565b5b828203905092915050565b600061482e8261486c565b9050919050565b60008115159050919050565b6000819050919050565b600081905061485982614b36565b919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600067ffffffffffffffff82169050919050565b60006148c5826148f0565b9050919050565b60006148d7826148f0565b9050919050565b60006148e98261484b565b9050919050565b60006148fb82614902565b9050919050565b600061490d8261486c565b9050919050565b60005b83811015614932578082015181840152602081019050614917565b83811115614941576000848401525b50505050565b61495082614b25565b810181811067ffffffffffffffff8211171561496f5761496e614add565b5b80604052505050565b60006149838261488c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156149b6576149b56149f2565b5b600182019050919050565b60006149cc8261488c565b91506149d78361488c565b9250826149e7576149e6614a21565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b60048110614b4757614b46614a50565b5b50565b614b5381614823565b8114614b5e57600080fd5b50565b614b6a81614835565b8114614b7557600080fd5b50565b614b818161488c565b8114614b8c57600080fd5b5056fea2646970667358221220e5c45367cfac1f720a0cfe36fcc89c2262b8fb5192bf8b047395c912e3e812ed64736f6c63430008070033","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x4FEA CODESIZE SUB DUP1 PUSH3 0x4FEA DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x38 SWAP2 SWAP1 PUSH3 0x249 JUMP JUMPDEST DUP4 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP POP DUP6 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x120 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x140 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP DUP5 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0xC0 SHL DUP2 MSTORE POP POP DUP2 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 PUSH4 0xFFFFFFFF AND PUSH2 0x100 DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE POP POP PUSH1 0x0 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP PUSH3 0x3B4 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1FE DUP2 PUSH3 0x34C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x215 DUP2 PUSH3 0x366 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x22C DUP2 PUSH3 0x380 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x243 DUP2 PUSH3 0x39A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH3 0x269 JUMPI PUSH3 0x268 PUSH3 0x347 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x279 DUP10 DUP3 DUP11 ADD PUSH3 0x1ED JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH3 0x28C DUP10 DUP3 DUP11 ADD PUSH3 0x1ED JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH3 0x29F DUP10 DUP3 DUP11 ADD PUSH3 0x1ED JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH3 0x2B2 DUP10 DUP3 DUP11 ADD PUSH3 0x232 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH3 0x2C5 DUP10 DUP3 DUP11 ADD PUSH3 0x204 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH3 0x2D8 DUP10 DUP3 DUP11 ADD PUSH3 0x21B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2F2 DUP3 PUSH3 0x303 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x357 DUP2 PUSH3 0x2E5 JUMP JUMPDEST DUP2 EQ PUSH3 0x363 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x371 DUP2 PUSH3 0x2F9 JUMP JUMPDEST DUP2 EQ PUSH3 0x37D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x38B DUP2 PUSH3 0x323 JUMP JUMPDEST DUP2 EQ PUSH3 0x397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x3A5 DUP2 PUSH3 0x333 JUMP JUMPDEST DUP2 EQ PUSH3 0x3B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH1 0xC0 MLOAD PUSH1 0xC0 SHR PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH1 0xE0 SHR PUSH2 0x120 MLOAD PUSH1 0x60 SHR PUSH2 0x140 MLOAD PUSH1 0x60 SHR PUSH2 0x4BC5 PUSH3 0x425 PUSH1 0x0 CODECOPY PUSH1 0x0 POP POP PUSH1 0x0 PUSH2 0x4D6 ADD MSTORE PUSH1 0x0 PUSH2 0x2D0F ADD MSTORE PUSH1 0x0 PUSH2 0x2CCB ADD MSTORE PUSH1 0x0 PUSH2 0x2CEC ADD MSTORE PUSH1 0x0 PUSH2 0x2C8F ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x268 ADD MSTORE PUSH2 0x2BC ADD MSTORE PUSH2 0x4BC5 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x533D7653 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x533D7653 EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x570D2F20 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x703AFC87 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0xE783C827 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0xE81FB495 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0xEABFB839 EQ PUSH2 0x221 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x2CAC05C EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x123CB832 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0x2A3031A2 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x2C0D5558 EQ PUSH2 0x124 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x253 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x4674 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD4 PUSH2 0x260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0x4674 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFF SWAP2 SWAP1 PUSH2 0x4226 JUMP JUMPDEST PUSH2 0x266 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10E PUSH2 0x326 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11B SWAP2 SWAP1 PUSH2 0x463E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12C PUSH2 0x34C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x139 SWAP2 SWAP1 PUSH2 0x4659 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x157 SWAP2 SWAP1 PUSH2 0x40AF JUMP JUMPDEST PUSH2 0x372 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x468F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x4109 JUMP JUMPDEST PUSH2 0x3EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x4674 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x41CC JUMP JUMPDEST PUSH2 0x44E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x44F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x4305 JUMP JUMPDEST PUSH2 0x48D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x44F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x4345 JUMP JUMPDEST PUSH2 0x4D2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x41CC JUMP JUMPDEST PUSH2 0x14C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4538 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x318 JUMPI CALLER PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30F SWAP3 SWAP2 SWAP1 PUSH2 0x450F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x322 DUP3 DUP3 PUSH2 0x153D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x5 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP3 PUSH1 0x3 DUP2 LT PUSH2 0x444 JUMPI PUSH2 0x443 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x45E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 PUSH1 0x2 DUP2 LT PUSH2 0x4A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ADD PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBDC60BF9 DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x554 SWAP2 SWAP1 PUSH2 0x4674 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x56C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x580 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5A9 SWAP2 SWAP1 PUSH2 0x4282 JUMP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBDC60BF9 DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60B SWAP2 SWAP1 PUSH2 0x4674 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x623 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x637 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x660 SWAP2 SWAP1 PUSH2 0x4282 JUMP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBDC60BF9 DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C2 SWAP2 SWAP1 PUSH2 0x4674 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x717 SWAP2 SWAP1 PUSH2 0x4282 JUMP JUMPDEST POP SWAP3 POP POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP10 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76C SWAP2 SWAP1 PUSH2 0x4674 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x784 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x798 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7BC SWAP2 SWAP1 PUSH2 0x40DC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x7DD JUMPI POP DUP3 ISZERO JUMPDEST DUP1 PUSH2 0x7E7 JUMPI POP DUP6 DUP8 EQ JUMPDEST DUP1 PUSH2 0x7F1 JUMPI POP DUP5 DUP7 EQ JUMPDEST DUP1 PUSH2 0x7FB JUMPI POP DUP7 DUP6 EQ JUMPDEST ISZERO PUSH2 0x832 JUMPI PUSH1 0x40 MLOAD PUSH32 0x85696C6F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP9 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x882 SWAP2 SWAP1 PUSH2 0x4674 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x89A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8D2 SWAP2 SWAP1 PUSH2 0x40DC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x8F3 JUMPI POP DUP2 ISZERO JUMPDEST ISZERO PUSH2 0x92A JUMPI PUSH1 0x40 MLOAD PUSH32 0x85696C6F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x97A SWAP2 SWAP1 PUSH2 0x4674 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x992 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9CA SWAP2 SWAP1 PUSH2 0x40DC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x9EB JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xA22 JUMPI PUSH1 0x40 MLOAD PUSH32 0x85696C6F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xA36 JUMPI PUSH2 0xA35 PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xA97 JUMPI PUSH2 0xA96 PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0xACF JUMPI PUSH1 0x40 MLOAD PUSH32 0x4173115D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD SWAP1 POP EQ ISZERO PUSH2 0xD59 JUMPI PUSH1 0x2 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP11 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xBC0 JUMPI PUSH2 0xBBF PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 PUSH1 0x3 PUSH2 0xC69 SWAP3 SWAP2 SWAP1 PUSH2 0x3DAF JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xCDC JUMPI PUSH2 0xCDB PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0xDBEF1B3FBD727E0F6D68A939317676615E5672A68159020EDBD96A09F055A846 CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP11 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE POP PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH2 0xD34 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x45A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x5 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xD4F SWAP1 PUSH2 0x4978 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0xD70 JUMPI PUSH2 0xD6F PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE03 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6E04F53700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x3 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x3 DUP1 ISZERO PUSH2 0xEEA JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xED6 JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xF6E JUMPI PUSH2 0xF6D PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xF80 JUMPI PUSH2 0xF7F PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x40 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xFF1 JUMPI PUSH2 0xFF0 PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 PUSH1 0x3 PUSH2 0x109A SWAP3 SWAP2 SWAP1 PUSH2 0x3DAF JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x110D JUMPI PUSH2 0x110C PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP13 DUP2 MSTORE PUSH1 0x20 ADD DUP12 DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1196 JUMPI PUSH2 0x1195 PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 PUSH1 0x3 PUSH2 0x123F SWAP3 SWAP2 SWAP1 PUSH2 0x3DAF JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x12B2 JUMPI PUSH2 0x12B1 PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1475 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x12F5 JUMPI PUSH2 0x12F4 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1462 JUMPI PUSH1 0x0 DUP2 SWAP1 POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP1 SLOAD SWAP1 POP PUSH2 0x1354 SWAP2 SWAP1 PUSH2 0x47EF JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x1415 JUMPI PUSH1 0x2 PUSH1 0x1 DUP3 PUSH2 0x136A SWAP2 SWAP1 PUSH2 0x4799 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x137B JUMPI PUSH2 0x137A PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x13BA JUMPI PUSH2 0x13B9 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x140D SWAP1 PUSH2 0x4978 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1342 JUMP JUMPDEST POP PUSH1 0x2 DUP1 SLOAD DUP1 PUSH2 0x1428 JUMPI PUSH2 0x1427 PUSH2 0x4A7F JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE PUSH2 0x1475 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x146D SWAP1 PUSH2 0x4978 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x12BD JUMP JUMPDEST POP PUSH32 0x3182B38841DE065EDED850F9E9FA30850BB37C3A57DF9BEF3841138A94B72956 CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0x14A7 SWAP3 SWAP2 SWAP1 PUSH2 0x450F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x14B9 CALLER DUP4 PUSH2 0x2279 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 DUP1 ISZERO PUSH2 0x15BF JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1575 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x15E9 DUP3 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x15DF JUMPI PUSH2 0x15DE PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x2E78 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x160E DUP4 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x1604 JUMPI PUSH2 0x1603 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x2E78 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP1 DUP7 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x1632 JUMPI PUSH2 0x1631 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x168E JUMPI PUSH2 0x168D PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 DUP7 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x16C5 JUMPI PUSH2 0x16C4 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x3 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x3 DUP1 ISZERO PUSH2 0x173E JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x172A JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x175C JUMPI PUSH2 0x175B PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x178F JUMPI PUSH2 0x178E PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP PUSH1 0x0 DUP1 DUP6 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x17A9 JUMPI PUSH2 0x17A8 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 PUSH1 0x3 PUSH2 0x1850 SWAP3 SWAP2 SWAP1 PUSH2 0x3DAF JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x18C3 JUMPI PUSH2 0x18C2 PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x18ED JUMPI PUSH2 0x18EC PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x1949 JUMPI PUSH2 0x1948 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x1980 JUMPI PUSH2 0x197F PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x3 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x3 DUP1 ISZERO PUSH2 0x19F9 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x19E5 JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x1A17 JUMPI PUSH2 0x1A16 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1A4A JUMPI PUSH2 0x1A49 PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x1A64 JUMPI PUSH2 0x1A63 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 PUSH1 0x3 PUSH2 0x1B0B SWAP3 SWAP2 SWAP1 PUSH2 0x3DAF JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1B7E JUMPI PUSH2 0x1B7D PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x0 PUSH1 0x3 DUP6 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1B9E JUMPI PUSH2 0x1B9D PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1BB0 SWAP2 SWAP1 PUSH2 0x49C1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP2 POP PUSH1 0x0 SWAP1 POP DUP4 DUP4 PUSH1 0x3 DUP2 LT PUSH2 0x1BD0 JUMPI PUSH2 0x1BCF PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x20 ADD MLOAD DUP6 DUP5 PUSH1 0x3 DUP2 LT PUSH2 0x1BEC JUMPI PUSH2 0x1BEB PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x20 ADD MLOAD GT ISZERO PUSH2 0x1C0E JUMPI DUP2 DUP1 PUSH2 0x1C06 SWAP1 PUSH2 0x4978 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x1C7D JUMP JUMPDEST DUP4 DUP4 PUSH1 0x3 DUP2 LT PUSH2 0x1C21 JUMPI PUSH2 0x1C20 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x20 ADD MLOAD DUP6 DUP5 PUSH1 0x3 DUP2 LT PUSH2 0x1C3D JUMPI PUSH2 0x1C3C PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x20 ADD MLOAD LT ISZERO PUSH2 0x1C5F JUMPI DUP1 DUP1 PUSH2 0x1C57 SWAP1 PUSH2 0x4978 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1C7C JUMP JUMPDEST DUP2 DUP1 PUSH2 0x1C6A SWAP1 PUSH2 0x4978 JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0x1C78 SWAP1 PUSH2 0x4978 JUMP JUMPDEST SWAP2 POP POP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x1CA8 JUMPI PUSH2 0x1CA7 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH2 0x1D12 PUSH2 0x3DEF JUMP JUMPDEST PUSH2 0x1D1A PUSH2 0x3DEF JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x1E39 JUMPI DUP7 DUP2 EQ ISZERO PUSH2 0x1D33 JUMPI PUSH2 0x1E26 JUMP JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x1DA6 JUMPI DUP9 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0x1D4E JUMPI PUSH2 0x1D4D PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 DUP3 PUSH1 0x2 DUP2 LT PUSH2 0x1D66 JUMPI PUSH2 0x1D65 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 SWAP1 MSTORE POP DUP8 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0x1D81 JUMPI PUSH2 0x1D80 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP3 DUP3 PUSH1 0x2 DUP2 LT PUSH2 0x1D99 JUMPI PUSH2 0x1D98 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 SWAP1 MSTORE POP PUSH2 0x1E25 JUMP JUMPDEST DUP9 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0x1DB9 JUMPI PUSH2 0x1DB8 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH1 0x1 DUP4 PUSH2 0x1DCC SWAP2 SWAP1 PUSH2 0x47EF JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x1DDD JUMPI PUSH2 0x1DDC PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 SWAP1 MSTORE POP DUP8 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0x1DF8 JUMPI PUSH2 0x1DF7 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP3 PUSH1 0x1 DUP4 PUSH2 0x1E0B SWAP2 SWAP1 PUSH2 0x47EF JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x1E1C JUMPI PUSH2 0x1E1B PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 SWAP1 MSTORE POP JUMPDEST JUMPDEST DUP1 DUP1 PUSH2 0x1E31 SWAP1 PUSH2 0x4978 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1D1D JUMP JUMPDEST POP DUP1 PUSH1 0x2 DUP12 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1E51 JUMPI PUSH2 0x1E50 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1E63 SWAP2 SWAP1 PUSH2 0x49C1 JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x1E74 JUMPI PUSH2 0x1E73 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 ADD MLOAD DUP3 PUSH1 0x2 DUP13 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1E94 JUMPI PUSH2 0x1E93 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1EA6 SWAP2 SWAP1 PUSH2 0x49C1 JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x1EB7 JUMPI PUSH2 0x1EB6 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 ADD MLOAD GT ISZERO PUSH2 0x1ED9 JUMPI DUP5 DUP1 PUSH2 0x1ED1 SWAP1 PUSH2 0x4978 JUMP JUMPDEST SWAP6 POP POP PUSH2 0x1F96 JUMP JUMPDEST DUP1 PUSH1 0x2 DUP12 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1EF0 JUMPI PUSH2 0x1EEF PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1F02 SWAP2 SWAP1 PUSH2 0x49C1 JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x1F13 JUMPI PUSH2 0x1F12 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 ADD MLOAD DUP3 PUSH1 0x2 DUP13 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1F33 JUMPI PUSH2 0x1F32 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1F45 SWAP2 SWAP1 PUSH2 0x49C1 JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x1F56 JUMPI PUSH2 0x1F55 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 ADD MLOAD LT ISZERO PUSH2 0x1F78 JUMPI DUP4 DUP1 PUSH2 0x1F70 SWAP1 PUSH2 0x4978 JUMP JUMPDEST SWAP5 POP POP PUSH2 0x1F95 JUMP JUMPDEST DUP5 DUP1 PUSH2 0x1F83 SWAP1 PUSH2 0x4978 JUMP JUMPDEST SWAP6 POP POP DUP4 DUP1 PUSH2 0x1F91 SWAP1 PUSH2 0x4978 JUMP JUMPDEST SWAP5 POP POP JUMPDEST JUMPDEST PUSH2 0x1F9E PUSH2 0x3E1C JUMP JUMPDEST PUSH2 0x1FA6 PUSH2 0x3E1C JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x2113 JUMPI PUSH1 0x2 DUP14 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1FC8 JUMPI PUSH2 0x1FC7 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1FDA SWAP2 SWAP1 PUSH2 0x49C1 JUMP JUMPDEST DUP2 EQ ISZERO PUSH2 0x1FE6 JUMPI PUSH2 0x2100 JUMP JUMPDEST PUSH1 0x2 DUP14 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1FFC JUMPI PUSH2 0x1FFB PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x200E SWAP2 SWAP1 PUSH2 0x49C1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x2080 JUMPI DUP5 DUP2 PUSH1 0x2 DUP2 LT PUSH2 0x2028 JUMPI PUSH2 0x2027 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 DUP3 PUSH1 0x1 DUP2 LT PUSH2 0x2040 JUMPI PUSH2 0x203F PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 SWAP1 MSTORE POP DUP4 DUP2 PUSH1 0x2 DUP2 LT PUSH2 0x205B JUMPI PUSH2 0x205A PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP3 DUP3 PUSH1 0x1 DUP2 LT PUSH2 0x2073 JUMPI PUSH2 0x2072 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 SWAP1 MSTORE POP PUSH2 0x20FF JUMP JUMPDEST DUP5 DUP2 PUSH1 0x2 DUP2 LT PUSH2 0x2093 JUMPI PUSH2 0x2092 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH1 0x1 DUP4 PUSH2 0x20A6 SWAP2 SWAP1 PUSH2 0x47EF JUMP JUMPDEST PUSH1 0x1 DUP2 LT PUSH2 0x20B7 JUMPI PUSH2 0x20B6 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 SWAP1 MSTORE POP DUP4 DUP2 PUSH1 0x2 DUP2 LT PUSH2 0x20D2 JUMPI PUSH2 0x20D1 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP3 PUSH1 0x1 DUP4 PUSH2 0x20E5 SWAP2 SWAP1 PUSH2 0x47EF JUMP JUMPDEST PUSH1 0x1 DUP2 LT PUSH2 0x20F6 JUMPI PUSH2 0x20F5 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 SWAP1 MSTORE POP JUMPDEST JUMPDEST DUP1 DUP1 PUSH2 0x210B SWAP1 PUSH2 0x4978 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1FA9 JUMP JUMPDEST POP PUSH1 0x0 DUP12 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x212A JUMPI PUSH2 0x2129 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD SWAP1 POP PUSH1 0x0 DUP13 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x2147 JUMPI PUSH2 0x2146 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD SWAP1 POP DUP3 PUSH1 0x0 PUSH1 0x1 DUP2 LT PUSH2 0x2162 JUMPI PUSH2 0x2161 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x0 PUSH1 0x1 DUP2 LT PUSH2 0x217F JUMPI PUSH2 0x217E PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x60 ADD MLOAD GT ISZERO PUSH2 0x21A1 JUMPI DUP9 DUP1 PUSH2 0x2199 SWAP1 PUSH2 0x4978 JUMP JUMPDEST SWAP10 POP POP PUSH2 0x2212 JUMP JUMPDEST DUP3 PUSH1 0x0 PUSH1 0x1 DUP2 LT PUSH2 0x21B5 JUMPI PUSH2 0x21B4 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x0 PUSH1 0x1 DUP2 LT PUSH2 0x21D2 JUMPI PUSH2 0x21D1 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x60 ADD MLOAD LT ISZERO PUSH2 0x21F4 JUMPI DUP8 DUP1 PUSH2 0x21EC SWAP1 PUSH2 0x4978 JUMP JUMPDEST SWAP9 POP POP PUSH2 0x2211 JUMP JUMPDEST DUP9 DUP1 PUSH2 0x21FF SWAP1 PUSH2 0x4978 JUMP JUMPDEST SWAP10 POP POP DUP8 DUP1 PUSH2 0x220D SWAP1 PUSH2 0x4978 JUMP JUMPDEST SWAP9 POP POP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x2224 DUP6 DUP14 DUP7 DUP15 DUP15 PUSH2 0x31D0 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH32 0x73755BCCA91241F24D43F19DFD87DD6903D53F215F04FE1277E6A4D826AE8E68 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x225D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4538 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x23A6 JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x23DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x77BE31CD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x23F1 JUMPI PUSH2 0x23F0 PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2452 JUMPI PUSH2 0x2451 PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST EQ ISZERO DUP1 PUSH2 0x24D2 JUMPI POP PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x246E JUMPI PUSH2 0x246D PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x24CF JUMPI PUSH2 0x24CE PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST EQ ISZERO JUMPDEST ISZERO PUSH2 0x2509 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6E04F53700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x2632 JUMPI POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x2669 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1B907F6100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x3 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x3 DUP1 ISZERO PUSH2 0x2750 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x273C JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x27D4 JUMPI PUSH2 0x27D3 PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x27E6 JUMPI PUSH2 0x27E5 PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x3 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x3 DUP1 ISZERO PUSH2 0x28D3 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x28BF JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2957 JUMPI PUSH2 0x2956 PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2969 JUMPI PUSH2 0x2968 PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x40 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x29DA JUMPI PUSH2 0x29D9 PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP PUSH1 0x0 DUP1 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 PUSH1 0x3 PUSH2 0x2A83 SWAP3 SWAP2 SWAP1 PUSH2 0x3DAF JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2AF6 JUMPI PUSH2 0x2AF5 PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x40 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2B69 JUMPI PUSH2 0x2B68 PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP PUSH1 0x0 DUP1 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 PUSH1 0x3 PUSH2 0x2C12 SWAP3 SWAP2 SWAP1 PUSH2 0x3DAF JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2C85 JUMPI PUSH2 0x2C84 PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D3B1D30 PUSH32 0x0 PUSH32 0x0 PUSH1 0x3 PUSH32 0x0 PUSH1 0x3 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D50 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x45EB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2D7E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2DA2 SWAP2 SWAP1 PUSH2 0x41F9 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 PUSH2 0x2E32 SWAP3 SWAP2 SWAP1 PUSH2 0x3E49 JUMP JUMPDEST POP PUSH32 0x3E817B1C20F032334F718D10F44D60D4F63E5807F8F8F4319CDF7F5F8A98E880 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2E66 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x456F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2E80 PUSH2 0x3EC6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x3 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x3 DUP1 ISZERO PUSH2 0x2EFA JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x2EE6 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBDC60BF9 DUP5 PUSH1 0x0 PUSH1 0x3 DUP2 LT PUSH2 0x2F56 JUMPI PUSH2 0x2F55 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F77 SWAP2 SWAP1 PUSH2 0x4674 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2F8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2FA3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2FCC SWAP2 SWAP1 PUSH2 0x4282 JUMP JUMPDEST SWAP4 POP POP SWAP3 POP POP PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBDC60BF9 DUP7 PUSH1 0x1 PUSH1 0x3 DUP2 LT PUSH2 0x3027 JUMPI PUSH2 0x3026 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3048 SWAP2 SWAP1 PUSH2 0x4674 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3060 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3074 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x309D SWAP2 SWAP1 PUSH2 0x4282 JUMP JUMPDEST SWAP4 POP POP SWAP3 POP POP PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBDC60BF9 DUP9 PUSH1 0x2 PUSH1 0x3 DUP2 LT PUSH2 0x30F8 JUMPI PUSH2 0x30F7 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3119 SWAP2 SWAP1 PUSH2 0x4674 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3145 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x316E SWAP2 SWAP1 PUSH2 0x4282 JUMP JUMPDEST SWAP4 POP POP SWAP3 POP POP PUSH1 0x0 PUSH2 0x3180 DUP7 DUP9 PUSH2 0x3544 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x318E DUP6 DUP8 PUSH2 0x3544 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x319C DUP5 DUP7 PUSH2 0x3544 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 POP DUP1 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP8 GT ISZERO PUSH2 0x32FA JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x6 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP8 DUP7 PUSH1 0x0 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x3539 JUMP JUMPDEST DUP7 DUP6 GT ISZERO PUSH2 0x341F JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x6 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP6 DUP9 PUSH1 0x0 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x3539 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x6 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x0 DUP1 PUSH1 0x1 SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x354C PUSH2 0x3EF3 JUMP JUMPDEST PUSH1 0x0 DUP4 EQ ISZERO PUSH2 0x3816 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x65C889DB PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x35C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x35D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x35F8 SWAP2 SWAP1 PUSH2 0x41F9 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x3810 JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4132607B DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x365C SWAP2 SWAP1 PUSH2 0x4674 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3674 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3688 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x36B1 SWAP2 SWAP1 PUSH2 0x4149 JUMP JUMPDEST POP POP POP SWAP1 POP DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x36C7 SWAP2 SWAP1 PUSH2 0x44DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x36EE SWAP2 SWAP1 PUSH2 0x44DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ ISZERO PUSH2 0x37FC JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4132607B DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x376B SWAP2 SWAP1 PUSH2 0x4674 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3783 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3797 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x37C0 SWAP2 SWAP1 PUSH2 0x4149 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 POP DUP1 SWAP8 POP POP POP POP POP POP POP POP PUSH2 0x3DA9 JUMP JUMPDEST POP DUP1 DUP1 PUSH2 0x3808 SWAP1 PUSH2 0x4978 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3558 JUMP JUMPDEST POP PUSH2 0x3DA8 JUMP JUMPDEST PUSH1 0x1 DUP4 EQ ISZERO PUSH2 0x3AE0 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA83DE16 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x388A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x389E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x38C2 SWAP2 SWAP1 PUSH2 0x41F9 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x3ADA JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCFF2C359 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3926 SWAP2 SWAP1 PUSH2 0x4674 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x393E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3952 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x397B SWAP2 SWAP1 PUSH2 0x4149 JUMP JUMPDEST POP POP POP SWAP1 POP DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3991 SWAP2 SWAP1 PUSH2 0x44DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x39B8 SWAP2 SWAP1 PUSH2 0x44DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ ISZERO PUSH2 0x3AC6 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCFF2C359 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A35 SWAP2 SWAP1 PUSH2 0x4674 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3A4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3A61 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3A8A SWAP2 SWAP1 PUSH2 0x4149 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 POP DUP1 SWAP8 POP POP POP POP POP POP POP POP PUSH2 0x3DA9 JUMP JUMPDEST POP DUP1 DUP1 PUSH2 0x3AD2 SWAP1 PUSH2 0x4978 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3822 JUMP JUMPDEST POP PUSH2 0x3DA7 JUMP JUMPDEST PUSH1 0x2 DUP4 EQ ISZERO PUSH2 0x3DA6 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x71BE7002 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3B54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3B68 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3B8C SWAP2 SWAP1 PUSH2 0x41F9 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x3DA4 JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9CFA7DAA DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BF0 SWAP2 SWAP1 PUSH2 0x4674 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3C08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3C1C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3C45 SWAP2 SWAP1 PUSH2 0x4149 JUMP JUMPDEST POP POP POP SWAP1 POP DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3C5B SWAP2 SWAP1 PUSH2 0x44DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3C82 SWAP2 SWAP1 PUSH2 0x44DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ ISZERO PUSH2 0x3D90 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9CFA7DAA DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CFF SWAP2 SWAP1 PUSH2 0x4674 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3D17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3D2B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3D54 SWAP2 SWAP1 PUSH2 0x4149 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 POP DUP1 SWAP8 POP POP POP POP POP POP POP POP PUSH2 0x3DA9 JUMP JUMPDEST POP DUP1 DUP1 PUSH2 0x3D9C SWAP1 PUSH2 0x4978 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3AEC JUMP JUMPDEST POP JUMPDEST JUMPDEST JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH1 0x3 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x3DDE JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x3DDD JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x3DC2 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x3DEB SWAP2 SWAP1 PUSH2 0x3F1B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 SWAP1 JUMPDEST PUSH2 0x3E06 PUSH2 0x3EF3 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x3DFE JUMPI SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 SWAP1 JUMPDEST PUSH2 0x3E33 PUSH2 0x3EF3 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x3E2B JUMPI SWAP1 POP POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x2 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x3EB5 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x3EB4 JUMPI DUP3 MLOAD DUP3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x3E5C JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x3EC2 SWAP2 SWAP1 PUSH2 0x3F1B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SWAP1 JUMPDEST PUSH2 0x3EDD PUSH2 0x3EF3 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x3ED5 JUMPI SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x3F34 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x3F1C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F4B PUSH2 0x3F46 DUP5 PUSH2 0x46F9 JUMP JUMPDEST PUSH2 0x46D4 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x3F6E JUMPI PUSH2 0x3F6D PUSH2 0x4B11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3F9E JUMPI DUP2 PUSH2 0x3F84 DUP9 DUP3 PUSH2 0x4085 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3F71 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FBB PUSH2 0x3FB6 DUP5 PUSH2 0x4725 JUMP JUMPDEST PUSH2 0x46D4 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3FD7 JUMPI PUSH2 0x3FD6 PUSH2 0x4B16 JUMP JUMPDEST JUMPDEST PUSH2 0x3FE2 DUP5 DUP3 DUP6 PUSH2 0x4914 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3FF9 DUP2 PUSH2 0x4B4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x400E DUP2 PUSH2 0x4B4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4029 JUMPI PUSH2 0x4028 PUSH2 0x4B0C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4039 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3F38 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4051 DUP2 PUSH2 0x4B61 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x406C JUMPI PUSH2 0x406B PUSH2 0x4B0C JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x407C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3FA8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4094 DUP2 PUSH2 0x4B78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x40A9 DUP2 PUSH2 0x4B78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x40C5 JUMPI PUSH2 0x40C4 PUSH2 0x4B20 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x40D3 DUP5 DUP3 DUP6 ADD PUSH2 0x3FEA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x40F2 JUMPI PUSH2 0x40F1 PUSH2 0x4B20 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4100 DUP5 DUP3 DUP6 ADD PUSH2 0x3FFF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4120 JUMPI PUSH2 0x411F PUSH2 0x4B20 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x412E DUP6 DUP3 DUP7 ADD PUSH2 0x3FEA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x413F DUP6 DUP3 DUP7 ADD PUSH2 0x4085 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4163 JUMPI PUSH2 0x4162 PUSH2 0x4B20 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4181 JUMPI PUSH2 0x4180 PUSH2 0x4B1B JUMP JUMPDEST JUMPDEST PUSH2 0x418D DUP8 DUP3 DUP9 ADD PUSH2 0x4057 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x419E DUP8 DUP3 DUP9 ADD PUSH2 0x409A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x41AF DUP8 DUP3 DUP9 ADD PUSH2 0x409A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x41C0 DUP8 DUP3 DUP9 ADD PUSH2 0x409A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x41E2 JUMPI PUSH2 0x41E1 PUSH2 0x4B20 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x41F0 DUP5 DUP3 DUP6 ADD PUSH2 0x4085 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x420F JUMPI PUSH2 0x420E PUSH2 0x4B20 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x421D DUP5 DUP3 DUP6 ADD PUSH2 0x409A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x423D JUMPI PUSH2 0x423C PUSH2 0x4B20 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x424B DUP6 DUP3 DUP7 ADD PUSH2 0x4085 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x426C JUMPI PUSH2 0x426B PUSH2 0x4B1B JUMP JUMPDEST JUMPDEST PUSH2 0x4278 DUP6 DUP3 DUP7 ADD PUSH2 0x4014 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x429C JUMPI PUSH2 0x429B PUSH2 0x4B20 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x42AA DUP8 DUP3 DUP9 ADD PUSH2 0x409A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x42CB JUMPI PUSH2 0x42CA PUSH2 0x4B1B JUMP JUMPDEST JUMPDEST PUSH2 0x42D7 DUP8 DUP3 DUP9 ADD PUSH2 0x4057 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x42E8 DUP8 DUP3 DUP9 ADD PUSH2 0x4042 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x42F9 DUP8 DUP3 DUP9 ADD PUSH2 0x409A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x431C JUMPI PUSH2 0x431B PUSH2 0x4B20 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x432A DUP6 DUP3 DUP7 ADD PUSH2 0x4085 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x433B DUP6 DUP3 DUP7 ADD PUSH2 0x4085 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x435E JUMPI PUSH2 0x435D PUSH2 0x4B20 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x436C DUP7 DUP3 DUP8 ADD PUSH2 0x4085 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x437D DUP7 DUP3 DUP8 ADD PUSH2 0x4085 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x438E DUP7 DUP3 DUP8 ADD PUSH2 0x4085 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43A4 DUP4 DUP4 PUSH2 0x44A1 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x43B9 DUP2 PUSH2 0x4823 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x43C8 DUP2 PUSH2 0x4760 JUMP JUMPDEST PUSH2 0x43D2 DUP2 DUP5 PUSH2 0x4783 JUMP JUMPDEST SWAP3 POP PUSH2 0x43DD DUP3 PUSH2 0x4756 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x440E JUMPI DUP2 MLOAD PUSH2 0x43F5 DUP8 DUP3 PUSH2 0x4398 JUMP JUMPDEST SWAP7 POP PUSH2 0x4400 DUP4 PUSH2 0x4776 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x43E1 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x441F DUP2 PUSH2 0x4835 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x442E DUP2 PUSH2 0x4841 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x443D DUP2 PUSH2 0x48BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x444C DUP2 PUSH2 0x48CC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x445B DUP2 PUSH2 0x48DE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x446C DUP3 PUSH2 0x476B JUMP JUMPDEST PUSH2 0x4476 DUP2 DUP6 PUSH2 0x478E JUMP JUMPDEST SWAP4 POP PUSH2 0x4486 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x4914 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x449B DUP2 PUSH2 0x485E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x44AA DUP2 PUSH2 0x488C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x44B9 DUP2 PUSH2 0x488C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x44C8 DUP2 PUSH2 0x4896 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x44D7 DUP2 PUSH2 0x48A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44E9 DUP3 DUP5 PUSH2 0x4461 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4509 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x43B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4524 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x43B0 JUMP JUMPDEST PUSH2 0x4531 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x43B0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x454D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x43B0 JUMP JUMPDEST PUSH2 0x455A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x43B0 JUMP JUMPDEST PUSH2 0x4567 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x4416 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x4584 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x43B0 JUMP JUMPDEST PUSH2 0x4591 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x43B0 JUMP JUMPDEST PUSH2 0x459E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x44B0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x45BB PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x43B0 JUMP JUMPDEST PUSH2 0x45C8 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x43BF JUMP JUMPDEST PUSH2 0x45D5 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x43B0 JUMP JUMPDEST PUSH2 0x45E2 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x4452 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x4600 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x4425 JUMP JUMPDEST PUSH2 0x460D PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x44CE JUMP JUMPDEST PUSH2 0x461A PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x4492 JUMP JUMPDEST PUSH2 0x4627 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x44BF JUMP JUMPDEST PUSH2 0x4634 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x44BF JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4653 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4434 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x466E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4443 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4689 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x44B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x46A4 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x44B0 JUMP JUMPDEST PUSH2 0x46B1 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x43B0 JUMP JUMPDEST PUSH2 0x46BE PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x43B0 JUMP JUMPDEST PUSH2 0x46CB PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x4452 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46DE PUSH2 0x46EF JUMP JUMPDEST SWAP1 POP PUSH2 0x46EA DUP3 DUP3 PUSH2 0x4947 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4714 JUMPI PUSH2 0x4713 PUSH2 0x4ADD JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4740 JUMPI PUSH2 0x473F PUSH2 0x4ADD JUMP JUMPDEST JUMPDEST PUSH2 0x4749 DUP3 PUSH2 0x4B25 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47A4 DUP3 PUSH2 0x488C JUMP JUMPDEST SWAP2 POP PUSH2 0x47AF DUP4 PUSH2 0x488C JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x47E4 JUMPI PUSH2 0x47E3 PUSH2 0x49F2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47FA DUP3 PUSH2 0x488C JUMP JUMPDEST SWAP2 POP PUSH2 0x4805 DUP4 PUSH2 0x488C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x4818 JUMPI PUSH2 0x4817 PUSH2 0x49F2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x482E DUP3 PUSH2 0x486C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x4859 DUP3 PUSH2 0x4B36 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48C5 DUP3 PUSH2 0x48F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48D7 DUP3 PUSH2 0x48F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48E9 DUP3 PUSH2 0x484B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48FB DUP3 PUSH2 0x4902 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x490D DUP3 PUSH2 0x486C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4932 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4917 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x4941 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x4950 DUP3 PUSH2 0x4B25 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x496F JUMPI PUSH2 0x496E PUSH2 0x4ADD JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4983 DUP3 PUSH2 0x488C JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x49B6 JUMPI PUSH2 0x49B5 PUSH2 0x49F2 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49CC DUP3 PUSH2 0x488C JUMP JUMPDEST SWAP2 POP PUSH2 0x49D7 DUP4 PUSH2 0x488C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x49E7 JUMPI PUSH2 0x49E6 PUSH2 0x4A21 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x4B47 JUMPI PUSH2 0x4B46 PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x4B53 DUP2 PUSH2 0x4823 JUMP JUMPDEST DUP2 EQ PUSH2 0x4B5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x4B6A DUP2 PUSH2 0x4835 JUMP JUMPDEST DUP2 EQ PUSH2 0x4B75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x4B81 DUP2 PUSH2 0x488C JUMP JUMPDEST DUP2 EQ PUSH2 0x4B8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 0xC4 MSTORE8 PUSH8 0xCFAC1F720A0CFE36 0xFC 0xC8 SWAP13 0x22 PUSH3 0xB8FB51 SWAP3 0xBF DUP12 DIV PUSH20 0x95C912E3E812ED64736F6C634300080700330000 ","sourceMap":"431:17016:16:-:0;;;2682:679;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2913:16;5616:15:0;5599:32;;;;;;;;;;;;5556:80;2968:13:16::1;2942:16;;:40;;;;;;;;;;;;;;;;;;3008:13;2993:28;;;;;;;;;;::::0;::::1;3053:16;3032:37;;;;;;;;;;::::0;::::1;3113:16;3080:19;;:50;;;;;;;;;;;;;;;;;;3186:16;3141:62;;;;;;;;;;::::0;::::1;3233:14;3214:33;;;;;;;;;;::::0;::::1;3270:7;3258:19;;;;::::0;::::1;3309:16;3288:37;;;;;;;;;;::::0;::::1;3352:1;3336:13;:17;;;;2682:679:::0;;;;;;431:17016;;7:143:18;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:::-;213:5;244:6;238:13;229:22;;260:33;287:5;260:33;:::i;:::-;156:143;;;;:::o;305:141::-;361:5;392:6;386:13;377:22;;408:32;434:5;408:32;:::i;:::-;305:141;;;;:::o;452:::-;508:5;539:6;533:13;524:22;;555:32;581:5;555:32;:::i;:::-;452:141;;;;:::o;599:1130::-;712:6;720;728;736;744;752;801:3;789:9;780:7;776:23;772:33;769:120;;;808:79;;:::i;:::-;769:120;928:1;953:64;1009:7;1000:6;989:9;985:22;953:64;:::i;:::-;943:74;;899:128;1066:2;1092:64;1148:7;1139:6;1128:9;1124:22;1092:64;:::i;:::-;1082:74;;1037:129;1205:2;1231:64;1287:7;1278:6;1267:9;1263:22;1231:64;:::i;:::-;1221:74;;1176:129;1344:2;1370:63;1425:7;1416:6;1405:9;1401:22;1370:63;:::i;:::-;1360:73;;1315:128;1482:3;1509:64;1565:7;1556:6;1545:9;1541:22;1509:64;:::i;:::-;1499:74;;1453:130;1622:3;1649:63;1704:7;1695:6;1684:9;1680:22;1649:63;:::i;:::-;1639:73;;1593:129;599:1130;;;;;;;;:::o;1816:96::-;1853:7;1882:24;1900:5;1882:24;:::i;:::-;1871:35;;1816:96;;;:::o;1918:77::-;1955:7;1984:5;1973:16;;1918:77;;;:::o;2001:126::-;2038:7;2078:42;2071:5;2067:54;2056:65;;2001:126;;;:::o;2133:93::-;2169:7;2209:10;2202:5;2198:22;2187:33;;2133:93;;;:::o;2232:101::-;2268:7;2308:18;2301:5;2297:30;2286:41;;2232:101;;;:::o;2462:117::-;2571:1;2568;2561:12;2585:122;2658:24;2676:5;2658:24;:::i;:::-;2651:5;2648:35;2638:63;;2697:1;2694;2687:12;2638:63;2585:122;:::o;2713:::-;2786:24;2804:5;2786:24;:::i;:::-;2779:5;2776:35;2766:63;;2825:1;2822;2815:12;2766:63;2713:122;:::o;2841:120::-;2913:23;2930:5;2913:23;:::i;:::-;2906:5;2903:34;2893:62;;2951:1;2948;2941:12;2893:62;2841:120;:::o;2967:::-;3039:23;3056:5;3039:23;:::i;:::-;3032:5;3029:34;3019:62;;3077:1;3074;3067:12;3019:62;2967:120;:::o;431:17016:16:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@currentPlayers_3251":{"entryPoint":1102,"id":3251,"parameterSlots":0,"returnSlots":0},"@enterGame_3670":{"entryPoint":1234,"id":3670,"parameterSlots":3,"returnSlots":0},"@finshedGames_3268":{"entryPoint":5318,"id":3268,"parameterSlots":0,"returnSlots":0},"@fulfillRandomWords_4205":{"entryPoint":5437,"id":4205,"parameterSlots":2,"returnSlots":0},"@getCharacter_4380":{"entryPoint":11896,"id":4380,"parameterSlots":1,"returnSlots":1},"@getCurrentPlayers_4607":{"entryPoint":595,"id":4607,"parameterSlots":0,"returnSlots":1},"@getData_4598":{"entryPoint":13636,"id":4598,"parameterSlots":2,"returnSlots":1},"@getResult_4281":{"entryPoint":12752,"id":4281,"parameterSlots":5,"returnSlots":3},"@getTokenIds_4624":{"entryPoint":1007,"id":4624,"parameterSlots":2,"returnSlots":1},"@i_contractCharacter_3261":{"entryPoint":806,"id":3261,"parameterSlots":0,"returnSlots":0},"@i_contractNftBox_3254":{"entryPoint":844,"id":3254,"parameterSlots":0,"returnSlots":0},"@playGame_3753":{"entryPoint":8825,"id":3753,"parameterSlots":2,"returnSlots":1},"@rawFulfillRandomWords_56":{"entryPoint":614,"id":56,"parameterSlots":2,"returnSlots":0},"@s_addressInfo_3242":{"entryPoint":882,"id":3242,"parameterSlots":0,"returnSlots":0},"@s_gameCounter_3263":{"entryPoint":608,"id":3263,"parameterSlots":0,"returnSlots":0},"@s_requestIdToPlayers_3248":{"entryPoint":1165,"id":3248,"parameterSlots":0,"returnSlots":0},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":16184,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":16296,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":16362,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":16383,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":16404,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":16450,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":16471,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":16517,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":16538,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":16559,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":16604,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":16649,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256t_uint256_fromMemory":{"entryPoint":16713,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256":{"entryPoint":16844,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":16889,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":16934,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_string_memory_ptrt_boolt_uint256_fromMemory":{"entryPoint":17026,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":17157,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256t_uint256":{"entryPoint":17221,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":17304,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":17328,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack":{"entryPoint":17343,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":17430,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":17445,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_Characters_$3143_to_t_address_fromStack":{"entryPoint":17460,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_NftBox_$5533_to_t_address_fromStack":{"entryPoint":17475,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_enum$_PlayerStatus_$3166_to_t_uint8_fromStack":{"entryPoint":17490,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":17505,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint16_to_t_uint16_fromStack":{"entryPoint":17554,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":17569,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":17584,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":17599,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":17614,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":17629,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":17652,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":17679,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_bool__to_t_address_t_address_t_bool__fromStack_reversed":{"entryPoint":17720,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":17775,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_array$_t_uint256_$3_memory_ptr_t_address_t_enum$_PlayerStatus_$3166__to_t_address_t_array$_t_uint256_$3_memory_ptr_t_address_t_uint8__fromStack_reversed":{"entryPoint":17830,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed":{"entryPoint":17899,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_contract$_Characters_$3143__to_t_address__fromStack_reversed":{"entryPoint":17982,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_NftBox_$5533__to_t_address__fromStack_reversed":{"entryPoint":18009,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":18036,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address_t_address_t_enum$_PlayerStatus_$3166__to_t_uint256_t_address_t_address_t_uint8__fromStack_reversed":{"entryPoint":18063,"id":null,"parameterSlots":5,"returnSlots":1},"allocate_memory":{"entryPoint":18132,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":18159,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":18169,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":18213,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$3_memory_ptr":{"entryPoint":18262,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$3_memory_ptr":{"entryPoint":18272,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":18283,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$3_memory_ptr":{"entryPoint":18294,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack":{"entryPoint":18307,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":18318,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":18329,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":18415,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":18467,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":18485,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":18497,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_enum$_PlayerStatus_$3166":{"entryPoint":18507,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint16":{"entryPoint":18526,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":18540,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":18572,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":18582,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":18598,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_Characters_$3143_to_t_address":{"entryPoint":18618,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_NftBox_$5533_to_t_address":{"entryPoint":18636,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_enum$_PlayerStatus_$3166_to_t_uint8":{"entryPoint":18654,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":18672,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":18690,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":18708,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":18759,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":18808,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":18881,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":18930,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":18977,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":19024,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":19071,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":19118,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":19165,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":19212,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":19217,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":19222,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":19227,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":19232,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":19237,"id":null,"parameterSlots":1,"returnSlots":1},"validator_assert_t_enum$_PlayerStatus_$3166":{"entryPoint":19254,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":19274,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":19297,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":19320,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:22616:18","statements":[{"body":{"nodeType":"YulBlock","src":"126:620:18","statements":[{"nodeType":"YulAssignment","src":"136:90:18","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"218:6:18"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"161:56:18"},"nodeType":"YulFunctionCall","src":"161:64:18"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"145:15:18"},"nodeType":"YulFunctionCall","src":"145:81:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"136:5:18"}]},{"nodeType":"YulVariableDeclaration","src":"235:16:18","value":{"name":"array","nodeType":"YulIdentifier","src":"246:5:18"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"239:3:18","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"268:5:18"},{"name":"length","nodeType":"YulIdentifier","src":"275:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"261:6:18"},"nodeType":"YulFunctionCall","src":"261:21:18"},"nodeType":"YulExpressionStatement","src":"261:21:18"},{"nodeType":"YulAssignment","src":"291:23:18","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"302:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"309:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"298:3:18"},"nodeType":"YulFunctionCall","src":"298:16:18"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"291:3:18"}]},{"nodeType":"YulVariableDeclaration","src":"324:17:18","value":{"name":"offset","nodeType":"YulIdentifier","src":"335:6:18"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"328:3:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"390:103:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"404:77:18"},"nodeType":"YulFunctionCall","src":"404:79:18"},"nodeType":"YulExpressionStatement","src":"404:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"360:3:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"369:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"377:4:18","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"365:3:18"},"nodeType":"YulFunctionCall","src":"365:17:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"356:3:18"},"nodeType":"YulFunctionCall","src":"356:27:18"},{"name":"end","nodeType":"YulIdentifier","src":"385:3:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"353:2:18"},"nodeType":"YulFunctionCall","src":"353:36:18"},"nodeType":"YulIf","src":"350:143:18"},{"body":{"nodeType":"YulBlock","src":"562:178:18","statements":[{"nodeType":"YulVariableDeclaration","src":"577:21:18","value":{"name":"src","nodeType":"YulIdentifier","src":"595:3:18"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"581:10:18","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"619:3:18"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"645:10:18"},{"name":"end","nodeType":"YulIdentifier","src":"657:3:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"624:20:18"},"nodeType":"YulFunctionCall","src":"624:37:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"612:6:18"},"nodeType":"YulFunctionCall","src":"612:50:18"},"nodeType":"YulExpressionStatement","src":"612:50:18"},{"nodeType":"YulAssignment","src":"675:21:18","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"686:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"691:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"682:3:18"},"nodeType":"YulFunctionCall","src":"682:14:18"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"675:3:18"}]},{"nodeType":"YulAssignment","src":"709:21:18","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"720:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"725:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"716:3:18"},"nodeType":"YulFunctionCall","src":"716:14:18"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"709:3:18"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"524:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"527:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"521:2:18"},"nodeType":"YulFunctionCall","src":"521:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"535:18:18","statements":[{"nodeType":"YulAssignment","src":"537:14:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"546:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"549:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"542:3:18"},"nodeType":"YulFunctionCall","src":"542:9:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"537:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"506:14:18","statements":[{"nodeType":"YulVariableDeclaration","src":"508:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"517:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"512:1:18","type":""}]}]},"src":"502:238:18"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"96:6:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"104:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"112:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"120:5:18","type":""}],"src":"24:722:18"},{"body":{"nodeType":"YulBlock","src":"847:326:18","statements":[{"nodeType":"YulAssignment","src":"857:75:18","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"924:6:18"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"882:41:18"},"nodeType":"YulFunctionCall","src":"882:49:18"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"866:15:18"},"nodeType":"YulFunctionCall","src":"866:66:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"857:5:18"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"948:5:18"},{"name":"length","nodeType":"YulIdentifier","src":"955:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"941:6:18"},"nodeType":"YulFunctionCall","src":"941:21:18"},"nodeType":"YulExpressionStatement","src":"941:21:18"},{"nodeType":"YulVariableDeclaration","src":"971:27:18","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"986:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"993:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"982:3:18"},"nodeType":"YulFunctionCall","src":"982:16:18"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"975:3:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"1036:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"1038:77:18"},"nodeType":"YulFunctionCall","src":"1038:79:18"},"nodeType":"YulExpressionStatement","src":"1038:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1017:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"1022:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1013:3:18"},"nodeType":"YulFunctionCall","src":"1013:16:18"},{"name":"end","nodeType":"YulIdentifier","src":"1031:3:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1010:2:18"},"nodeType":"YulFunctionCall","src":"1010:25:18"},"nodeType":"YulIf","src":"1007:112:18"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1150:3:18"},{"name":"dst","nodeType":"YulIdentifier","src":"1155:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"1160:6:18"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"1128:21:18"},"nodeType":"YulFunctionCall","src":"1128:39:18"},"nodeType":"YulExpressionStatement","src":"1128:39:18"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"820:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"825:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"833:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"841:5:18","type":""}],"src":"752:421:18"},{"body":{"nodeType":"YulBlock","src":"1231:87:18","statements":[{"nodeType":"YulAssignment","src":"1241:29:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1263:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1250:12:18"},"nodeType":"YulFunctionCall","src":"1250:20:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1241:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1306:5:18"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1279:26:18"},"nodeType":"YulFunctionCall","src":"1279:33:18"},"nodeType":"YulExpressionStatement","src":"1279:33:18"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1209:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"1217:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1225:5:18","type":""}],"src":"1179:139:18"},{"body":{"nodeType":"YulBlock","src":"1387:80:18","statements":[{"nodeType":"YulAssignment","src":"1397:22:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1412:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1406:5:18"},"nodeType":"YulFunctionCall","src":"1406:13:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1397:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1455:5:18"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1428:26:18"},"nodeType":"YulFunctionCall","src":"1428:33:18"},"nodeType":"YulExpressionStatement","src":"1428:33:18"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1365:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"1373:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1381:5:18","type":""}],"src":"1324:143:18"},{"body":{"nodeType":"YulBlock","src":"1567:293:18","statements":[{"body":{"nodeType":"YulBlock","src":"1616:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"1618:77:18"},"nodeType":"YulFunctionCall","src":"1618:79:18"},"nodeType":"YulExpressionStatement","src":"1618:79:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1595:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"1603:4:18","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1591:3:18"},"nodeType":"YulFunctionCall","src":"1591:17:18"},{"name":"end","nodeType":"YulIdentifier","src":"1610:3:18"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1587:3:18"},"nodeType":"YulFunctionCall","src":"1587:27:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1580:6:18"},"nodeType":"YulFunctionCall","src":"1580:35:18"},"nodeType":"YulIf","src":"1577:122:18"},{"nodeType":"YulVariableDeclaration","src":"1708:34:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1735:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1722:12:18"},"nodeType":"YulFunctionCall","src":"1722:20:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1712:6:18","type":""}]},{"nodeType":"YulAssignment","src":"1751:103:18","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1827:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"1835:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1823:3:18"},"nodeType":"YulFunctionCall","src":"1823:17:18"},{"name":"length","nodeType":"YulIdentifier","src":"1842:6:18"},{"name":"end","nodeType":"YulIdentifier","src":"1850:3:18"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"1760:62:18"},"nodeType":"YulFunctionCall","src":"1760:94:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1751:5:18"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1545:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"1553:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1561:5:18","type":""}],"src":"1490:370:18"},{"body":{"nodeType":"YulBlock","src":"1926:77:18","statements":[{"nodeType":"YulAssignment","src":"1936:22:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1951:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1945:5:18"},"nodeType":"YulFunctionCall","src":"1945:13:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1936:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1991:5:18"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"1967:23:18"},"nodeType":"YulFunctionCall","src":"1967:30:18"},"nodeType":"YulExpressionStatement","src":"1967:30:18"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1904:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"1912:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1920:5:18","type":""}],"src":"1866:137:18"},{"body":{"nodeType":"YulBlock","src":"2096:282:18","statements":[{"body":{"nodeType":"YulBlock","src":"2145:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2147:77:18"},"nodeType":"YulFunctionCall","src":"2147:79:18"},"nodeType":"YulExpressionStatement","src":"2147:79:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2124:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"2132:4:18","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2120:3:18"},"nodeType":"YulFunctionCall","src":"2120:17:18"},{"name":"end","nodeType":"YulIdentifier","src":"2139:3:18"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2116:3:18"},"nodeType":"YulFunctionCall","src":"2116:27:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2109:6:18"},"nodeType":"YulFunctionCall","src":"2109:35:18"},"nodeType":"YulIf","src":"2106:122:18"},{"nodeType":"YulVariableDeclaration","src":"2237:27:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2257:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2251:5:18"},"nodeType":"YulFunctionCall","src":"2251:13:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2241:6:18","type":""}]},{"nodeType":"YulAssignment","src":"2273:99:18","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2345:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"2353:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2341:3:18"},"nodeType":"YulFunctionCall","src":"2341:17:18"},{"name":"length","nodeType":"YulIdentifier","src":"2360:6:18"},{"name":"end","nodeType":"YulIdentifier","src":"2368:3:18"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2282:58:18"},"nodeType":"YulFunctionCall","src":"2282:90:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2273:5:18"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2074:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"2082:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2090:5:18","type":""}],"src":"2023:355:18"},{"body":{"nodeType":"YulBlock","src":"2436:87:18","statements":[{"nodeType":"YulAssignment","src":"2446:29:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2468:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2455:12:18"},"nodeType":"YulFunctionCall","src":"2455:20:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2446:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2511:5:18"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2484:26:18"},"nodeType":"YulFunctionCall","src":"2484:33:18"},"nodeType":"YulExpressionStatement","src":"2484:33:18"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2414:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"2422:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2430:5:18","type":""}],"src":"2384:139:18"},{"body":{"nodeType":"YulBlock","src":"2592:80:18","statements":[{"nodeType":"YulAssignment","src":"2602:22:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2617:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2611:5:18"},"nodeType":"YulFunctionCall","src":"2611:13:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2602:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2660:5:18"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2633:26:18"},"nodeType":"YulFunctionCall","src":"2633:33:18"},"nodeType":"YulExpressionStatement","src":"2633:33:18"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2570:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"2578:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2586:5:18","type":""}],"src":"2529:143:18"},{"body":{"nodeType":"YulBlock","src":"2744:263:18","statements":[{"body":{"nodeType":"YulBlock","src":"2790:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2792:77:18"},"nodeType":"YulFunctionCall","src":"2792:79:18"},"nodeType":"YulExpressionStatement","src":"2792:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2765:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"2774:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2761:3:18"},"nodeType":"YulFunctionCall","src":"2761:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"2786:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2757:3:18"},"nodeType":"YulFunctionCall","src":"2757:32:18"},"nodeType":"YulIf","src":"2754:119:18"},{"nodeType":"YulBlock","src":"2883:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2898:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"2912:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2902:6:18","type":""}]},{"nodeType":"YulAssignment","src":"2927:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2962:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"2973:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2958:3:18"},"nodeType":"YulFunctionCall","src":"2958:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2982:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2937:20:18"},"nodeType":"YulFunctionCall","src":"2937:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2927:6:18"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2714:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2725:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2737:6:18","type":""}],"src":"2678:329:18"},{"body":{"nodeType":"YulBlock","src":"3090:274:18","statements":[{"body":{"nodeType":"YulBlock","src":"3136:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3138:77:18"},"nodeType":"YulFunctionCall","src":"3138:79:18"},"nodeType":"YulExpressionStatement","src":"3138:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3111:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"3120:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3107:3:18"},"nodeType":"YulFunctionCall","src":"3107:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"3132:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3103:3:18"},"nodeType":"YulFunctionCall","src":"3103:32:18"},"nodeType":"YulIf","src":"3100:119:18"},{"nodeType":"YulBlock","src":"3229:128:18","statements":[{"nodeType":"YulVariableDeclaration","src":"3244:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"3258:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3248:6:18","type":""}]},{"nodeType":"YulAssignment","src":"3273:74:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3319:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"3330:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3315:3:18"},"nodeType":"YulFunctionCall","src":"3315:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3339:7:18"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"3283:31:18"},"nodeType":"YulFunctionCall","src":"3283:64:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3273:6:18"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3060:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3071:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3083:6:18","type":""}],"src":"3013:351:18"},{"body":{"nodeType":"YulBlock","src":"3453:391:18","statements":[{"body":{"nodeType":"YulBlock","src":"3499:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3501:77:18"},"nodeType":"YulFunctionCall","src":"3501:79:18"},"nodeType":"YulExpressionStatement","src":"3501:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3474:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"3483:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3470:3:18"},"nodeType":"YulFunctionCall","src":"3470:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"3495:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3466:3:18"},"nodeType":"YulFunctionCall","src":"3466:32:18"},"nodeType":"YulIf","src":"3463:119:18"},{"nodeType":"YulBlock","src":"3592:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"3607:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"3621:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3611:6:18","type":""}]},{"nodeType":"YulAssignment","src":"3636:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3671:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"3682:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3667:3:18"},"nodeType":"YulFunctionCall","src":"3667:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3691:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3646:20:18"},"nodeType":"YulFunctionCall","src":"3646:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3636:6:18"}]}]},{"nodeType":"YulBlock","src":"3719:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"3734:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"3748:2:18","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3738:6:18","type":""}]},{"nodeType":"YulAssignment","src":"3764:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3799:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"3810:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3795:3:18"},"nodeType":"YulFunctionCall","src":"3795:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3819:7:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3774:20:18"},"nodeType":"YulFunctionCall","src":"3774:53:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3764:6:18"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3415:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3426:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3438:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3446:6:18","type":""}],"src":"3370:474:18"},{"body":{"nodeType":"YulBlock","src":"3988:855:18","statements":[{"body":{"nodeType":"YulBlock","src":"4035:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4037:77:18"},"nodeType":"YulFunctionCall","src":"4037:79:18"},"nodeType":"YulExpressionStatement","src":"4037:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4009:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"4018:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4005:3:18"},"nodeType":"YulFunctionCall","src":"4005:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"4030:3:18","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4001:3:18"},"nodeType":"YulFunctionCall","src":"4001:33:18"},"nodeType":"YulIf","src":"3998:120:18"},{"nodeType":"YulBlock","src":"4128:291:18","statements":[{"nodeType":"YulVariableDeclaration","src":"4143:38:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4167:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4178:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4163:3:18"},"nodeType":"YulFunctionCall","src":"4163:17:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4157:5:18"},"nodeType":"YulFunctionCall","src":"4157:24:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4147:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"4228:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"4230:77:18"},"nodeType":"YulFunctionCall","src":"4230:79:18"},"nodeType":"YulExpressionStatement","src":"4230:79:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4200:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"4208:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4197:2:18"},"nodeType":"YulFunctionCall","src":"4197:30:18"},"nodeType":"YulIf","src":"4194:117:18"},{"nodeType":"YulAssignment","src":"4325:84:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4381:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"4392:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4377:3:18"},"nodeType":"YulFunctionCall","src":"4377:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4401:7:18"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"4335:41:18"},"nodeType":"YulFunctionCall","src":"4335:74:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4325:6:18"}]}]},{"nodeType":"YulBlock","src":"4429:129:18","statements":[{"nodeType":"YulVariableDeclaration","src":"4444:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"4458:2:18","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4448:6:18","type":""}]},{"nodeType":"YulAssignment","src":"4474:74:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4520:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"4531:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4516:3:18"},"nodeType":"YulFunctionCall","src":"4516:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4540:7:18"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"4484:31:18"},"nodeType":"YulFunctionCall","src":"4484:64:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4474:6:18"}]}]},{"nodeType":"YulBlock","src":"4568:129:18","statements":[{"nodeType":"YulVariableDeclaration","src":"4583:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"4597:2:18","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4587:6:18","type":""}]},{"nodeType":"YulAssignment","src":"4613:74:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4659:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"4670:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4655:3:18"},"nodeType":"YulFunctionCall","src":"4655:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4679:7:18"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"4623:31:18"},"nodeType":"YulFunctionCall","src":"4623:64:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4613:6:18"}]}]},{"nodeType":"YulBlock","src":"4707:129:18","statements":[{"nodeType":"YulVariableDeclaration","src":"4722:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"4736:2:18","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4726:6:18","type":""}]},{"nodeType":"YulAssignment","src":"4752:74:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4798:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"4809:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4794:3:18"},"nodeType":"YulFunctionCall","src":"4794:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4818:7:18"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"4762:31:18"},"nodeType":"YulFunctionCall","src":"4762:64:18"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4752:6:18"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3934:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3945:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3957:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3965:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3973:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3981:6:18","type":""}],"src":"3850:993:18"},{"body":{"nodeType":"YulBlock","src":"4915:263:18","statements":[{"body":{"nodeType":"YulBlock","src":"4961:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4963:77:18"},"nodeType":"YulFunctionCall","src":"4963:79:18"},"nodeType":"YulExpressionStatement","src":"4963:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4936:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"4945:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4932:3:18"},"nodeType":"YulFunctionCall","src":"4932:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"4957:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4928:3:18"},"nodeType":"YulFunctionCall","src":"4928:32:18"},"nodeType":"YulIf","src":"4925:119:18"},{"nodeType":"YulBlock","src":"5054:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"5069:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"5083:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5073:6:18","type":""}]},{"nodeType":"YulAssignment","src":"5098:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5133:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"5144:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5129:3:18"},"nodeType":"YulFunctionCall","src":"5129:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5153:7:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5108:20:18"},"nodeType":"YulFunctionCall","src":"5108:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5098:6:18"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4885:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4896:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4908:6:18","type":""}],"src":"4849:329:18"},{"body":{"nodeType":"YulBlock","src":"5261:274:18","statements":[{"body":{"nodeType":"YulBlock","src":"5307:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5309:77:18"},"nodeType":"YulFunctionCall","src":"5309:79:18"},"nodeType":"YulExpressionStatement","src":"5309:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5282:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"5291:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5278:3:18"},"nodeType":"YulFunctionCall","src":"5278:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"5303:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5274:3:18"},"nodeType":"YulFunctionCall","src":"5274:32:18"},"nodeType":"YulIf","src":"5271:119:18"},{"nodeType":"YulBlock","src":"5400:128:18","statements":[{"nodeType":"YulVariableDeclaration","src":"5415:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"5429:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5419:6:18","type":""}]},{"nodeType":"YulAssignment","src":"5444:74:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5490:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"5501:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5486:3:18"},"nodeType":"YulFunctionCall","src":"5486:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5510:7:18"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"5454:31:18"},"nodeType":"YulFunctionCall","src":"5454:64:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5444:6:18"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5231:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5242:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5254:6:18","type":""}],"src":"5184:351:18"},{"body":{"nodeType":"YulBlock","src":"5649:576:18","statements":[{"body":{"nodeType":"YulBlock","src":"5695:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5697:77:18"},"nodeType":"YulFunctionCall","src":"5697:79:18"},"nodeType":"YulExpressionStatement","src":"5697:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5670:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"5679:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5666:3:18"},"nodeType":"YulFunctionCall","src":"5666:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"5691:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5662:3:18"},"nodeType":"YulFunctionCall","src":"5662:32:18"},"nodeType":"YulIf","src":"5659:119:18"},{"nodeType":"YulBlock","src":"5788:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"5803:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"5817:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5807:6:18","type":""}]},{"nodeType":"YulAssignment","src":"5832:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5867:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"5878:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5863:3:18"},"nodeType":"YulFunctionCall","src":"5863:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5887:7:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5842:20:18"},"nodeType":"YulFunctionCall","src":"5842:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5832:6:18"}]}]},{"nodeType":"YulBlock","src":"5915:303:18","statements":[{"nodeType":"YulVariableDeclaration","src":"5930:46:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5961:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5972:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5957:3:18"},"nodeType":"YulFunctionCall","src":"5957:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5944:12:18"},"nodeType":"YulFunctionCall","src":"5944:32:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5934:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"6023:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"6025:77:18"},"nodeType":"YulFunctionCall","src":"6025:79:18"},"nodeType":"YulExpressionStatement","src":"6025:79:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5995:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"6003:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5992:2:18"},"nodeType":"YulFunctionCall","src":"5992:30:18"},"nodeType":"YulIf","src":"5989:117:18"},{"nodeType":"YulAssignment","src":"6120:88:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6180:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"6191:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6176:3:18"},"nodeType":"YulFunctionCall","src":"6176:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6200:7:18"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6130:45:18"},"nodeType":"YulFunctionCall","src":"6130:78:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6120:6:18"}]}]}]},"name":"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5611:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5622:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5634:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5642:6:18","type":""}],"src":"5541:684:18"},{"body":{"nodeType":"YulBlock","src":"6366:852:18","statements":[{"body":{"nodeType":"YulBlock","src":"6413:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6415:77:18"},"nodeType":"YulFunctionCall","src":"6415:79:18"},"nodeType":"YulExpressionStatement","src":"6415:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6387:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"6396:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6383:3:18"},"nodeType":"YulFunctionCall","src":"6383:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"6408:3:18","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6379:3:18"},"nodeType":"YulFunctionCall","src":"6379:33:18"},"nodeType":"YulIf","src":"6376:120:18"},{"nodeType":"YulBlock","src":"6506:128:18","statements":[{"nodeType":"YulVariableDeclaration","src":"6521:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"6535:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6525:6:18","type":""}]},{"nodeType":"YulAssignment","src":"6550:74:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6596:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"6607:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6592:3:18"},"nodeType":"YulFunctionCall","src":"6592:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6616:7:18"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"6560:31:18"},"nodeType":"YulFunctionCall","src":"6560:64:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6550:6:18"}]}]},{"nodeType":"YulBlock","src":"6644:292:18","statements":[{"nodeType":"YulVariableDeclaration","src":"6659:39:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6683:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6694:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6679:3:18"},"nodeType":"YulFunctionCall","src":"6679:18:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6673:5:18"},"nodeType":"YulFunctionCall","src":"6673:25:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6663:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"6745:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"6747:77:18"},"nodeType":"YulFunctionCall","src":"6747:79:18"},"nodeType":"YulExpressionStatement","src":"6747:79:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6717:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"6725:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6714:2:18"},"nodeType":"YulFunctionCall","src":"6714:30:18"},"nodeType":"YulIf","src":"6711:117:18"},{"nodeType":"YulAssignment","src":"6842:84:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6898:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"6909:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6894:3:18"},"nodeType":"YulFunctionCall","src":"6894:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6918:7:18"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"6852:41:18"},"nodeType":"YulFunctionCall","src":"6852:74:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6842:6:18"}]}]},{"nodeType":"YulBlock","src":"6946:126:18","statements":[{"nodeType":"YulVariableDeclaration","src":"6961:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"6975:2:18","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6965:6:18","type":""}]},{"nodeType":"YulAssignment","src":"6991:71:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7034:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"7045:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7030:3:18"},"nodeType":"YulFunctionCall","src":"7030:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7054:7:18"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"7001:28:18"},"nodeType":"YulFunctionCall","src":"7001:61:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6991:6:18"}]}]},{"nodeType":"YulBlock","src":"7082:129:18","statements":[{"nodeType":"YulVariableDeclaration","src":"7097:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"7111:2:18","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7101:6:18","type":""}]},{"nodeType":"YulAssignment","src":"7127:74:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7173:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"7184:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7169:3:18"},"nodeType":"YulFunctionCall","src":"7169:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7193:7:18"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"7137:31:18"},"nodeType":"YulFunctionCall","src":"7137:64:18"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"7127:6:18"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptrt_boolt_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6312:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6323:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6335:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6343:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6351:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6359:6:18","type":""}],"src":"6231:987:18"},{"body":{"nodeType":"YulBlock","src":"7307:391:18","statements":[{"body":{"nodeType":"YulBlock","src":"7353:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7355:77:18"},"nodeType":"YulFunctionCall","src":"7355:79:18"},"nodeType":"YulExpressionStatement","src":"7355:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7328:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"7337:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7324:3:18"},"nodeType":"YulFunctionCall","src":"7324:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"7349:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7320:3:18"},"nodeType":"YulFunctionCall","src":"7320:32:18"},"nodeType":"YulIf","src":"7317:119:18"},{"nodeType":"YulBlock","src":"7446:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"7461:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"7475:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7465:6:18","type":""}]},{"nodeType":"YulAssignment","src":"7490:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7525:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"7536:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7521:3:18"},"nodeType":"YulFunctionCall","src":"7521:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7545:7:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7500:20:18"},"nodeType":"YulFunctionCall","src":"7500:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7490:6:18"}]}]},{"nodeType":"YulBlock","src":"7573:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"7588:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"7602:2:18","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7592:6:18","type":""}]},{"nodeType":"YulAssignment","src":"7618:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7653:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"7664:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7649:3:18"},"nodeType":"YulFunctionCall","src":"7649:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7673:7:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7628:20:18"},"nodeType":"YulFunctionCall","src":"7628:53:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7618:6:18"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7269:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7280:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7292:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7300:6:18","type":""}],"src":"7224:474:18"},{"body":{"nodeType":"YulBlock","src":"7804:519:18","statements":[{"body":{"nodeType":"YulBlock","src":"7850:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7852:77:18"},"nodeType":"YulFunctionCall","src":"7852:79:18"},"nodeType":"YulExpressionStatement","src":"7852:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7825:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"7834:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7821:3:18"},"nodeType":"YulFunctionCall","src":"7821:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"7846:2:18","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7817:3:18"},"nodeType":"YulFunctionCall","src":"7817:32:18"},"nodeType":"YulIf","src":"7814:119:18"},{"nodeType":"YulBlock","src":"7943:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"7958:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"7972:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7962:6:18","type":""}]},{"nodeType":"YulAssignment","src":"7987:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8022:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"8033:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8018:3:18"},"nodeType":"YulFunctionCall","src":"8018:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8042:7:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7997:20:18"},"nodeType":"YulFunctionCall","src":"7997:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7987:6:18"}]}]},{"nodeType":"YulBlock","src":"8070:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"8085:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"8099:2:18","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8089:6:18","type":""}]},{"nodeType":"YulAssignment","src":"8115:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8150:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"8161:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8146:3:18"},"nodeType":"YulFunctionCall","src":"8146:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8170:7:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8125:20:18"},"nodeType":"YulFunctionCall","src":"8125:53:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8115:6:18"}]}]},{"nodeType":"YulBlock","src":"8198:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"8213:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"8227:2:18","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8217:6:18","type":""}]},{"nodeType":"YulAssignment","src":"8243:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8278:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"8289:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8274:3:18"},"nodeType":"YulFunctionCall","src":"8274:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8298:7:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8253:20:18"},"nodeType":"YulFunctionCall","src":"8253:53:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"8243:6:18"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7758:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7769:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7781:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7789:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7797:6:18","type":""}],"src":"7704:619:18"},{"body":{"nodeType":"YulBlock","src":"8409:99:18","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8453:6:18"},{"name":"pos","nodeType":"YulIdentifier","src":"8461:3:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"8419:33:18"},"nodeType":"YulFunctionCall","src":"8419:46:18"},"nodeType":"YulExpressionStatement","src":"8419:46:18"},{"nodeType":"YulAssignment","src":"8474:28:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8492:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"8497:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8488:3:18"},"nodeType":"YulFunctionCall","src":"8488:14:18"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"8474:10:18"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"8382:6:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8390:3:18","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"8398:10:18","type":""}],"src":"8329:179:18"},{"body":{"nodeType":"YulBlock","src":"8579:53:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8596:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8619:5:18"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"8601:17:18"},"nodeType":"YulFunctionCall","src":"8601:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8589:6:18"},"nodeType":"YulFunctionCall","src":"8589:37:18"},"nodeType":"YulExpressionStatement","src":"8589:37:18"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8567:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8574:3:18","type":""}],"src":"8514:118:18"},{"body":{"nodeType":"YulBlock","src":"8782:582:18","statements":[{"nodeType":"YulVariableDeclaration","src":"8792:66:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8852:5:18"}],"functionName":{"name":"array_length_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulIdentifier","src":"8806:45:18"},"nodeType":"YulFunctionCall","src":"8806:52:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8796:6:18","type":""}]},{"nodeType":"YulAssignment","src":"8867:91:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8946:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"8951:6:18"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8874:71:18"},"nodeType":"YulFunctionCall","src":"8874:84:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8867:3:18"}]},{"nodeType":"YulVariableDeclaration","src":"8967:69:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9030:5:18"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulIdentifier","src":"8982:47:18"},"nodeType":"YulFunctionCall","src":"8982:54:18"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"8971:7:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9045:21:18","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"9059:7:18"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"9049:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"9135:222:18","statements":[{"nodeType":"YulVariableDeclaration","src":"9149:34:18","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"9176:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9170:5:18"},"nodeType":"YulFunctionCall","src":"9170:13:18"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"9153:13:18","type":""}]},{"nodeType":"YulAssignment","src":"9196:70:18","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"9247:13:18"},{"name":"pos","nodeType":"YulIdentifier","src":"9262:3:18"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"9203:43:18"},"nodeType":"YulFunctionCall","src":"9203:63:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9196:3:18"}]},{"nodeType":"YulAssignment","src":"9279:68:18","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"9340:6:18"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulIdentifier","src":"9289:50:18"},"nodeType":"YulFunctionCall","src":"9289:58:18"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"9279:6:18"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9097:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"9100:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9094:2:18"},"nodeType":"YulFunctionCall","src":"9094:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9108:18:18","statements":[{"nodeType":"YulAssignment","src":"9110:14:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9119:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"9122:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9115:3:18"},"nodeType":"YulFunctionCall","src":"9115:9:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"9110:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"9079:14:18","statements":[{"nodeType":"YulVariableDeclaration","src":"9081:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"9090:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"9085:1:18","type":""}]}]},"src":"9075:282:18"}]},"name":"abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8769:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8776:3:18","type":""}],"src":"8670:694:18"},{"body":{"nodeType":"YulBlock","src":"9429:50:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9446:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9466:5:18"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"9451:14:18"},"nodeType":"YulFunctionCall","src":"9451:21:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9439:6:18"},"nodeType":"YulFunctionCall","src":"9439:34:18"},"nodeType":"YulExpressionStatement","src":"9439:34:18"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9417:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9424:3:18","type":""}],"src":"9370:109:18"},{"body":{"nodeType":"YulBlock","src":"9550:53:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9567:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9590:5:18"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"9572:17:18"},"nodeType":"YulFunctionCall","src":"9572:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9560:6:18"},"nodeType":"YulFunctionCall","src":"9560:37:18"},"nodeType":"YulExpressionStatement","src":"9560:37:18"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9538:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9545:3:18","type":""}],"src":"9485:118:18"},{"body":{"nodeType":"YulBlock","src":"9693:85:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9710:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9765:5:18"}],"functionName":{"name":"convert_t_contract$_Characters_$3143_to_t_address","nodeType":"YulIdentifier","src":"9715:49:18"},"nodeType":"YulFunctionCall","src":"9715:56:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9703:6:18"},"nodeType":"YulFunctionCall","src":"9703:69:18"},"nodeType":"YulExpressionStatement","src":"9703:69:18"}]},"name":"abi_encode_t_contract$_Characters_$3143_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9681:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9688:3:18","type":""}],"src":"9609:169:18"},{"body":{"nodeType":"YulBlock","src":"9864:81:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9881:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9932:5:18"}],"functionName":{"name":"convert_t_contract$_NftBox_$5533_to_t_address","nodeType":"YulIdentifier","src":"9886:45:18"},"nodeType":"YulFunctionCall","src":"9886:52:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9874:6:18"},"nodeType":"YulFunctionCall","src":"9874:65:18"},"nodeType":"YulExpressionStatement","src":"9874:65:18"}]},"name":"abi_encode_t_contract$_NftBox_$5533_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9852:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9859:3:18","type":""}],"src":"9784:161:18"},{"body":{"nodeType":"YulBlock","src":"10031:81:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10048:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10099:5:18"}],"functionName":{"name":"convert_t_enum$_PlayerStatus_$3166_to_t_uint8","nodeType":"YulIdentifier","src":"10053:45:18"},"nodeType":"YulFunctionCall","src":"10053:52:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10041:6:18"},"nodeType":"YulFunctionCall","src":"10041:65:18"},"nodeType":"YulExpressionStatement","src":"10041:65:18"}]},"name":"abi_encode_t_enum$_PlayerStatus_$3166_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10019:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10026:3:18","type":""}],"src":"9951:161:18"},{"body":{"nodeType":"YulBlock","src":"10228:267:18","statements":[{"nodeType":"YulVariableDeclaration","src":"10238:53:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10285:5:18"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"10252:32:18"},"nodeType":"YulFunctionCall","src":"10252:39:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"10242:6:18","type":""}]},{"nodeType":"YulAssignment","src":"10300:96:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10384:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"10389:6:18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"10307:76:18"},"nodeType":"YulFunctionCall","src":"10307:89:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10300:3:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10431:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"10438:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10427:3:18"},"nodeType":"YulFunctionCall","src":"10427:16:18"},{"name":"pos","nodeType":"YulIdentifier","src":"10445:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"10450:6:18"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"10405:21:18"},"nodeType":"YulFunctionCall","src":"10405:52:18"},"nodeType":"YulExpressionStatement","src":"10405:52:18"},{"nodeType":"YulAssignment","src":"10466:23:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10477:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"10482:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10473:3:18"},"nodeType":"YulFunctionCall","src":"10473:16:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10466:3:18"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10209:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10216:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10224:3:18","type":""}],"src":"10118:377:18"},{"body":{"nodeType":"YulBlock","src":"10564:52:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10581:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10603:5:18"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"10586:16:18"},"nodeType":"YulFunctionCall","src":"10586:23:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10574:6:18"},"nodeType":"YulFunctionCall","src":"10574:36:18"},"nodeType":"YulExpressionStatement","src":"10574:36:18"}]},"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10552:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10559:3:18","type":""}],"src":"10501:115:18"},{"body":{"nodeType":"YulBlock","src":"10677:53:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10694:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10717:5:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10699:17:18"},"nodeType":"YulFunctionCall","src":"10699:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10687:6:18"},"nodeType":"YulFunctionCall","src":"10687:37:18"},"nodeType":"YulExpressionStatement","src":"10687:37:18"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10665:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10672:3:18","type":""}],"src":"10622:108:18"},{"body":{"nodeType":"YulBlock","src":"10801:53:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10818:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10841:5:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10823:17:18"},"nodeType":"YulFunctionCall","src":"10823:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10811:6:18"},"nodeType":"YulFunctionCall","src":"10811:37:18"},"nodeType":"YulExpressionStatement","src":"10811:37:18"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10789:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10796:3:18","type":""}],"src":"10736:118:18"},{"body":{"nodeType":"YulBlock","src":"10923:52:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10940:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10962:5:18"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"10945:16:18"},"nodeType":"YulFunctionCall","src":"10945:23:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10933:6:18"},"nodeType":"YulFunctionCall","src":"10933:36:18"},"nodeType":"YulExpressionStatement","src":"10933:36:18"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10911:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10918:3:18","type":""}],"src":"10860:115:18"},{"body":{"nodeType":"YulBlock","src":"11044:52:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11061:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11083:5:18"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"11066:16:18"},"nodeType":"YulFunctionCall","src":"11066:23:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11054:6:18"},"nodeType":"YulFunctionCall","src":"11054:36:18"},"nodeType":"YulExpressionStatement","src":"11054:36:18"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11032:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11039:3:18","type":""}],"src":"10981:115:18"},{"body":{"nodeType":"YulBlock","src":"11238:139:18","statements":[{"nodeType":"YulAssignment","src":"11249:102:18","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11338:6:18"},{"name":"pos","nodeType":"YulIdentifier","src":"11347:3:18"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"11256:81:18"},"nodeType":"YulFunctionCall","src":"11256:95:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11249:3:18"}]},{"nodeType":"YulAssignment","src":"11361:10:18","value":{"name":"pos","nodeType":"YulIdentifier","src":"11368:3:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11361:3:18"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11217:3:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11223:6:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11234:3:18","type":""}],"src":"11102:275:18"},{"body":{"nodeType":"YulBlock","src":"11481:124:18","statements":[{"nodeType":"YulAssignment","src":"11491:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11503:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11514:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11499:3:18"},"nodeType":"YulFunctionCall","src":"11499:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11491:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11571:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11584:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11595:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11580:3:18"},"nodeType":"YulFunctionCall","src":"11580:17:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11527:43:18"},"nodeType":"YulFunctionCall","src":"11527:71:18"},"nodeType":"YulExpressionStatement","src":"11527:71:18"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11453:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11465:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11476:4:18","type":""}],"src":"11383:222:18"},{"body":{"nodeType":"YulBlock","src":"11737:206:18","statements":[{"nodeType":"YulAssignment","src":"11747:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11759:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11770:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11755:3:18"},"nodeType":"YulFunctionCall","src":"11755:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11747:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11827:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11840:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11851:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11836:3:18"},"nodeType":"YulFunctionCall","src":"11836:17:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11783:43:18"},"nodeType":"YulFunctionCall","src":"11783:71:18"},"nodeType":"YulExpressionStatement","src":"11783:71:18"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11908:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11921:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11932:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11917:3:18"},"nodeType":"YulFunctionCall","src":"11917:18:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11864:43:18"},"nodeType":"YulFunctionCall","src":"11864:72:18"},"nodeType":"YulExpressionStatement","src":"11864:72:18"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11701:9:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11713:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11721:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11732:4:18","type":""}],"src":"11611:332:18"},{"body":{"nodeType":"YulBlock","src":"12097:282:18","statements":[{"nodeType":"YulAssignment","src":"12107:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12119:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12130:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12115:3:18"},"nodeType":"YulFunctionCall","src":"12115:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12107:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12187:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12200:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12211:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12196:3:18"},"nodeType":"YulFunctionCall","src":"12196:17:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12143:43:18"},"nodeType":"YulFunctionCall","src":"12143:71:18"},"nodeType":"YulExpressionStatement","src":"12143:71:18"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12268:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12281:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12292:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12277:3:18"},"nodeType":"YulFunctionCall","src":"12277:18:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12224:43:18"},"nodeType":"YulFunctionCall","src":"12224:72:18"},"nodeType":"YulExpressionStatement","src":"12224:72:18"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"12344:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12357:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12368:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12353:3:18"},"nodeType":"YulFunctionCall","src":"12353:18:18"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"12306:37:18"},"nodeType":"YulFunctionCall","src":"12306:66:18"},"nodeType":"YulExpressionStatement","src":"12306:66:18"}]},"name":"abi_encode_tuple_t_address_t_address_t_bool__to_t_address_t_address_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12053:9:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12065:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12073:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12081:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12092:4:18","type":""}],"src":"11949:430:18"},{"body":{"nodeType":"YulBlock","src":"12539:288:18","statements":[{"nodeType":"YulAssignment","src":"12549:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12561:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12572:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12557:3:18"},"nodeType":"YulFunctionCall","src":"12557:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12549:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12629:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12642:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12653:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12638:3:18"},"nodeType":"YulFunctionCall","src":"12638:17:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12585:43:18"},"nodeType":"YulFunctionCall","src":"12585:71:18"},"nodeType":"YulExpressionStatement","src":"12585:71:18"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12710:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12723:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12734:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12719:3:18"},"nodeType":"YulFunctionCall","src":"12719:18:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12666:43:18"},"nodeType":"YulFunctionCall","src":"12666:72:18"},"nodeType":"YulExpressionStatement","src":"12666:72:18"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"12792:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12805:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12816:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12801:3:18"},"nodeType":"YulFunctionCall","src":"12801:18:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12748:43:18"},"nodeType":"YulFunctionCall","src":"12748:72:18"},"nodeType":"YulExpressionStatement","src":"12748:72:18"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12495:9:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12507:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12515:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12523:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12534:4:18","type":""}],"src":"12385:442:18"},{"body":{"nodeType":"YulBlock","src":"13076:434:18","statements":[{"nodeType":"YulAssignment","src":"13086:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13098:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13109:3:18","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13094:3:18"},"nodeType":"YulFunctionCall","src":"13094:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13086:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13167:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13180:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13191:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13176:3:18"},"nodeType":"YulFunctionCall","src":"13176:17:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"13123:43:18"},"nodeType":"YulFunctionCall","src":"13123:71:18"},"nodeType":"YulExpressionStatement","src":"13123:71:18"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13294:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13307:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13318:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13303:3:18"},"nodeType":"YulFunctionCall","src":"13303:18:18"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13204:89:18"},"nodeType":"YulFunctionCall","src":"13204:118:18"},"nodeType":"YulExpressionStatement","src":"13204:118:18"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"13376:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13389:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13400:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13385:3:18"},"nodeType":"YulFunctionCall","src":"13385:19:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"13332:43:18"},"nodeType":"YulFunctionCall","src":"13332:73:18"},"nodeType":"YulExpressionStatement","src":"13332:73:18"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"13474:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13487:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13498:3:18","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13483:3:18"},"nodeType":"YulFunctionCall","src":"13483:19:18"}],"functionName":{"name":"abi_encode_t_enum$_PlayerStatus_$3166_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"13415:58:18"},"nodeType":"YulFunctionCall","src":"13415:88:18"},"nodeType":"YulExpressionStatement","src":"13415:88:18"}]},"name":"abi_encode_tuple_t_address_t_array$_t_uint256_$3_memory_ptr_t_address_t_enum$_PlayerStatus_$3166__to_t_address_t_array$_t_uint256_$3_memory_ptr_t_address_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13024:9:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"13036:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13044:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13052:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13060:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13071:4:18","type":""}],"src":"12833:677:18"},{"body":{"nodeType":"YulBlock","src":"13718:446:18","statements":[{"nodeType":"YulAssignment","src":"13728:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13740:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13751:3:18","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13736:3:18"},"nodeType":"YulFunctionCall","src":"13736:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13728:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13809:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13822:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13833:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13818:3:18"},"nodeType":"YulFunctionCall","src":"13818:17:18"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"13765:43:18"},"nodeType":"YulFunctionCall","src":"13765:71:18"},"nodeType":"YulExpressionStatement","src":"13765:71:18"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13888:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13901:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13912:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13897:3:18"},"nodeType":"YulFunctionCall","src":"13897:18:18"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"13846:41:18"},"nodeType":"YulFunctionCall","src":"13846:70:18"},"nodeType":"YulExpressionStatement","src":"13846:70:18"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"13968:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13981:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13992:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13977:3:18"},"nodeType":"YulFunctionCall","src":"13977:18:18"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"13926:41:18"},"nodeType":"YulFunctionCall","src":"13926:70:18"},"nodeType":"YulExpressionStatement","src":"13926:70:18"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"14048:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14061:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14072:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14057:3:18"},"nodeType":"YulFunctionCall","src":"14057:18:18"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"14006:41:18"},"nodeType":"YulFunctionCall","src":"14006:70:18"},"nodeType":"YulExpressionStatement","src":"14006:70:18"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"14128:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14141:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14152:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14137:3:18"},"nodeType":"YulFunctionCall","src":"14137:19:18"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"14086:41:18"},"nodeType":"YulFunctionCall","src":"14086:71:18"},"nodeType":"YulExpressionStatement","src":"14086:71:18"}]},"name":"abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13658:9:18","type":""},{"name":"value4","nodeType":"YulTypedName","src":"13670:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"13678:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13686:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13694:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13702:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13713:4:18","type":""}],"src":"13516:648:18"},{"body":{"nodeType":"YulBlock","src":"14287:143:18","statements":[{"nodeType":"YulAssignment","src":"14297:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14309:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14320:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14305:3:18"},"nodeType":"YulFunctionCall","src":"14305:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14297:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14396:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14409:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14420:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14405:3:18"},"nodeType":"YulFunctionCall","src":"14405:17:18"}],"functionName":{"name":"abi_encode_t_contract$_Characters_$3143_to_t_address_fromStack","nodeType":"YulIdentifier","src":"14333:62:18"},"nodeType":"YulFunctionCall","src":"14333:90:18"},"nodeType":"YulExpressionStatement","src":"14333:90:18"}]},"name":"abi_encode_tuple_t_contract$_Characters_$3143__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14259:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14271:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14282:4:18","type":""}],"src":"14170:260:18"},{"body":{"nodeType":"YulBlock","src":"14549:139:18","statements":[{"nodeType":"YulAssignment","src":"14559:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14571:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14582:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14567:3:18"},"nodeType":"YulFunctionCall","src":"14567:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14559:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14654:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14667:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14678:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14663:3:18"},"nodeType":"YulFunctionCall","src":"14663:17:18"}],"functionName":{"name":"abi_encode_t_contract$_NftBox_$5533_to_t_address_fromStack","nodeType":"YulIdentifier","src":"14595:58:18"},"nodeType":"YulFunctionCall","src":"14595:86:18"},"nodeType":"YulExpressionStatement","src":"14595:86:18"}]},"name":"abi_encode_tuple_t_contract$_NftBox_$5533__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14521:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14533:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14544:4:18","type":""}],"src":"14436:252:18"},{"body":{"nodeType":"YulBlock","src":"14792:124:18","statements":[{"nodeType":"YulAssignment","src":"14802:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14814:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14825:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14810:3:18"},"nodeType":"YulFunctionCall","src":"14810:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14802:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14882:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14895:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14906:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14891:3:18"},"nodeType":"YulFunctionCall","src":"14891:17:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14838:43:18"},"nodeType":"YulFunctionCall","src":"14838:71:18"},"nodeType":"YulExpressionStatement","src":"14838:71:18"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14764:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14776:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14787:4:18","type":""}],"src":"14694:222:18"},{"body":{"nodeType":"YulBlock","src":"15119:386:18","statements":[{"nodeType":"YulAssignment","src":"15129:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15141:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15152:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15137:3:18"},"nodeType":"YulFunctionCall","src":"15137:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15129:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15210:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15223:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15234:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15219:3:18"},"nodeType":"YulFunctionCall","src":"15219:17:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"15166:43:18"},"nodeType":"YulFunctionCall","src":"15166:71:18"},"nodeType":"YulExpressionStatement","src":"15166:71:18"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15291:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15304:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15315:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15300:3:18"},"nodeType":"YulFunctionCall","src":"15300:18:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"15247:43:18"},"nodeType":"YulFunctionCall","src":"15247:72:18"},"nodeType":"YulExpressionStatement","src":"15247:72:18"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"15373:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15386:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15397:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15382:3:18"},"nodeType":"YulFunctionCall","src":"15382:18:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"15329:43:18"},"nodeType":"YulFunctionCall","src":"15329:72:18"},"nodeType":"YulExpressionStatement","src":"15329:72:18"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"15470:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15483:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15494:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15479:3:18"},"nodeType":"YulFunctionCall","src":"15479:18:18"}],"functionName":{"name":"abi_encode_t_enum$_PlayerStatus_$3166_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"15411:58:18"},"nodeType":"YulFunctionCall","src":"15411:87:18"},"nodeType":"YulExpressionStatement","src":"15411:87:18"}]},"name":"abi_encode_tuple_t_uint256_t_address_t_address_t_enum$_PlayerStatus_$3166__to_t_uint256_t_address_t_address_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15067:9:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"15079:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15087:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15095:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15103:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15114:4:18","type":""}],"src":"14922:583:18"},{"body":{"nodeType":"YulBlock","src":"15552:88:18","statements":[{"nodeType":"YulAssignment","src":"15562:30:18","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"15572:18:18"},"nodeType":"YulFunctionCall","src":"15572:20:18"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15562:6:18"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15621:6:18"},{"name":"size","nodeType":"YulIdentifier","src":"15629:4:18"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"15601:19:18"},"nodeType":"YulFunctionCall","src":"15601:33:18"},"nodeType":"YulExpressionStatement","src":"15601:33:18"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"15536:4:18","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"15545:6:18","type":""}],"src":"15511:129:18"},{"body":{"nodeType":"YulBlock","src":"15686:35:18","statements":[{"nodeType":"YulAssignment","src":"15696:19:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15712:2:18","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15706:5:18"},"nodeType":"YulFunctionCall","src":"15706:9:18"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15696:6:18"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"15679:6:18","type":""}],"src":"15646:75:18"},{"body":{"nodeType":"YulBlock","src":"15809:229:18","statements":[{"body":{"nodeType":"YulBlock","src":"15914:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"15916:16:18"},"nodeType":"YulFunctionCall","src":"15916:18:18"},"nodeType":"YulExpressionStatement","src":"15916:18:18"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15886:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"15894:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15883:2:18"},"nodeType":"YulFunctionCall","src":"15883:30:18"},"nodeType":"YulIf","src":"15880:56:18"},{"nodeType":"YulAssignment","src":"15946:25:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15958:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"15966:4:18","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15954:3:18"},"nodeType":"YulFunctionCall","src":"15954:17:18"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"15946:4:18"}]},{"nodeType":"YulAssignment","src":"16008:23:18","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"16020:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"16026:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16016:3:18"},"nodeType":"YulFunctionCall","src":"16016:15:18"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"16008:4:18"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"15793:6:18","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"15804:4:18","type":""}],"src":"15727:311:18"},{"body":{"nodeType":"YulBlock","src":"16111:241:18","statements":[{"body":{"nodeType":"YulBlock","src":"16216:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"16218:16:18"},"nodeType":"YulFunctionCall","src":"16218:18:18"},"nodeType":"YulExpressionStatement","src":"16218:18:18"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16188:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"16196:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16185:2:18"},"nodeType":"YulFunctionCall","src":"16185:30:18"},"nodeType":"YulIf","src":"16182:56:18"},{"nodeType":"YulAssignment","src":"16248:37:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16278:6:18"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"16256:21:18"},"nodeType":"YulFunctionCall","src":"16256:29:18"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"16248:4:18"}]},{"nodeType":"YulAssignment","src":"16322:23:18","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"16334:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"16340:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16330:3:18"},"nodeType":"YulFunctionCall","src":"16330:15:18"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"16322:4:18"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"16095:6:18","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"16106:4:18","type":""}],"src":"16044:308:18"},{"body":{"nodeType":"YulBlock","src":"16428:28:18","statements":[{"nodeType":"YulAssignment","src":"16438:11:18","value":{"name":"ptr","nodeType":"YulIdentifier","src":"16446:3:18"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"16438:4:18"}]}]},"name":"array_dataslot_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"16415:3:18","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"16423:4:18","type":""}],"src":"16358:98:18"},{"body":{"nodeType":"YulBlock","src":"16534:32:18","statements":[{"nodeType":"YulAssignment","src":"16545:14:18","value":{"kind":"number","nodeType":"YulLiteral","src":"16555:4:18","type":"","value":"0x03"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"16545:6:18"}]}]},"name":"array_length_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16517:5:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"16527:6:18","type":""}],"src":"16462:104:18"},{"body":{"nodeType":"YulBlock","src":"16631:40:18","statements":[{"nodeType":"YulAssignment","src":"16642:22:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16658:5:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16652:5:18"},"nodeType":"YulFunctionCall","src":"16652:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"16642:6:18"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16614:5:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"16624:6:18","type":""}],"src":"16572:99:18"},{"body":{"nodeType":"YulBlock","src":"16750:38:18","statements":[{"nodeType":"YulAssignment","src":"16760:22:18","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"16772:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"16777:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16768:3:18"},"nodeType":"YulFunctionCall","src":"16768:14:18"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"16760:4:18"}]}]},"name":"array_nextElement_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"16737:3:18","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"16745:4:18","type":""}],"src":"16677:111:18"},{"body":{"nodeType":"YulBlock","src":"16903:34:18","statements":[{"nodeType":"YulAssignment","src":"16913:18:18","value":{"name":"pos","nodeType":"YulIdentifier","src":"16928:3:18"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"16913:11:18"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16875:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"16880:6:18","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"16891:11:18","type":""}],"src":"16794:143:18"},{"body":{"nodeType":"YulBlock","src":"17057:34:18","statements":[{"nodeType":"YulAssignment","src":"17067:18:18","value":{"name":"pos","nodeType":"YulIdentifier","src":"17082:3:18"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17067:11:18"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17029:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"17034:6:18","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17045:11:18","type":""}],"src":"16943:148:18"},{"body":{"nodeType":"YulBlock","src":"17141:261:18","statements":[{"nodeType":"YulAssignment","src":"17151:25:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17174:1:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17156:17:18"},"nodeType":"YulFunctionCall","src":"17156:20:18"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"17151:1:18"}]},{"nodeType":"YulAssignment","src":"17185:25:18","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17208:1:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17190:17:18"},"nodeType":"YulFunctionCall","src":"17190:20:18"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"17185:1:18"}]},{"body":{"nodeType":"YulBlock","src":"17348:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"17350:16:18"},"nodeType":"YulFunctionCall","src":"17350:18:18"},"nodeType":"YulExpressionStatement","src":"17350:18:18"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17269:1:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17276:66:18","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"17344:1:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17272:3:18"},"nodeType":"YulFunctionCall","src":"17272:74:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17266:2:18"},"nodeType":"YulFunctionCall","src":"17266:81:18"},"nodeType":"YulIf","src":"17263:107:18"},{"nodeType":"YulAssignment","src":"17380:16:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17391:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"17394:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17387:3:18"},"nodeType":"YulFunctionCall","src":"17387:9:18"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"17380:3:18"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"17128:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"17131:1:18","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"17137:3:18","type":""}],"src":"17097:305:18"},{"body":{"nodeType":"YulBlock","src":"17453:146:18","statements":[{"nodeType":"YulAssignment","src":"17463:25:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17486:1:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17468:17:18"},"nodeType":"YulFunctionCall","src":"17468:20:18"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"17463:1:18"}]},{"nodeType":"YulAssignment","src":"17497:25:18","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17520:1:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17502:17:18"},"nodeType":"YulFunctionCall","src":"17502:20:18"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"17497:1:18"}]},{"body":{"nodeType":"YulBlock","src":"17544:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"17546:16:18"},"nodeType":"YulFunctionCall","src":"17546:18:18"},"nodeType":"YulExpressionStatement","src":"17546:18:18"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17538:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"17541:1:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17535:2:18"},"nodeType":"YulFunctionCall","src":"17535:8:18"},"nodeType":"YulIf","src":"17532:34:18"},{"nodeType":"YulAssignment","src":"17576:17:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17588:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"17591:1:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17584:3:18"},"nodeType":"YulFunctionCall","src":"17584:9:18"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"17576:4:18"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"17439:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"17442:1:18","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"17448:4:18","type":""}],"src":"17408:191:18"},{"body":{"nodeType":"YulBlock","src":"17650:51:18","statements":[{"nodeType":"YulAssignment","src":"17660:35:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17689:5:18"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"17671:17:18"},"nodeType":"YulFunctionCall","src":"17671:24:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17660:7:18"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17632:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17642:7:18","type":""}],"src":"17605:96:18"},{"body":{"nodeType":"YulBlock","src":"17749:48:18","statements":[{"nodeType":"YulAssignment","src":"17759:32:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17784:5:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17777:6:18"},"nodeType":"YulFunctionCall","src":"17777:13:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17770:6:18"},"nodeType":"YulFunctionCall","src":"17770:21:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17759:7:18"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17731:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17741:7:18","type":""}],"src":"17707:90:18"},{"body":{"nodeType":"YulBlock","src":"17848:32:18","statements":[{"nodeType":"YulAssignment","src":"17858:16:18","value":{"name":"value","nodeType":"YulIdentifier","src":"17869:5:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17858:7:18"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17830:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17840:7:18","type":""}],"src":"17803:77:18"},{"body":{"nodeType":"YulBlock","src":"17948:83:18","statements":[{"nodeType":"YulAssignment","src":"17958:16:18","value":{"name":"value","nodeType":"YulIdentifier","src":"17969:5:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17958:7:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18019:5:18"}],"functionName":{"name":"validator_assert_t_enum$_PlayerStatus_$3166","nodeType":"YulIdentifier","src":"17975:43:18"},"nodeType":"YulFunctionCall","src":"17975:50:18"},"nodeType":"YulExpressionStatement","src":"17975:50:18"}]},"name":"cleanup_t_enum$_PlayerStatus_$3166","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17930:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17940:7:18","type":""}],"src":"17886:145:18"},{"body":{"nodeType":"YulBlock","src":"18081:45:18","statements":[{"nodeType":"YulAssignment","src":"18091:29:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18106:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"18113:6:18","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18102:3:18"},"nodeType":"YulFunctionCall","src":"18102:18:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18091:7:18"}]}]},"name":"cleanup_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18063:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18073:7:18","type":""}],"src":"18037:89:18"},{"body":{"nodeType":"YulBlock","src":"18177:81:18","statements":[{"nodeType":"YulAssignment","src":"18187:65:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18202:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"18209:42:18","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18198:3:18"},"nodeType":"YulFunctionCall","src":"18198:54:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18187:7:18"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18159:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18169:7:18","type":""}],"src":"18132:126:18"},{"body":{"nodeType":"YulBlock","src":"18309:32:18","statements":[{"nodeType":"YulAssignment","src":"18319:16:18","value":{"name":"value","nodeType":"YulIdentifier","src":"18330:5:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18319:7:18"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18291:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18301:7:18","type":""}],"src":"18264:77:18"},{"body":{"nodeType":"YulBlock","src":"18391:49:18","statements":[{"nodeType":"YulAssignment","src":"18401:33:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18416:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"18423:10:18","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18412:3:18"},"nodeType":"YulFunctionCall","src":"18412:22:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18401:7:18"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18373:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18383:7:18","type":""}],"src":"18347:93:18"},{"body":{"nodeType":"YulBlock","src":"18490:57:18","statements":[{"nodeType":"YulAssignment","src":"18500:41:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18515:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"18522:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18511:3:18"},"nodeType":"YulFunctionCall","src":"18511:30:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"18500:7:18"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18472:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"18482:7:18","type":""}],"src":"18446:101:18"},{"body":{"nodeType":"YulBlock","src":"18632:66:18","statements":[{"nodeType":"YulAssignment","src":"18642:50:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18686:5:18"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"18655:30:18"},"nodeType":"YulFunctionCall","src":"18655:37:18"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"18642:9:18"}]}]},"name":"convert_t_contract$_Characters_$3143_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18612:5:18","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"18622:9:18","type":""}],"src":"18553:145:18"},{"body":{"nodeType":"YulBlock","src":"18779:66:18","statements":[{"nodeType":"YulAssignment","src":"18789:50:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18833:5:18"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"18802:30:18"},"nodeType":"YulFunctionCall","src":"18802:37:18"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"18789:9:18"}]}]},"name":"convert_t_contract$_NftBox_$5533_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18759:5:18","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"18769:9:18","type":""}],"src":"18704:141:18"},{"body":{"nodeType":"YulBlock","src":"18926:70:18","statements":[{"nodeType":"YulAssignment","src":"18936:54:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18984:5:18"}],"functionName":{"name":"cleanup_t_enum$_PlayerStatus_$3166","nodeType":"YulIdentifier","src":"18949:34:18"},"nodeType":"YulFunctionCall","src":"18949:41:18"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"18936:9:18"}]}]},"name":"convert_t_enum$_PlayerStatus_$3166_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18906:5:18","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"18916:9:18","type":""}],"src":"18851:145:18"},{"body":{"nodeType":"YulBlock","src":"19062:66:18","statements":[{"nodeType":"YulAssignment","src":"19072:50:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19116:5:18"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"19085:30:18"},"nodeType":"YulFunctionCall","src":"19085:37:18"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"19072:9:18"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19042:5:18","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"19052:9:18","type":""}],"src":"19002:126:18"},{"body":{"nodeType":"YulBlock","src":"19194:53:18","statements":[{"nodeType":"YulAssignment","src":"19204:37:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19235:5:18"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"19217:17:18"},"nodeType":"YulFunctionCall","src":"19217:24:18"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"19204:9:18"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19174:5:18","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"19184:9:18","type":""}],"src":"19134:113:18"},{"body":{"nodeType":"YulBlock","src":"19302:258:18","statements":[{"nodeType":"YulVariableDeclaration","src":"19312:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"19321:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"19316:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"19381:63:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"19406:3:18"},{"name":"i","nodeType":"YulIdentifier","src":"19411:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19402:3:18"},"nodeType":"YulFunctionCall","src":"19402:11:18"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"19425:3:18"},{"name":"i","nodeType":"YulIdentifier","src":"19430:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19421:3:18"},"nodeType":"YulFunctionCall","src":"19421:11:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19415:5:18"},"nodeType":"YulFunctionCall","src":"19415:18:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19395:6:18"},"nodeType":"YulFunctionCall","src":"19395:39:18"},"nodeType":"YulExpressionStatement","src":"19395:39:18"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"19342:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"19345:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19339:2:18"},"nodeType":"YulFunctionCall","src":"19339:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"19353:19:18","statements":[{"nodeType":"YulAssignment","src":"19355:15:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"19364:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"19367:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19360:3:18"},"nodeType":"YulFunctionCall","src":"19360:10:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"19355:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"19335:3:18","statements":[]},"src":"19331:113:18"},{"body":{"nodeType":"YulBlock","src":"19478:76:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"19528:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"19533:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19524:3:18"},"nodeType":"YulFunctionCall","src":"19524:16:18"},{"kind":"number","nodeType":"YulLiteral","src":"19542:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19517:6:18"},"nodeType":"YulFunctionCall","src":"19517:27:18"},"nodeType":"YulExpressionStatement","src":"19517:27:18"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"19459:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"19462:6:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19456:2:18"},"nodeType":"YulFunctionCall","src":"19456:13:18"},"nodeType":"YulIf","src":"19453:101:18"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"19284:3:18","type":""},{"name":"dst","nodeType":"YulTypedName","src":"19289:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"19294:6:18","type":""}],"src":"19253:307:18"},{"body":{"nodeType":"YulBlock","src":"19609:238:18","statements":[{"nodeType":"YulVariableDeclaration","src":"19619:58:18","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19641:6:18"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"19671:4:18"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"19649:21:18"},"nodeType":"YulFunctionCall","src":"19649:27:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19637:3:18"},"nodeType":"YulFunctionCall","src":"19637:40:18"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"19623:10:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"19788:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"19790:16:18"},"nodeType":"YulFunctionCall","src":"19790:18:18"},"nodeType":"YulExpressionStatement","src":"19790:18:18"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"19731:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"19743:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19728:2:18"},"nodeType":"YulFunctionCall","src":"19728:34:18"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"19767:10:18"},{"name":"memPtr","nodeType":"YulIdentifier","src":"19779:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19764:2:18"},"nodeType":"YulFunctionCall","src":"19764:22:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"19725:2:18"},"nodeType":"YulFunctionCall","src":"19725:62:18"},"nodeType":"YulIf","src":"19722:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19826:2:18","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"19830:10:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19819:6:18"},"nodeType":"YulFunctionCall","src":"19819:22:18"},"nodeType":"YulExpressionStatement","src":"19819:22:18"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19595:6:18","type":""},{"name":"size","nodeType":"YulTypedName","src":"19603:4:18","type":""}],"src":"19566:281:18"},{"body":{"nodeType":"YulBlock","src":"19896:190:18","statements":[{"nodeType":"YulAssignment","src":"19906:33:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19933:5:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19915:17:18"},"nodeType":"YulFunctionCall","src":"19915:24:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19906:5:18"}]},{"body":{"nodeType":"YulBlock","src":"20029:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"20031:16:18"},"nodeType":"YulFunctionCall","src":"20031:18:18"},"nodeType":"YulExpressionStatement","src":"20031:18:18"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19954:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"19961:66:18","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"19951:2:18"},"nodeType":"YulFunctionCall","src":"19951:77:18"},"nodeType":"YulIf","src":"19948:103:18"},{"nodeType":"YulAssignment","src":"20060:20:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20071:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"20078:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20067:3:18"},"nodeType":"YulFunctionCall","src":"20067:13:18"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"20060:3:18"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19882:5:18","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"19892:3:18","type":""}],"src":"19853:233:18"},{"body":{"nodeType":"YulBlock","src":"20126:142:18","statements":[{"nodeType":"YulAssignment","src":"20136:25:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20159:1:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20141:17:18"},"nodeType":"YulFunctionCall","src":"20141:20:18"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"20136:1:18"}]},{"nodeType":"YulAssignment","src":"20170:25:18","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"20193:1:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20175:17:18"},"nodeType":"YulFunctionCall","src":"20175:20:18"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"20170:1:18"}]},{"body":{"nodeType":"YulBlock","src":"20217:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"20219:16:18"},"nodeType":"YulFunctionCall","src":"20219:18:18"},"nodeType":"YulExpressionStatement","src":"20219:18:18"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"20214:1:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20207:6:18"},"nodeType":"YulFunctionCall","src":"20207:9:18"},"nodeType":"YulIf","src":"20204:35:18"},{"nodeType":"YulAssignment","src":"20248:14:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"20257:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"20260:1:18"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"20253:3:18"},"nodeType":"YulFunctionCall","src":"20253:9:18"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"20248:1:18"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"20115:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"20118:1:18","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"20124:1:18","type":""}],"src":"20092:176:18"},{"body":{"nodeType":"YulBlock","src":"20302:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20319:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20322:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20312:6:18"},"nodeType":"YulFunctionCall","src":"20312:88:18"},"nodeType":"YulExpressionStatement","src":"20312:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20416:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20419:4:18","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20409:6:18"},"nodeType":"YulFunctionCall","src":"20409:15:18"},"nodeType":"YulExpressionStatement","src":"20409:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20440:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20443:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20433:6:18"},"nodeType":"YulFunctionCall","src":"20433:15:18"},"nodeType":"YulExpressionStatement","src":"20433:15:18"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"20274:180:18"},{"body":{"nodeType":"YulBlock","src":"20488:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20505:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20508:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20498:6:18"},"nodeType":"YulFunctionCall","src":"20498:88:18"},"nodeType":"YulExpressionStatement","src":"20498:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20602:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20605:4:18","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20595:6:18"},"nodeType":"YulFunctionCall","src":"20595:15:18"},"nodeType":"YulExpressionStatement","src":"20595:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20626:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20629:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20619:6:18"},"nodeType":"YulFunctionCall","src":"20619:15:18"},"nodeType":"YulExpressionStatement","src":"20619:15:18"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"20460:180:18"},{"body":{"nodeType":"YulBlock","src":"20674:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20691:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20694:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20684:6:18"},"nodeType":"YulFunctionCall","src":"20684:88:18"},"nodeType":"YulExpressionStatement","src":"20684:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20788:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20791:4:18","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20781:6:18"},"nodeType":"YulFunctionCall","src":"20781:15:18"},"nodeType":"YulExpressionStatement","src":"20781:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20812:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20815:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20805:6:18"},"nodeType":"YulFunctionCall","src":"20805:15:18"},"nodeType":"YulExpressionStatement","src":"20805:15:18"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"20646:180:18"},{"body":{"nodeType":"YulBlock","src":"20860:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20877:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20880:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20870:6:18"},"nodeType":"YulFunctionCall","src":"20870:88:18"},"nodeType":"YulExpressionStatement","src":"20870:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20974:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20977:4:18","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20967:6:18"},"nodeType":"YulFunctionCall","src":"20967:15:18"},"nodeType":"YulExpressionStatement","src":"20967:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20998:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21001:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20991:6:18"},"nodeType":"YulFunctionCall","src":"20991:15:18"},"nodeType":"YulExpressionStatement","src":"20991:15:18"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"20832:180:18"},{"body":{"nodeType":"YulBlock","src":"21046:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21063:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21066:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21056:6:18"},"nodeType":"YulFunctionCall","src":"21056:88:18"},"nodeType":"YulExpressionStatement","src":"21056:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21160:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21163:4:18","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21153:6:18"},"nodeType":"YulFunctionCall","src":"21153:15:18"},"nodeType":"YulExpressionStatement","src":"21153:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21184:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21187:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21177:6:18"},"nodeType":"YulFunctionCall","src":"21177:15:18"},"nodeType":"YulExpressionStatement","src":"21177:15:18"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"21018:180:18"},{"body":{"nodeType":"YulBlock","src":"21232:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21249:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21252:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21242:6:18"},"nodeType":"YulFunctionCall","src":"21242:88:18"},"nodeType":"YulExpressionStatement","src":"21242:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21346:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21349:4:18","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21339:6:18"},"nodeType":"YulFunctionCall","src":"21339:15:18"},"nodeType":"YulExpressionStatement","src":"21339:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21370:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21373:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21363:6:18"},"nodeType":"YulFunctionCall","src":"21363:15:18"},"nodeType":"YulExpressionStatement","src":"21363:15:18"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"21204:180:18"},{"body":{"nodeType":"YulBlock","src":"21479:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21496:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21499:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21489:6:18"},"nodeType":"YulFunctionCall","src":"21489:12:18"},"nodeType":"YulExpressionStatement","src":"21489:12:18"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"21390:117:18"},{"body":{"nodeType":"YulBlock","src":"21602:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21619:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21622:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21612:6:18"},"nodeType":"YulFunctionCall","src":"21612:12:18"},"nodeType":"YulExpressionStatement","src":"21612:12:18"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"21513:117:18"},{"body":{"nodeType":"YulBlock","src":"21725:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21742:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21745:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21735:6:18"},"nodeType":"YulFunctionCall","src":"21735:12:18"},"nodeType":"YulExpressionStatement","src":"21735:12:18"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"21636:117:18"},{"body":{"nodeType":"YulBlock","src":"21848:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21865:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21868:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21858:6:18"},"nodeType":"YulFunctionCall","src":"21858:12:18"},"nodeType":"YulExpressionStatement","src":"21858:12:18"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"21759:117:18"},{"body":{"nodeType":"YulBlock","src":"21971:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21988:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21991:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21981:6:18"},"nodeType":"YulFunctionCall","src":"21981:12:18"},"nodeType":"YulExpressionStatement","src":"21981:12:18"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"21882:117:18"},{"body":{"nodeType":"YulBlock","src":"22053:54:18","statements":[{"nodeType":"YulAssignment","src":"22063:38:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22081:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"22088:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22077:3:18"},"nodeType":"YulFunctionCall","src":"22077:14:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22097:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"22093:3:18"},"nodeType":"YulFunctionCall","src":"22093:7:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22073:3:18"},"nodeType":"YulFunctionCall","src":"22073:28:18"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"22063:6:18"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22036:5:18","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"22046:6:18","type":""}],"src":"22005:102:18"},{"body":{"nodeType":"YulBlock","src":"22173:62:18","statements":[{"body":{"nodeType":"YulBlock","src":"22207:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nodeType":"YulIdentifier","src":"22209:16:18"},"nodeType":"YulFunctionCall","src":"22209:18:18"},"nodeType":"YulExpressionStatement","src":"22209:18:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22196:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"22203:1:18","type":"","value":"4"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"22193:2:18"},"nodeType":"YulFunctionCall","src":"22193:12:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22186:6:18"},"nodeType":"YulFunctionCall","src":"22186:20:18"},"nodeType":"YulIf","src":"22183:46:18"}]},"name":"validator_assert_t_enum$_PlayerStatus_$3166","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22166:5:18","type":""}],"src":"22113:122:18"},{"body":{"nodeType":"YulBlock","src":"22284:79:18","statements":[{"body":{"nodeType":"YulBlock","src":"22341:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22350:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22353:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22343:6:18"},"nodeType":"YulFunctionCall","src":"22343:12:18"},"nodeType":"YulExpressionStatement","src":"22343:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22307:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22332:5:18"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"22314:17:18"},"nodeType":"YulFunctionCall","src":"22314:24:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"22304:2:18"},"nodeType":"YulFunctionCall","src":"22304:35:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22297:6:18"},"nodeType":"YulFunctionCall","src":"22297:43:18"},"nodeType":"YulIf","src":"22294:63:18"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22277:5:18","type":""}],"src":"22241:122:18"},{"body":{"nodeType":"YulBlock","src":"22409:76:18","statements":[{"body":{"nodeType":"YulBlock","src":"22463:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22472:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22475:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22465:6:18"},"nodeType":"YulFunctionCall","src":"22465:12:18"},"nodeType":"YulExpressionStatement","src":"22465:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22432:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22454:5:18"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"22439:14:18"},"nodeType":"YulFunctionCall","src":"22439:21:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"22429:2:18"},"nodeType":"YulFunctionCall","src":"22429:32:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22422:6:18"},"nodeType":"YulFunctionCall","src":"22422:40:18"},"nodeType":"YulIf","src":"22419:60:18"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22402:5:18","type":""}],"src":"22369:116:18"},{"body":{"nodeType":"YulBlock","src":"22534:79:18","statements":[{"body":{"nodeType":"YulBlock","src":"22591:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22600:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22603:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22593:6:18"},"nodeType":"YulFunctionCall","src":"22593:12:18"},"nodeType":"YulExpressionStatement","src":"22593:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22557:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22582:5:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22564:17:18"},"nodeType":"YulFunctionCall","src":"22564:24:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"22554:2:18"},"nodeType":"YulFunctionCall","src":"22554:35:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22547:6:18"},"nodeType":"YulFunctionCall","src":"22547:43:18"},"nodeType":"YulIf","src":"22544:63:18"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22527:5:18","type":""}],"src":"22491:122:18"}]},"contents":"{\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptrt_boolt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // uint256[3] -> uint256[3]\n    function abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack(value, pos)  {\n        let length := array_length_t_array$_t_uint256_$3_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$3_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$3_memory_ptr(srcPtr)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_contract$_Characters_$3143_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_Characters_$3143_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_NftBox_$5533_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_NftBox_$5533_to_t_address(value))\n    }\n\n    function abi_encode_t_enum$_PlayerStatus_$3166_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_PlayerStatus_$3166_to_t_uint8(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_bool__to_t_address_t_address_t_bool__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_array$_t_uint256_$3_memory_ptr_t_address_t_enum$_PlayerStatus_$3166__to_t_address_t_array$_t_uint256_$3_memory_ptr_t_address_t_uint8__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 128))\n\n        abi_encode_t_enum$_PlayerStatus_$3166_to_t_uint8_fromStack(value3,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_contract$_Characters_$3143__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_Characters_$3143_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_NftBox_$5533__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_NftBox_$5533_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_address_t_enum$_PlayerStatus_$3166__to_t_uint256_t_address_t_address_t_uint8__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_enum$_PlayerStatus_$3166_to_t_uint8_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_uint256_$3_memory_ptr(ptr) -> data {\n        data := ptr\n\n    }\n\n    function array_length_t_array$_t_uint256_$3_memory_ptr(value) -> length {\n\n        length := 0x03\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_uint256_$3_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_enum$_PlayerStatus_$3166(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_PlayerStatus_$3166(value)\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function convert_t_contract$_Characters_$3143_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_contract$_NftBox_$5533_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_enum$_PlayerStatus_$3166_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_PlayerStatus_$3166(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_assert_t_enum$_PlayerStatus_$3166(value) {\n        if iszero(lt(value, 4)) { panic_error_0x21() }\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":18,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"10":[{"length":32,"start":616},{"length":32,"start":700}],"3225":[{"length":32,"start":11407}],"3227":[{"length":32,"start":11500}],"3229":[{"length":32,"start":11467}],"3231":[{"length":32,"start":11535}],"3256":[{"length":32,"start":1238}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c8063533d765311610071578063533d765314610142578063570d2f2014610175578063703afc87146101a5578063e783c827146101d5578063e81fb49514610205578063eabfb83914610221576100a9565b806302cac05c146100ae578063123cb832146100cc5780631fe543e3146100ea5780632a3031a2146101065780632c0d555814610124575b600080fd5b6100b6610253565b6040516100c39190614674565b60405180910390f35b6100d4610260565b6040516100e19190614674565b60405180910390f35b61010460048036038101906100ff9190614226565b610266565b005b61010e610326565b60405161011b919061463e565b60405180910390f35b61012c61034c565b6040516101399190614659565b60405180910390f35b61015c600480360381019061015791906140af565b610372565b60405161016c949392919061468f565b60405180910390f35b61018f600480360381019061018a9190614109565b6103ef565b60405161019c9190614674565b60405180910390f35b6101bf60048036038101906101ba91906141cc565b61044e565b6040516101cc91906144f4565b60405180910390f35b6101ef60048036038101906101ea9190614305565b61048d565b6040516101fc91906144f4565b60405180910390f35b61021f600480360381019061021a9190614345565b6104d2565b005b61023b600480360381019061023691906141cc565b6114c6565b60405161024a93929190614538565b60405180910390f35b6000600280549050905090565b60055481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461031857337f00000000000000000000000000000000000000000000000000000000000000006040517f1cf993f400000000000000000000000000000000000000000000000000000000815260040161030f92919061450f565b60405180910390fd5b610322828261153d565b5050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050160149054906101000a900460ff16905084565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201826003811061044457610443614aae565b5b0154905092915050565b6002818154811061045e57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160205281600052604060002081600281106104a957600080fd5b016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60007f000000000000000000000000000000000000000000000000000000000000000090506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bdc60bf9866040518263ffffffff1660e01b81526004016105549190614674565b60006040518083038186803b15801561056c57600080fd5b505afa158015610580573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906105a99190614282565b50925050506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bdc60bf9866040518263ffffffff1660e01b815260040161060b9190614674565b60006040518083038186803b15801561062357600080fd5b505afa158015610637573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906106609190614282565b50925050506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bdc60bf9866040518263ffffffff1660e01b81526004016106c29190614674565b60006040518083038186803b1580156106da57600080fd5b505afa1580156106ee573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906107179190614282565b50925050503373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16636352211e896040518263ffffffff1660e01b815260040161076c9190614674565b60206040518083038186803b15801561078457600080fd5b505afa158015610798573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107bc91906140dc565b73ffffffffffffffffffffffffffffffffffffffff161415806107dd575082155b806107e757508587145b806107f157508486145b806107fb57508685145b15610832576040517f85696c6f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16636352211e886040518263ffffffff1660e01b81526004016108829190614674565b60206040518083038186803b15801561089a57600080fd5b505afa1580156108ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d291906140dc565b73ffffffffffffffffffffffffffffffffffffffff161415806108f3575081155b1561092a576040517f85696c6f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16636352211e876040518263ffffffff1660e01b815260040161097a9190614674565b60206040518083038186803b15801561099257600080fd5b505afa1580156109a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ca91906140dc565b73ffffffffffffffffffffffffffffffffffffffff161415806109eb575080155b15610a22576040517f85696c6f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016003811115610a3657610a35614a50565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050160149054906101000a900460ff166003811115610a9757610a96614a50565b5b1415610acf576040517f4173115d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006002805490501415610d59576002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040518060a0016040528060055481526020013373ffffffffffffffffffffffffffffffffffffffff16815260200160405180606001604052808a8152602001898152602001888152508152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160006003811115610bc057610bbf614a50565b5b8152506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201906003610c69929190613daf565b5060608201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160050160146101000a81548160ff02191690836003811115610cdc57610cdb614a50565b5b02179055509050507fdbef1b3fbd727e0f6d68a939317676615e5672a68159020edbd96a09f055a8463360405180606001604052808a815260200189815260200188815250600080604051610d3494939291906145a6565b60405180910390a160056000815480929190610d4f90614978565b91905055506114bd565b60006002600081548110610d7057610d6f614aae565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610e03576040517f6e04f53700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201600380602002604051908101604052809291908260038015610eea576020028201915b815481526020019060010190808311610ed6575b505050505081526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160149054906101000a900460ff166003811115610f6e57610f6d614a50565b5b6003811115610f8057610f7f614a50565b5b8152505090506040518060a00160405280826000015181526020018373ffffffffffffffffffffffffffffffffffffffff168152602001826040015181526020013373ffffffffffffffffffffffffffffffffffffffff16815260200160016003811115610ff157610ff0614a50565b5b8152506000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020190600361109a929190613daf565b5060608201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160050160146101000a81548160ff0219169083600381111561110d5761110c614a50565b5b02179055509050506040518060a00160405280826000015181526020013373ffffffffffffffffffffffffffffffffffffffff16815260200160405180606001604052808c81526020018b81526020018a81525081526020018373ffffffffffffffffffffffffffffffffffffffff1681526020016001600381111561119657611195614a50565b5b8152506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020190600361123f929190613daf565b5060608201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160050160146101000a81548160ff021916908360038111156112b2576112b1614a50565b5b021790555090505060005b600280549050811015611475578273ffffffffffffffffffffffffffffffffffffffff16600282815481106112f5576112f4614aae565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156114625760008190505b600160028054905061135491906147ef565b81101561141557600260018261136a9190614799565b8154811061137b5761137a614aae565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600282815481106113ba576113b9614aae565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808061140d90614978565b915050611342565b50600280548061142857611427614a7f565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690559055611475565b808061146d90614978565b9150506112bd565b507f3182b38841de065eded850f9e9fa30850bb37c3a57df9bef3841138a94b7295633836040516114a792919061450f565b60405180910390a16114b93383612279565b5050505b50505050505050565b60066020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900460ff16905083565b6000600160008481526020019081526020016000206002806020026040519081016040528092919082600280156115bf576020028201915b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611575575b5050505050905060006115e9826000600281106115df576115de614aae565b5b6020020151612e78565b9050600061160e8360016002811061160457611603614aae565b5b6020020151612e78565b90506040518060a001604052806000808660006002811061163257611631614aae565b5b602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015481526020018460006002811061168e5761168d614aae565b5b602002015173ffffffffffffffffffffffffffffffffffffffff168152602001600080866000600281106116c5576116c4614aae565b5b602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160038060200260405190810160405280929190826003801561173e576020028201915b81548152602001906001019080831161172a575b505050505081526020018460016002811061175c5761175b614aae565b5b602002015173ffffffffffffffffffffffffffffffffffffffff16815260200160038081111561178f5761178e614a50565b5b815250600080856000600281106117a9576117a8614aae565b5b602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201906003611850929190613daf565b5060608201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160050160146101000a81548160ff021916908360038111156118c3576118c2614a50565b5b02179055509050506040518060a00160405280600080866001600281106118ed576118ec614aae565b5b602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015481526020018460016002811061194957611948614aae565b5b602002015173ffffffffffffffffffffffffffffffffffffffff168152602001600080866001600281106119805761197f614aae565b5b602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002016003806020026040519081016040528092919082600380156119f9576020028201915b8154815260200190600101908083116119e5575b5050505050815260200184600060028110611a1757611a16614aae565b5b602002015173ffffffffffffffffffffffffffffffffffffffff168152602001600380811115611a4a57611a49614a50565b5b81525060008085600160028110611a6457611a63614aae565b5b602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201906003611b0b929190613daf565b5060608201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160050160146101000a81548160ff02191690836003811115611b7e57611b7d614a50565b5b02179055509050506000600385600081518110611b9e57611b9d614aae565b5b6020026020010151611bb091906149c1565b90506000806000915060009050838360038110611bd057611bcf614aae565b5b602002015160200151858460038110611bec57611beb614aae565b5b6020020151602001511115611c0e578180611c0690614978565b925050611c7d565b838360038110611c2157611c20614aae565b5b602002015160200151858460038110611c3d57611c3c614aae565b5b6020020151602001511015611c5f578080611c5790614978565b915050611c7c565b8180611c6a90614978565b9250508080611c7890614978565b9150505b5b6000806000600160008c8152602001908152602001600020600060028110611ca857611ca7614aae565b5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050611d12613def565b611d1a613def565b60005b6003811015611e395786811415611d3357611e26565b86811015611da657888160038110611d4e57611d4d614aae565b5b6020020151838260028110611d6657611d65614aae565b5b6020020181905250878160038110611d8157611d80614aae565b5b6020020151828260028110611d9957611d98614aae565b5b6020020181905250611e25565b888160038110611db957611db8614aae565b5b602002015183600183611dcc91906147ef565b60028110611ddd57611ddc614aae565b5b6020020181905250878160038110611df857611df7614aae565b5b602002015182600183611e0b91906147ef565b60028110611e1c57611e1b614aae565b5b60200201819052505b5b8080611e3190614978565b915050611d1d565b508060028b600181518110611e5157611e50614aae565b5b6020026020010151611e6391906149c1565b60028110611e7457611e73614aae565b5b6020020151604001518260028c600181518110611e9457611e93614aae565b5b6020026020010151611ea691906149c1565b60028110611eb757611eb6614aae565b5b6020020151604001511115611ed9578480611ed190614978565b955050611f96565b8060028b600181518110611ef057611eef614aae565b5b6020026020010151611f0291906149c1565b60028110611f1357611f12614aae565b5b6020020151604001518260028c600181518110611f3357611f32614aae565b5b6020026020010151611f4591906149c1565b60028110611f5657611f55614aae565b5b6020020151604001511015611f78578380611f7090614978565b945050611f95565b8480611f8390614978565b9550508380611f9190614978565b9450505b5b611f9e613e1c565b611fa6613e1c565b60005b60028110156121135760028d600181518110611fc857611fc7614aae565b5b6020026020010151611fda91906149c1565b811415611fe657612100565b60028d600181518110611ffc57611ffb614aae565b5b602002602001015161200e91906149c1565b8110156120805784816002811061202857612027614aae565b5b60200201518382600181106120405761203f614aae565b5b602002018190525083816002811061205b5761205a614aae565b5b602002015182826001811061207357612072614aae565b5b60200201819052506120ff565b84816002811061209357612092614aae565b5b6020020151836001836120a691906147ef565b600181106120b7576120b6614aae565b5b60200201819052508381600281106120d2576120d1614aae565b5b6020020151826001836120e591906147ef565b600181106120f6576120f5614aae565b5b60200201819052505b5b808061210b90614978565b915050611fa9565b5060008b60006002811061212a57612129614aae565b5b6020020151905060008c60016002811061214757612146614aae565b5b602002015190508260006001811061216257612161614aae565b5b6020020151606001518460006001811061217f5761217e614aae565b5b60200201516060015111156121a157888061219990614978565b995050612212565b826000600181106121b5576121b4614aae565b5b602002015160600151846000600181106121d2576121d1614aae565b5b60200201516060015110156121f45787806121ec90614978565b985050612211565b88806121ff90614978565b995050878061220d90614978565b9850505b5b6000806000612224858d868e8e6131d0565b9250925092507f73755bcca91241f24d43f19dfd87dd6903d53f215f04fe1277e6a4d826ae8e6883838360405161225d93929190614538565b60405180910390a1505050505050505050505050505050505050565b600082828173ffffffffffffffffffffffffffffffffffffffff166000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415806123a657508073ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b156123dd576040517f77be31cd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160038111156123f1576123f0614a50565b5b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050160149054906101000a900460ff16600381111561245257612451614a50565b5b1415806124d257506001600381111561246e5761246d614a50565b5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050160149054906101000a900460ff1660038111156124cf576124ce614a50565b5b14155b15612509576040517f6e04f53700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614158061263257508173ffffffffffffffffffffffffffffffffffffffff166000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b15612669576040517f1b907f6100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201600380602002604051908101604052809291908260038015612750576020028201915b81548152602001906001019080831161273c575b505050505081526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160149054906101000a900460ff1660038111156127d4576127d3614a50565b5b60038111156127e6576127e5614a50565b5b81525050905060008060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282016003806020026040519081016040528092919082600380156128d3576020028201915b8154815260200190600101908083116128bf575b505050505081526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160149054906101000a900460ff16600381111561295757612956614a50565b5b600381111561296957612968614a50565b5b8152505090506040518060a00160405280836000015181526020018873ffffffffffffffffffffffffffffffffffffffff168152602001836040015181526020018773ffffffffffffffffffffffffffffffffffffffff168152602001600260038111156129da576129d9614a50565b5b8152506000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201906003612a83929190613daf565b5060608201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160050160146101000a81548160ff02191690836003811115612af657612af5614a50565b5b02179055509050506040518060a00160405280836000015181526020018773ffffffffffffffffffffffffffffffffffffffff168152602001826040015181526020018873ffffffffffffffffffffffffffffffffffffffff16815260200160026003811115612b6957612b68614a50565b5b8152506000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201906003612c12929190613daf565b5060608201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160050160146101000a81548160ff02191690836003811115612c8557612c84614a50565b5b02179055509050507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635d3b1d307f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000060037f000000000000000000000000000000000000000000000000000000000000000060036040518663ffffffff1660e01b8152600401612d509594939291906145eb565b602060405180830381600087803b158015612d6a57600080fd5b505af1158015612d7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612da291906141f9565b945060405180604001604052808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525060016000878152602001908152602001600020906002612e32929190613e49565b507f3e817b1c20f032334f718d10f44d60d4f63e5807f8f8f4319cdf7f5f8a98e880878787604051612e669392919061456f565b60405180910390a15050505092915050565b612e80613ec6565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201600380602002604051908101604052809291908260038015612efa576020028201915b815481526020019060010190808311612ee6575b50505050509050600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bdc60bf984600060038110612f5657612f55614aae565b5b60200201516040518263ffffffff1660e01b8152600401612f779190614674565b60006040518083038186803b158015612f8f57600080fd5b505afa158015612fa3573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190612fcc9190614282565b935050925050600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bdc60bf98660016003811061302757613026614aae565b5b60200201516040518263ffffffff1660e01b81526004016130489190614674565b60006040518083038186803b15801561306057600080fd5b505afa158015613074573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061309d9190614282565b935050925050600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bdc60bf9886002600381106130f8576130f7614aae565b5b60200201516040518263ffffffff1660e01b81526004016131199190614674565b60006040518083038186803b15801561313157600080fd5b505afa158015613145573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061316e9190614282565b93505092505060006131808688613544565b9050600061318e8587613544565b9050600061319c8486613544565b905060006040518060600160405280858152602001848152602001838152509050809b505050505050505050505050919050565b6000806000848711156132fa5760405180606001604052808973ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff168152602001600015158152506006600086815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff02191690831515021790555090505087866000925092509250613539565b8685111561341f5760405180606001604052808773ffffffffffffffffffffffffffffffffffffffff1681526020018973ffffffffffffffffffffffffffffffffffffffff168152602001600015158152506006600086815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff02191690831515021790555090505085886000925092509250613539565b60405180606001604052808973ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff168152602001600115158152506006600086815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff02191690831515021790555090505060008060019250925092505b955095509592505050565b61354c613ef3565b60008314156138165760005b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166365c889db6040518163ffffffff1660e01b815260040160206040518083038186803b1580156135c057600080fd5b505afa1580156135d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135f891906141f9565b811015613810576000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634132607b836040518263ffffffff1660e01b815260040161365c9190614674565b60006040518083038186803b15801561367457600080fd5b505afa158015613688573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906136b19190614149565b5050509050836040516020016136c791906144dd565b60405160208183030381529060405280519060200120816040516020016136ee91906144dd565b6040516020818303038152906040528051906020012014156137fc57600080600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634132607b876040518263ffffffff1660e01b815260040161376b9190614674565b60006040518083038186803b15801561378357600080fd5b505afa158015613797573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906137c09190614149565b93509350935093506000604051806080016040528086815260200185815260200184815260200183815250905080975050505050505050613da9565b50808061380890614978565b915050613558565b50613da8565b6001831415613ae05760005b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630a83de166040518163ffffffff1660e01b815260040160206040518083038186803b15801561388a57600080fd5b505afa15801561389e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138c291906141f9565b811015613ada576000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cff2c359836040518263ffffffff1660e01b81526004016139269190614674565b60006040518083038186803b15801561393e57600080fd5b505afa158015613952573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061397b9190614149565b50505090508360405160200161399191906144dd565b60405160208183030381529060405280519060200120816040516020016139b891906144dd565b604051602081830303815290604052805190602001201415613ac657600080600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cff2c359876040518263ffffffff1660e01b8152600401613a359190614674565b60006040518083038186803b158015613a4d57600080fd5b505afa158015613a61573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190613a8a9190614149565b93509350935093506000604051806080016040528086815260200185815260200184815260200183815250905080975050505050505050613da9565b508080613ad290614978565b915050613822565b50613da7565b6002831415613da65760005b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166371be70026040518163ffffffff1660e01b815260040160206040518083038186803b158015613b5457600080fd5b505afa158015613b68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613b8c91906141f9565b811015613da4576000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639cfa7daa836040518263ffffffff1660e01b8152600401613bf09190614674565b60006040518083038186803b158015613c0857600080fd5b505afa158015613c1c573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190613c459190614149565b505050905083604051602001613c5b91906144dd565b6040516020818303038152906040528051906020012081604051602001613c8291906144dd565b604051602081830303815290604052805190602001201415613d9057600080600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639cfa7daa876040518263ffffffff1660e01b8152600401613cff9190614674565b60006040518083038186803b158015613d1757600080fd5b505afa158015613d2b573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190613d549190614149565b93509350935093506000604051806080016040528086815260200185815260200184815260200183815250905080975050505050505050613da9565b508080613d9c90614978565b915050613aec565b505b5b5b5b92915050565b8260038101928215613dde579160200282015b82811115613ddd578251825591602001919060010190613dc2565b5b509050613deb9190613f1b565b5090565b60405180604001604052806002905b613e06613ef3565b815260200190600190039081613dfe5790505090565b60405180602001604052806001905b613e33613ef3565b815260200190600190039081613e2b5790505090565b8260028101928215613eb5579160200282015b82811115613eb45782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190613e5c565b5b509050613ec29190613f1b565b5090565b60405180606001604052806003905b613edd613ef3565b815260200190600190039081613ed55790505090565b6040518060800160405280606081526020016000815260200160008152602001600081525090565b5b80821115613f34576000816000905550600101613f1c565b5090565b6000613f4b613f46846146f9565b6146d4565b90508083825260208201905082856020860282011115613f6e57613f6d614b11565b5b60005b85811015613f9e5781613f848882614085565b845260208401935060208301925050600181019050613f71565b5050509392505050565b6000613fbb613fb684614725565b6146d4565b905082815260208101848484011115613fd757613fd6614b16565b5b613fe2848285614914565b509392505050565b600081359050613ff981614b4a565b92915050565b60008151905061400e81614b4a565b92915050565b600082601f83011261402957614028614b0c565b5b8135614039848260208601613f38565b91505092915050565b60008151905061405181614b61565b92915050565b600082601f83011261406c5761406b614b0c565b5b815161407c848260208601613fa8565b91505092915050565b60008135905061409481614b78565b92915050565b6000815190506140a981614b78565b92915050565b6000602082840312156140c5576140c4614b20565b5b60006140d384828501613fea565b91505092915050565b6000602082840312156140f2576140f1614b20565b5b600061410084828501613fff565b91505092915050565b600080604083850312156141205761411f614b20565b5b600061412e85828601613fea565b925050602061413f85828601614085565b9150509250929050565b6000806000806080858703121561416357614162614b20565b5b600085015167ffffffffffffffff81111561418157614180614b1b565b5b61418d87828801614057565b945050602061419e8782880161409a565b93505060406141af8782880161409a565b92505060606141c08782880161409a565b91505092959194509250565b6000602082840312156141e2576141e1614b20565b5b60006141f084828501614085565b91505092915050565b60006020828403121561420f5761420e614b20565b5b600061421d8482850161409a565b91505092915050565b6000806040838503121561423d5761423c614b20565b5b600061424b85828601614085565b925050602083013567ffffffffffffffff81111561426c5761426b614b1b565b5b61427885828601614014565b9150509250929050565b6000806000806080858703121561429c5761429b614b20565b5b60006142aa8782880161409a565b945050602085015167ffffffffffffffff8111156142cb576142ca614b1b565b5b6142d787828801614057565b93505060406142e887828801614042565b92505060606142f98782880161409a565b91505092959194509250565b6000806040838503121561431c5761431b614b20565b5b600061432a85828601614085565b925050602061433b85828601614085565b9150509250929050565b60008060006060848603121561435e5761435d614b20565b5b600061436c86828701614085565b935050602061437d86828701614085565b925050604061438e86828701614085565b9150509250925092565b60006143a483836144a1565b60208301905092915050565b6143b981614823565b82525050565b6143c881614760565b6143d28184614783565b92506143dd82614756565b8060005b8381101561440e5781516143f58782614398565b965061440083614776565b9250506001810190506143e1565b505050505050565b61441f81614835565b82525050565b61442e81614841565b82525050565b61443d816148ba565b82525050565b61444c816148cc565b82525050565b61445b816148de565b82525050565b600061446c8261476b565b614476818561478e565b9350614486818560208601614914565b80840191505092915050565b61449b8161485e565b82525050565b6144aa8161488c565b82525050565b6144b98161488c565b82525050565b6144c881614896565b82525050565b6144d7816148a6565b82525050565b60006144e98284614461565b915081905092915050565b600060208201905061450960008301846143b0565b92915050565b600060408201905061452460008301856143b0565b61453160208301846143b0565b9392505050565b600060608201905061454d60008301866143b0565b61455a60208301856143b0565b6145676040830184614416565b949350505050565b600060608201905061458460008301866143b0565b61459160208301856143b0565b61459e60408301846144b0565b949350505050565b600060c0820190506145bb60008301876143b0565b6145c860208301866143bf565b6145d560808301856143b0565b6145e260a0830184614452565b95945050505050565b600060a0820190506146006000830188614425565b61460d60208301876144ce565b61461a6040830186614492565b61462760608301856144bf565b61463460808301846144bf565b9695505050505050565b60006020820190506146536000830184614434565b92915050565b600060208201905061466e6000830184614443565b92915050565b600060208201905061468960008301846144b0565b92915050565b60006080820190506146a460008301876144b0565b6146b160208301866143b0565b6146be60408301856143b0565b6146cb6060830184614452565b95945050505050565b60006146de6146ef565b90506146ea8282614947565b919050565b6000604051905090565b600067ffffffffffffffff82111561471457614713614add565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156147405761473f614add565b5b61474982614b25565b9050602081019050919050565b6000819050919050565b600060039050919050565b600081519050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b60006147a48261488c565b91506147af8361488c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156147e4576147e36149f2565b5b828201905092915050565b60006147fa8261488c565b91506148058361488c565b925082821015614818576148176149f2565b5b828203905092915050565b600061482e8261486c565b9050919050565b60008115159050919050565b6000819050919050565b600081905061485982614b36565b919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600067ffffffffffffffff82169050919050565b60006148c5826148f0565b9050919050565b60006148d7826148f0565b9050919050565b60006148e98261484b565b9050919050565b60006148fb82614902565b9050919050565b600061490d8261486c565b9050919050565b60005b83811015614932578082015181840152602081019050614917565b83811115614941576000848401525b50505050565b61495082614b25565b810181811067ffffffffffffffff8211171561496f5761496e614add565b5b80604052505050565b60006149838261488c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156149b6576149b56149f2565b5b600182019050919050565b60006149cc8261488c565b91506149d78361488c565b9250826149e7576149e6614a21565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b60048110614b4757614b46614a50565b5b50565b614b5381614823565b8114614b5e57600080fd5b50565b614b6a81614835565b8114614b7557600080fd5b50565b614b818161488c565b8114614b8c57600080fd5b5056fea2646970667358221220e5c45367cfac1f720a0cfe36fcc89c2262b8fb5192bf8b047395c912e3e812ed64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x533D7653 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x533D7653 EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x570D2F20 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x703AFC87 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0xE783C827 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0xE81FB495 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0xEABFB839 EQ PUSH2 0x221 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x2CAC05C EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x123CB832 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0x2A3031A2 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x2C0D5558 EQ PUSH2 0x124 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x253 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x4674 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD4 PUSH2 0x260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0x4674 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFF SWAP2 SWAP1 PUSH2 0x4226 JUMP JUMPDEST PUSH2 0x266 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10E PUSH2 0x326 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11B SWAP2 SWAP1 PUSH2 0x463E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12C PUSH2 0x34C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x139 SWAP2 SWAP1 PUSH2 0x4659 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x157 SWAP2 SWAP1 PUSH2 0x40AF JUMP JUMPDEST PUSH2 0x372 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x468F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x4109 JUMP JUMPDEST PUSH2 0x3EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x4674 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x41CC JUMP JUMPDEST PUSH2 0x44E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x44F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x4305 JUMP JUMPDEST PUSH2 0x48D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x44F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x4345 JUMP JUMPDEST PUSH2 0x4D2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x41CC JUMP JUMPDEST PUSH2 0x14C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4538 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x318 JUMPI CALLER PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30F SWAP3 SWAP2 SWAP1 PUSH2 0x450F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x322 DUP3 DUP3 PUSH2 0x153D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x5 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP3 PUSH1 0x3 DUP2 LT PUSH2 0x444 JUMPI PUSH2 0x443 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x45E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 PUSH1 0x2 DUP2 LT PUSH2 0x4A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ADD PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBDC60BF9 DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x554 SWAP2 SWAP1 PUSH2 0x4674 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x56C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x580 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5A9 SWAP2 SWAP1 PUSH2 0x4282 JUMP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBDC60BF9 DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60B SWAP2 SWAP1 PUSH2 0x4674 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x623 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x637 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x660 SWAP2 SWAP1 PUSH2 0x4282 JUMP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBDC60BF9 DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C2 SWAP2 SWAP1 PUSH2 0x4674 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x717 SWAP2 SWAP1 PUSH2 0x4282 JUMP JUMPDEST POP SWAP3 POP POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP10 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76C SWAP2 SWAP1 PUSH2 0x4674 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x784 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x798 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7BC SWAP2 SWAP1 PUSH2 0x40DC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x7DD JUMPI POP DUP3 ISZERO JUMPDEST DUP1 PUSH2 0x7E7 JUMPI POP DUP6 DUP8 EQ JUMPDEST DUP1 PUSH2 0x7F1 JUMPI POP DUP5 DUP7 EQ JUMPDEST DUP1 PUSH2 0x7FB JUMPI POP DUP7 DUP6 EQ JUMPDEST ISZERO PUSH2 0x832 JUMPI PUSH1 0x40 MLOAD PUSH32 0x85696C6F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP9 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x882 SWAP2 SWAP1 PUSH2 0x4674 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x89A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8D2 SWAP2 SWAP1 PUSH2 0x40DC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x8F3 JUMPI POP DUP2 ISZERO JUMPDEST ISZERO PUSH2 0x92A JUMPI PUSH1 0x40 MLOAD PUSH32 0x85696C6F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x97A SWAP2 SWAP1 PUSH2 0x4674 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x992 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9CA SWAP2 SWAP1 PUSH2 0x40DC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x9EB JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xA22 JUMPI PUSH1 0x40 MLOAD PUSH32 0x85696C6F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xA36 JUMPI PUSH2 0xA35 PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xA97 JUMPI PUSH2 0xA96 PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0xACF JUMPI PUSH1 0x40 MLOAD PUSH32 0x4173115D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD SWAP1 POP EQ ISZERO PUSH2 0xD59 JUMPI PUSH1 0x2 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP11 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xBC0 JUMPI PUSH2 0xBBF PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 PUSH1 0x3 PUSH2 0xC69 SWAP3 SWAP2 SWAP1 PUSH2 0x3DAF JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xCDC JUMPI PUSH2 0xCDB PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0xDBEF1B3FBD727E0F6D68A939317676615E5672A68159020EDBD96A09F055A846 CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP11 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE POP PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH2 0xD34 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x45A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x5 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xD4F SWAP1 PUSH2 0x4978 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0xD70 JUMPI PUSH2 0xD6F PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE03 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6E04F53700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x3 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x3 DUP1 ISZERO PUSH2 0xEEA JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xED6 JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xF6E JUMPI PUSH2 0xF6D PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xF80 JUMPI PUSH2 0xF7F PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x40 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xFF1 JUMPI PUSH2 0xFF0 PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 PUSH1 0x3 PUSH2 0x109A SWAP3 SWAP2 SWAP1 PUSH2 0x3DAF JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x110D JUMPI PUSH2 0x110C PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP13 DUP2 MSTORE PUSH1 0x20 ADD DUP12 DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1196 JUMPI PUSH2 0x1195 PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 PUSH1 0x3 PUSH2 0x123F SWAP3 SWAP2 SWAP1 PUSH2 0x3DAF JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x12B2 JUMPI PUSH2 0x12B1 PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1475 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x12F5 JUMPI PUSH2 0x12F4 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1462 JUMPI PUSH1 0x0 DUP2 SWAP1 POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP1 SLOAD SWAP1 POP PUSH2 0x1354 SWAP2 SWAP1 PUSH2 0x47EF JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x1415 JUMPI PUSH1 0x2 PUSH1 0x1 DUP3 PUSH2 0x136A SWAP2 SWAP1 PUSH2 0x4799 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x137B JUMPI PUSH2 0x137A PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x13BA JUMPI PUSH2 0x13B9 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x140D SWAP1 PUSH2 0x4978 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1342 JUMP JUMPDEST POP PUSH1 0x2 DUP1 SLOAD DUP1 PUSH2 0x1428 JUMPI PUSH2 0x1427 PUSH2 0x4A7F JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE PUSH2 0x1475 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x146D SWAP1 PUSH2 0x4978 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x12BD JUMP JUMPDEST POP PUSH32 0x3182B38841DE065EDED850F9E9FA30850BB37C3A57DF9BEF3841138A94B72956 CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0x14A7 SWAP3 SWAP2 SWAP1 PUSH2 0x450F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x14B9 CALLER DUP4 PUSH2 0x2279 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 DUP1 ISZERO PUSH2 0x15BF JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1575 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x15E9 DUP3 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x15DF JUMPI PUSH2 0x15DE PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x2E78 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x160E DUP4 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x1604 JUMPI PUSH2 0x1603 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x2E78 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP1 DUP7 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x1632 JUMPI PUSH2 0x1631 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x168E JUMPI PUSH2 0x168D PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 DUP7 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x16C5 JUMPI PUSH2 0x16C4 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x3 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x3 DUP1 ISZERO PUSH2 0x173E JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x172A JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x175C JUMPI PUSH2 0x175B PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x178F JUMPI PUSH2 0x178E PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP PUSH1 0x0 DUP1 DUP6 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x17A9 JUMPI PUSH2 0x17A8 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 PUSH1 0x3 PUSH2 0x1850 SWAP3 SWAP2 SWAP1 PUSH2 0x3DAF JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x18C3 JUMPI PUSH2 0x18C2 PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x18ED JUMPI PUSH2 0x18EC PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x1949 JUMPI PUSH2 0x1948 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x1980 JUMPI PUSH2 0x197F PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x3 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x3 DUP1 ISZERO PUSH2 0x19F9 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x19E5 JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x1A17 JUMPI PUSH2 0x1A16 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1A4A JUMPI PUSH2 0x1A49 PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x1A64 JUMPI PUSH2 0x1A63 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 PUSH1 0x3 PUSH2 0x1B0B SWAP3 SWAP2 SWAP1 PUSH2 0x3DAF JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1B7E JUMPI PUSH2 0x1B7D PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x0 PUSH1 0x3 DUP6 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1B9E JUMPI PUSH2 0x1B9D PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1BB0 SWAP2 SWAP1 PUSH2 0x49C1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP2 POP PUSH1 0x0 SWAP1 POP DUP4 DUP4 PUSH1 0x3 DUP2 LT PUSH2 0x1BD0 JUMPI PUSH2 0x1BCF PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x20 ADD MLOAD DUP6 DUP5 PUSH1 0x3 DUP2 LT PUSH2 0x1BEC JUMPI PUSH2 0x1BEB PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x20 ADD MLOAD GT ISZERO PUSH2 0x1C0E JUMPI DUP2 DUP1 PUSH2 0x1C06 SWAP1 PUSH2 0x4978 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x1C7D JUMP JUMPDEST DUP4 DUP4 PUSH1 0x3 DUP2 LT PUSH2 0x1C21 JUMPI PUSH2 0x1C20 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x20 ADD MLOAD DUP6 DUP5 PUSH1 0x3 DUP2 LT PUSH2 0x1C3D JUMPI PUSH2 0x1C3C PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x20 ADD MLOAD LT ISZERO PUSH2 0x1C5F JUMPI DUP1 DUP1 PUSH2 0x1C57 SWAP1 PUSH2 0x4978 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1C7C JUMP JUMPDEST DUP2 DUP1 PUSH2 0x1C6A SWAP1 PUSH2 0x4978 JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0x1C78 SWAP1 PUSH2 0x4978 JUMP JUMPDEST SWAP2 POP POP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x1CA8 JUMPI PUSH2 0x1CA7 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH2 0x1D12 PUSH2 0x3DEF JUMP JUMPDEST PUSH2 0x1D1A PUSH2 0x3DEF JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x1E39 JUMPI DUP7 DUP2 EQ ISZERO PUSH2 0x1D33 JUMPI PUSH2 0x1E26 JUMP JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x1DA6 JUMPI DUP9 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0x1D4E JUMPI PUSH2 0x1D4D PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 DUP3 PUSH1 0x2 DUP2 LT PUSH2 0x1D66 JUMPI PUSH2 0x1D65 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 SWAP1 MSTORE POP DUP8 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0x1D81 JUMPI PUSH2 0x1D80 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP3 DUP3 PUSH1 0x2 DUP2 LT PUSH2 0x1D99 JUMPI PUSH2 0x1D98 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 SWAP1 MSTORE POP PUSH2 0x1E25 JUMP JUMPDEST DUP9 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0x1DB9 JUMPI PUSH2 0x1DB8 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH1 0x1 DUP4 PUSH2 0x1DCC SWAP2 SWAP1 PUSH2 0x47EF JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x1DDD JUMPI PUSH2 0x1DDC PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 SWAP1 MSTORE POP DUP8 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0x1DF8 JUMPI PUSH2 0x1DF7 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP3 PUSH1 0x1 DUP4 PUSH2 0x1E0B SWAP2 SWAP1 PUSH2 0x47EF JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x1E1C JUMPI PUSH2 0x1E1B PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 SWAP1 MSTORE POP JUMPDEST JUMPDEST DUP1 DUP1 PUSH2 0x1E31 SWAP1 PUSH2 0x4978 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1D1D JUMP JUMPDEST POP DUP1 PUSH1 0x2 DUP12 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1E51 JUMPI PUSH2 0x1E50 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1E63 SWAP2 SWAP1 PUSH2 0x49C1 JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x1E74 JUMPI PUSH2 0x1E73 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 ADD MLOAD DUP3 PUSH1 0x2 DUP13 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1E94 JUMPI PUSH2 0x1E93 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1EA6 SWAP2 SWAP1 PUSH2 0x49C1 JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x1EB7 JUMPI PUSH2 0x1EB6 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 ADD MLOAD GT ISZERO PUSH2 0x1ED9 JUMPI DUP5 DUP1 PUSH2 0x1ED1 SWAP1 PUSH2 0x4978 JUMP JUMPDEST SWAP6 POP POP PUSH2 0x1F96 JUMP JUMPDEST DUP1 PUSH1 0x2 DUP12 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1EF0 JUMPI PUSH2 0x1EEF PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1F02 SWAP2 SWAP1 PUSH2 0x49C1 JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x1F13 JUMPI PUSH2 0x1F12 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 ADD MLOAD DUP3 PUSH1 0x2 DUP13 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1F33 JUMPI PUSH2 0x1F32 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1F45 SWAP2 SWAP1 PUSH2 0x49C1 JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x1F56 JUMPI PUSH2 0x1F55 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 ADD MLOAD LT ISZERO PUSH2 0x1F78 JUMPI DUP4 DUP1 PUSH2 0x1F70 SWAP1 PUSH2 0x4978 JUMP JUMPDEST SWAP5 POP POP PUSH2 0x1F95 JUMP JUMPDEST DUP5 DUP1 PUSH2 0x1F83 SWAP1 PUSH2 0x4978 JUMP JUMPDEST SWAP6 POP POP DUP4 DUP1 PUSH2 0x1F91 SWAP1 PUSH2 0x4978 JUMP JUMPDEST SWAP5 POP POP JUMPDEST JUMPDEST PUSH2 0x1F9E PUSH2 0x3E1C JUMP JUMPDEST PUSH2 0x1FA6 PUSH2 0x3E1C JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x2113 JUMPI PUSH1 0x2 DUP14 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1FC8 JUMPI PUSH2 0x1FC7 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1FDA SWAP2 SWAP1 PUSH2 0x49C1 JUMP JUMPDEST DUP2 EQ ISZERO PUSH2 0x1FE6 JUMPI PUSH2 0x2100 JUMP JUMPDEST PUSH1 0x2 DUP14 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1FFC JUMPI PUSH2 0x1FFB PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x200E SWAP2 SWAP1 PUSH2 0x49C1 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x2080 JUMPI DUP5 DUP2 PUSH1 0x2 DUP2 LT PUSH2 0x2028 JUMPI PUSH2 0x2027 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 DUP3 PUSH1 0x1 DUP2 LT PUSH2 0x2040 JUMPI PUSH2 0x203F PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 SWAP1 MSTORE POP DUP4 DUP2 PUSH1 0x2 DUP2 LT PUSH2 0x205B JUMPI PUSH2 0x205A PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP3 DUP3 PUSH1 0x1 DUP2 LT PUSH2 0x2073 JUMPI PUSH2 0x2072 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 SWAP1 MSTORE POP PUSH2 0x20FF JUMP JUMPDEST DUP5 DUP2 PUSH1 0x2 DUP2 LT PUSH2 0x2093 JUMPI PUSH2 0x2092 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH1 0x1 DUP4 PUSH2 0x20A6 SWAP2 SWAP1 PUSH2 0x47EF JUMP JUMPDEST PUSH1 0x1 DUP2 LT PUSH2 0x20B7 JUMPI PUSH2 0x20B6 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 SWAP1 MSTORE POP DUP4 DUP2 PUSH1 0x2 DUP2 LT PUSH2 0x20D2 JUMPI PUSH2 0x20D1 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP3 PUSH1 0x1 DUP4 PUSH2 0x20E5 SWAP2 SWAP1 PUSH2 0x47EF JUMP JUMPDEST PUSH1 0x1 DUP2 LT PUSH2 0x20F6 JUMPI PUSH2 0x20F5 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 SWAP1 MSTORE POP JUMPDEST JUMPDEST DUP1 DUP1 PUSH2 0x210B SWAP1 PUSH2 0x4978 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1FA9 JUMP JUMPDEST POP PUSH1 0x0 DUP12 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x212A JUMPI PUSH2 0x2129 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD SWAP1 POP PUSH1 0x0 DUP13 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x2147 JUMPI PUSH2 0x2146 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD SWAP1 POP DUP3 PUSH1 0x0 PUSH1 0x1 DUP2 LT PUSH2 0x2162 JUMPI PUSH2 0x2161 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x0 PUSH1 0x1 DUP2 LT PUSH2 0x217F JUMPI PUSH2 0x217E PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x60 ADD MLOAD GT ISZERO PUSH2 0x21A1 JUMPI DUP9 DUP1 PUSH2 0x2199 SWAP1 PUSH2 0x4978 JUMP JUMPDEST SWAP10 POP POP PUSH2 0x2212 JUMP JUMPDEST DUP3 PUSH1 0x0 PUSH1 0x1 DUP2 LT PUSH2 0x21B5 JUMPI PUSH2 0x21B4 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x0 PUSH1 0x1 DUP2 LT PUSH2 0x21D2 JUMPI PUSH2 0x21D1 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x60 ADD MLOAD LT ISZERO PUSH2 0x21F4 JUMPI DUP8 DUP1 PUSH2 0x21EC SWAP1 PUSH2 0x4978 JUMP JUMPDEST SWAP9 POP POP PUSH2 0x2211 JUMP JUMPDEST DUP9 DUP1 PUSH2 0x21FF SWAP1 PUSH2 0x4978 JUMP JUMPDEST SWAP10 POP POP DUP8 DUP1 PUSH2 0x220D SWAP1 PUSH2 0x4978 JUMP JUMPDEST SWAP9 POP POP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x2224 DUP6 DUP14 DUP7 DUP15 DUP15 PUSH2 0x31D0 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH32 0x73755BCCA91241F24D43F19DFD87DD6903D53F215F04FE1277E6A4D826AE8E68 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x225D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4538 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x23A6 JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x23DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x77BE31CD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x23F1 JUMPI PUSH2 0x23F0 PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2452 JUMPI PUSH2 0x2451 PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST EQ ISZERO DUP1 PUSH2 0x24D2 JUMPI POP PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x246E JUMPI PUSH2 0x246D PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x24CF JUMPI PUSH2 0x24CE PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST EQ ISZERO JUMPDEST ISZERO PUSH2 0x2509 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6E04F53700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x2632 JUMPI POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x2669 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1B907F6100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x3 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x3 DUP1 ISZERO PUSH2 0x2750 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x273C JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x27D4 JUMPI PUSH2 0x27D3 PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x27E6 JUMPI PUSH2 0x27E5 PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x3 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x3 DUP1 ISZERO PUSH2 0x28D3 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x28BF JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2957 JUMPI PUSH2 0x2956 PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2969 JUMPI PUSH2 0x2968 PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x40 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x29DA JUMPI PUSH2 0x29D9 PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP PUSH1 0x0 DUP1 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 PUSH1 0x3 PUSH2 0x2A83 SWAP3 SWAP2 SWAP1 PUSH2 0x3DAF JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2AF6 JUMPI PUSH2 0x2AF5 PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x40 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2B69 JUMPI PUSH2 0x2B68 PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP PUSH1 0x0 DUP1 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 PUSH1 0x3 PUSH2 0x2C12 SWAP3 SWAP2 SWAP1 PUSH2 0x3DAF JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2C85 JUMPI PUSH2 0x2C84 PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D3B1D30 PUSH32 0x0 PUSH32 0x0 PUSH1 0x3 PUSH32 0x0 PUSH1 0x3 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D50 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x45EB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2D7E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2DA2 SWAP2 SWAP1 PUSH2 0x41F9 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 PUSH2 0x2E32 SWAP3 SWAP2 SWAP1 PUSH2 0x3E49 JUMP JUMPDEST POP PUSH32 0x3E817B1C20F032334F718D10F44D60D4F63E5807F8F8F4319CDF7F5F8A98E880 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2E66 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x456F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2E80 PUSH2 0x3EC6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x3 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x3 DUP1 ISZERO PUSH2 0x2EFA JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x2EE6 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBDC60BF9 DUP5 PUSH1 0x0 PUSH1 0x3 DUP2 LT PUSH2 0x2F56 JUMPI PUSH2 0x2F55 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F77 SWAP2 SWAP1 PUSH2 0x4674 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2F8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2FA3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2FCC SWAP2 SWAP1 PUSH2 0x4282 JUMP JUMPDEST SWAP4 POP POP SWAP3 POP POP PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBDC60BF9 DUP7 PUSH1 0x1 PUSH1 0x3 DUP2 LT PUSH2 0x3027 JUMPI PUSH2 0x3026 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3048 SWAP2 SWAP1 PUSH2 0x4674 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3060 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3074 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x309D SWAP2 SWAP1 PUSH2 0x4282 JUMP JUMPDEST SWAP4 POP POP SWAP3 POP POP PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBDC60BF9 DUP9 PUSH1 0x2 PUSH1 0x3 DUP2 LT PUSH2 0x30F8 JUMPI PUSH2 0x30F7 PUSH2 0x4AAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3119 SWAP2 SWAP1 PUSH2 0x4674 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3145 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x316E SWAP2 SWAP1 PUSH2 0x4282 JUMP JUMPDEST SWAP4 POP POP SWAP3 POP POP PUSH1 0x0 PUSH2 0x3180 DUP7 DUP9 PUSH2 0x3544 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x318E DUP6 DUP8 PUSH2 0x3544 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x319C DUP5 DUP7 PUSH2 0x3544 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 POP DUP1 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP8 GT ISZERO PUSH2 0x32FA JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x6 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP8 DUP7 PUSH1 0x0 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x3539 JUMP JUMPDEST DUP7 DUP6 GT ISZERO PUSH2 0x341F JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x6 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP6 DUP9 PUSH1 0x0 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x3539 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x6 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x0 DUP1 PUSH1 0x1 SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x354C PUSH2 0x3EF3 JUMP JUMPDEST PUSH1 0x0 DUP4 EQ ISZERO PUSH2 0x3816 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x65C889DB PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x35C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x35D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x35F8 SWAP2 SWAP1 PUSH2 0x41F9 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x3810 JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4132607B DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x365C SWAP2 SWAP1 PUSH2 0x4674 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3674 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3688 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x36B1 SWAP2 SWAP1 PUSH2 0x4149 JUMP JUMPDEST POP POP POP SWAP1 POP DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x36C7 SWAP2 SWAP1 PUSH2 0x44DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x36EE SWAP2 SWAP1 PUSH2 0x44DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ ISZERO PUSH2 0x37FC JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4132607B DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x376B SWAP2 SWAP1 PUSH2 0x4674 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3783 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3797 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x37C0 SWAP2 SWAP1 PUSH2 0x4149 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 POP DUP1 SWAP8 POP POP POP POP POP POP POP POP PUSH2 0x3DA9 JUMP JUMPDEST POP DUP1 DUP1 PUSH2 0x3808 SWAP1 PUSH2 0x4978 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3558 JUMP JUMPDEST POP PUSH2 0x3DA8 JUMP JUMPDEST PUSH1 0x1 DUP4 EQ ISZERO PUSH2 0x3AE0 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA83DE16 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x388A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x389E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x38C2 SWAP2 SWAP1 PUSH2 0x41F9 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x3ADA JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCFF2C359 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3926 SWAP2 SWAP1 PUSH2 0x4674 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x393E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3952 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x397B SWAP2 SWAP1 PUSH2 0x4149 JUMP JUMPDEST POP POP POP SWAP1 POP DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3991 SWAP2 SWAP1 PUSH2 0x44DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x39B8 SWAP2 SWAP1 PUSH2 0x44DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ ISZERO PUSH2 0x3AC6 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCFF2C359 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A35 SWAP2 SWAP1 PUSH2 0x4674 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3A4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3A61 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3A8A SWAP2 SWAP1 PUSH2 0x4149 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 POP DUP1 SWAP8 POP POP POP POP POP POP POP POP PUSH2 0x3DA9 JUMP JUMPDEST POP DUP1 DUP1 PUSH2 0x3AD2 SWAP1 PUSH2 0x4978 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3822 JUMP JUMPDEST POP PUSH2 0x3DA7 JUMP JUMPDEST PUSH1 0x2 DUP4 EQ ISZERO PUSH2 0x3DA6 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x71BE7002 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3B54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3B68 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3B8C SWAP2 SWAP1 PUSH2 0x41F9 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x3DA4 JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9CFA7DAA DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BF0 SWAP2 SWAP1 PUSH2 0x4674 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3C08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3C1C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3C45 SWAP2 SWAP1 PUSH2 0x4149 JUMP JUMPDEST POP POP POP SWAP1 POP DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3C5B SWAP2 SWAP1 PUSH2 0x44DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3C82 SWAP2 SWAP1 PUSH2 0x44DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ ISZERO PUSH2 0x3D90 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9CFA7DAA DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CFF SWAP2 SWAP1 PUSH2 0x4674 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3D17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3D2B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3D54 SWAP2 SWAP1 PUSH2 0x4149 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 POP DUP1 SWAP8 POP POP POP POP POP POP POP POP PUSH2 0x3DA9 JUMP JUMPDEST POP DUP1 DUP1 PUSH2 0x3D9C SWAP1 PUSH2 0x4978 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3AEC JUMP JUMPDEST POP JUMPDEST JUMPDEST JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH1 0x3 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x3DDE JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x3DDD JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x3DC2 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x3DEB SWAP2 SWAP1 PUSH2 0x3F1B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 SWAP1 JUMPDEST PUSH2 0x3E06 PUSH2 0x3EF3 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x3DFE JUMPI SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 SWAP1 JUMPDEST PUSH2 0x3E33 PUSH2 0x3EF3 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x3E2B JUMPI SWAP1 POP POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x2 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x3EB5 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x3EB4 JUMPI DUP3 MLOAD DUP3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x3E5C JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x3EC2 SWAP2 SWAP1 PUSH2 0x3F1B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SWAP1 JUMPDEST PUSH2 0x3EDD PUSH2 0x3EF3 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x3ED5 JUMPI SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x3F34 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x3F1C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F4B PUSH2 0x3F46 DUP5 PUSH2 0x46F9 JUMP JUMPDEST PUSH2 0x46D4 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x3F6E JUMPI PUSH2 0x3F6D PUSH2 0x4B11 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3F9E JUMPI DUP2 PUSH2 0x3F84 DUP9 DUP3 PUSH2 0x4085 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3F71 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FBB PUSH2 0x3FB6 DUP5 PUSH2 0x4725 JUMP JUMPDEST PUSH2 0x46D4 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3FD7 JUMPI PUSH2 0x3FD6 PUSH2 0x4B16 JUMP JUMPDEST JUMPDEST PUSH2 0x3FE2 DUP5 DUP3 DUP6 PUSH2 0x4914 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3FF9 DUP2 PUSH2 0x4B4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x400E DUP2 PUSH2 0x4B4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4029 JUMPI PUSH2 0x4028 PUSH2 0x4B0C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4039 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3F38 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4051 DUP2 PUSH2 0x4B61 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x406C JUMPI PUSH2 0x406B PUSH2 0x4B0C JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x407C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3FA8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4094 DUP2 PUSH2 0x4B78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x40A9 DUP2 PUSH2 0x4B78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x40C5 JUMPI PUSH2 0x40C4 PUSH2 0x4B20 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x40D3 DUP5 DUP3 DUP6 ADD PUSH2 0x3FEA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x40F2 JUMPI PUSH2 0x40F1 PUSH2 0x4B20 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4100 DUP5 DUP3 DUP6 ADD PUSH2 0x3FFF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4120 JUMPI PUSH2 0x411F PUSH2 0x4B20 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x412E DUP6 DUP3 DUP7 ADD PUSH2 0x3FEA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x413F DUP6 DUP3 DUP7 ADD PUSH2 0x4085 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4163 JUMPI PUSH2 0x4162 PUSH2 0x4B20 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4181 JUMPI PUSH2 0x4180 PUSH2 0x4B1B JUMP JUMPDEST JUMPDEST PUSH2 0x418D DUP8 DUP3 DUP9 ADD PUSH2 0x4057 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x419E DUP8 DUP3 DUP9 ADD PUSH2 0x409A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x41AF DUP8 DUP3 DUP9 ADD PUSH2 0x409A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x41C0 DUP8 DUP3 DUP9 ADD PUSH2 0x409A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x41E2 JUMPI PUSH2 0x41E1 PUSH2 0x4B20 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x41F0 DUP5 DUP3 DUP6 ADD PUSH2 0x4085 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x420F JUMPI PUSH2 0x420E PUSH2 0x4B20 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x421D DUP5 DUP3 DUP6 ADD PUSH2 0x409A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x423D JUMPI PUSH2 0x423C PUSH2 0x4B20 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x424B DUP6 DUP3 DUP7 ADD PUSH2 0x4085 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x426C JUMPI PUSH2 0x426B PUSH2 0x4B1B JUMP JUMPDEST JUMPDEST PUSH2 0x4278 DUP6 DUP3 DUP7 ADD PUSH2 0x4014 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x429C JUMPI PUSH2 0x429B PUSH2 0x4B20 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x42AA DUP8 DUP3 DUP9 ADD PUSH2 0x409A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x42CB JUMPI PUSH2 0x42CA PUSH2 0x4B1B JUMP JUMPDEST JUMPDEST PUSH2 0x42D7 DUP8 DUP3 DUP9 ADD PUSH2 0x4057 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x42E8 DUP8 DUP3 DUP9 ADD PUSH2 0x4042 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x42F9 DUP8 DUP3 DUP9 ADD PUSH2 0x409A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x431C JUMPI PUSH2 0x431B PUSH2 0x4B20 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x432A DUP6 DUP3 DUP7 ADD PUSH2 0x4085 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x433B DUP6 DUP3 DUP7 ADD PUSH2 0x4085 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x435E JUMPI PUSH2 0x435D PUSH2 0x4B20 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x436C DUP7 DUP3 DUP8 ADD PUSH2 0x4085 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x437D DUP7 DUP3 DUP8 ADD PUSH2 0x4085 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x438E DUP7 DUP3 DUP8 ADD PUSH2 0x4085 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43A4 DUP4 DUP4 PUSH2 0x44A1 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x43B9 DUP2 PUSH2 0x4823 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x43C8 DUP2 PUSH2 0x4760 JUMP JUMPDEST PUSH2 0x43D2 DUP2 DUP5 PUSH2 0x4783 JUMP JUMPDEST SWAP3 POP PUSH2 0x43DD DUP3 PUSH2 0x4756 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x440E JUMPI DUP2 MLOAD PUSH2 0x43F5 DUP8 DUP3 PUSH2 0x4398 JUMP JUMPDEST SWAP7 POP PUSH2 0x4400 DUP4 PUSH2 0x4776 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x43E1 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x441F DUP2 PUSH2 0x4835 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x442E DUP2 PUSH2 0x4841 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x443D DUP2 PUSH2 0x48BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x444C DUP2 PUSH2 0x48CC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x445B DUP2 PUSH2 0x48DE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x446C DUP3 PUSH2 0x476B JUMP JUMPDEST PUSH2 0x4476 DUP2 DUP6 PUSH2 0x478E JUMP JUMPDEST SWAP4 POP PUSH2 0x4486 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x4914 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x449B DUP2 PUSH2 0x485E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x44AA DUP2 PUSH2 0x488C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x44B9 DUP2 PUSH2 0x488C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x44C8 DUP2 PUSH2 0x4896 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x44D7 DUP2 PUSH2 0x48A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44E9 DUP3 DUP5 PUSH2 0x4461 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4509 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x43B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4524 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x43B0 JUMP JUMPDEST PUSH2 0x4531 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x43B0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x454D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x43B0 JUMP JUMPDEST PUSH2 0x455A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x43B0 JUMP JUMPDEST PUSH2 0x4567 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x4416 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x4584 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x43B0 JUMP JUMPDEST PUSH2 0x4591 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x43B0 JUMP JUMPDEST PUSH2 0x459E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x44B0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x45BB PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x43B0 JUMP JUMPDEST PUSH2 0x45C8 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x43BF JUMP JUMPDEST PUSH2 0x45D5 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x43B0 JUMP JUMPDEST PUSH2 0x45E2 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x4452 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x4600 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x4425 JUMP JUMPDEST PUSH2 0x460D PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x44CE JUMP JUMPDEST PUSH2 0x461A PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x4492 JUMP JUMPDEST PUSH2 0x4627 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x44BF JUMP JUMPDEST PUSH2 0x4634 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x44BF JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4653 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4434 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x466E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4443 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4689 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x44B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x46A4 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x44B0 JUMP JUMPDEST PUSH2 0x46B1 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x43B0 JUMP JUMPDEST PUSH2 0x46BE PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x43B0 JUMP JUMPDEST PUSH2 0x46CB PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x4452 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46DE PUSH2 0x46EF JUMP JUMPDEST SWAP1 POP PUSH2 0x46EA DUP3 DUP3 PUSH2 0x4947 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4714 JUMPI PUSH2 0x4713 PUSH2 0x4ADD JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4740 JUMPI PUSH2 0x473F PUSH2 0x4ADD JUMP JUMPDEST JUMPDEST PUSH2 0x4749 DUP3 PUSH2 0x4B25 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47A4 DUP3 PUSH2 0x488C JUMP JUMPDEST SWAP2 POP PUSH2 0x47AF DUP4 PUSH2 0x488C JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x47E4 JUMPI PUSH2 0x47E3 PUSH2 0x49F2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47FA DUP3 PUSH2 0x488C JUMP JUMPDEST SWAP2 POP PUSH2 0x4805 DUP4 PUSH2 0x488C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x4818 JUMPI PUSH2 0x4817 PUSH2 0x49F2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x482E DUP3 PUSH2 0x486C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x4859 DUP3 PUSH2 0x4B36 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48C5 DUP3 PUSH2 0x48F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48D7 DUP3 PUSH2 0x48F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48E9 DUP3 PUSH2 0x484B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48FB DUP3 PUSH2 0x4902 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x490D DUP3 PUSH2 0x486C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4932 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4917 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x4941 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x4950 DUP3 PUSH2 0x4B25 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x496F JUMPI PUSH2 0x496E PUSH2 0x4ADD JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4983 DUP3 PUSH2 0x488C JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x49B6 JUMPI PUSH2 0x49B5 PUSH2 0x49F2 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49CC DUP3 PUSH2 0x488C JUMP JUMPDEST SWAP2 POP PUSH2 0x49D7 DUP4 PUSH2 0x488C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x49E7 JUMPI PUSH2 0x49E6 PUSH2 0x4A21 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x4B47 JUMPI PUSH2 0x4B46 PUSH2 0x4A50 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x4B53 DUP2 PUSH2 0x4823 JUMP JUMPDEST DUP2 EQ PUSH2 0x4B5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x4B6A DUP2 PUSH2 0x4835 JUMP JUMPDEST DUP2 EQ PUSH2 0x4B75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x4B81 DUP2 PUSH2 0x488C JUMP JUMPDEST DUP2 EQ PUSH2 0x4B8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 0xC4 MSTORE8 PUSH8 0xCFAC1F720A0CFE36 0xFC 0xC8 SWAP13 0x22 PUSH3 0xB8FB51 SWAP3 0xBF DUP12 DIV PUSH20 0x95C912E3E812ED64736F6C634300080700330000 ","sourceMap":"431:17016:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17160:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1823:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6618:256:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1779:37:16;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1644:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1487:47;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;17274:170;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1606:31;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1541:58;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3369:2883;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1858:44;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;17160:106;17210:7;17237:14;:21;;;;17230:28;;17160:106;:::o;1823:28::-;;;;:::o;6618:256:0:-;6731:14;6717:28;;:10;:28;;;6713:109;;6788:10;6800:14;6762:53;;;;;;;;;;;;:::i;:::-;;;;;;;;6713:109;6827:42;6846:9;6857:11;6827:18;:42::i;:::-;6618:256;;:::o;1779:37:16:-;;;;;;;;;;;;;:::o;1644:30::-;;;;;;;;;;;;;:::o;1487:47::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;17274:170::-;17370:7;17397:13;:19;17411:4;17397:19;;;;;;;;;;;;;;;:32;;17430:5;17397:39;;;;;;;:::i;:::-;;;;17390:46;;17274:170;;;;:::o;1606:31::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1541:58::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3369:2883::-;3494:11;3516:12;3494:35;;3545:12;3563:16;;;;;;;;;;;:28;;;3592:8;3563:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3540:61;;;;;3617:12;3635:16;;;;;;;;;;;:28;;;3664:8;3635:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3612:61;;;;;3689:12;3707:16;;;;;;;;;;;:28;;;3736:8;3707:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3684:61;;;;;3799:10;3774:35;;:3;:11;;;3786:8;3774:21;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:35;;;;:60;;;;3827:7;3826:8;3774:60;:97;;;;3863:8;3851;:20;3774:97;:134;;;;3900:8;3888;:20;3774:134;:171;;;;3937:8;3925;:20;3774:171;3756:255;;;3979:20;;;;;;;;;;;;;;3756:255;4052:10;4027:35;;:3;:11;;;4039:8;4027:21;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:35;;;;:47;;;;4067:7;4066:8;4027:47;4023:107;;;4098:20;;;;;;;;;;;;;;4023:107;4171:10;4146:35;;:3;:11;;;4158:8;4146:21;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:35;;;;:47;;;;4186:7;4185:8;4146:47;4142:107;;;4217:20;;;;;;;;;;;;;;4142:107;4299:18;4263:54;;;;;;;;:::i;:::-;;:13;:25;4277:10;4263:25;;;;;;;;;;;;;;;:32;;;;;;;;;;;;:54;;;;;;;;:::i;:::-;;;4259:126;;;4341:32;;;;;;;;;;;;;;4259:126;4424:1;4399:14;:21;;;;:26;4395:1850;;;4442:14;4462:10;4442:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4516:233;;;;;;;;4541:13;;4516:233;;;;4573:10;4516:233;;;;;;;;;;;;;;4603:8;4516:233;;;;4613:8;4516:233;;;;4623:8;4516:233;;;;;;;4651:42;4516:233;;;;;;4712:22;4516:233;;;;;;;;:::i;:::-;;;;;4488:13;:25;4502:10;4488:25;;;;;;;;;;;;;;;:261;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;4769:206;4799:10;4769:206;;;;;;;;4829:8;4769:206;;;;4839:8;4769:206;;;;4849:8;4769:206;;;4877:42;4938:22;4769:206;;;;;;;;;:::i;:::-;;;;;;;;4990:13;;:15;;;;;;;;;:::i;:::-;;;;;;4395:1850;;;5038:16;5057:14;5072:1;5057:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5038:36;;5105:10;5093:22;;:8;:22;;;5089:98;;;5143:28;;;;;;;;;;;;;;5089:98;5201:28;5232:13;:23;5246:8;5232:23;;;;;;;;;;;;;;;5201:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;5298:198;;;;;;;;5323:14;:19;;;5298:198;;;;5361:8;5298:198;;;;;;5388:14;:27;;;5298:198;;;;5434:10;5298:198;;;;;;5463:18;5298:198;;;;;;;;:::i;:::-;;;;;5272:13;:23;5286:8;5272:23;;;;;;;;;;;;;;;:224;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5539:201;;;;;;;;5564:14;:19;;;5539:201;;;;5602:10;5539:201;;;;;;;;;;;;;;5632:8;5539:201;;;;5642:8;5539:201;;;;5652:8;5539:201;;;;;;;5680:8;5539:201;;;;;;5707:18;5539:201;;;;;;;;:::i;:::-;;;;;5511:13;:25;5525:10;5511:25;;;;;;;;;;;;;;;:229;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5760:9;5755:382;5779:14;:21;;;;5775:1;:25;5755:382;;;5851:8;5830:29;;:14;5845:1;5830:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:29;;;5826:296;;;5889:9;5901:1;5889:13;;5884:148;5932:1;5908:14;:21;;;;:25;;;;:::i;:::-;5904:1;:29;5884:148;;;5987:14;6006:1;6002;:5;;;;:::i;:::-;5987:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5967:14;5982:1;5967:17;;;;;;;;:::i;:::-;;;;;;;;;;:41;;;;;;;;;;;;;;;;;;5935:3;;;;;:::i;:::-;;;;5884:148;;;;6054:14;:20;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;6097:5;;5826:296;5802:3;;;;;:::i;:::-;;;;5755:382;;;;6156:32;6167:10;6179:8;6156:32;;;;;;;:::i;:::-;;;;;;;;6203:30;6212:10;6224:8;6203;:30::i;:::-;;5023:1222;;4395:1850;3483:2769;;;;3369:2883;;;:::o;1858:44::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7487:4050::-;7618:25;7646:20;:31;7667:9;7646:31;;;;;;;;;;;7618:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7688:45;7736:48;7763:7;7771:1;7763:10;;;;;;;:::i;:::-;;;;;;7736:12;:48::i;:::-;7688:96;;7795:45;7843:48;7870:7;7878:1;7870:10;;;;;;;:::i;:::-;;;;;;7843:12;:48::i;:::-;7795:96;;7932:197;;;;;;;;7953:13;:25;7967:7;7975:1;7967:10;;;;;;;:::i;:::-;;;;;;7953:25;;;;;;;;;;;;;;;:30;;;7932:197;;;;7998:7;8006:1;7998:10;;;;;;;:::i;:::-;;;;;;7932:197;;;;;;8023:13;:25;8037:7;8045:1;8037:10;;;;;;;:::i;:::-;;;;;;8023:25;;;;;;;;;;;;;;;:38;;7932:197;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8076:7;8084:1;8076:10;;;;;;;:::i;:::-;;;;;;7932:197;;;;;;8101:17;7932:197;;;;;;;;:::i;:::-;;;;;7904:13;:25;7918:7;7926:1;7918:10;;;;;;;:::i;:::-;;;;;;7904:25;;;;;;;;;;;;;;;:225;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;8168:197;;;;;;;;8189:13;:25;8203:7;8211:1;8203:10;;;;;;;:::i;:::-;;;;;;8189:25;;;;;;;;;;;;;;;:30;;;8168:197;;;;8234:7;8242:1;8234:10;;;;;;;:::i;:::-;;;;;;8168:197;;;;;;8259:13;:25;8273:7;8281:1;8273:10;;;;;;;:::i;:::-;;;;;;8259:25;;;;;;;;;;;;;;;:38;;8168:197;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8312:7;8320:1;8312:10;;;;;;;:::i;:::-;;;;;;8168:197;;;;;;8337:17;8168:197;;;;;;;;:::i;:::-;;;;;8140:13;:25;8154:7;8162:1;8154:10;;;;;;;:::i;:::-;;;;;;8140:25;;;;;;;;;;;;;;;:225;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;8396:20;8436:1;8419:11;8431:1;8419:14;;;;;;;;:::i;:::-;;;;;;;;:18;;;;:::i;:::-;8396:41;;8450:21;8486;8538:1;8522:17;;8566:1;8550:17;;8650;8668:12;8650:31;;;;;;;:::i;:::-;;;;;;:38;;;8596:17;8614:12;8596:31;;;;;;;:::i;:::-;;;;;;:38;;;:92;8578:412;;;8715:15;;;;;:::i;:::-;;;;8578:412;;;8820:17;8838:12;8820:31;;;;;;;:::i;:::-;;;;;;:38;;;8766:17;8784:12;8766:31;;;;;;;:::i;:::-;;;;;;:38;;;:92;8748:242;;;8885:15;;;;;:::i;:::-;;;;8748:242;;;8933:15;;;;;:::i;:::-;;;;8963;;;;;:::i;:::-;;;;8748:242;8578:412;9000:12;9015:13;:49;9029:20;:31;9050:9;9029:31;;;;;;;;;;;9061:1;9029:34;;;;;;;:::i;:::-;;;;;;;;;;;;;9015:49;;;;;;;;;;;;;;;:54;;;9000:69;;9124:46;;:::i;:::-;9181;;:::i;:::-;9243:9;9238:450;9262:1;9258;:5;9238:450;;;9294:12;9289:1;:17;9285:392;;;9327:8;;9285:392;9365:12;9361:1;:16;9357:320;;;9422:17;9440:1;9422:20;;;;;;;:::i;:::-;;;;;;9398:18;9417:1;9398:21;;;;;;;:::i;:::-;;;;;:44;;;;9485:17;9503:1;9485:20;;;;;;;:::i;:::-;;;;;;9461:18;9480:1;9461:21;;;;;;;:::i;:::-;;;;;:44;;;;9357:320;;;9574:17;9592:1;9574:20;;;;;;;:::i;:::-;;;;;;9546:18;9569:1;9565;:5;;;;:::i;:::-;9546:25;;;;;;;:::i;:::-;;;;;:48;;;;9641:17;9659:1;9641:20;;;;;;;:::i;:::-;;;;;;9613:18;9636:1;9632;:5;;;;:::i;:::-;9613:25;;;;;;;:::i;:::-;;;;;:48;;;;9357:320;9238:450;9265:3;;;;;:::i;:::-;;;;9238:450;;;;9780:18;9816:1;9799:11;9811:1;9799:14;;;;;;;;:::i;:::-;;;;;;;;:18;;;;:::i;:::-;9780:38;;;;;;;:::i;:::-;;;;;;:46;;;9718:18;9754:1;9737:11;9749:1;9737:14;;;;;;;;:::i;:::-;;;;;;;;:18;;;;:::i;:::-;9718:38;;;;;;;:::i;:::-;;;;;;:46;;;:108;9700:444;;;9853:15;;;;;:::i;:::-;;;;9700:444;;;9966:18;10002:1;9985:11;9997:1;9985:14;;;;;;;;:::i;:::-;;;;;;;;:18;;;;:::i;:::-;9966:38;;;;;;;:::i;:::-;;;;;;:46;;;9904:18;9940:1;9923:11;9935:1;9923:14;;;;;;;;:::i;:::-;;;;;;;;:18;;;;:::i;:::-;9904:38;;;;;;;:::i;:::-;;;;;;:46;;;:108;9886:258;;;10039:15;;;;;:::i;:::-;;;;9886:258;;;10087:15;;;;;:::i;:::-;;;;10117;;;;;:::i;:::-;;;;9886:258;9700:444;10200:46;;:::i;:::-;10257;;:::i;:::-;10319:9;10314:466;10338:1;10334;:5;10314:466;;;10387:1;10370:11;10382:1;10370:14;;;;;;;;:::i;:::-;;;;;;;;:18;;;;:::i;:::-;10365:1;:23;10361:408;;;10409:8;;10361:408;10464:1;10447:11;10459:1;10447:14;;;;;;;;:::i;:::-;;;;;;;;:18;;;;:::i;:::-;10443:1;:22;10439:330;;;10510:18;10529:1;10510:21;;;;;;;:::i;:::-;;;;;;10486:18;10505:1;10486:21;;;;;;;:::i;:::-;;;;;:45;;;;10574:18;10593:1;10574:21;;;;;;;:::i;:::-;;;;;;10550:18;10569:1;10550:21;;;;;;;:::i;:::-;;;;;:45;;;;10439:330;;;10664:18;10683:1;10664:21;;;;;;;:::i;:::-;;;;;;10636:18;10659:1;10655;:5;;;;:::i;:::-;10636:25;;;;;;;:::i;:::-;;;;;:49;;;;10732:18;10751:1;10732:21;;;;;;;:::i;:::-;;;;;;10704:18;10727:1;10723;:5;;;;:::i;:::-;10704:25;;;;;;;:::i;:::-;;;;;:49;;;;10439:330;10314:466;10341:3;;;;;:::i;:::-;;;;10314:466;;;;10835:22;10860:7;10868:1;10860:10;;;;;;;:::i;:::-;;;;;;10835:35;;10881:22;10906:7;10914:1;10906:10;;;;;;;:::i;:::-;;;;;;10881:35;;10985:18;11004:1;10985:21;;;;;;;:::i;:::-;;;;;;:29;;;10953:18;10972:1;10953:21;;;;;;;:::i;:::-;;;;;;:29;;;:61;10949:326;;;11031:15;;;;;:::i;:::-;;;;10949:326;;;11114:18;11133:1;11114:21;;;;;;;:::i;:::-;;;;;;:29;;;11082:18;11101:1;11082:21;;;;;;;:::i;:::-;;;;;;:29;;;:61;11064:211;;;11170:15;;;;;:::i;:::-;;;;11064:211;;;11218:15;;;;;:::i;:::-;;;;11248;;;;;:::i;:::-;;;;11064:211;10949:326;11288:14;11304:13;11319:9;11332:153;11356:14;11385:13;11413:14;11442:13;11470:4;11332:9;:153::i;:::-;11287:198;;;;;;11503:26;11509:6;11517:5;11524:4;11503:26;;;;;;;;:::i;:::-;;;;;;;;7607:3930;;;;;;;;;;;;;;;;7487:4050;;:::o;6260:1219::-;6440:17;6390:14;6406;2027:7;1994:40;;:13;:22;2008:7;1994:22;;;;;;;;;;;;;;;:29;;;;;;;;;;;;:40;;;;:97;;;;2084:7;2051:40;;:13;:22;2065:7;2051:22;;;;;;;;;;;;;;;:29;;;;;;;;;;;;:40;;;;1994:97;1976:187;;;2125:26;;;;;;;;;;;;;;1976:187;2225:18;2192:51;;;;;;;;:::i;:::-;;:13;:22;2206:7;2192:22;;;;;;;;;;;;;;;:29;;;;;;;;;;;;:51;;;;;;;;:::i;:::-;;;;2191:123;;;;2295:18;2262:51;;;;;;;;:::i;:::-;;:13;:22;2276:7;2262:22;;;;;;;;;;;;;;;:29;;;;;;;;;;;;:51;;;;;;;;:::i;:::-;;;;2191:123;2173:215;;;2348:28;;;;;;;;;;;;;;2173:215;2451:7;2416:42;;:13;:22;2430:7;2416:22;;;;;;;;;;;;;;;:31;;;;;;;;;;;;:42;;;;:101;;;;2510:7;2475:42;;:13;:22;2489:7;2475:22;;;;;;;;;;;;;;;:31;;;;;;;;;;;;:42;;;;2416:101;2398:188;;;2551:23;;;;;;;;;;;;;;2398:188;6554:21:::1;6578:13:::0;:29:::1;6592:14;6578:29;;;;;;;;;;;;;;;6554:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;::::0;::::1;;;6618:21;6642:13:::0;:29:::1;6656:14;6642:29;;;;;;;;;;;;;;;6618:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;::::0;::::1;;;6716:172;;;;;;;;6737:7;:12;;;6716:172;;;;6764:14;6716:172;;;;;;6793:7;:20;;;6716:172;;;;6828:14;6716:172;;;;;;6857:20;6716:172;;;;;;;;:::i;:::-;;;;::::0;6684:13:::1;:29:::0;6698:14:::1;6684:29;;;;;;;;;;;;;;;:204;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;6931:172;;;;;;;;6952:7;:12;;;6931:172;;;;6979:14;6931:172;;;;;;7008:7;:20;;;6931:172;;;;7043:14;6931:172;;;;;;7072:20;6931:172;;;;;;;;:::i;:::-;;;;::::0;6899:13:::1;:29:::0;6913:14:::1;6899:29;;;;;;;;;;;;;;;:204;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;7126:16;:35;;;7176:9;7200:16;1435:1;7267:18;1479:1;7126:194;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7114:206;;7331:66;;;;;;;;7366:14;7331:66;;;;;;;;7382:14;7331:66;;;;;;::::0;:20:::1;:31;7352:9;7331:31;;;;;;;;;;;:66;;;;;;;:::i;:::-;;7413:58;7429:14;7445;7461:9;7413:58;;;;;;;;:::i;:::-;;;;;;;;6464:1015;;6260:1219:::0;;;;;;:::o;12365:1365::-;12436:27;;:::i;:::-;12476:35;12514:13;:21;12528:6;12514:21;;;;;;;;;;;;;;;:48;;12476:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12603:32;12665:30;12709:16;;;;;;;;;;;:28;;;12738:17;12756:1;12738:20;;;;;;;:::i;:::-;;;;;;12709:50;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12573:186;;;;;;12800:32;12862:30;12906:16;;;;;;;;;;;:28;;;12935:17;12953:1;12935:20;;;;;;;:::i;:::-;;;;;;12906:50;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12770:186;;;;;;12997:32;13059:30;13103:16;;;;;;;;;;;:28;;;13132:17;13150:1;13132:20;;;;;;;:::i;:::-;;;;;;13103:50;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12967:186;;;;;;13166:35;13204:88;13226:22;13263:18;13204:7;:88::i;:::-;13166:126;;13303:35;13341:88;13363:22;13400:18;13341:7;:88::i;:::-;13303:126;;13440:35;13478:88;13500:22;13537:18;13478:7;:88::i;:::-;13440:126;;13577:33;:122;;;;;;;;13628:10;13577:122;;;;13653:10;13577:122;;;;13678:10;13577:122;;;;;13717:5;13710:12;;;;;;;;;;;;;12365:1365;;;:::o;11545:812::-;11727:7;11736;11745:4;11782:13;11766;:29;11762:588;;;11833:29;;;;;;;;11838:7;11833:29;;;;;;11847:7;11833:29;;;;;;11856:5;11833:29;;;;;11812:12;:18;11825:4;11812:18;;;;;;;;;;;:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11885:7;11894;11903:5;11877:32;;;;;;;;11762:588;11947:13;11931;:29;11927:423;;;11998:29;;;;;;;;12003:7;11998:29;;;;;;12012:7;11998:29;;;;;;12021:5;11998:29;;;;;11977:12;:18;11990:4;11977:18;;;;;;;;;;;:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12050:7;12059;12068:5;12042:32;;;;;;;;11927:423;12128:28;;;;;;;;12133:7;12128:28;;;;;;12142:7;12128:28;;;;;;12151:4;12128:28;;;;;12107:12;:18;12120:4;12107:18;;;;;;;;;;;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12197:42;12258;12319:4;12171:167;;;;;;11545:812;;;;;;;;;;:::o;13738:3414::-;13838:24;;:::i;:::-;13890:1;13879:7;:12;13875:3270;;;13931:9;13908:1041;13967:19;;;;;;;;;;;:39;;;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13963:1;:45;13908:1041;;;14066:26;14102:19;;;;;;;;;;;:55;;;14158:1;14102:58;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14065:95;;;;;14298:8;14281:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;14271:37;;;;;;14232:12;14215:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;14205:41;;;;;;:103;14179:755;;;14378:22;14427:16;14470:17;14514;14557:19;;;;;;;;;;;:33;;;14591:1;14557:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14351:242;;;;;;;;14618:34;14655:220;;;;;;;;14710:8;14655:220;;;;14753:8;14655:220;;;;14797:9;14655:220;;;;14842:9;14655:220;;;14618:257;;14905:9;14898:16;;;;;;;;;;;14179:755;14046:903;14027:3;;;;;:::i;:::-;;;;13908:1041;;;;13875:3270;;;14981:1;14970:7;:12;14966:2179;;;15022:9;14999:1035;15058:19;;;;;;;;;;;:37;;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15054:1;:43;14999:1035;;;15155:26;15191:19;;;;;;;;;;;:53;;;15245:1;15191:56;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15154:93;;;;;15385:8;15368:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;15358:37;;;;;;15319:12;15302:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;15292:41;;;;;;:103;15266:753;;;15465:22;15514:16;15557:17;15601;15644:19;;;;;;;;;;;:31;;;15676:1;15644:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15438:240;;;;;;;;15703:34;15740:220;;;;;;;;15795:8;15740:220;;;;15838:8;15740:220;;;;15882:9;15740:220;;;;15927:9;15740:220;;;15703:257;;15990:9;15983:16;;;;;;;;;;;15266:753;15135:899;15116:3;;;;;:::i;:::-;;;;14999:1035;;;;14966:2179;;;16066:1;16055:7;:12;16051:1094;;;16107:9;16084:1050;16143:19;;;;;;;;;;;:42;;;:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16139:1;:48;16084:1050;;;16245:26;16281:19;;;;;;;;;;;:58;;;16340:1;16281:61;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16244:98;;;;;16480:8;16463:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;16453:37;;;;;;16414:12;16397:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;16387:41;;;;;;:103;16361:758;;;16560:22;16609:16;16652:17;16696;16739:19;;;;;;;;;;;:36;;;16776:1;16739:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16533:245;;;;;;;;16803:34;16840:220;;;;;;;;16895:8;16840:220;;;;16938:8;16840:220;;;;16982:9;16840:220;;;;17027:9;16840:220;;;16803:257;;17090:9;17083:16;;;;;;;;;;;16361:758;16225:909;16206:3;;;;;:::i;:::-;;;;16084:1050;;;;16051:1094;14966:2179;13875:3270;13738:3414;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;24:722:18:-;120:5;145:81;161:64;218:6;161:64;:::i;:::-;145:81;:::i;:::-;136:90;;246:5;275:6;268:5;261:21;309:4;302:5;298:16;291:23;;335:6;385:3;377:4;369:6;365:17;360:3;356:27;353:36;350:143;;;404:79;;:::i;:::-;350:143;517:1;502:238;527:6;524:1;521:13;502:238;;;595:3;624:37;657:3;645:10;624:37;:::i;:::-;619:3;612:50;691:4;686:3;682:14;675:21;;725:4;720:3;716:14;709:21;;562:178;549:1;546;542:9;537:14;;502:238;;;506:14;126:620;;24:722;;;;;:::o;752:421::-;841:5;866:66;882:49;924:6;882:49;:::i;:::-;866:66;:::i;:::-;857:75;;955:6;948:5;941:21;993:4;986:5;982:16;1031:3;1022:6;1017:3;1013:16;1010:25;1007:112;;;1038:79;;:::i;:::-;1007:112;1128:39;1160:6;1155:3;1150;1128:39;:::i;:::-;847:326;752:421;;;;;:::o;1179:139::-;1225:5;1263:6;1250:20;1241:29;;1279:33;1306:5;1279:33;:::i;:::-;1179:139;;;;:::o;1324:143::-;1381:5;1412:6;1406:13;1397:22;;1428:33;1455:5;1428:33;:::i;:::-;1324:143;;;;:::o;1490:370::-;1561:5;1610:3;1603:4;1595:6;1591:17;1587:27;1577:122;;1618:79;;:::i;:::-;1577:122;1735:6;1722:20;1760:94;1850:3;1842:6;1835:4;1827:6;1823:17;1760:94;:::i;:::-;1751:103;;1567:293;1490:370;;;;:::o;1866:137::-;1920:5;1951:6;1945:13;1936:22;;1967:30;1991:5;1967:30;:::i;:::-;1866:137;;;;:::o;2023:355::-;2090:5;2139:3;2132:4;2124:6;2120:17;2116:27;2106:122;;2147:79;;:::i;:::-;2106:122;2257:6;2251:13;2282:90;2368:3;2360:6;2353:4;2345:6;2341:17;2282:90;:::i;:::-;2273:99;;2096:282;2023:355;;;;:::o;2384:139::-;2430:5;2468:6;2455:20;2446:29;;2484:33;2511:5;2484:33;:::i;:::-;2384:139;;;;:::o;2529:143::-;2586:5;2617:6;2611:13;2602:22;;2633:33;2660:5;2633:33;:::i;:::-;2529:143;;;;:::o;2678:329::-;2737:6;2786:2;2774:9;2765:7;2761:23;2757:32;2754:119;;;2792:79;;:::i;:::-;2754:119;2912:1;2937:53;2982:7;2973:6;2962:9;2958:22;2937:53;:::i;:::-;2927:63;;2883:117;2678:329;;;;:::o;3013:351::-;3083:6;3132:2;3120:9;3111:7;3107:23;3103:32;3100:119;;;3138:79;;:::i;:::-;3100:119;3258:1;3283:64;3339:7;3330:6;3319:9;3315:22;3283:64;:::i;:::-;3273:74;;3229:128;3013:351;;;;:::o;3370:474::-;3438:6;3446;3495:2;3483:9;3474:7;3470:23;3466:32;3463:119;;;3501:79;;:::i;:::-;3463:119;3621:1;3646:53;3691:7;3682:6;3671:9;3667:22;3646:53;:::i;:::-;3636:63;;3592:117;3748:2;3774:53;3819:7;3810:6;3799:9;3795:22;3774:53;:::i;:::-;3764:63;;3719:118;3370:474;;;;;:::o;3850:993::-;3957:6;3965;3973;3981;4030:3;4018:9;4009:7;4005:23;4001:33;3998:120;;;4037:79;;:::i;:::-;3998:120;4178:1;4167:9;4163:17;4157:24;4208:18;4200:6;4197:30;4194:117;;;4230:79;;:::i;:::-;4194:117;4335:74;4401:7;4392:6;4381:9;4377:22;4335:74;:::i;:::-;4325:84;;4128:291;4458:2;4484:64;4540:7;4531:6;4520:9;4516:22;4484:64;:::i;:::-;4474:74;;4429:129;4597:2;4623:64;4679:7;4670:6;4659:9;4655:22;4623:64;:::i;:::-;4613:74;;4568:129;4736:2;4762:64;4818:7;4809:6;4798:9;4794:22;4762:64;:::i;:::-;4752:74;;4707:129;3850:993;;;;;;;:::o;4849:329::-;4908:6;4957:2;4945:9;4936:7;4932:23;4928:32;4925:119;;;4963:79;;:::i;:::-;4925:119;5083:1;5108:53;5153:7;5144:6;5133:9;5129:22;5108:53;:::i;:::-;5098:63;;5054:117;4849:329;;;;:::o;5184:351::-;5254:6;5303:2;5291:9;5282:7;5278:23;5274:32;5271:119;;;5309:79;;:::i;:::-;5271:119;5429:1;5454:64;5510:7;5501:6;5490:9;5486:22;5454:64;:::i;:::-;5444:74;;5400:128;5184:351;;;;:::o;5541:684::-;5634:6;5642;5691:2;5679:9;5670:7;5666:23;5662:32;5659:119;;;5697:79;;:::i;:::-;5659:119;5817:1;5842:53;5887:7;5878:6;5867:9;5863:22;5842:53;:::i;:::-;5832:63;;5788:117;5972:2;5961:9;5957:18;5944:32;6003:18;5995:6;5992:30;5989:117;;;6025:79;;:::i;:::-;5989:117;6130:78;6200:7;6191:6;6180:9;6176:22;6130:78;:::i;:::-;6120:88;;5915:303;5541:684;;;;;:::o;6231:987::-;6335:6;6343;6351;6359;6408:3;6396:9;6387:7;6383:23;6379:33;6376:120;;;6415:79;;:::i;:::-;6376:120;6535:1;6560:64;6616:7;6607:6;6596:9;6592:22;6560:64;:::i;:::-;6550:74;;6506:128;6694:2;6683:9;6679:18;6673:25;6725:18;6717:6;6714:30;6711:117;;;6747:79;;:::i;:::-;6711:117;6852:74;6918:7;6909:6;6898:9;6894:22;6852:74;:::i;:::-;6842:84;;6644:292;6975:2;7001:61;7054:7;7045:6;7034:9;7030:22;7001:61;:::i;:::-;6991:71;;6946:126;7111:2;7137:64;7193:7;7184:6;7173:9;7169:22;7137:64;:::i;:::-;7127:74;;7082:129;6231:987;;;;;;;:::o;7224:474::-;7292:6;7300;7349:2;7337:9;7328:7;7324:23;7320:32;7317:119;;;7355:79;;:::i;:::-;7317:119;7475:1;7500:53;7545:7;7536:6;7525:9;7521:22;7500:53;:::i;:::-;7490:63;;7446:117;7602:2;7628:53;7673:7;7664:6;7653:9;7649:22;7628:53;:::i;:::-;7618:63;;7573:118;7224:474;;;;;:::o;7704:619::-;7781:6;7789;7797;7846:2;7834:9;7825:7;7821:23;7817:32;7814:119;;;7852:79;;:::i;:::-;7814:119;7972:1;7997:53;8042:7;8033:6;8022:9;8018:22;7997:53;:::i;:::-;7987:63;;7943:117;8099:2;8125:53;8170:7;8161:6;8150:9;8146:22;8125:53;:::i;:::-;8115:63;;8070:118;8227:2;8253:53;8298:7;8289:6;8278:9;8274:22;8253:53;:::i;:::-;8243:63;;8198:118;7704:619;;;;;:::o;8329:179::-;8398:10;8419:46;8461:3;8453:6;8419:46;:::i;:::-;8497:4;8492:3;8488:14;8474:28;;8329:179;;;;:::o;8514:118::-;8601:24;8619:5;8601:24;:::i;:::-;8596:3;8589:37;8514:118;;:::o;8670:694::-;8806:52;8852:5;8806:52;:::i;:::-;8874:84;8951:6;8946:3;8874:84;:::i;:::-;8867:91;;8982:54;9030:5;8982:54;:::i;:::-;9059:7;9090:1;9075:282;9100:6;9097:1;9094:13;9075:282;;;9176:6;9170:13;9203:63;9262:3;9247:13;9203:63;:::i;:::-;9196:70;;9289:58;9340:6;9289:58;:::i;:::-;9279:68;;9135:222;9122:1;9119;9115:9;9110:14;;9075:282;;;9079:14;8782:582;;;8670:694;;:::o;9370:109::-;9451:21;9466:5;9451:21;:::i;:::-;9446:3;9439:34;9370:109;;:::o;9485:118::-;9572:24;9590:5;9572:24;:::i;:::-;9567:3;9560:37;9485:118;;:::o;9609:169::-;9715:56;9765:5;9715:56;:::i;:::-;9710:3;9703:69;9609:169;;:::o;9784:161::-;9886:52;9932:5;9886:52;:::i;:::-;9881:3;9874:65;9784:161;;:::o;9951:::-;10053:52;10099:5;10053:52;:::i;:::-;10048:3;10041:65;9951:161;;:::o;10118:377::-;10224:3;10252:39;10285:5;10252:39;:::i;:::-;10307:89;10389:6;10384:3;10307:89;:::i;:::-;10300:96;;10405:52;10450:6;10445:3;10438:4;10431:5;10427:16;10405:52;:::i;:::-;10482:6;10477:3;10473:16;10466:23;;10228:267;10118:377;;;;:::o;10501:115::-;10586:23;10603:5;10586:23;:::i;:::-;10581:3;10574:36;10501:115;;:::o;10622:108::-;10699:24;10717:5;10699:24;:::i;:::-;10694:3;10687:37;10622:108;;:::o;10736:118::-;10823:24;10841:5;10823:24;:::i;:::-;10818:3;10811:37;10736:118;;:::o;10860:115::-;10945:23;10962:5;10945:23;:::i;:::-;10940:3;10933:36;10860:115;;:::o;10981:::-;11066:23;11083:5;11066:23;:::i;:::-;11061:3;11054:36;10981:115;;:::o;11102:275::-;11234:3;11256:95;11347:3;11338:6;11256:95;:::i;:::-;11249:102;;11368:3;11361:10;;11102:275;;;;:::o;11383:222::-;11476:4;11514:2;11503:9;11499:18;11491:26;;11527:71;11595:1;11584:9;11580:17;11571:6;11527:71;:::i;:::-;11383:222;;;;:::o;11611:332::-;11732:4;11770:2;11759:9;11755:18;11747:26;;11783:71;11851:1;11840:9;11836:17;11827:6;11783:71;:::i;:::-;11864:72;11932:2;11921:9;11917:18;11908:6;11864:72;:::i;:::-;11611:332;;;;;:::o;11949:430::-;12092:4;12130:2;12119:9;12115:18;12107:26;;12143:71;12211:1;12200:9;12196:17;12187:6;12143:71;:::i;:::-;12224:72;12292:2;12281:9;12277:18;12268:6;12224:72;:::i;:::-;12306:66;12368:2;12357:9;12353:18;12344:6;12306:66;:::i;:::-;11949:430;;;;;;:::o;12385:442::-;12534:4;12572:2;12561:9;12557:18;12549:26;;12585:71;12653:1;12642:9;12638:17;12629:6;12585:71;:::i;:::-;12666:72;12734:2;12723:9;12719:18;12710:6;12666:72;:::i;:::-;12748;12816:2;12805:9;12801:18;12792:6;12748:72;:::i;:::-;12385:442;;;;;;:::o;12833:677::-;13071:4;13109:3;13098:9;13094:19;13086:27;;13123:71;13191:1;13180:9;13176:17;13167:6;13123:71;:::i;:::-;13204:118;13318:2;13307:9;13303:18;13294:6;13204:118;:::i;:::-;13332:73;13400:3;13389:9;13385:19;13376:6;13332:73;:::i;:::-;13415:88;13498:3;13487:9;13483:19;13474:6;13415:88;:::i;:::-;12833:677;;;;;;;:::o;13516:648::-;13713:4;13751:3;13740:9;13736:19;13728:27;;13765:71;13833:1;13822:9;13818:17;13809:6;13765:71;:::i;:::-;13846:70;13912:2;13901:9;13897:18;13888:6;13846:70;:::i;:::-;13926;13992:2;13981:9;13977:18;13968:6;13926:70;:::i;:::-;14006;14072:2;14061:9;14057:18;14048:6;14006:70;:::i;:::-;14086:71;14152:3;14141:9;14137:19;14128:6;14086:71;:::i;:::-;13516:648;;;;;;;;:::o;14170:260::-;14282:4;14320:2;14309:9;14305:18;14297:26;;14333:90;14420:1;14409:9;14405:17;14396:6;14333:90;:::i;:::-;14170:260;;;;:::o;14436:252::-;14544:4;14582:2;14571:9;14567:18;14559:26;;14595:86;14678:1;14667:9;14663:17;14654:6;14595:86;:::i;:::-;14436:252;;;;:::o;14694:222::-;14787:4;14825:2;14814:9;14810:18;14802:26;;14838:71;14906:1;14895:9;14891:17;14882:6;14838:71;:::i;:::-;14694:222;;;;:::o;14922:583::-;15114:4;15152:3;15141:9;15137:19;15129:27;;15166:71;15234:1;15223:9;15219:17;15210:6;15166:71;:::i;:::-;15247:72;15315:2;15304:9;15300:18;15291:6;15247:72;:::i;:::-;15329;15397:2;15386:9;15382:18;15373:6;15329:72;:::i;:::-;15411:87;15494:2;15483:9;15479:18;15470:6;15411:87;:::i;:::-;14922:583;;;;;;;:::o;15511:129::-;15545:6;15572:20;;:::i;:::-;15562:30;;15601:33;15629:4;15621:6;15601:33;:::i;:::-;15511:129;;;:::o;15646:75::-;15679:6;15712:2;15706:9;15696:19;;15646:75;:::o;15727:311::-;15804:4;15894:18;15886:6;15883:30;15880:56;;;15916:18;;:::i;:::-;15880:56;15966:4;15958:6;15954:17;15946:25;;16026:4;16020;16016:15;16008:23;;15727:311;;;:::o;16044:308::-;16106:4;16196:18;16188:6;16185:30;16182:56;;;16218:18;;:::i;:::-;16182:56;16256:29;16278:6;16256:29;:::i;:::-;16248:37;;16340:4;16334;16330:15;16322:23;;16044:308;;;:::o;16358:98::-;16423:4;16446:3;16438:11;;16358:98;;;:::o;16462:104::-;16527:6;16555:4;16545:14;;16462:104;;;:::o;16572:99::-;16624:6;16658:5;16652:12;16642:22;;16572:99;;;:::o;16677:111::-;16745:4;16777;16772:3;16768:14;16760:22;;16677:111;;;:::o;16794:143::-;16891:11;16928:3;16913:18;;16794:143;;;;:::o;16943:148::-;17045:11;17082:3;17067:18;;16943:148;;;;:::o;17097:305::-;17137:3;17156:20;17174:1;17156:20;:::i;:::-;17151:25;;17190:20;17208:1;17190:20;:::i;:::-;17185:25;;17344:1;17276:66;17272:74;17269:1;17266:81;17263:107;;;17350:18;;:::i;:::-;17263:107;17394:1;17391;17387:9;17380:16;;17097:305;;;;:::o;17408:191::-;17448:4;17468:20;17486:1;17468:20;:::i;:::-;17463:25;;17502:20;17520:1;17502:20;:::i;:::-;17497:25;;17541:1;17538;17535:8;17532:34;;;17546:18;;:::i;:::-;17532:34;17591:1;17588;17584:9;17576:17;;17408:191;;;;:::o;17605:96::-;17642:7;17671:24;17689:5;17671:24;:::i;:::-;17660:35;;17605:96;;;:::o;17707:90::-;17741:7;17784:5;17777:13;17770:21;17759:32;;17707:90;;;:::o;17803:77::-;17840:7;17869:5;17858:16;;17803:77;;;:::o;17886:145::-;17940:7;17969:5;17958:16;;17975:50;18019:5;17975:50;:::i;:::-;17886:145;;;:::o;18037:89::-;18073:7;18113:6;18106:5;18102:18;18091:29;;18037:89;;;:::o;18132:126::-;18169:7;18209:42;18202:5;18198:54;18187:65;;18132:126;;;:::o;18264:77::-;18301:7;18330:5;18319:16;;18264:77;;;:::o;18347:93::-;18383:7;18423:10;18416:5;18412:22;18401:33;;18347:93;;;:::o;18446:101::-;18482:7;18522:18;18515:5;18511:30;18500:41;;18446:101;;;:::o;18553:145::-;18622:9;18655:37;18686:5;18655:37;:::i;:::-;18642:50;;18553:145;;;:::o;18704:141::-;18769:9;18802:37;18833:5;18802:37;:::i;:::-;18789:50;;18704:141;;;:::o;18851:145::-;18916:9;18949:41;18984:5;18949:41;:::i;:::-;18936:54;;18851:145;;;:::o;19002:126::-;19052:9;19085:37;19116:5;19085:37;:::i;:::-;19072:50;;19002:126;;;:::o;19134:113::-;19184:9;19217:24;19235:5;19217:24;:::i;:::-;19204:37;;19134:113;;;:::o;19253:307::-;19321:1;19331:113;19345:6;19342:1;19339:13;19331:113;;;19430:1;19425:3;19421:11;19415:18;19411:1;19406:3;19402:11;19395:39;19367:2;19364:1;19360:10;19355:15;;19331:113;;;19462:6;19459:1;19456:13;19453:101;;;19542:1;19533:6;19528:3;19524:16;19517:27;19453:101;19302:258;19253:307;;;:::o;19566:281::-;19649:27;19671:4;19649:27;:::i;:::-;19641:6;19637:40;19779:6;19767:10;19764:22;19743:18;19731:10;19728:34;19725:62;19722:88;;;19790:18;;:::i;:::-;19722:88;19830:10;19826:2;19819:22;19609:238;19566:281;;:::o;19853:233::-;19892:3;19915:24;19933:5;19915:24;:::i;:::-;19906:33;;19961:66;19954:5;19951:77;19948:103;;;20031:18;;:::i;:::-;19948:103;20078:1;20071:5;20067:13;20060:20;;19853:233;;;:::o;20092:176::-;20124:1;20141:20;20159:1;20141:20;:::i;:::-;20136:25;;20175:20;20193:1;20175:20;:::i;:::-;20170:25;;20214:1;20204:35;;20219:18;;:::i;:::-;20204:35;20260:1;20257;20253:9;20248:14;;20092:176;;;;:::o;20274:180::-;20322:77;20319:1;20312:88;20419:4;20416:1;20409:15;20443:4;20440:1;20433:15;20460:180;20508:77;20505:1;20498:88;20605:4;20602:1;20595:15;20629:4;20626:1;20619:15;20646:180;20694:77;20691:1;20684:88;20791:4;20788:1;20781:15;20815:4;20812:1;20805:15;20832:180;20880:77;20877:1;20870:88;20977:4;20974:1;20967:15;21001:4;20998:1;20991:15;21018:180;21066:77;21063:1;21056:88;21163:4;21160:1;21153:15;21187:4;21184:1;21177:15;21204:180;21252:77;21249:1;21242:88;21349:4;21346:1;21339:15;21373:4;21370:1;21363:15;21390:117;21499:1;21496;21489:12;21513:117;21622:1;21619;21612:12;21636:117;21745:1;21742;21735:12;21759:117;21868:1;21865;21858:12;21882:117;21991:1;21988;21981:12;22005:102;22046:6;22097:2;22093:7;22088:2;22081:5;22077:14;22073:28;22063:38;;22005:102;;;:::o;22113:122::-;22203:1;22196:5;22193:12;22183:46;;22209:18;;:::i;:::-;22183:46;22113:122;:::o;22241:::-;22314:24;22332:5;22314:24;:::i;:::-;22307:5;22304:35;22294:63;;22353:1;22350;22343:12;22294:63;22241:122;:::o;22369:116::-;22439:21;22454:5;22439:21;:::i;:::-;22432:5;22429:32;22419:60;;22475:1;22472;22465:12;22419:60;22369:116;:::o;22491:122::-;22564:24;22582:5;22564:24;:::i;:::-;22557:5;22554:35;22544:63;;22603:1;22600;22593:12;22544:63;22491:122;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"3879400","executionCost":"infinite","totalCost":"infinite"},"external":{"currentPlayers(uint256)":"5000","enterGame(uint256,uint256,uint256)":"infinite","finshedGames(uint256)":"infinite","getCurrentPlayers()":"2446","getTokenIds(address,uint256)":"infinite","i_contractCharacter()":"2667","i_contractNftBox()":"2689","rawFulfillRandomWords(uint256,uint256[])":"infinite","s_addressInfo(address)":"infinite","s_gameCounter()":"2452","s_requestIdToPlayers(uint256,uint256)":"infinite"},"internal":{"fulfillRandomWords(uint256,uint256[] memory)":"infinite","getCharacter(address)":"infinite","getData(uint256,string memory)":"infinite","getResult(address,uint256,address,uint256,uint256)":"infinite","playGame(address,address)":"infinite"}},"methodIdentifiers":{"currentPlayers(uint256)":"703afc87","enterGame(uint256,uint256,uint256)":"e81fb495","finshedGames(uint256)":"eabfb839","getCurrentPlayers()":"02cac05c","getTokenIds(address,uint256)":"570d2f20","i_contractCharacter()":"2a3031a2","i_contractNftBox()":"2c0d5558","rawFulfillRandomWords(uint256,uint256[])":"1fe543e3","s_addressInfo(address)":"533d7653","s_gameCounter()":"123cb832","s_requestIdToPlayers(uint256,uint256)":"e783c827"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftBoxAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"characterAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vrfCoordinatorV2\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"gasLane\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"GameCard__AlreadyOpponentFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GameCard__NotOpponent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GameCard__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GameCard__PlayerNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"GameCard__PlayerNotFound\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[3]\",\"name\":\"tokenId\",\"type\":\"uint256[3]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"opponent\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum GameCard.PlayerStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"AddedToList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"looser\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"draw\",\"type\":\"bool\"}],\"name\":\"Match\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"player1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"player2\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"MatchBeginsSoon\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"player1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"player2\",\"type\":\"address\"}],\"name\":\"MatchFound\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"currentPlayers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId3\",\"type\":\"uint256\"}],\"name\":\"enterGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"finshedGames\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"loser\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"draw\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentPlayers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getTokenIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_contractCharacter\",\"outputs\":[{\"internalType\":\"contract Characters\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_contractNftBox\",\"outputs\":[{\"internalType\":\"contract NftBox\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_addressInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"game\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"opponent\",\"type\":\"address\"},{\"internalType\":\"enum GameCard.PlayerStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_gameCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_requestIdToPlayers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GameCard.sol\":\"GameCard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig()\\n    external\\n    view\\n    returns (\\n      uint16,\\n      uint32,\\n      bytes32[] memory\\n    );\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(uint64 subId)\\n    external\\n    view\\n    returns (\\n      uint96 balance,\\n      uint64 reqCount,\\n      address owner,\\n      address[] memory consumers\\n    );\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint64 subId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x54cdc97717cbae1a51a5500c8ee4875ebf056c95b54d2155a9544a79cb4f4494\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.2) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner or approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _ownerOf(tokenId) != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\\n\\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        unchecked {\\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\\n            // Given that tokens are minted one by one, it is impossible in practice that\\n            // this ever happens. Might change if we allow batch minting.\\n            // The ERC fails to describe this case.\\n            _balances[to] += 1;\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\\n\\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\\n        owner = ERC721.ownerOf(tokenId);\\n\\n        // Clear approvals\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // Cannot overflow, as that would require more tokens to be burned/transferred\\n            // out than the owner initially received through minting and transferring in.\\n            _balances[owner] -= 1;\\n        }\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId, 1);\\n\\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n\\n        // Clear approvals from the previous owner\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\\n            // `from`'s balance is the number of token held, which is at least one before the current\\n            // transfer.\\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\\n            // all 2**256 token ids to be minted, which in practice is impossible.\\n            _balances[from] -= 1;\\n            _balances[to] += 1;\\n        }\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\\n     * - When `from` is zero, the tokens will be minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 firstTokenId,\\n        uint256 batchSize\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\\n     * - When `from` is zero, the tokens were minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens were burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 firstTokenId,\\n        uint256 batchSize\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Unsafe write access to the balances, used by extensions that \\\"mint\\\" tokens using an {ownerOf} override.\\n     *\\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\\n     * that `ownerOf(tokenId)` is `a`.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\\n        _balances[account] += amount;\\n    }\\n}\\n\",\"keccak256\":\"0x1e854874c68bec05be100dc0092cb5fbbc71253d370ae98ddef248bbfc3fe118\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/extensions/ERC721URIStorage.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\n\\n/**\\n * @dev ERC721 token with storage based token URI management.\\n */\\nabstract contract ERC721URIStorage is ERC721 {\\n    using Strings for uint256;\\n\\n    // Optional mapping for token URIs\\n    mapping(uint256 => string) private _tokenURIs;\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory _tokenURI = _tokenURIs[tokenId];\\n        string memory base = _baseURI();\\n\\n        // If there is no base URI, return the token URI.\\n        if (bytes(base).length == 0) {\\n            return _tokenURI;\\n        }\\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\\n        if (bytes(_tokenURI).length > 0) {\\n            return string(abi.encodePacked(base, _tokenURI));\\n        }\\n\\n        return super.tokenURI(tokenId);\\n    }\\n\\n    /**\\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\\n        require(_exists(tokenId), \\\"ERC721URIStorage: URI set of nonexistent token\\\");\\n        _tokenURIs[tokenId] = _tokenURI;\\n    }\\n\\n    /**\\n     * @dev See {ERC721-_burn}. This override additionally checks to see if a\\n     * token-specific URI was set for the token, and if so, it deletes the token URI from\\n     * the storage mapping.\\n     */\\n    function _burn(uint256 tokenId) internal virtual override {\\n        super._burn(tokenId);\\n\\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\\n            delete _tokenURIs[tokenId];\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5c3501c1b70fcfc64417e9da5cc6a3597191baa354781e508e1e14cc0e50a038\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"},\"contracts/Characters.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\ncontract Characters {\\r\\n    struct Person {\\r\\n        string tokenUri;\\r\\n        uint256 attack;\\r\\n        uint256 defence;\\r\\n        uint256 tactics;\\r\\n    }\\r\\n    Person[] public normalPersons;\\r\\n    Person[] public rarePersons;\\r\\n    Person[] public legendaryPersons;\\r\\n\\r\\n    constructor(\\r\\n        string[] memory tokenUriNormal,\\r\\n        uint256[][] memory normalStats,\\r\\n        string[] memory tokenUriRare,\\r\\n        uint256[][] memory statsRare,\\r\\n        string[] memory tokenUriLegendary,\\r\\n        uint256[][] memory statsLegendary\\r\\n    ) {\\r\\n        for (uint256 i = 0; i < tokenUriNormal.length; i++) {\\r\\n            normalPersons.push(\\r\\n                Person(\\r\\n                    tokenUriNormal[i],\\r\\n                    normalStats[i][0],\\r\\n                    normalStats[i][1],\\r\\n                    normalStats[i][2]\\r\\n                )\\r\\n            );\\r\\n        }\\r\\n        for (uint256 i = 0; i < tokenUriRare.length; i++) {\\r\\n            rarePersons.push(\\r\\n                Person(\\r\\n                    tokenUriRare[i],\\r\\n                    statsRare[i][0],\\r\\n                    statsRare[i][1],\\r\\n                    statsRare[i][2]\\r\\n                )\\r\\n            );\\r\\n        }\\r\\n        for (uint256 i = 0; i < tokenUriLegendary.length; i++) {\\r\\n            legendaryPersons.push(\\r\\n                Person(\\r\\n                    tokenUriLegendary[i],\\r\\n                    statsLegendary[i][0],\\r\\n                    statsLegendary[i][1],\\r\\n                    statsLegendary[i][2]\\r\\n                )\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function normalPersonsLength() public view returns (uint256) {\\r\\n        return normalPersons.length;\\r\\n    }\\r\\n\\r\\n    function rarePersonsLength() public view returns (uint256) {\\r\\n        return rarePersons.length;\\r\\n    }\\r\\n\\r\\n    function legendaryPersonsLength() public view returns (uint256) {\\r\\n        return legendaryPersons.length;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x71a420f0a5c1366bf3dfdcadb6bcb3bc6b08d0e12ee369b43be791374bf734e2\",\"license\":\"MIT\"},\"contracts/GameCard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.7;\\r\\nimport \\\"./NftBox.sol\\\";\\r\\nimport \\\"./Characters.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\\\";\\r\\nerror GameCard__NotOwner();\\r\\nerror GameCard__PlayerNotFound();\\r\\nerror GameCard__PlayerNotAllowed();\\r\\nerror GameCard__NotOpponent();\\r\\nerror GameCard__AlreadyOpponentFound();\\r\\n\\r\\ncontract GameCard is VRFConsumerBaseV2 {\\r\\n    enum PlayerStatus {\\r\\n        SEARCHING,\\r\\n        FOUND,\\r\\n        PLAYING,\\r\\n        OVER\\r\\n    }\\r\\n    struct Player {\\r\\n        uint256 game;\\r\\n        address player;\\r\\n        uint256[3] tokenIdArray;\\r\\n        address opponent;\\r\\n        PlayerStatus status;\\r\\n    }\\r\\n    struct Game {\\r\\n        address winner;\\r\\n        address loser;\\r\\n        bool draw;\\r\\n    }\\r\\n    event MatchFound(address player1, address player2);\\r\\n    event Match(address winner, address looser, bool draw);\\r\\n    event AddedToList(\\r\\n        address caller,\\r\\n        uint256[3] tokenId,\\r\\n        address opponent,\\r\\n        PlayerStatus status\\r\\n    );\\r\\n    event MatchBeginsSoon(address player1, address player2, uint256 requestId);\\r\\n    VRFCoordinatorV2Interface private immutable i_vrfCoordinator;\\r\\n    uint64 private immutable i_subscriptionId;\\r\\n    bytes32 private immutable i_gasLane;\\r\\n    uint32 private immutable i_callbackGasLimit;\\r\\n    uint16 private constant REQUEST_CONFIRMATIONS = 3;\\r\\n    uint32 private constant NUM_WORDS = 3;\\r\\n    mapping(address => Player) public s_addressInfo;\\r\\n    mapping(uint256 => address[2]) public s_requestIdToPlayers;\\r\\n    address[] public currentPlayers;\\r\\n    NftBox public i_contractNftBox;\\r\\n    address private immutable i_nftAddress;\\r\\n    address private immutable i_characterAddress;\\r\\n\\r\\n    Characters public i_contractCharacter;\\r\\n    uint256 public s_gameCounter;\\r\\n    mapping(uint256 => Game) public finshedGames;\\r\\n    modifier checkPlayers(address player1, address player2) {\\r\\n        if (\\r\\n            s_addressInfo[player1].player != player1 ||\\r\\n            s_addressInfo[player2].player != player2\\r\\n        ) {\\r\\n            revert GameCard__PlayerNotFound();\\r\\n        }\\r\\n        if (\\r\\n            (s_addressInfo[player1].status != PlayerStatus.FOUND) ||\\r\\n            (s_addressInfo[player2].status != PlayerStatus.FOUND)\\r\\n        ) {\\r\\n            revert GameCard__PlayerNotAllowed();\\r\\n        }\\r\\n        if (\\r\\n            s_addressInfo[player1].opponent != player2 ||\\r\\n            s_addressInfo[player2].opponent != player1\\r\\n        ) {\\r\\n            revert GameCard__NotOpponent();\\r\\n        }\\r\\n        _; /* this indicates that the rest of the main function will be run  */\\r\\n    }\\r\\n\\r\\n    constructor(\\r\\n        address nftBoxAddress,\\r\\n        address characterAddress,\\r\\n        address vrfCoordinatorV2,\\r\\n        uint64 subscriptionId,\\r\\n        bytes32 gasLane,\\r\\n        uint32 callbackGasLimit\\r\\n    ) VRFConsumerBaseV2(vrfCoordinatorV2) {\\r\\n        i_contractNftBox = NftBox(nftBoxAddress);\\r\\n        i_nftAddress = nftBoxAddress;\\r\\n        i_characterAddress = characterAddress;\\r\\n        i_contractCharacter = Characters(characterAddress);\\r\\n        i_vrfCoordinator = VRFCoordinatorV2Interface(vrfCoordinatorV2);\\r\\n        i_subscriptionId = subscriptionId;\\r\\n        i_gasLane = gasLane;\\r\\n        i_callbackGasLimit = callbackGasLimit;\\r\\n        s_gameCounter = 0;\\r\\n    }\\r\\n\\r\\n    function enterGame(\\r\\n        uint256 tokenId1,\\r\\n        uint256 tokenId2,\\r\\n        uint256 tokenId3\\r\\n    ) public {\\r\\n        IERC721 nft = IERC721(i_nftAddress);\\r\\n        (, , bool opened1, ) = i_contractNftBox.mappingNfts(tokenId1);\\r\\n        (, , bool opened2, ) = i_contractNftBox.mappingNfts(tokenId2);\\r\\n        (, , bool opened3, ) = i_contractNftBox.mappingNfts(tokenId3);\\r\\n        if (\\r\\n            nft.ownerOf(tokenId1) != msg.sender ||\\r\\n            !opened1 ||\\r\\n            tokenId1 == tokenId2 ||\\r\\n            tokenId2 == tokenId3 ||\\r\\n            tokenId3 == tokenId1\\r\\n        ) {\\r\\n            revert GameCard__NotOwner();\\r\\n        }\\r\\n\\r\\n        if (nft.ownerOf(tokenId2) != msg.sender || !opened2) {\\r\\n            revert GameCard__NotOwner();\\r\\n        }\\r\\n\\r\\n        if (nft.ownerOf(tokenId3) != msg.sender || !opened3) {\\r\\n            revert GameCard__NotOwner();\\r\\n        }\\r\\n        if (s_addressInfo[msg.sender].status == PlayerStatus.FOUND) {\\r\\n            revert GameCard__AlreadyOpponentFound();\\r\\n        }\\r\\n        if (currentPlayers.length == 0) {\\r\\n            currentPlayers.push(msg.sender);\\r\\n            s_addressInfo[msg.sender] = Player(\\r\\n                s_gameCounter,\\r\\n                msg.sender,\\r\\n                [tokenId1, tokenId2, tokenId3],\\r\\n                0x0000000000000000000000000000000000000000,\\r\\n                PlayerStatus.SEARCHING\\r\\n            );\\r\\n            emit AddedToList(\\r\\n                msg.sender,\\r\\n                [tokenId1, tokenId2, tokenId3],\\r\\n                0x0000000000000000000000000000000000000000,\\r\\n                PlayerStatus.SEARCHING\\r\\n            );\\r\\n            s_gameCounter++;\\r\\n        } else {\\r\\n            address opponent = currentPlayers[0];\\r\\n            if (opponent == msg.sender) {\\r\\n                revert GameCard__PlayerNotAllowed();\\r\\n            }\\r\\n            Player memory opponentStruct = s_addressInfo[opponent];\\r\\n\\r\\n            s_addressInfo[opponent] = Player(\\r\\n                opponentStruct.game,\\r\\n                opponent,\\r\\n                opponentStruct.tokenIdArray,\\r\\n                msg.sender,\\r\\n                PlayerStatus.FOUND\\r\\n            );\\r\\n            s_addressInfo[msg.sender] = Player(\\r\\n                opponentStruct.game,\\r\\n                msg.sender,\\r\\n                [tokenId1, tokenId2, tokenId3],\\r\\n                opponent,\\r\\n                PlayerStatus.FOUND\\r\\n            );\\r\\n            for (uint256 i = 0; i < currentPlayers.length; i++) {\\r\\n                if (currentPlayers[i] == opponent) {\\r\\n                    for (uint256 j = i; j < currentPlayers.length - 1; j++) {\\r\\n                        currentPlayers[j] = currentPlayers[j + 1];\\r\\n                    }\\r\\n                    currentPlayers.pop();\\r\\n                    break;\\r\\n                }\\r\\n            }\\r\\n            emit MatchFound(msg.sender, opponent);\\r\\n            playGame(msg.sender, opponent);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function playGame(\\r\\n        address player1Address,\\r\\n        address player2Address\\r\\n    )\\r\\n        private\\r\\n        checkPlayers(player1Address, player2Address)\\r\\n        returns (uint256 requestId)\\r\\n    {\\r\\n        // Get Player1 Data of TokenId\\r\\n        //We get the tokenUri and the\\r\\n        Player memory player1 = s_addressInfo[player1Address];\\r\\n        Player memory player2 = s_addressInfo[player2Address];\\r\\n\\r\\n        s_addressInfo[player1Address] = Player(\\r\\n            player1.game,\\r\\n            player1Address,\\r\\n            player1.tokenIdArray,\\r\\n            player2Address,\\r\\n            PlayerStatus.PLAYING\\r\\n        );\\r\\n        s_addressInfo[player2Address] = Player(\\r\\n            player1.game,\\r\\n            player2Address,\\r\\n            player2.tokenIdArray,\\r\\n            player1Address,\\r\\n            PlayerStatus.PLAYING\\r\\n        );\\r\\n        requestId = i_vrfCoordinator.requestRandomWords(\\r\\n            i_gasLane,\\r\\n            i_subscriptionId,\\r\\n            REQUEST_CONFIRMATIONS,\\r\\n            i_callbackGasLimit,\\r\\n            NUM_WORDS\\r\\n        );\\r\\n        s_requestIdToPlayers[requestId] = [player1Address, player2Address];\\r\\n        emit MatchBeginsSoon(player1Address, player2Address, requestId);\\r\\n    }\\r\\n\\r\\n    function fulfillRandomWords(\\r\\n        uint256 requestId,\\r\\n        uint256[] memory randomWords\\r\\n    ) internal override {\\r\\n        address[2] memory players = s_requestIdToPlayers[requestId];\\r\\n        Characters.Person[3] memory player1Characters = getCharacter(\\r\\n            players[0]\\r\\n        );\\r\\n        Characters.Person[3] memory player2Characters = getCharacter(\\r\\n            players[1]\\r\\n        );\\r\\n\\r\\n        s_addressInfo[players[0]] = Player(\\r\\n            s_addressInfo[players[0]].game,\\r\\n            players[0],\\r\\n            s_addressInfo[players[0]].tokenIdArray,\\r\\n            players[1],\\r\\n            PlayerStatus.OVER\\r\\n        );\\r\\n        s_addressInfo[players[1]] = Player(\\r\\n            s_addressInfo[players[1]].game,\\r\\n            players[1],\\r\\n            s_addressInfo[players[1]].tokenIdArray,\\r\\n            players[0],\\r\\n            PlayerStatus.OVER\\r\\n        );\\r\\n        // Round 1\\r\\n        uint256 removedIndex = randomWords[0] % 3;\\r\\n\\r\\n        uint256 player1Points = 0;\\r\\n        uint256 player2Points = 0;\\r\\n        player1Points = 0;\\r\\n        player2Points = 0;\\r\\n        if (\\r\\n            player1Characters[removedIndex].attack >\\r\\n            player2Characters[removedIndex].attack\\r\\n        ) {\\r\\n            player1Points++;\\r\\n        } else if (\\r\\n            player1Characters[removedIndex].attack <\\r\\n            player2Characters[removedIndex].attack\\r\\n        ) {\\r\\n            player2Points++;\\r\\n        } else {\\r\\n            player1Points++;\\r\\n            player2Points++;\\r\\n        }\\r\\n        uint256 game = s_addressInfo[s_requestIdToPlayers[requestId][0]].game;\\r\\n        // Remove character from the array\\r\\n        Characters.Person[2] memory player1Characters2;\\r\\n        Characters.Person[2] memory player2Characters2;\\r\\n        for (uint256 i = 0; i < 3; i++) {\\r\\n            if (i == removedIndex) {\\r\\n                continue;\\r\\n            } else if (i < removedIndex) {\\r\\n                player1Characters2[i] = player1Characters[i];\\r\\n                player2Characters2[i] = player2Characters[i];\\r\\n            } else {\\r\\n                player1Characters2[i - 1] = player1Characters[i];\\r\\n                player2Characters2[i - 1] = player2Characters[i];\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (\\r\\n            player1Characters2[randomWords[1] % 2].defence >\\r\\n            player2Characters2[randomWords[1] % 2].defence\\r\\n        ) {\\r\\n            player1Points++;\\r\\n        } else if (\\r\\n            player1Characters2[randomWords[1] % 2].defence <\\r\\n            player2Characters2[randomWords[1] % 2].defence\\r\\n        ) {\\r\\n            player2Points++;\\r\\n        } else {\\r\\n            player1Points++;\\r\\n            player2Points++;\\r\\n        }\\r\\n\\r\\n        // Remove character from the array\\r\\n        Characters.Person[1] memory player1Characters1;\\r\\n        Characters.Person[1] memory player2Characters1;\\r\\n        for (uint256 i = 0; i < 2; i++) {\\r\\n            if (i == randomWords[1] % 2) {\\r\\n                continue;\\r\\n            } else if (i < randomWords[1] % 2) {\\r\\n                player1Characters1[i] = player1Characters2[i];\\r\\n                player2Characters1[i] = player2Characters2[i];\\r\\n            } else {\\r\\n                player1Characters1[i - 1] = player1Characters2[i];\\r\\n                player2Characters1[i - 1] = player2Characters2[i];\\r\\n            }\\r\\n        }\\r\\n        // Because of the stack is too deep\\r\\n        address player1Address = players[0];\\r\\n        address player2Address = players[1];\\r\\n\\r\\n        // Round 3\\r\\n        if (player1Characters1[0].tactics > player2Characters1[0].tactics) {\\r\\n            player1Points++;\\r\\n        } else if (\\r\\n            player1Characters1[0].tactics < player2Characters1[0].tactics\\r\\n        ) {\\r\\n            player2Points++;\\r\\n        } else {\\r\\n            player1Points++;\\r\\n            player2Points++;\\r\\n        }\\r\\n\\r\\n        (address winner, address loser, bool draw) = getResult(\\r\\n            player1Address,\\r\\n            player1Points,\\r\\n            player2Address,\\r\\n            player2Points,\\r\\n            game\\r\\n        );\\r\\n\\r\\n        emit Match(winner, loser, draw);\\r\\n    }\\r\\n\\r\\n    function getResult(\\r\\n        address player1,\\r\\n        uint256 player1Points,\\r\\n        address player2,\\r\\n        uint256 player2Points,\\r\\n        uint256 game\\r\\n    ) private returns (address, address, bool) {\\r\\n        if (player1Points > player2Points) {\\r\\n            finshedGames[game] = Game(player1, player2, false);\\r\\n            return (player1, player2, false);\\r\\n        } else if (player2Points > player1Points) {\\r\\n            finshedGames[game] = Game(player2, player1, false);\\r\\n            return (player2, player1, false);\\r\\n        } else {\\r\\n            finshedGames[game] = Game(player1, player2, true);\\r\\n            return (\\r\\n                0x0000000000000000000000000000000000000000,\\r\\n                0x0000000000000000000000000000000000000000,\\r\\n                true\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getCharacter(\\r\\n        address player\\r\\n    ) private returns (Characters.Person[3] memory) {\\r\\n        uint256[3] memory player1TokenArray = s_addressInfo[player]\\r\\n            .tokenIdArray;\\r\\n        (\\r\\n            ,\\r\\n            string memory player1tokenId1Uri,\\r\\n            ,\\r\\n            uint256 player1tokenId1BoxType\\r\\n        ) = i_contractNftBox.mappingNfts(player1TokenArray[0]);\\r\\n        (\\r\\n            ,\\r\\n            string memory player1tokenId2Uri,\\r\\n            ,\\r\\n            uint256 player1tokenId2BoxType\\r\\n        ) = i_contractNftBox.mappingNfts(player1TokenArray[1]);\\r\\n        (\\r\\n            ,\\r\\n            string memory player1tokenId3Uri,\\r\\n            ,\\r\\n            uint256 player1tokenId3BoxType\\r\\n        ) = i_contractNftBox.mappingNfts(player1TokenArray[2]);\\r\\n\\r\\n        Characters.Person memory character1 = getData(\\r\\n            player1tokenId1BoxType,\\r\\n            player1tokenId1Uri\\r\\n        );\\r\\n        Characters.Person memory character2 = getData(\\r\\n            player1tokenId2BoxType,\\r\\n            player1tokenId2Uri\\r\\n        );\\r\\n        Characters.Person memory character3 = getData(\\r\\n            player1tokenId3BoxType,\\r\\n            player1tokenId3Uri\\r\\n        );\\r\\n        Characters.Person[3] memory array = [\\r\\n            character1,\\r\\n            character2,\\r\\n            character3\\r\\n        ];\\r\\n        return array;\\r\\n    }\\r\\n\\r\\n    function getData(\\r\\n        uint256 boxType,\\r\\n        string memory tokenUri\\r\\n    ) private returns (Characters.Person memory) {\\r\\n        if (boxType == 0) {\\r\\n            for (\\r\\n                uint256 i = 0;\\r\\n                i < i_contractCharacter.normalPersonsLength();\\r\\n                i++\\r\\n            ) {\\r\\n                (string memory tokenUriLoop, , , ) = i_contractCharacter\\r\\n                    .normalPersons(i);\\r\\n                if (\\r\\n                    keccak256(abi.encodePacked(tokenUriLoop)) ==\\r\\n                    keccak256(abi.encodePacked(tokenUri))\\r\\n                ) {\\r\\n                    (\\r\\n                        string memory tokenUri,\\r\\n                        uint256 strength,\\r\\n                        uint256 dexterity,\\r\\n                        uint256 intellect\\r\\n                    ) = i_contractCharacter.normalPersons(i);\\r\\n\\r\\n                    Characters.Person memory character = Characters.Person({\\r\\n                        tokenUri: tokenUri,\\r\\n                        attack: strength,\\r\\n                        defence: dexterity,\\r\\n                        tactics: intellect\\r\\n                    });\\r\\n                    return character;\\r\\n                }\\r\\n            }\\r\\n        } else if (boxType == 1) {\\r\\n            for (\\r\\n                uint256 i = 0;\\r\\n                i < i_contractCharacter.rarePersonsLength();\\r\\n                i++\\r\\n            ) {\\r\\n                (string memory tokenUriLoop, , , ) = i_contractCharacter\\r\\n                    .rarePersons(i);\\r\\n                if (\\r\\n                    keccak256(abi.encodePacked(tokenUriLoop)) ==\\r\\n                    keccak256(abi.encodePacked(tokenUri))\\r\\n                ) {\\r\\n                    (\\r\\n                        string memory tokenUri,\\r\\n                        uint256 strength,\\r\\n                        uint256 dexterity,\\r\\n                        uint256 intellect\\r\\n                    ) = i_contractCharacter.rarePersons(i);\\r\\n\\r\\n                    Characters.Person memory character = Characters.Person({\\r\\n                        tokenUri: tokenUri,\\r\\n                        attack: strength,\\r\\n                        defence: dexterity,\\r\\n                        tactics: intellect\\r\\n                    });\\r\\n                    return character;\\r\\n                }\\r\\n            }\\r\\n        } else if (boxType == 2) {\\r\\n            for (\\r\\n                uint256 i = 0;\\r\\n                i < i_contractCharacter.legendaryPersonsLength();\\r\\n                i++\\r\\n            ) {\\r\\n                (string memory tokenUriLoop, , , ) = i_contractCharacter\\r\\n                    .legendaryPersons(i);\\r\\n                if (\\r\\n                    keccak256(abi.encodePacked(tokenUriLoop)) ==\\r\\n                    keccak256(abi.encodePacked(tokenUri))\\r\\n                ) {\\r\\n                    (\\r\\n                        string memory tokenUri,\\r\\n                        uint256 strength,\\r\\n                        uint256 dexterity,\\r\\n                        uint256 intellect\\r\\n                    ) = i_contractCharacter.legendaryPersons(i);\\r\\n\\r\\n                    Characters.Person memory character = Characters.Person({\\r\\n                        tokenUri: tokenUri,\\r\\n                        attack: strength,\\r\\n                        defence: dexterity,\\r\\n                        tactics: intellect\\r\\n                    });\\r\\n                    return character;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getCurrentPlayers() public view returns (uint256) {\\r\\n        return currentPlayers.length;\\r\\n    }\\r\\n\\r\\n    function getTokenIds(\\r\\n        address user,\\r\\n        uint256 index\\r\\n    ) public view returns (uint256) {\\r\\n        return s_addressInfo[user].tokenIdArray[index];\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x436b1b00cc1c48320da2a5762e92f1a8afd34d9dfadd434e6be23b7fdea8d6bc\",\"license\":\"MIT\"},\"contracts/NftBox.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\\\";\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\nimport \\\"./Characters.sol\\\";\\r\\n\\r\\nerror NftBox__NeedMoreETHSent();\\r\\nerror NftBox__NotOwner();\\r\\nerror NftBox__TokenIdNotExist();\\r\\nerror NftBox__AlreadyOpened();\\r\\nerror NftBox__TransferFailed();\\r\\nerror NftBox__NotNftAddressCalling();\\r\\n\\r\\ncontract NftBox is VRFConsumerBaseV2, ERC721URIStorage, Ownable {\\r\\n    Characters public i_charactersContract;\\r\\n    // Trade Nft Address for the setMapping\\r\\n    address public tradeNftAddress;\\r\\n    //TokenCounter\\r\\n    uint256 private s_tokenCounter;\\r\\n    //3 Types Of Boxes with their TokenUri\\r\\n    string[] private NftBoxesUri;\\r\\n    //Card Uris\\r\\n    //Nft\\r\\n    struct Nft {\\r\\n        uint256 tokenId;\\r\\n        string tokenUri;\\r\\n        bool Boxopened;\\r\\n        uint256 boxType /* 0 -> normal; 1-> rare; 2 -> legendary*/;\\r\\n    }\\r\\n\\r\\n    //Price Boxes\\r\\n    uint256 public constant PRICE_NORMAL_BOX_USD = 10;\\r\\n    uint256 public constant PRICE_RARE_BOX_USD = 50;\\r\\n    uint256 public constant PRICE_LEGENDARY_BOX_USD = 100;\\r\\n    // Random Request for the NFt Card\\r\\n    VRFCoordinatorV2Interface private immutable i_vrfCoordinator;\\r\\n    uint64 private immutable i_subscriptionId;\\r\\n    bytes32 private immutable i_gasLane;\\r\\n    uint32 private immutable i_callbackGasLimit;\\r\\n    uint16 private constant REQUEST_CONFIRMATIONS = 3;\\r\\n    uint32 private constant NUM_WORDS = 1;\\r\\n    //Price Feed\\r\\n    AggregatorV3Interface private immutable i_priceFeed;\\r\\n    //mappings\\r\\n    mapping(uint256 => Nft) public mappingNfts;\\r\\n    mapping(uint256 => uint256) public mappingRequestToToken;\\r\\n\\r\\n    //Events\\r\\n    event NormalBoxMinted(\\r\\n        address owner,\\r\\n        uint256 tokenId,\\r\\n        string tokenUri,\\r\\n        uint256 price\\r\\n    );\\r\\n    event RareBoxMinted(\\r\\n        address owner,\\r\\n        uint256 tokenId,\\r\\n        string tokenUri,\\r\\n        uint256 price\\r\\n    );\\r\\n    event LegendaryBoxMinted(\\r\\n        address owner,\\r\\n        uint256 tokenId,\\r\\n        string tokenUri,\\r\\n        uint256 price\\r\\n    );\\r\\n    event OpenBoxRandomRequested(uint256 requestId, address sender);\\r\\n    event BoxOpened(address owner, uint256 tokenId, string tokenUri);\\r\\n    //modifiers\\r\\n    modifier isOwner(uint256 tokenId, address spender) {\\r\\n        address owner = ownerOf(tokenId);\\r\\n        if (spender != owner) {\\r\\n            revert NftBox__NotOwner();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n    modifier tokenIdExists(address owner, uint256 tokenId) {\\r\\n        bool success = _exists(tokenId);\\r\\n        if (!success) {\\r\\n            revert NftBox__TokenIdNotExist();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    constructor(\\r\\n        address vrfCoordinatorV2,\\r\\n        uint64 subscriptionId,\\r\\n        bytes32 gasLane,\\r\\n        uint32 callbackGasLimit,\\r\\n        string[3] memory boxesUri,\\r\\n        address priceFeedAddress,\\r\\n        address charactersAddress\\r\\n    )\\r\\n        ERC721(\\\"CardBoxes\\\", \\\"CABO\\\")\\r\\n        VRFConsumerBaseV2(vrfCoordinatorV2)\\r\\n        Ownable()\\r\\n    {\\r\\n        i_vrfCoordinator = VRFCoordinatorV2Interface(vrfCoordinatorV2);\\r\\n        i_subscriptionId = subscriptionId;\\r\\n        i_gasLane = gasLane;\\r\\n        i_callbackGasLimit = callbackGasLimit;\\r\\n        NftBoxesUri = boxesUri;\\r\\n        i_priceFeed = AggregatorV3Interface(priceFeedAddress);\\r\\n        s_tokenCounter = 0;\\r\\n        i_charactersContract = Characters(charactersAddress);\\r\\n    }\\r\\n\\r\\n    function buyNormalBox() public payable {\\r\\n        uint256 usdPriceInEth = priceFeedUsdToEth(PRICE_NORMAL_BOX_USD);\\r\\n        if (msg.value < usdPriceInEth) {\\r\\n            revert NftBox__NeedMoreETHSent();\\r\\n        }\\r\\n        uint256 newTokenId = s_tokenCounter; // we save the tokenCounter in a variable before updating it\\r\\n        s_tokenCounter = s_tokenCounter + 1;\\r\\n        _safeMint(msg.sender, newTokenId);\\r\\n        string memory tokenURI = NftBoxesUri[0];\\r\\n        _setTokenURI(newTokenId, tokenURI);\\r\\n        mappingNfts[newTokenId] = Nft(newTokenId, tokenURI, false, 0);\\r\\n\\r\\n        emit NormalBoxMinted(\\r\\n            msg.sender /* Owner*/,\\r\\n            newTokenId,\\r\\n            tokenURI,\\r\\n            usdPriceInEth\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function buyRareBox() public payable {\\r\\n        uint256 usdPriceInEth = priceFeedUsdToEth(PRICE_RARE_BOX_USD);\\r\\n        if (msg.value < usdPriceInEth) {\\r\\n            revert NftBox__NeedMoreETHSent();\\r\\n        }\\r\\n        uint256 newTokenId = s_tokenCounter; // we save the tokenCounter in a variable before updating it\\r\\n        s_tokenCounter = s_tokenCounter + 1;\\r\\n        _safeMint(msg.sender, newTokenId);\\r\\n        string memory tokenURI = NftBoxesUri[1];\\r\\n        _setTokenURI(newTokenId, tokenURI);\\r\\n        mappingNfts[newTokenId] = Nft(newTokenId, tokenURI, false, 1);\\r\\n        emit RareBoxMinted(\\r\\n            msg.sender /* Owner*/,\\r\\n            newTokenId,\\r\\n            tokenURI,\\r\\n            usdPriceInEth\\r\\n        );\\r\\n        /*  setTokenId(msg.sender, newTokenId); */\\r\\n    }\\r\\n\\r\\n    function buyLegendaryBox() public payable {\\r\\n        uint256 usdPriceInEth = priceFeedUsdToEth(PRICE_LEGENDARY_BOX_USD);\\r\\n        if (msg.value < usdPriceInEth) {\\r\\n            revert NftBox__NeedMoreETHSent();\\r\\n        }\\r\\n        uint256 newTokenId = s_tokenCounter; // we save the tokenCounter in a variable before updating it\\r\\n        s_tokenCounter = s_tokenCounter + 1;\\r\\n        _safeMint(msg.sender, newTokenId);\\r\\n        string memory tokenURI = NftBoxesUri[2];\\r\\n        _setTokenURI(newTokenId, tokenURI);\\r\\n        mappingNfts[newTokenId] = Nft(newTokenId, tokenURI, false, 2);\\r\\n        emit LegendaryBoxMinted(\\r\\n            msg.sender,\\r\\n            newTokenId,\\r\\n            tokenURI,\\r\\n            usdPriceInEth\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function openBox(\\r\\n        uint256 tokenId\\r\\n    )\\r\\n        public\\r\\n        tokenIdExists(msg.sender, tokenId)\\r\\n        isOwner(tokenId, msg.sender)\\r\\n        returns (uint256 requestId)\\r\\n    {\\r\\n        Nft memory nft = mappingNfts[tokenId];\\r\\n        if (nft.Boxopened) {\\r\\n            revert NftBox__AlreadyOpened();\\r\\n        }\\r\\n        requestId = i_vrfCoordinator.requestRandomWords(\\r\\n            i_gasLane,\\r\\n            i_subscriptionId,\\r\\n            REQUEST_CONFIRMATIONS,\\r\\n            i_callbackGasLimit,\\r\\n            NUM_WORDS\\r\\n        );\\r\\n        mappingRequestToToken[requestId] = tokenId;\\r\\n        emit OpenBoxRandomRequested(requestId, msg.sender);\\r\\n    }\\r\\n\\r\\n    function fulfillRandomWords(\\r\\n        uint256 requestId,\\r\\n        uint256[] memory randomWords\\r\\n    ) internal override {\\r\\n        uint256 tokenId = mappingRequestToToken[requestId];\\r\\n        Nft memory nft = mappingNfts[tokenId];\\r\\n        if (nft.Boxopened) {\\r\\n            revert NftBox__AlreadyOpened();\\r\\n        }\\r\\n        string memory newUri;\\r\\n        if (nft.boxType == 0) {\\r\\n            uint256 randomIndex = randomWords[0] %\\r\\n                i_charactersContract.normalPersonsLength();\\r\\n            (string memory uri, , , ) = i_charactersContract.normalPersons(\\r\\n                randomIndex\\r\\n            );\\r\\n            newUri = uri;\\r\\n        } else if (nft.boxType == 1) {\\r\\n            uint256 randomIndex = randomWords[0] %\\r\\n                i_charactersContract.rarePersonsLength();\\r\\n            (string memory uri, , , ) = i_charactersContract.rarePersons(\\r\\n                randomIndex\\r\\n            );\\r\\n            newUri = uri;\\r\\n        } else if (nft.boxType == 2) {\\r\\n            uint256 randomIndex = randomWords[0] %\\r\\n                i_charactersContract.legendaryPersonsLength();\\r\\n            (string memory uri, , , ) = i_charactersContract.legendaryPersons(\\r\\n                randomIndex\\r\\n            );\\r\\n            newUri = uri;\\r\\n        } else {\\r\\n            revert NftBox__AlreadyOpened();\\r\\n        }\\r\\n        mappingNfts[tokenId] = Nft(tokenId, newUri, true, nft.boxType);\\r\\n        _setTokenURI(tokenId, newUri);\\r\\n        emit BoxOpened(msg.sender, tokenId, newUri);\\r\\n    }\\r\\n\\r\\n    function withdraw() public onlyOwner {\\r\\n        uint256 amount = address(this).balance;\\r\\n        (bool success, ) = payable(msg.sender).call{value: amount}(\\\"\\\");\\r\\n        if (!success) {\\r\\n            revert NftBox__TransferFailed();\\r\\n        }\\r\\n    }\\r\\n\\r\\n    //\\r\\n    function getTokenIds(address owner) public view returns (uint256[] memory) {\\r\\n        uint256[] memory tokenArray = new uint256[](s_tokenCounter);\\r\\n        uint256 count = 0;\\r\\n        for (uint256 i = 0; i < s_tokenCounter; i++) {\\r\\n            address spender = ownerOf(i);\\r\\n            if (spender == owner) {\\r\\n                tokenArray[count] = i;\\r\\n                count++;\\r\\n            }\\r\\n        }\\r\\n        // resize the array to remove any unused elements\\r\\n        uint256[] memory result = new uint256[](count);\\r\\n        for (uint256 i = 0; i < count; i++) {\\r\\n            result[i] = tokenArray[i];\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    function getNormalCard(uint256 index) public view returns (string memory) {\\r\\n        (string memory uri, , , ) = i_charactersContract.normalPersons(index);\\r\\n        return uri;\\r\\n    }\\r\\n\\r\\n    function getRareCard(uint256 index) public view returns (string memory) {\\r\\n        (string memory uri, , , ) = i_charactersContract.rarePersons(index);\\r\\n        return uri;\\r\\n    }\\r\\n\\r\\n    function getLegendaryCard(\\r\\n        uint256 index\\r\\n    ) public view returns (string memory) {\\r\\n        (string memory uri, , , ) = i_charactersContract.legendaryPersons(\\r\\n            index\\r\\n        );\\r\\n        return uri;\\r\\n    }\\r\\n\\r\\n    function getNormalCardUrisLength() public view returns (uint256) {\\r\\n        return i_charactersContract.normalPersonsLength();\\r\\n    }\\r\\n\\r\\n    function getRareCardUrisLength() public view returns (uint256) {\\r\\n        return i_charactersContract.rarePersonsLength();\\r\\n    }\\r\\n\\r\\n    function getLegendaryCardUrisLength() public view returns (uint256) {\\r\\n        return i_charactersContract.legendaryPersonsLength();\\r\\n    }\\r\\n\\r\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\r\\n        return i_priceFeed;\\r\\n    }\\r\\n\\r\\n    function getTokenCounter() public view returns (uint256) {\\r\\n        return s_tokenCounter;\\r\\n    }\\r\\n\\r\\n    function getNft(uint256 tokenId) public view returns (Nft memory) {\\r\\n        return mappingNfts[tokenId];\\r\\n    }\\r\\n\\r\\n    function getNftBoxesUri(uint256 index) public view returns (string memory) {\\r\\n        return NftBoxesUri[index];\\r\\n    }\\r\\n\\r\\n    function priceFeedUsdToEth(uint256 usd) public view returns (uint256) {\\r\\n        (, int256 Price, , , ) = i_priceFeed.latestRoundData();\\r\\n        uint256 price = (usd * 1e36) / (uint256(Price) * 1e10);\\r\\n        return uint256(price);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xe3e4a2b0cb520dde73440106a2823b69614af0326cd422d1146fbdd5dba2bf27\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":3242,"contract":"contracts/GameCard.sol:GameCard","label":"s_addressInfo","offset":0,"slot":"0","type":"t_mapping(t_address,t_struct(Player)3180_storage)"},{"astId":3248,"contract":"contracts/GameCard.sol:GameCard","label":"s_requestIdToPlayers","offset":0,"slot":"1","type":"t_mapping(t_uint256,t_array(t_address)2_storage)"},{"astId":3251,"contract":"contracts/GameCard.sol:GameCard","label":"currentPlayers","offset":0,"slot":"2","type":"t_array(t_address)dyn_storage"},{"astId":3254,"contract":"contracts/GameCard.sol:GameCard","label":"i_contractNftBox","offset":0,"slot":"3","type":"t_contract(NftBox)5533"},{"astId":3261,"contract":"contracts/GameCard.sol:GameCard","label":"i_contractCharacter","offset":0,"slot":"4","type":"t_contract(Characters)3143"},{"astId":3263,"contract":"contracts/GameCard.sol:GameCard","label":"s_gameCounter","offset":0,"slot":"5","type":"t_uint256"},{"astId":3268,"contract":"contracts/GameCard.sol:GameCard","label":"finshedGames","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_struct(Game)3187_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)2_storage":{"base":"t_address","encoding":"inplace","label":"address[2]","numberOfBytes":"64"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_array(t_uint256)3_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[3]","numberOfBytes":"96"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(Characters)3143":{"encoding":"inplace","label":"contract Characters","numberOfBytes":"20"},"t_contract(NftBox)5533":{"encoding":"inplace","label":"contract NftBox","numberOfBytes":"20"},"t_enum(PlayerStatus)3166":{"encoding":"inplace","label":"enum GameCard.PlayerStatus","numberOfBytes":"1"},"t_mapping(t_address,t_struct(Player)3180_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct GameCard.Player)","numberOfBytes":"32","value":"t_struct(Player)3180_storage"},"t_mapping(t_uint256,t_array(t_address)2_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address[2])","numberOfBytes":"32","value":"t_array(t_address)2_storage"},"t_mapping(t_uint256,t_struct(Game)3187_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct GameCard.Game)","numberOfBytes":"32","value":"t_struct(Game)3187_storage"},"t_struct(Game)3187_storage":{"encoding":"inplace","label":"struct GameCard.Game","members":[{"astId":3182,"contract":"contracts/GameCard.sol:GameCard","label":"winner","offset":0,"slot":"0","type":"t_address"},{"astId":3184,"contract":"contracts/GameCard.sol:GameCard","label":"loser","offset":0,"slot":"1","type":"t_address"},{"astId":3186,"contract":"contracts/GameCard.sol:GameCard","label":"draw","offset":20,"slot":"1","type":"t_bool"}],"numberOfBytes":"64"},"t_struct(Player)3180_storage":{"encoding":"inplace","label":"struct GameCard.Player","members":[{"astId":3168,"contract":"contracts/GameCard.sol:GameCard","label":"game","offset":0,"slot":"0","type":"t_uint256"},{"astId":3170,"contract":"contracts/GameCard.sol:GameCard","label":"player","offset":0,"slot":"1","type":"t_address"},{"astId":3174,"contract":"contracts/GameCard.sol:GameCard","label":"tokenIdArray","offset":0,"slot":"2","type":"t_array(t_uint256)3_storage"},{"astId":3176,"contract":"contracts/GameCard.sol:GameCard","label":"opponent","offset":0,"slot":"5","type":"t_address"},{"astId":3179,"contract":"contracts/GameCard.sol:GameCard","label":"status","offset":20,"slot":"5","type":"t_enum(PlayerStatus)3166"}],"numberOfBytes":"192"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/NftBox.sol":{"NftBox":{"abi":[{"inputs":[{"internalType":"address","name":"vrfCoordinatorV2","type":"address"},{"internalType":"uint64","name":"subscriptionId","type":"uint64"},{"internalType":"bytes32","name":"gasLane","type":"bytes32"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"string[3]","name":"boxesUri","type":"string[3]"},{"internalType":"address","name":"priceFeedAddress","type":"address"},{"internalType":"address","name":"charactersAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"NftBox__AlreadyOpened","type":"error"},{"inputs":[],"name":"NftBox__NeedMoreETHSent","type":"error"},{"inputs":[],"name":"NftBox__NotOwner","type":"error"},{"inputs":[],"name":"NftBox__TokenIdNotExist","type":"error"},{"inputs":[],"name":"NftBox__TransferFailed","type":"error"},{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"string","name":"tokenUri","type":"string"}],"name":"BoxOpened","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"string","name":"tokenUri","type":"string"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"}],"name":"LegendaryBoxMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"string","name":"tokenUri","type":"string"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"}],"name":"NormalBoxMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"requestId","type":"uint256"},{"indexed":false,"internalType":"address","name":"sender","type":"address"}],"name":"OpenBoxRandomRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"string","name":"tokenUri","type":"string"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"}],"name":"RareBoxMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"PRICE_LEGENDARY_BOX_USD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PRICE_NORMAL_BOX_USD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PRICE_RARE_BOX_USD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"buyLegendaryBox","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"buyNormalBox","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"buyRareBox","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getLegendaryCard","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLegendaryCardUrisLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getNft","outputs":[{"components":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"tokenUri","type":"string"},{"internalType":"bool","name":"Boxopened","type":"bool"},{"internalType":"uint256","name":"boxType","type":"uint256"}],"internalType":"struct NftBox.Nft","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getNftBoxesUri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getNormalCard","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getNormalCardUrisLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPriceFeed","outputs":[{"internalType":"contract AggregatorV3Interface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRareCard","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRareCardUrisLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTokenCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"getTokenIds","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"i_charactersContract","outputs":[{"internalType":"contract Characters","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"mappingNfts","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"tokenUri","type":"string"},{"internalType":"bool","name":"Boxopened","type":"bool"},{"internalType":"uint256","name":"boxType","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"mappingRequestToToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"openBox","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"usd","type":"uint256"}],"name":"priceFeedUsdToEth","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tradeNftAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"owner()":{"details":"Returns the address of the current owner."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_21":{"entryPoint":null,"id":21,"parameterSlots":1,"returnSlots":0},"@_223":{"entryPoint":null,"id":223,"parameterSlots":0,"returnSlots":0},"@_375":{"entryPoint":null,"id":375,"parameterSlots":2,"returnSlots":0},"@_4860":{"entryPoint":null,"id":4860,"parameterSlots":7,"returnSlots":0},"@_msgSender_1867":{"entryPoint":585,"id":1867,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_311":{"entryPoint":593,"id":311,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory":{"entryPoint":1180,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":1327,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":1402,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory":{"entryPoint":1425,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":1473,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":1496,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32_fromMemory":{"entryPoint":1547,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint64_fromMemory":{"entryPoint":1570,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint64t_bytes32t_uint32t_array$_t_string_memory_ptr_$3_memory_ptrt_addresst_address_fromMemory":{"entryPoint":1593,"id":null,"parameterSlots":2,"returnSlots":7},"allocate_memory":{"entryPoint":1803,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":1834,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_string_memory_ptr_$3_memory_ptr":{"entryPoint":1844,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":1885,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address":{"entryPoint":1939,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":1959,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1969,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":2001,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":2017,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":2037,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":2091,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":2145,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x22":{"entryPoint":2199,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2246,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":2293,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":2298,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":2303,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":2308,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2313,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2318,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":2335,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":2361,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":2387,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint64":{"entryPoint":2413,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8089:18","statements":[{"body":{"nodeType":"YulBlock","src":"145:784:18","statements":[{"nodeType":"YulAssignment","src":"155:98:18","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"245:6:18"}],"functionName":{"name":"array_allocation_size_t_array$_t_string_memory_ptr_$3_memory_ptr","nodeType":"YulIdentifier","src":"180:64:18"},"nodeType":"YulFunctionCall","src":"180:72:18"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"164:15:18"},"nodeType":"YulFunctionCall","src":"164:89:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"155:5:18"}]},{"nodeType":"YulVariableDeclaration","src":"262:16:18","value":{"name":"array","nodeType":"YulIdentifier","src":"273:5:18"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"266:3:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"288:17:18","value":{"name":"offset","nodeType":"YulIdentifier","src":"299:6:18"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"292:3:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"354:103:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"368:77:18"},"nodeType":"YulFunctionCall","src":"368:79:18"},"nodeType":"YulExpressionStatement","src":"368:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"324:3:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"333:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"341:4:18","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"329:3:18"},"nodeType":"YulFunctionCall","src":"329:17:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"320:3:18"},"nodeType":"YulFunctionCall","src":"320:27:18"},{"name":"end","nodeType":"YulIdentifier","src":"349:3:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"317:2:18"},"nodeType":"YulFunctionCall","src":"317:36:18"},"nodeType":"YulIf","src":"314:143:18"},{"body":{"nodeType":"YulBlock","src":"526:397:18","statements":[{"nodeType":"YulVariableDeclaration","src":"541:29:18","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"566:3:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"560:5:18"},"nodeType":"YulFunctionCall","src":"560:10:18"},"variables":[{"name":"innerOffset","nodeType":"YulTypedName","src":"545:11:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"622:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"624:77:18"},"nodeType":"YulFunctionCall","src":"624:79:18"},"nodeType":"YulExpressionStatement","src":"624:79:18"}]},"condition":{"arguments":[{"name":"innerOffset","nodeType":"YulIdentifier","src":"589:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"602:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"586:2:18"},"nodeType":"YulFunctionCall","src":"586:35:18"},"nodeType":"YulIf","src":"583:122:18"},{"nodeType":"YulVariableDeclaration","src":"718:42:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"740:6:18"},{"name":"innerOffset","nodeType":"YulIdentifier","src":"748:11:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"736:3:18"},"nodeType":"YulFunctionCall","src":"736:24:18"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"722:10:18","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"781:3:18"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"828:10:18"},{"name":"end","nodeType":"YulIdentifier","src":"840:3:18"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"786:41:18"},"nodeType":"YulFunctionCall","src":"786:58:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"774:6:18"},"nodeType":"YulFunctionCall","src":"774:71:18"},"nodeType":"YulExpressionStatement","src":"774:71:18"},{"nodeType":"YulAssignment","src":"858:21:18","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"869:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"874:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"865:3:18"},"nodeType":"YulFunctionCall","src":"865:14:18"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"858:3:18"}]},{"nodeType":"YulAssignment","src":"892:21:18","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"903:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"908:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"899:3:18"},"nodeType":"YulFunctionCall","src":"899:14:18"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"892:3:18"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"488:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"491:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"485:2:18"},"nodeType":"YulFunctionCall","src":"485:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"499:18:18","statements":[{"nodeType":"YulAssignment","src":"501:14:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"510:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"513:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"506:3:18"},"nodeType":"YulFunctionCall","src":"506:9:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"501:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"470:14:18","statements":[{"nodeType":"YulVariableDeclaration","src":"472:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"481:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"476:1:18","type":""}]}]},"src":"466:457:18"}]},"name":"abi_decode_available_length_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"115:6:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"123:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"131:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"139:5:18","type":""}],"src":"24:905:18"},{"body":{"nodeType":"YulBlock","src":"1030:326:18","statements":[{"nodeType":"YulAssignment","src":"1040:75:18","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1107:6:18"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1065:41:18"},"nodeType":"YulFunctionCall","src":"1065:49:18"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1049:15:18"},"nodeType":"YulFunctionCall","src":"1049:66:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1040:5:18"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1131:5:18"},{"name":"length","nodeType":"YulIdentifier","src":"1138:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1124:6:18"},"nodeType":"YulFunctionCall","src":"1124:21:18"},"nodeType":"YulExpressionStatement","src":"1124:21:18"},{"nodeType":"YulVariableDeclaration","src":"1154:27:18","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1169:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"1176:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1165:3:18"},"nodeType":"YulFunctionCall","src":"1165:16:18"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"1158:3:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"1219:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"1221:77:18"},"nodeType":"YulFunctionCall","src":"1221:79:18"},"nodeType":"YulExpressionStatement","src":"1221:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1200:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"1205:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1196:3:18"},"nodeType":"YulFunctionCall","src":"1196:16:18"},{"name":"end","nodeType":"YulIdentifier","src":"1214:3:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1193:2:18"},"nodeType":"YulFunctionCall","src":"1193:25:18"},"nodeType":"YulIf","src":"1190:112:18"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1333:3:18"},{"name":"dst","nodeType":"YulIdentifier","src":"1338:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"1343:6:18"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"1311:21:18"},"nodeType":"YulFunctionCall","src":"1311:39:18"},"nodeType":"YulExpressionStatement","src":"1311:39:18"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1003:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"1008:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"1016:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1024:5:18","type":""}],"src":"935:421:18"},{"body":{"nodeType":"YulBlock","src":"1425:80:18","statements":[{"nodeType":"YulAssignment","src":"1435:22:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1450:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1444:5:18"},"nodeType":"YulFunctionCall","src":"1444:13:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1435:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1493:5:18"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1466:26:18"},"nodeType":"YulFunctionCall","src":"1466:33:18"},"nodeType":"YulExpressionStatement","src":"1466:33:18"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1403:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"1411:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1419:5:18","type":""}],"src":"1362:143:18"},{"body":{"nodeType":"YulBlock","src":"1624:285:18","statements":[{"body":{"nodeType":"YulBlock","src":"1673:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"1675:77:18"},"nodeType":"YulFunctionCall","src":"1675:79:18"},"nodeType":"YulExpressionStatement","src":"1675:79:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1652:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"1660:4:18","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1648:3:18"},"nodeType":"YulFunctionCall","src":"1648:17:18"},{"name":"end","nodeType":"YulIdentifier","src":"1667:3:18"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1644:3:18"},"nodeType":"YulFunctionCall","src":"1644:27:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1637:6:18"},"nodeType":"YulFunctionCall","src":"1637:35:18"},"nodeType":"YulIf","src":"1634:122:18"},{"nodeType":"YulVariableDeclaration","src":"1765:18:18","value":{"kind":"number","nodeType":"YulLiteral","src":"1779:4:18","type":"","value":"0x03"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1769:6:18","type":""}]},{"nodeType":"YulAssignment","src":"1792:111:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1883:6:18"},{"name":"length","nodeType":"YulIdentifier","src":"1891:6:18"},{"name":"end","nodeType":"YulIdentifier","src":"1899:3:18"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"1801:81:18"},"nodeType":"YulFunctionCall","src":"1801:102:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1792:5:18"}]}]},"name":"abi_decode_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1602:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"1610:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1618:5:18","type":""}],"src":"1528:381:18"},{"body":{"nodeType":"YulBlock","src":"1978:80:18","statements":[{"nodeType":"YulAssignment","src":"1988:22:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2003:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1997:5:18"},"nodeType":"YulFunctionCall","src":"1997:13:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1988:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2046:5:18"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"2019:26:18"},"nodeType":"YulFunctionCall","src":"2019:33:18"},"nodeType":"YulExpressionStatement","src":"2019:33:18"}]},"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1956:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"1964:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1972:5:18","type":""}],"src":"1915:143:18"},{"body":{"nodeType":"YulBlock","src":"2151:282:18","statements":[{"body":{"nodeType":"YulBlock","src":"2200:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2202:77:18"},"nodeType":"YulFunctionCall","src":"2202:79:18"},"nodeType":"YulExpressionStatement","src":"2202:79:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2179:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"2187:4:18","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2175:3:18"},"nodeType":"YulFunctionCall","src":"2175:17:18"},{"name":"end","nodeType":"YulIdentifier","src":"2194:3:18"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2171:3:18"},"nodeType":"YulFunctionCall","src":"2171:27:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2164:6:18"},"nodeType":"YulFunctionCall","src":"2164:35:18"},"nodeType":"YulIf","src":"2161:122:18"},{"nodeType":"YulVariableDeclaration","src":"2292:27:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2312:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2306:5:18"},"nodeType":"YulFunctionCall","src":"2306:13:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2296:6:18","type":""}]},{"nodeType":"YulAssignment","src":"2328:99:18","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2400:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"2408:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2396:3:18"},"nodeType":"YulFunctionCall","src":"2396:17:18"},{"name":"length","nodeType":"YulIdentifier","src":"2415:6:18"},{"name":"end","nodeType":"YulIdentifier","src":"2423:3:18"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2337:58:18"},"nodeType":"YulFunctionCall","src":"2337:90:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2328:5:18"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2129:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"2137:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2145:5:18","type":""}],"src":"2078:355:18"},{"body":{"nodeType":"YulBlock","src":"2501:79:18","statements":[{"nodeType":"YulAssignment","src":"2511:22:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2526:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2520:5:18"},"nodeType":"YulFunctionCall","src":"2520:13:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2511:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2568:5:18"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"2542:25:18"},"nodeType":"YulFunctionCall","src":"2542:32:18"},"nodeType":"YulExpressionStatement","src":"2542:32:18"}]},"name":"abi_decode_t_uint32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2479:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"2487:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2495:5:18","type":""}],"src":"2439:141:18"},{"body":{"nodeType":"YulBlock","src":"2648:79:18","statements":[{"nodeType":"YulAssignment","src":"2658:22:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2673:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2667:5:18"},"nodeType":"YulFunctionCall","src":"2667:13:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2658:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2715:5:18"}],"functionName":{"name":"validator_revert_t_uint64","nodeType":"YulIdentifier","src":"2689:25:18"},"nodeType":"YulFunctionCall","src":"2689:32:18"},"nodeType":"YulExpressionStatement","src":"2689:32:18"}]},"name":"abi_decode_t_uint64_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2626:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"2634:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2642:5:18","type":""}],"src":"2586:141:18"},{"body":{"nodeType":"YulBlock","src":"2943:1296:18","statements":[{"body":{"nodeType":"YulBlock","src":"2990:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2992:77:18"},"nodeType":"YulFunctionCall","src":"2992:79:18"},"nodeType":"YulExpressionStatement","src":"2992:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2964:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"2973:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2960:3:18"},"nodeType":"YulFunctionCall","src":"2960:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"2985:3:18","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2956:3:18"},"nodeType":"YulFunctionCall","src":"2956:33:18"},"nodeType":"YulIf","src":"2953:120:18"},{"nodeType":"YulBlock","src":"3083:128:18","statements":[{"nodeType":"YulVariableDeclaration","src":"3098:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"3112:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3102:6:18","type":""}]},{"nodeType":"YulAssignment","src":"3127:74:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3173:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"3184:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3169:3:18"},"nodeType":"YulFunctionCall","src":"3169:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3193:7:18"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"3137:31:18"},"nodeType":"YulFunctionCall","src":"3137:64:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3127:6:18"}]}]},{"nodeType":"YulBlock","src":"3221:128:18","statements":[{"nodeType":"YulVariableDeclaration","src":"3236:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"3250:2:18","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3240:6:18","type":""}]},{"nodeType":"YulAssignment","src":"3266:73:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3311:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"3322:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3307:3:18"},"nodeType":"YulFunctionCall","src":"3307:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3331:7:18"}],"functionName":{"name":"abi_decode_t_uint64_fromMemory","nodeType":"YulIdentifier","src":"3276:30:18"},"nodeType":"YulFunctionCall","src":"3276:63:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3266:6:18"}]}]},{"nodeType":"YulBlock","src":"3359:129:18","statements":[{"nodeType":"YulVariableDeclaration","src":"3374:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"3388:2:18","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3378:6:18","type":""}]},{"nodeType":"YulAssignment","src":"3404:74:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3450:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"3461:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3446:3:18"},"nodeType":"YulFunctionCall","src":"3446:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3470:7:18"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulIdentifier","src":"3414:31:18"},"nodeType":"YulFunctionCall","src":"3414:64:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3404:6:18"}]}]},{"nodeType":"YulBlock","src":"3498:128:18","statements":[{"nodeType":"YulVariableDeclaration","src":"3513:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"3527:2:18","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3517:6:18","type":""}]},{"nodeType":"YulAssignment","src":"3543:73:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3588:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"3599:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3584:3:18"},"nodeType":"YulFunctionCall","src":"3584:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3608:7:18"}],"functionName":{"name":"abi_decode_t_uint32_fromMemory","nodeType":"YulIdentifier","src":"3553:30:18"},"nodeType":"YulFunctionCall","src":"3553:63:18"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3543:6:18"}]}]},{"nodeType":"YulBlock","src":"3636:316:18","statements":[{"nodeType":"YulVariableDeclaration","src":"3651:40:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3675:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3686:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3671:3:18"},"nodeType":"YulFunctionCall","src":"3671:19:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3665:5:18"},"nodeType":"YulFunctionCall","src":"3665:26:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3655:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"3738:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3740:77:18"},"nodeType":"YulFunctionCall","src":"3740:79:18"},"nodeType":"YulExpressionStatement","src":"3740:79:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3710:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"3718:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3707:2:18"},"nodeType":"YulFunctionCall","src":"3707:30:18"},"nodeType":"YulIf","src":"3704:117:18"},{"nodeType":"YulAssignment","src":"3835:107:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3914:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"3925:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3910:3:18"},"nodeType":"YulFunctionCall","src":"3910:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3934:7:18"}],"functionName":{"name":"abi_decode_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3845:64:18"},"nodeType":"YulFunctionCall","src":"3845:97:18"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"3835:6:18"}]}]},{"nodeType":"YulBlock","src":"3962:130:18","statements":[{"nodeType":"YulVariableDeclaration","src":"3977:17:18","value":{"kind":"number","nodeType":"YulLiteral","src":"3991:3:18","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3981:6:18","type":""}]},{"nodeType":"YulAssignment","src":"4008:74:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4054:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"4065:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4050:3:18"},"nodeType":"YulFunctionCall","src":"4050:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4074:7:18"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"4018:31:18"},"nodeType":"YulFunctionCall","src":"4018:64:18"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"4008:6:18"}]}]},{"nodeType":"YulBlock","src":"4102:130:18","statements":[{"nodeType":"YulVariableDeclaration","src":"4117:17:18","value":{"kind":"number","nodeType":"YulLiteral","src":"4131:3:18","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4121:6:18","type":""}]},{"nodeType":"YulAssignment","src":"4148:74:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4194:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"4205:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4190:3:18"},"nodeType":"YulFunctionCall","src":"4190:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4214:7:18"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"4158:31:18"},"nodeType":"YulFunctionCall","src":"4158:64:18"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"4148:6:18"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint64t_bytes32t_uint32t_array$_t_string_memory_ptr_$3_memory_ptrt_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2865:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2876:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2888:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2896:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2904:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2912:6:18","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2920:6:18","type":""},{"name":"value5","nodeType":"YulTypedName","src":"2928:6:18","type":""},{"name":"value6","nodeType":"YulTypedName","src":"2936:6:18","type":""}],"src":"2733:1506:18"},{"body":{"nodeType":"YulBlock","src":"4286:88:18","statements":[{"nodeType":"YulAssignment","src":"4296:30:18","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"4306:18:18"},"nodeType":"YulFunctionCall","src":"4306:20:18"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4296:6:18"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4355:6:18"},{"name":"size","nodeType":"YulIdentifier","src":"4363:4:18"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"4335:19:18"},"nodeType":"YulFunctionCall","src":"4335:33:18"},"nodeType":"YulExpressionStatement","src":"4335:33:18"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"4270:4:18","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"4279:6:18","type":""}],"src":"4245:129:18"},{"body":{"nodeType":"YulBlock","src":"4420:35:18","statements":[{"nodeType":"YulAssignment","src":"4430:19:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4446:2:18","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4440:5:18"},"nodeType":"YulFunctionCall","src":"4440:9:18"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4430:6:18"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"4413:6:18","type":""}],"src":"4380:75:18"},{"body":{"nodeType":"YulBlock","src":"4551:169:18","statements":[{"body":{"nodeType":"YulBlock","src":"4656:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4658:16:18"},"nodeType":"YulFunctionCall","src":"4658:18:18"},"nodeType":"YulExpressionStatement","src":"4658:18:18"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4628:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"4636:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4625:2:18"},"nodeType":"YulFunctionCall","src":"4625:30:18"},"nodeType":"YulIf","src":"4622:56:18"},{"nodeType":"YulAssignment","src":"4688:25:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4700:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"4708:4:18","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4696:3:18"},"nodeType":"YulFunctionCall","src":"4696:17:18"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4688:4:18"}]}]},"name":"array_allocation_size_t_array$_t_string_memory_ptr_$3_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"4535:6:18","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"4546:4:18","type":""}],"src":"4461:259:18"},{"body":{"nodeType":"YulBlock","src":"4793:241:18","statements":[{"body":{"nodeType":"YulBlock","src":"4898:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4900:16:18"},"nodeType":"YulFunctionCall","src":"4900:18:18"},"nodeType":"YulExpressionStatement","src":"4900:18:18"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4870:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"4878:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4867:2:18"},"nodeType":"YulFunctionCall","src":"4867:30:18"},"nodeType":"YulIf","src":"4864:56:18"},{"nodeType":"YulAssignment","src":"4930:37:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4960:6:18"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4938:21:18"},"nodeType":"YulFunctionCall","src":"4938:29:18"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4930:4:18"}]},{"nodeType":"YulAssignment","src":"5004:23:18","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"5016:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"5022:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5012:3:18"},"nodeType":"YulFunctionCall","src":"5012:15:18"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"5004:4:18"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"4777:6:18","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"4788:4:18","type":""}],"src":"4726:308:18"},{"body":{"nodeType":"YulBlock","src":"5085:51:18","statements":[{"nodeType":"YulAssignment","src":"5095:35:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5124:5:18"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"5106:17:18"},"nodeType":"YulFunctionCall","src":"5106:24:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5095:7:18"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5067:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5077:7:18","type":""}],"src":"5040:96:18"},{"body":{"nodeType":"YulBlock","src":"5187:32:18","statements":[{"nodeType":"YulAssignment","src":"5197:16:18","value":{"name":"value","nodeType":"YulIdentifier","src":"5208:5:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5197:7:18"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5169:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5179:7:18","type":""}],"src":"5142:77:18"},{"body":{"nodeType":"YulBlock","src":"5270:81:18","statements":[{"nodeType":"YulAssignment","src":"5280:65:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5295:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"5302:42:18","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5291:3:18"},"nodeType":"YulFunctionCall","src":"5291:54:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5280:7:18"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5252:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5262:7:18","type":""}],"src":"5225:126:18"},{"body":{"nodeType":"YulBlock","src":"5401:49:18","statements":[{"nodeType":"YulAssignment","src":"5411:33:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5426:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"5433:10:18","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5422:3:18"},"nodeType":"YulFunctionCall","src":"5422:22:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5411:7:18"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5383:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5393:7:18","type":""}],"src":"5357:93:18"},{"body":{"nodeType":"YulBlock","src":"5500:57:18","statements":[{"nodeType":"YulAssignment","src":"5510:41:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5525:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"5532:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5521:3:18"},"nodeType":"YulFunctionCall","src":"5521:30:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5510:7:18"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5482:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5492:7:18","type":""}],"src":"5456:101:18"},{"body":{"nodeType":"YulBlock","src":"5612:258:18","statements":[{"nodeType":"YulVariableDeclaration","src":"5622:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"5631:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5626:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"5691:63:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5716:3:18"},{"name":"i","nodeType":"YulIdentifier","src":"5721:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5712:3:18"},"nodeType":"YulFunctionCall","src":"5712:11:18"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5735:3:18"},{"name":"i","nodeType":"YulIdentifier","src":"5740:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5731:3:18"},"nodeType":"YulFunctionCall","src":"5731:11:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5725:5:18"},"nodeType":"YulFunctionCall","src":"5725:18:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5705:6:18"},"nodeType":"YulFunctionCall","src":"5705:39:18"},"nodeType":"YulExpressionStatement","src":"5705:39:18"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5652:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"5655:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5649:2:18"},"nodeType":"YulFunctionCall","src":"5649:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5663:19:18","statements":[{"nodeType":"YulAssignment","src":"5665:15:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5674:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"5677:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5670:3:18"},"nodeType":"YulFunctionCall","src":"5670:10:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5665:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"5645:3:18","statements":[]},"src":"5641:113:18"},{"body":{"nodeType":"YulBlock","src":"5788:76:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5838:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"5843:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5834:3:18"},"nodeType":"YulFunctionCall","src":"5834:16:18"},{"kind":"number","nodeType":"YulLiteral","src":"5852:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5827:6:18"},"nodeType":"YulFunctionCall","src":"5827:27:18"},"nodeType":"YulExpressionStatement","src":"5827:27:18"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5769:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"5772:6:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5766:2:18"},"nodeType":"YulFunctionCall","src":"5766:13:18"},"nodeType":"YulIf","src":"5763:101:18"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"5594:3:18","type":""},{"name":"dst","nodeType":"YulTypedName","src":"5599:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"5604:6:18","type":""}],"src":"5563:307:18"},{"body":{"nodeType":"YulBlock","src":"5927:269:18","statements":[{"nodeType":"YulAssignment","src":"5937:22:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5951:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"5957:1:18","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5947:3:18"},"nodeType":"YulFunctionCall","src":"5947:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5937:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"5968:38:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5998:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"6004:1:18","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5994:3:18"},"nodeType":"YulFunctionCall","src":"5994:12:18"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5972:18:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"6045:51:18","statements":[{"nodeType":"YulAssignment","src":"6059:27:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6073:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"6081:4:18","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6069:3:18"},"nodeType":"YulFunctionCall","src":"6069:17:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6059:6:18"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6025:18:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6018:6:18"},"nodeType":"YulFunctionCall","src":"6018:26:18"},"nodeType":"YulIf","src":"6015:81:18"},{"body":{"nodeType":"YulBlock","src":"6148:42:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"6162:16:18"},"nodeType":"YulFunctionCall","src":"6162:18:18"},"nodeType":"YulExpressionStatement","src":"6162:18:18"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6112:18:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6135:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"6143:2:18","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6132:2:18"},"nodeType":"YulFunctionCall","src":"6132:14:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6109:2:18"},"nodeType":"YulFunctionCall","src":"6109:38:18"},"nodeType":"YulIf","src":"6106:84:18"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5911:4:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5920:6:18","type":""}],"src":"5876:320:18"},{"body":{"nodeType":"YulBlock","src":"6245:238:18","statements":[{"nodeType":"YulVariableDeclaration","src":"6255:58:18","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6277:6:18"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6307:4:18"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6285:21:18"},"nodeType":"YulFunctionCall","src":"6285:27:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6273:3:18"},"nodeType":"YulFunctionCall","src":"6273:40:18"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"6259:10:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"6424:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6426:16:18"},"nodeType":"YulFunctionCall","src":"6426:18:18"},"nodeType":"YulExpressionStatement","src":"6426:18:18"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6367:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"6379:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6364:2:18"},"nodeType":"YulFunctionCall","src":"6364:34:18"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6403:10:18"},{"name":"memPtr","nodeType":"YulIdentifier","src":"6415:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6400:2:18"},"nodeType":"YulFunctionCall","src":"6400:22:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6361:2:18"},"nodeType":"YulFunctionCall","src":"6361:62:18"},"nodeType":"YulIf","src":"6358:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6462:2:18","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6466:10:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6455:6:18"},"nodeType":"YulFunctionCall","src":"6455:22:18"},"nodeType":"YulExpressionStatement","src":"6455:22:18"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6231:6:18","type":""},{"name":"size","nodeType":"YulTypedName","src":"6239:4:18","type":""}],"src":"6202:281:18"},{"body":{"nodeType":"YulBlock","src":"6517:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6534:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6537:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6527:6:18"},"nodeType":"YulFunctionCall","src":"6527:88:18"},"nodeType":"YulExpressionStatement","src":"6527:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6631:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6634:4:18","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6624:6:18"},"nodeType":"YulFunctionCall","src":"6624:15:18"},"nodeType":"YulExpressionStatement","src":"6624:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6655:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6658:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6648:6:18"},"nodeType":"YulFunctionCall","src":"6648:15:18"},"nodeType":"YulExpressionStatement","src":"6648:15:18"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"6489:180:18"},{"body":{"nodeType":"YulBlock","src":"6703:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6720:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6723:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6713:6:18"},"nodeType":"YulFunctionCall","src":"6713:88:18"},"nodeType":"YulExpressionStatement","src":"6713:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6817:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6820:4:18","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6810:6:18"},"nodeType":"YulFunctionCall","src":"6810:15:18"},"nodeType":"YulExpressionStatement","src":"6810:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6841:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6844:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6834:6:18"},"nodeType":"YulFunctionCall","src":"6834:15:18"},"nodeType":"YulExpressionStatement","src":"6834:15:18"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"6675:180:18"},{"body":{"nodeType":"YulBlock","src":"6950:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6967:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6970:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6960:6:18"},"nodeType":"YulFunctionCall","src":"6960:12:18"},"nodeType":"YulExpressionStatement","src":"6960:12:18"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"6861:117:18"},{"body":{"nodeType":"YulBlock","src":"7073:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7090:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7093:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7083:6:18"},"nodeType":"YulFunctionCall","src":"7083:12:18"},"nodeType":"YulExpressionStatement","src":"7083:12:18"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"6984:117:18"},{"body":{"nodeType":"YulBlock","src":"7196:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7213:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7216:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7206:6:18"},"nodeType":"YulFunctionCall","src":"7206:12:18"},"nodeType":"YulExpressionStatement","src":"7206:12:18"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"7107:117:18"},{"body":{"nodeType":"YulBlock","src":"7319:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7336:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7339:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7329:6:18"},"nodeType":"YulFunctionCall","src":"7329:12:18"},"nodeType":"YulExpressionStatement","src":"7329:12:18"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"7230:117:18"},{"body":{"nodeType":"YulBlock","src":"7442:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7459:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7462:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7452:6:18"},"nodeType":"YulFunctionCall","src":"7452:12:18"},"nodeType":"YulExpressionStatement","src":"7452:12:18"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"7353:117:18"},{"body":{"nodeType":"YulBlock","src":"7524:54:18","statements":[{"nodeType":"YulAssignment","src":"7534:38:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7552:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"7559:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7548:3:18"},"nodeType":"YulFunctionCall","src":"7548:14:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7568:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7564:3:18"},"nodeType":"YulFunctionCall","src":"7564:7:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7544:3:18"},"nodeType":"YulFunctionCall","src":"7544:28:18"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"7534:6:18"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7507:5:18","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"7517:6:18","type":""}],"src":"7476:102:18"},{"body":{"nodeType":"YulBlock","src":"7627:79:18","statements":[{"body":{"nodeType":"YulBlock","src":"7684:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7693:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7696:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7686:6:18"},"nodeType":"YulFunctionCall","src":"7686:12:18"},"nodeType":"YulExpressionStatement","src":"7686:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7650:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7675:5:18"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"7657:17:18"},"nodeType":"YulFunctionCall","src":"7657:24:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7647:2:18"},"nodeType":"YulFunctionCall","src":"7647:35:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7640:6:18"},"nodeType":"YulFunctionCall","src":"7640:43:18"},"nodeType":"YulIf","src":"7637:63:18"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7620:5:18","type":""}],"src":"7584:122:18"},{"body":{"nodeType":"YulBlock","src":"7755:79:18","statements":[{"body":{"nodeType":"YulBlock","src":"7812:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7821:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7824:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7814:6:18"},"nodeType":"YulFunctionCall","src":"7814:12:18"},"nodeType":"YulExpressionStatement","src":"7814:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7778:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7803:5:18"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"7785:17:18"},"nodeType":"YulFunctionCall","src":"7785:24:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7775:2:18"},"nodeType":"YulFunctionCall","src":"7775:35:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7768:6:18"},"nodeType":"YulFunctionCall","src":"7768:43:18"},"nodeType":"YulIf","src":"7765:63:18"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7748:5:18","type":""}],"src":"7712:122:18"},{"body":{"nodeType":"YulBlock","src":"7882:78:18","statements":[{"body":{"nodeType":"YulBlock","src":"7938:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7947:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7950:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7940:6:18"},"nodeType":"YulFunctionCall","src":"7940:12:18"},"nodeType":"YulExpressionStatement","src":"7940:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7905:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7929:5:18"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"7912:16:18"},"nodeType":"YulFunctionCall","src":"7912:23:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7902:2:18"},"nodeType":"YulFunctionCall","src":"7902:34:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7895:6:18"},"nodeType":"YulFunctionCall","src":"7895:42:18"},"nodeType":"YulIf","src":"7892:62:18"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7875:5:18","type":""}],"src":"7840:120:18"},{"body":{"nodeType":"YulBlock","src":"8008:78:18","statements":[{"body":{"nodeType":"YulBlock","src":"8064:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8073:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8076:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8066:6:18"},"nodeType":"YulFunctionCall","src":"8066:12:18"},"nodeType":"YulExpressionStatement","src":"8066:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8031:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8055:5:18"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"8038:16:18"},"nodeType":"YulFunctionCall","src":"8038:23:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8028:2:18"},"nodeType":"YulFunctionCall","src":"8028:34:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8021:6:18"},"nodeType":"YulFunctionCall","src":"8021:42:18"},"nodeType":"YulIf","src":"8018:62:18"}]},"name":"validator_revert_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8001:5:18","type":""}],"src":"7966:120:18"}]},"contents":"{\n\n    // string[3]\n    function abi_decode_available_length_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_string_memory_ptr_$3_memory_ptr(length))\n        let dst := array\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let innerOffset := mload(src)\n            if gt(innerOffset, 0xffffffffffffffff) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n            let elementPos := add(offset, innerOffset)\n\n            mstore(dst, abi_decode_t_string_memory_ptr_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // string[3]\n    function abi_decode_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := 0x03\n        array := abi_decode_available_length_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory(offset, length, end)\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_t_uint64_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint64t_bytes32t_uint32t_array$_t_string_memory_ptr_$3_memory_ptrt_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint64_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_string_memory_ptr_$3_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n}\n","id":18,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH2 0x140 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x60CD CODESIZE SUB DUP1 PUSH3 0x60CD DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x38 SWAP2 SWAP1 PUSH3 0x639 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43617264426F7865730000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4341424F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP9 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP POP DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xF5 SWAP3 SWAP2 SWAP1 PUSH3 0x317 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x10E SWAP3 SWAP2 SWAP1 PUSH3 0x317 JUMP JUMPDEST POP POP POP PUSH3 0x131 PUSH3 0x125 PUSH3 0x249 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x251 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0xC0 SHL DUP2 MSTORE POP POP DUP5 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP4 PUSH4 0xFFFFFFFF AND PUSH2 0x100 DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE POP POP DUP3 PUSH1 0xB SWAP1 PUSH1 0x3 PUSH3 0x1BA SWAP3 SWAP2 SWAP1 PUSH3 0x3A8 JUMP JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x120 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP PUSH1 0x0 PUSH1 0xA DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP PUSH3 0x987 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x325 SWAP1 PUSH3 0x82B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x349 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x395 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x364 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x395 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x395 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x394 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x377 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x3A4 SWAP2 SWAP1 PUSH3 0x40F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0x3FC JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x3FB JUMPI DUP3 MLOAD DUP3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x3EA SWAP3 SWAP2 SWAP1 PUSH3 0x317 JUMP JUMPDEST POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x3C9 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x40B SWAP2 SWAP1 PUSH3 0x42E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x42A JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x410 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x452 JUMPI PUSH1 0x0 DUP2 DUP2 PUSH3 0x448 SWAP2 SWAP1 PUSH3 0x456 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH3 0x42F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH3 0x464 SWAP1 PUSH3 0x82B JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH3 0x478 JUMPI POP PUSH3 0x499 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH3 0x498 SWAP2 SWAP1 PUSH3 0x40F JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4B3 PUSH3 0x4AD DUP5 PUSH3 0x734 JUMP JUMPDEST PUSH3 0x70B JUMP JUMPDEST SWAP1 POP DUP1 DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH3 0x4D0 JUMPI PUSH3 0x4CF PUSH3 0x8FA JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH3 0x525 JUMPI DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4FA JUMPI PUSH3 0x4F9 PUSH3 0x8F5 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH3 0x509 DUP10 DUP3 PUSH3 0x5D8 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP5 ADD SWAP4 POP POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x4D3 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x546 PUSH3 0x540 DUP5 PUSH3 0x75D JUMP JUMPDEST PUSH3 0x70B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x565 JUMPI PUSH3 0x564 PUSH3 0x8FF JUMP JUMPDEST JUMPDEST PUSH3 0x572 DUP5 DUP3 DUP6 PUSH3 0x7F5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x58B DUP2 PUSH3 0x91F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x5A9 JUMPI PUSH3 0x5A8 PUSH3 0x8F5 JUMP JUMPDEST JUMPDEST PUSH1 0x3 PUSH3 0x5B8 DUP5 DUP3 DUP6 PUSH3 0x49C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x5D2 DUP2 PUSH3 0x939 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x5F0 JUMPI PUSH3 0x5EF PUSH3 0x8F5 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x602 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x52F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x61C DUP2 PUSH3 0x953 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x633 DUP2 PUSH3 0x96D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH3 0x65B JUMPI PUSH3 0x65A PUSH3 0x909 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x66B DUP11 DUP3 DUP12 ADD PUSH3 0x57A JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH3 0x67E DUP11 DUP3 DUP12 ADD PUSH3 0x622 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH3 0x691 DUP11 DUP3 DUP12 ADD PUSH3 0x5C1 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH3 0x6A4 DUP11 DUP3 DUP12 ADD PUSH3 0x60B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 DUP9 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x6C8 JUMPI PUSH3 0x6C7 PUSH3 0x904 JUMP JUMPDEST JUMPDEST PUSH3 0x6D6 DUP11 DUP3 DUP12 ADD PUSH3 0x591 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH3 0x6E9 DUP11 DUP3 DUP12 ADD PUSH3 0x57A JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH3 0x6FC DUP11 DUP3 DUP12 ADD PUSH3 0x57A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x717 PUSH3 0x72A JUMP JUMPDEST SWAP1 POP PUSH3 0x725 DUP3 DUP3 PUSH3 0x861 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x752 JUMPI PUSH3 0x751 PUSH3 0x8C6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x77B JUMPI PUSH3 0x77A PUSH3 0x8C6 JUMP JUMPDEST JUMPDEST PUSH3 0x786 DUP3 PUSH3 0x90E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7A0 DUP3 PUSH3 0x7B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x815 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x7F8 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x825 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x844 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x85B JUMPI PUSH3 0x85A PUSH3 0x897 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x86C DUP3 PUSH3 0x90E JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x88E JUMPI PUSH3 0x88D PUSH3 0x8C6 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x92A DUP2 PUSH3 0x793 JUMP JUMPDEST DUP2 EQ PUSH3 0x936 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x944 DUP2 PUSH3 0x7A7 JUMP JUMPDEST DUP2 EQ PUSH3 0x950 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x95E DUP2 PUSH3 0x7D1 JUMP JUMPDEST DUP2 EQ PUSH3 0x96A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x978 DUP2 PUSH3 0x7E1 JUMP JUMPDEST DUP2 EQ PUSH3 0x984 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH1 0xC0 MLOAD PUSH1 0xC0 SHR PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH1 0xE0 SHR PUSH2 0x120 MLOAD PUSH1 0x60 SHR PUSH2 0x56D9 PUSH3 0x9F4 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x13A3 ADD MSTORE PUSH2 0x18FC ADD MSTORE PUSH1 0x0 PUSH2 0x1C55 ADD MSTORE PUSH1 0x0 PUSH2 0x1C11 ADD MSTORE PUSH1 0x0 PUSH2 0x1C32 ADD MSTORE PUSH1 0x0 PUSH2 0x1BD5 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0xCC9 ADD MSTORE PUSH2 0xD1D ADD MSTORE PUSH2 0x56D9 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x245 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x139 JUMPI DUP1 PUSH4 0xA2E18EB7 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xD004B036 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xD004B036 EQ PUSH2 0x8D5 JUMPI DUP1 PUSH4 0xD1A6BC87 EQ PUSH2 0x912 JUMPI DUP1 PUSH4 0xE6A4EE15 EQ PUSH2 0x91C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x926 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x963 JUMPI DUP1 PUSH4 0xF5CB797C EQ PUSH2 0x98C JUMPI PUSH2 0x245 JUMP JUMPDEST DUP1 PUSH4 0xA2E18EB7 EQ PUSH2 0x7B5 JUMPI DUP1 PUSH4 0xB1E5E2B7 EQ PUSH2 0x7F2 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x82F JUMPI DUP1 PUSH4 0xBDC60BF9 EQ PUSH2 0x858 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x898 JUMPI PUSH2 0x245 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6CE JUMPI DUP1 PUSH4 0x919FB5BB EQ PUSH2 0x6F9 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x736 JUMPI DUP1 PUSH4 0x9E87A5CD EQ PUSH2 0x761 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x78C JUMPI PUSH2 0x245 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x5E7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x624 JUMPI DUP1 PUSH4 0x7C3B1829 EQ PUSH2 0x63B JUMPI DUP1 PUSH4 0x8607D5C9 EQ PUSH2 0x678 JUMPI DUP1 PUSH4 0x88916B9A EQ PUSH2 0x6A3 JUMPI PUSH2 0x245 JUMP JUMPDEST DUP1 PUSH4 0x3CCFD60B GT PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x4DEEA57E GT PUSH2 0x18B JUMPI DUP1 PUSH4 0x4DEEA57E EQ PUSH2 0x50D JUMPI DUP1 PUSH4 0x506805DA EQ PUSH2 0x517 JUMPI DUP1 PUSH4 0x5EA83561 EQ PUSH2 0x554 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x57F JUMPI DUP1 PUSH4 0x6E02007D EQ PUSH2 0x5BC JUMPI PUSH2 0x245 JUMP JUMPDEST DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x428 JUMPI DUP1 PUSH4 0x3D9CCDE0 EQ PUSH2 0x43F JUMPI DUP1 PUSH4 0x41F63BFD EQ PUSH2 0x46A JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x4A7 JUMPI DUP1 PUSH4 0x4CF5DB48 EQ PUSH2 0x4D0 JUMPI PUSH2 0x245 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x20E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x357 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0x2CE9E693 EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0x2E566B70 EQ PUSH2 0x3FD JUMPI PUSH2 0x245 JUMP JUMPDEST DUP1 PUSH3 0x7BB968 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x5114490 EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x31A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x42C5 JUMP JUMPDEST PUSH2 0x9B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x4C7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x41E8 JUMP JUMPDEST PUSH2 0x9CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x49D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH2 0xAB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x4896 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x304 PUSH2 0xAD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x4A76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x326 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x341 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33C SWAP2 SWAP1 PUSH2 0x42C5 JUMP JUMPDEST PUSH2 0xB69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34E SWAP2 SWAP1 PUSH2 0x4896 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x363 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x379 SWAP2 SWAP1 PUSH2 0x41A8 JUMP JUMPDEST PUSH2 0xBAF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A2 SWAP2 SWAP1 PUSH2 0x431F JUMP JUMPDEST PUSH2 0xCC7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x4092 JUMP JUMPDEST PUSH2 0xD87 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E7 PUSH2 0xDE7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x4C7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x409 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x412 PUSH2 0xDEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41F SWAP2 SWAP1 PUSH2 0x4C7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x43D PUSH2 0xE93 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x454 PUSH2 0xF47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x461 SWAP2 SWAP1 PUSH2 0x4C7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x476 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x491 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x48C SWAP2 SWAP1 PUSH2 0x42C5 JUMP JUMPDEST PUSH2 0xFEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x49E SWAP2 SWAP1 PUSH2 0x4C58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C9 SWAP2 SWAP1 PUSH2 0x4092 JUMP JUMPDEST PUSH2 0x10DC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F2 SWAP2 SWAP1 PUSH2 0x42C5 JUMP JUMPDEST PUSH2 0x10FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x504 SWAP2 SWAP1 PUSH2 0x4A76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x515 PUSH2 0x11AC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x523 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x53E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x539 SWAP2 SWAP1 PUSH2 0x42C5 JUMP JUMPDEST PUSH2 0x139E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54B SWAP2 SWAP1 PUSH2 0x4C7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x560 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x569 PUSH2 0x1489 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x576 SWAP2 SWAP1 PUSH2 0x4C7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A1 SWAP2 SWAP1 PUSH2 0x42C5 JUMP JUMPDEST PUSH2 0x148E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B3 SWAP2 SWAP1 PUSH2 0x4896 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D1 PUSH2 0x1515 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5DE SWAP2 SWAP1 PUSH2 0x4C7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x60E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x609 SWAP2 SWAP1 PUSH2 0x4025 JUMP JUMPDEST PUSH2 0x151F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61B SWAP2 SWAP1 PUSH2 0x4C7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x630 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x639 PUSH2 0x15D7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x647 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x662 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x65D SWAP2 SWAP1 PUSH2 0x42C5 JUMP JUMPDEST PUSH2 0x15EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66F SWAP2 SWAP1 PUSH2 0x4A76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x684 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x68D PUSH2 0x16AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x69A SWAP2 SWAP1 PUSH2 0x4A5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6B8 PUSH2 0x16D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C5 SWAP2 SWAP1 PUSH2 0x4C7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6E3 PUSH2 0x177A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6F0 SWAP2 SWAP1 PUSH2 0x4896 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x705 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x720 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71B SWAP2 SWAP1 PUSH2 0x42C5 JUMP JUMPDEST PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x72D SWAP2 SWAP1 PUSH2 0x4A76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x742 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x74B PUSH2 0x1866 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x758 SWAP2 SWAP1 PUSH2 0x4A76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x76D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x776 PUSH2 0x18F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x783 SWAP2 SWAP1 PUSH2 0x4A40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x798 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7AE SWAP2 SWAP1 PUSH2 0x4168 JUMP JUMPDEST PUSH2 0x1920 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7D7 SWAP2 SWAP1 PUSH2 0x42C5 JUMP JUMPDEST PUSH2 0x1936 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7E9 SWAP2 SWAP1 PUSH2 0x4A76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x819 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x814 SWAP2 SWAP1 PUSH2 0x42C5 JUMP JUMPDEST PUSH2 0x19F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x826 SWAP2 SWAP1 PUSH2 0x4C7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x83B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x856 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x851 SWAP2 SWAP1 PUSH2 0x40E5 JUMP JUMPDEST PUSH2 0x1D47 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x864 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x87F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x87A SWAP2 SWAP1 PUSH2 0x42C5 JUMP JUMPDEST PUSH2 0x1DA9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x88F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4CBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8BA SWAP2 SWAP1 PUSH2 0x42C5 JUMP JUMPDEST PUSH2 0x1E6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8CC SWAP2 SWAP1 PUSH2 0x4A76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8F7 SWAP2 SWAP1 PUSH2 0x4025 JUMP JUMPDEST PUSH2 0x1F81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x909 SWAP2 SWAP1 PUSH2 0x49B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x91A PUSH2 0x2116 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x924 PUSH2 0x2308 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x932 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x94D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x948 SWAP2 SWAP1 PUSH2 0x4052 JUMP JUMPDEST PUSH2 0x24FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x95A SWAP2 SWAP1 PUSH2 0x49D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x96F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x98A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x985 SWAP2 SWAP1 PUSH2 0x4025 JUMP JUMPDEST PUSH2 0x258E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x998 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9A1 PUSH2 0x2612 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9AE SWAP2 SWAP1 PUSH2 0x4C7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xA9A JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0xAAA JUMPI POP PUSH2 0xAA9 DUP3 PUSH2 0x2617 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0xAE6 SWAP1 PUSH2 0x5090 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB12 SWAP1 PUSH2 0x5090 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB5F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB34 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB5F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB42 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB74 DUP3 PUSH2 0x2681 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBBA DUP3 PUSH2 0x148E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC2B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC22 SWAP1 PUSH2 0x4C18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC4A PUSH2 0x26CC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xC79 JUMPI POP PUSH2 0xC78 DUP2 PUSH2 0xC73 PUSH2 0x26CC JUMP JUMPDEST PUSH2 0x24FA JUMP JUMPDEST JUMPDEST PUSH2 0xCB8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCAF SWAP1 PUSH2 0x4C38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCC2 DUP4 DUP4 PUSH2 0x26D4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD79 JUMPI CALLER PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD70 SWAP3 SWAP2 SWAP1 PUSH2 0x48B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD83 DUP3 DUP3 PUSH2 0x278D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xD98 PUSH2 0xD92 PUSH2 0x26CC JUMP JUMPDEST DUP3 PUSH2 0x2E9D JUMP JUMPDEST PUSH2 0xDD7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDCE SWAP1 PUSH2 0x4A98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDE2 DUP4 DUP4 DUP4 PUSH2 0x2F32 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x32 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x65C889DB PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE6A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE8E SWAP2 SWAP1 PUSH2 0x42F2 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE9B PUSH2 0x322C JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xEC6 SWAP1 PUSH2 0x4881 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xF03 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF08 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xF43 JUMPI PUSH1 0x40 MLOAD PUSH32 0x794E4B8400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x71BE7002 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFC5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFE9 SWAP2 SWAP1 PUSH2 0x42F2 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xFF6 PUSH2 0x3D32 JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x102E SWAP1 PUSH2 0x5090 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x105A SWAP1 PUSH2 0x5090 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x10A7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x107C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x10A7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x108A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10F7 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1D47 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xB DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1112 JUMPI PUSH2 0x1111 PUSH2 0x51FA JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x1127 SWAP1 PUSH2 0x5090 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1153 SWAP1 PUSH2 0x5090 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x11A0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1175 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x11A0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1183 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11B8 PUSH1 0x64 PUSH2 0x139E JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x11F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC5F39E8700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA SLOAD SWAP1 POP PUSH1 0x1 PUSH1 0xA SLOAD PUSH2 0x120A SWAP2 SWAP1 PUSH2 0x4E55 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH2 0x121A CALLER DUP3 PUSH2 0x32AA JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x2 DUP2 SLOAD DUP2 LT PUSH2 0x1231 JUMPI PUSH2 0x1230 PUSH2 0x51FA JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x1246 SWAP1 PUSH2 0x5090 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1272 SWAP1 PUSH2 0x5090 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x12BF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1294 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x12BF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x12A2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH2 0x12D0 DUP3 DUP3 PUSH2 0x32C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP2 MSTORE POP PUSH1 0xC PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x132E SWAP3 SWAP2 SWAP1 PUSH2 0x3D5C JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE SWAP1 POP POP PUSH32 0xE513C5910A384615E43CB8685907BF71B6085F60BC3EE2647BA3B09780F609C8 CALLER DUP4 DUP4 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1391 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4964 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1407 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x141B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x143F SWAP2 SWAP1 PUSH2 0x437B JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 PUSH5 0x2540BE400 DUP3 PUSH2 0x1458 SWAP2 SWAP1 PUSH2 0x4EDC JUMP JUMPDEST PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP6 PUSH2 0x1473 SWAP2 SWAP1 PUSH2 0x4EDC JUMP JUMPDEST PUSH2 0x147D SWAP2 SWAP1 PUSH2 0x4EAB JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x149A DUP4 PUSH2 0x333C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x150C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1503 SWAP1 PUSH2 0x4BF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1590 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1587 SWAP1 PUSH2 0x4B78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15DF PUSH2 0x322C JUMP JUMPDEST PUSH2 0x15E9 PUSH1 0x0 PUSH2 0x3379 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCFF2C359 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x164A SWAP2 SWAP1 PUSH2 0x4C7A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1662 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1676 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x169F SWAP2 SWAP1 PUSH2 0x4242 JUMP JUMPDEST POP POP POP SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA83DE16 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x173D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1751 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1775 SWAP2 SWAP1 PUSH2 0x42F2 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4132607B DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1803 SWAP2 SWAP1 PUSH2 0x4C7A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x181B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x182F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1858 SWAP2 SWAP1 PUSH2 0x4242 JUMP JUMPDEST POP POP POP SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x1875 SWAP1 PUSH2 0x5090 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x18A1 SWAP1 PUSH2 0x5090 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x18EE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x18C3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x18EE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x18D1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1932 PUSH2 0x192B PUSH2 0x26CC JUMP JUMPDEST DUP4 DUP4 PUSH2 0x343F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9CFA7DAA DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1995 SWAP2 SWAP1 PUSH2 0x4C7A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19EA SWAP2 SWAP1 PUSH2 0x4242 JUMP JUMPDEST POP POP POP SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER DUP3 PUSH1 0x0 PUSH2 0x1A07 DUP3 PUSH2 0x35AC JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1A40 JUMPI PUSH1 0x40 MLOAD PUSH32 0x12F49E5300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 CALLER PUSH1 0x0 PUSH2 0x1A4D DUP4 PUSH2 0x148E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1AB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA73EC3BD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x1AEE SWAP1 PUSH2 0x5090 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1B1A SWAP1 PUSH2 0x5090 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B67 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1B3C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B67 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B4A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x40 ADD MLOAD ISZERO PUSH2 0x1BD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3DA741A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D3B1D30 PUSH32 0x0 PUSH32 0x0 PUSH1 0x3 PUSH32 0x0 PUSH1 0x1 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C96 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x49ED JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1CC4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CE8 SWAP2 SWAP1 PUSH2 0x42F2 JUMP JUMPDEST SWAP8 POP DUP9 PUSH1 0xD PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0x39E3D8A7823BFBCD1FF6AAE964C13271C920CE4DAA29ADBE83EBE7753DD027D9 DUP9 CALLER PUSH1 0x40 MLOAD PUSH2 0x1D33 SWAP3 SWAP2 SWAP1 PUSH2 0x4C95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D58 PUSH2 0x1D52 PUSH2 0x26CC JUMP JUMPDEST DUP4 PUSH2 0x2E9D JUMP JUMPDEST PUSH2 0x1D97 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D8E SWAP1 PUSH2 0x4A98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1DA3 DUP5 DUP5 DUP5 DUP5 PUSH2 0x35ED JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1DD2 SWAP1 PUSH2 0x5090 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DFE SWAP1 PUSH2 0x5090 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1E4B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E20 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1E4B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1E2E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1E79 DUP3 PUSH2 0x2681 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x1E99 SWAP1 PUSH2 0x5090 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1EC5 SWAP1 PUSH2 0x5090 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1F12 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1EE7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1F12 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1EF5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x1F23 PUSH2 0x3649 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x1F39 JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x1F7C JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x1F6E JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1F56 SWAP3 SWAP2 SWAP1 PUSH2 0x485D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x1F7C JUMP JUMPDEST PUSH2 0x1F77 DUP5 PUSH2 0x3660 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0xA SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FA1 JUMPI PUSH2 0x1FA0 PUSH2 0x5229 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1FCF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x2064 JUMPI PUSH1 0x0 PUSH2 0x1FEB DUP3 PUSH2 0x148E JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2050 JUMPI DUP2 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2035 JUMPI PUSH2 0x2034 PUSH2 0x51FA JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP3 DUP1 PUSH2 0x204C SWAP1 PUSH2 0x50F3 JUMP JUMPDEST SWAP4 POP POP JUMPDEST POP DUP1 DUP1 PUSH2 0x205C SWAP1 PUSH2 0x50F3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1FD6 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2081 JUMPI PUSH2 0x2080 PUSH2 0x5229 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x20AF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x210A JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x20D0 JUMPI PUSH2 0x20CF PUSH2 0x51FA JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x20EB JUMPI PUSH2 0x20EA PUSH2 0x51FA JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0x2102 SWAP1 PUSH2 0x50F3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x20B5 JUMP JUMPDEST POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2122 PUSH1 0x32 PUSH2 0x139E JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x215E JUMPI PUSH1 0x40 MLOAD PUSH32 0xC5F39E8700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA SLOAD SWAP1 POP PUSH1 0x1 PUSH1 0xA SLOAD PUSH2 0x2174 SWAP2 SWAP1 PUSH2 0x4E55 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH2 0x2184 CALLER DUP3 PUSH2 0x32AA JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x1 DUP2 SLOAD DUP2 LT PUSH2 0x219B JUMPI PUSH2 0x219A PUSH2 0x51FA JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x21B0 SWAP1 PUSH2 0x5090 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x21DC SWAP1 PUSH2 0x5090 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2229 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x21FE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2229 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x220C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH2 0x223A DUP3 DUP3 PUSH2 0x32C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP2 MSTORE POP PUSH1 0xC PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x2298 SWAP3 SWAP2 SWAP1 PUSH2 0x3D5C JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE SWAP1 POP POP PUSH32 0x43AFFEA23111096B9EB47B0E4411D29149F6004E1B65322B46EEB358794E289F CALLER DUP4 DUP4 DUP7 PUSH1 0x40 MLOAD PUSH2 0x22FB SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4964 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2314 PUSH1 0xA PUSH2 0x139E JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x2350 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC5F39E8700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA SLOAD SWAP1 POP PUSH1 0x1 PUSH1 0xA SLOAD PUSH2 0x2366 SWAP2 SWAP1 PUSH2 0x4E55 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH2 0x2376 CALLER DUP3 PUSH2 0x32AA JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x238D JUMPI PUSH2 0x238C PUSH2 0x51FA JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x23A2 SWAP1 PUSH2 0x5090 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x23CE SWAP1 PUSH2 0x5090 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x241B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x23F0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x241B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x23FE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH2 0x242C DUP3 DUP3 PUSH2 0x32C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0xC PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x248A SWAP3 SWAP2 SWAP1 PUSH2 0x3D5C JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE SWAP1 POP POP PUSH32 0x3DDBE03BAAAAD5C81CFD7B4A1B40247D916EA64E64B4B697C1343586CCC8D3C8 CALLER DUP4 DUP4 DUP7 PUSH1 0x40 MLOAD PUSH2 0x24ED SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4964 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2596 PUSH2 0x322C JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2606 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25FD SWAP1 PUSH2 0x4AD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x260F DUP2 PUSH2 0x3379 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x64 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x268A DUP2 PUSH2 0x35AC JUMP JUMPDEST PUSH2 0x26C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26C0 SWAP1 PUSH2 0x4BF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2747 DUP4 PUSH2 0x148E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0xC PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x27DF SWAP1 PUSH2 0x5090 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x280B SWAP1 PUSH2 0x5090 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2858 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x282D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2858 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x283B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x40 ADD MLOAD ISZERO PUSH2 0x28C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3DA741A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 PUSH1 0x60 ADD MLOAD EQ ISZERO PUSH2 0x2A5E JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x65C889DB PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x293D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2951 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2975 SWAP2 SWAP1 PUSH2 0x42F2 JUMP JUMPDEST DUP6 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2989 JUMPI PUSH2 0x2988 PUSH2 0x51FA JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x299B SWAP2 SWAP1 PUSH2 0x513C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4132607B DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29FA SWAP2 SWAP1 PUSH2 0x4C7A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A26 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A4F SWAP2 SWAP1 PUSH2 0x4242 JUMP JUMPDEST POP POP POP SWAP1 POP DUP1 SWAP3 POP POP POP PUSH2 0x2DC2 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x60 ADD MLOAD EQ ISZERO PUSH2 0x2BF6 JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA83DE16 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2AD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2AE9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B0D SWAP2 SWAP1 PUSH2 0x42F2 JUMP JUMPDEST DUP6 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2B21 JUMPI PUSH2 0x2B20 PUSH2 0x51FA JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2B33 SWAP2 SWAP1 PUSH2 0x513C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCFF2C359 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B92 SWAP2 SWAP1 PUSH2 0x4C7A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2BAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2BBE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2BE7 SWAP2 SWAP1 PUSH2 0x4242 JUMP JUMPDEST POP POP POP SWAP1 POP DUP1 SWAP3 POP POP POP PUSH2 0x2DC1 JUMP JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x60 ADD MLOAD EQ ISZERO PUSH2 0x2D8E JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x71BE7002 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2C6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2C81 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2CA5 SWAP2 SWAP1 PUSH2 0x42F2 JUMP JUMPDEST DUP6 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2CB9 JUMPI PUSH2 0x2CB8 PUSH2 0x51FA JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2CCB SWAP2 SWAP1 PUSH2 0x513C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9CFA7DAA DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D2A SWAP2 SWAP1 PUSH2 0x4C7A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D56 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2D7F SWAP2 SWAP1 PUSH2 0x4242 JUMP JUMPDEST POP POP POP SWAP1 POP DUP1 SWAP3 POP POP POP PUSH2 0x2DC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x3DA741A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x60 ADD MLOAD DUP2 MSTORE POP PUSH1 0xC PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x2E23 SWAP3 SWAP2 SWAP1 PUSH2 0x3D5C JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE SWAP1 POP POP PUSH2 0x2E5B DUP4 DUP3 PUSH2 0x32C8 JUMP JUMPDEST PUSH32 0xB6CA0E5B4BB519E8867FD94662DDBD0F8CA710A53DF4328FCBFA257E1E9630A0 CALLER DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2E8E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4926 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2EA9 DUP4 PUSH2 0x148E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x2EEB JUMPI POP PUSH2 0x2EEA DUP2 DUP6 PUSH2 0x24FA JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x2F29 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2F11 DUP5 PUSH2 0xB69 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2F52 DUP3 PUSH2 0x148E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2FA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F9F SWAP1 PUSH2 0x4AF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3018 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x300F SWAP1 PUSH2 0x4B38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3025 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x36C8 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3045 DUP3 PUSH2 0x148E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x309B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3092 SWAP1 PUSH2 0x4AF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x3227 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x36CE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x3234 PUSH2 0x26CC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3252 PUSH2 0x177A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x32A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x329F SWAP1 PUSH2 0x4BD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x32C4 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x36D4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x32D1 DUP3 PUSH2 0x35AC JUMP JUMPDEST PUSH2 0x3310 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3307 SWAP1 PUSH2 0x4B98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x3337 SWAP3 SWAP2 SWAP1 PUSH2 0x3D5C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x34AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34A5 SWAP1 PUSH2 0x4B58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x359F SWAP2 SWAP1 PUSH2 0x49D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x35CE DUP4 PUSH2 0x333C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x35F8 DUP5 DUP5 DUP5 PUSH2 0x2F32 JUMP JUMPDEST PUSH2 0x3604 DUP5 DUP5 DUP5 DUP5 PUSH2 0x372F JUMP JUMPDEST PUSH2 0x3643 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x363A SWAP1 PUSH2 0x4AB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x366B DUP3 PUSH2 0x2681 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3675 PUSH2 0x3649 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x3695 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x36C0 JUMP JUMPDEST DUP1 PUSH2 0x369F DUP5 PUSH2 0x38C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x36B0 SWAP3 SWAP2 SWAP1 PUSH2 0x485D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x36DE DUP4 DUP4 PUSH2 0x399E JUMP JUMPDEST PUSH2 0x36EB PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x372F JUMP JUMPDEST PUSH2 0x372A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3721 SWAP1 PUSH2 0x4AB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3750 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3BBC JUMP JUMPDEST ISZERO PUSH2 0x38B9 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x3779 PUSH2 0x26CC JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x379B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x48DA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x37B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x37E6 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x37E3 SWAP2 SWAP1 PUSH2 0x4215 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x3869 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3816 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x381B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x3861 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3858 SWAP1 PUSH2 0x4AB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x38BE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x38D5 DUP5 PUSH2 0x3BDF JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x38F4 JUMPI PUSH2 0x38F3 PUSH2 0x5229 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3926 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x3993 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x397D JUMPI PUSH2 0x397C PUSH2 0x519C JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x398E JUMPI PUSH2 0x3993 JUMP JUMPDEST PUSH2 0x3934 JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3A0E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A05 SWAP1 PUSH2 0x4BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3A17 DUP2 PUSH2 0x35AC JUMP JUMPDEST ISZERO PUSH2 0x3A57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A4E SWAP1 PUSH2 0x4B18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3A65 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x36C8 JUMP JUMPDEST PUSH2 0x3A6E DUP2 PUSH2 0x35AC JUMP JUMPDEST ISZERO PUSH2 0x3AAE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AA5 SWAP1 PUSH2 0x4B18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x3BB8 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x36CE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x3C3D JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x3C33 JUMPI PUSH2 0x3C32 PUSH2 0x519C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x3C7A JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x3C70 JUMPI PUSH2 0x3C6F PUSH2 0x519C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x3CA9 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x3C9F JUMPI PUSH2 0x3C9E PUSH2 0x519C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x3CD2 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x3CC8 JUMPI PUSH2 0x3CC7 PUSH2 0x519C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x3CF7 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x3CED JUMPI PUSH2 0x3CEC PUSH2 0x519C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x3D1A JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x3D10 JUMPI PUSH2 0x3D0F PUSH2 0x519C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x3D29 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x3D68 SWAP1 PUSH2 0x5090 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x3D8A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x3DD1 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x3DA3 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x3DD1 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x3DD1 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x3DD0 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x3DB5 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x3DDE SWAP2 SWAP1 PUSH2 0x3DE2 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x3DFB JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x3DE3 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E12 PUSH2 0x3E0D DUP5 PUSH2 0x4D2F JUMP JUMPDEST PUSH2 0x4D0A JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x3E35 JUMPI PUSH2 0x3E34 PUSH2 0x525D JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3E65 JUMPI DUP2 PUSH2 0x3E4B DUP9 DUP3 PUSH2 0x3FE6 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3E38 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E82 PUSH2 0x3E7D DUP5 PUSH2 0x4D5B JUMP JUMPDEST PUSH2 0x4D0A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3E9E JUMPI PUSH2 0x3E9D PUSH2 0x5262 JUMP JUMPDEST JUMPDEST PUSH2 0x3EA9 DUP5 DUP3 DUP6 PUSH2 0x504E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EC4 PUSH2 0x3EBF DUP5 PUSH2 0x4D8C JUMP JUMPDEST PUSH2 0x4D0A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3EE0 JUMPI PUSH2 0x3EDF PUSH2 0x5262 JUMP JUMPDEST JUMPDEST PUSH2 0x3EEB DUP5 DUP3 DUP6 PUSH2 0x505D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3F02 DUP2 PUSH2 0x5619 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3F1D JUMPI PUSH2 0x3F1C PUSH2 0x5258 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3F2D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3DFF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3F45 DUP2 PUSH2 0x5630 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3F5A DUP2 PUSH2 0x5647 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3F6F DUP2 PUSH2 0x5647 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3F8A JUMPI PUSH2 0x3F89 PUSH2 0x5258 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3F9A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3E6F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3FB2 DUP2 PUSH2 0x565E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3FCD JUMPI PUSH2 0x3FCC PUSH2 0x5258 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x3FDD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3EB1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3FF5 DUP2 PUSH2 0x5675 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x400A DUP2 PUSH2 0x5675 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x401F DUP2 PUSH2 0x568C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x403B JUMPI PUSH2 0x403A PUSH2 0x526C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4049 DUP5 DUP3 DUP6 ADD PUSH2 0x3EF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4069 JUMPI PUSH2 0x4068 PUSH2 0x526C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4077 DUP6 DUP3 DUP7 ADD PUSH2 0x3EF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4088 DUP6 DUP3 DUP7 ADD PUSH2 0x3EF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x40AB JUMPI PUSH2 0x40AA PUSH2 0x526C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x40B9 DUP7 DUP3 DUP8 ADD PUSH2 0x3EF3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x40CA DUP7 DUP3 DUP8 ADD PUSH2 0x3EF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x40DB DUP7 DUP3 DUP8 ADD PUSH2 0x3FE6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x40FF JUMPI PUSH2 0x40FE PUSH2 0x526C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x410D DUP8 DUP3 DUP9 ADD PUSH2 0x3EF3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x411E DUP8 DUP3 DUP9 ADD PUSH2 0x3EF3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x412F DUP8 DUP3 DUP9 ADD PUSH2 0x3FE6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4150 JUMPI PUSH2 0x414F PUSH2 0x5267 JUMP JUMPDEST JUMPDEST PUSH2 0x415C DUP8 DUP3 DUP9 ADD PUSH2 0x3F75 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x417F JUMPI PUSH2 0x417E PUSH2 0x526C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x418D DUP6 DUP3 DUP7 ADD PUSH2 0x3EF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x419E DUP6 DUP3 DUP7 ADD PUSH2 0x3F36 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x41BF JUMPI PUSH2 0x41BE PUSH2 0x526C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x41CD DUP6 DUP3 DUP7 ADD PUSH2 0x3EF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x41DE DUP6 DUP3 DUP7 ADD PUSH2 0x3FE6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x41FE JUMPI PUSH2 0x41FD PUSH2 0x526C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x420C DUP5 DUP3 DUP6 ADD PUSH2 0x3F4B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x422B JUMPI PUSH2 0x422A PUSH2 0x526C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4239 DUP5 DUP3 DUP6 ADD PUSH2 0x3F60 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x425C JUMPI PUSH2 0x425B PUSH2 0x526C JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x427A JUMPI PUSH2 0x4279 PUSH2 0x5267 JUMP JUMPDEST JUMPDEST PUSH2 0x4286 DUP8 DUP3 DUP9 ADD PUSH2 0x3FB8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x4297 DUP8 DUP3 DUP9 ADD PUSH2 0x3FFB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x42A8 DUP8 DUP3 DUP9 ADD PUSH2 0x3FFB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x42B9 DUP8 DUP3 DUP9 ADD PUSH2 0x3FFB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x42DB JUMPI PUSH2 0x42DA PUSH2 0x526C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x42E9 DUP5 DUP3 DUP6 ADD PUSH2 0x3FE6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4308 JUMPI PUSH2 0x4307 PUSH2 0x526C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4316 DUP5 DUP3 DUP6 ADD PUSH2 0x3FFB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4336 JUMPI PUSH2 0x4335 PUSH2 0x526C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4344 DUP6 DUP3 DUP7 ADD PUSH2 0x3FE6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4365 JUMPI PUSH2 0x4364 PUSH2 0x5267 JUMP JUMPDEST JUMPDEST PUSH2 0x4371 DUP6 DUP3 DUP7 ADD PUSH2 0x3F08 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4397 JUMPI PUSH2 0x4396 PUSH2 0x526C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x43A5 DUP9 DUP3 DUP10 ADD PUSH2 0x4010 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x43B6 DUP9 DUP3 DUP10 ADD PUSH2 0x3FA3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x43C7 DUP9 DUP3 DUP10 ADD PUSH2 0x3FFB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x43D8 DUP9 DUP3 DUP10 ADD PUSH2 0x3FFB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x43E9 DUP9 DUP3 DUP10 ADD PUSH2 0x4010 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4402 DUP4 DUP4 PUSH2 0x4821 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4417 DUP2 PUSH2 0x4F36 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4428 DUP3 PUSH2 0x4DCD JUMP JUMPDEST PUSH2 0x4432 DUP2 DUP6 PUSH2 0x4DFB JUMP JUMPDEST SWAP4 POP PUSH2 0x443D DUP4 PUSH2 0x4DBD JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x446E JUMPI DUP2 MLOAD PUSH2 0x4455 DUP9 DUP3 PUSH2 0x43F6 JUMP JUMPDEST SWAP8 POP PUSH2 0x4460 DUP4 PUSH2 0x4DEE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4441 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4484 DUP2 PUSH2 0x4F48 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4493 DUP2 PUSH2 0x4F48 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x44A2 DUP2 PUSH2 0x4F54 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44B3 DUP3 PUSH2 0x4DD8 JUMP JUMPDEST PUSH2 0x44BD DUP2 DUP6 PUSH2 0x4E0C JUMP JUMPDEST SWAP4 POP PUSH2 0x44CD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x505D JUMP JUMPDEST PUSH2 0x44D6 DUP2 PUSH2 0x5271 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x44EA DUP2 PUSH2 0x5006 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x44F9 DUP2 PUSH2 0x5018 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x450A DUP3 PUSH2 0x4DE3 JUMP JUMPDEST PUSH2 0x4514 DUP2 DUP6 PUSH2 0x4E28 JUMP JUMPDEST SWAP4 POP PUSH2 0x4524 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x505D JUMP JUMPDEST PUSH2 0x452D DUP2 PUSH2 0x5271 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4543 DUP3 PUSH2 0x4DE3 JUMP JUMPDEST PUSH2 0x454D DUP2 DUP6 PUSH2 0x4E39 JUMP JUMPDEST SWAP4 POP PUSH2 0x455D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x505D JUMP JUMPDEST PUSH2 0x4566 DUP2 PUSH2 0x5271 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x457C DUP3 PUSH2 0x4DE3 JUMP JUMPDEST PUSH2 0x4586 DUP2 DUP6 PUSH2 0x4E4A JUMP JUMPDEST SWAP4 POP PUSH2 0x4596 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x505D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45AF PUSH1 0x2D DUP4 PUSH2 0x4E39 JUMP JUMPDEST SWAP2 POP PUSH2 0x45BA DUP3 PUSH2 0x5282 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45D2 PUSH1 0x32 DUP4 PUSH2 0x4E39 JUMP JUMPDEST SWAP2 POP PUSH2 0x45DD DUP3 PUSH2 0x52D1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45F5 PUSH1 0x26 DUP4 PUSH2 0x4E39 JUMP JUMPDEST SWAP2 POP PUSH2 0x4600 DUP3 PUSH2 0x5320 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4618 PUSH1 0x25 DUP4 PUSH2 0x4E39 JUMP JUMPDEST SWAP2 POP PUSH2 0x4623 DUP3 PUSH2 0x536F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x463B PUSH1 0x1C DUP4 PUSH2 0x4E39 JUMP JUMPDEST SWAP2 POP PUSH2 0x4646 DUP3 PUSH2 0x53BE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x465E PUSH1 0x24 DUP4 PUSH2 0x4E39 JUMP JUMPDEST SWAP2 POP PUSH2 0x4669 DUP3 PUSH2 0x53E7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4681 PUSH1 0x19 DUP4 PUSH2 0x4E39 JUMP JUMPDEST SWAP2 POP PUSH2 0x468C DUP3 PUSH2 0x5436 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46A4 PUSH1 0x29 DUP4 PUSH2 0x4E39 JUMP JUMPDEST SWAP2 POP PUSH2 0x46AF DUP3 PUSH2 0x545F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46C7 PUSH1 0x2E DUP4 PUSH2 0x4E39 JUMP JUMPDEST SWAP2 POP PUSH2 0x46D2 DUP3 PUSH2 0x54AE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46EA PUSH1 0x20 DUP4 PUSH2 0x4E39 JUMP JUMPDEST SWAP2 POP PUSH2 0x46F5 DUP3 PUSH2 0x54FD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x470D PUSH1 0x20 DUP4 PUSH2 0x4E39 JUMP JUMPDEST SWAP2 POP PUSH2 0x4718 DUP3 PUSH2 0x5526 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4730 PUSH1 0x18 DUP4 PUSH2 0x4E39 JUMP JUMPDEST SWAP2 POP PUSH2 0x473B DUP3 PUSH2 0x554F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4753 PUSH1 0x21 DUP4 PUSH2 0x4E39 JUMP JUMPDEST SWAP2 POP PUSH2 0x475E DUP3 PUSH2 0x5578 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4776 PUSH1 0x0 DUP4 PUSH2 0x4E1D JUMP JUMPDEST SWAP2 POP PUSH2 0x4781 DUP3 PUSH2 0x55C7 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4799 PUSH1 0x3D DUP4 PUSH2 0x4E39 JUMP JUMPDEST SWAP2 POP PUSH2 0x47A4 DUP3 PUSH2 0x55CA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x47C7 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x4821 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x47DF DUP3 DUP3 PUSH2 0x44FF JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x47F4 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x447B JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x4807 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x4821 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x481B DUP2 PUSH2 0x4F94 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x482A DUP2 PUSH2 0x4FC2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4839 DUP2 PUSH2 0x4FC2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4848 DUP2 PUSH2 0x4FCC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4857 DUP2 PUSH2 0x4FDC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4869 DUP3 DUP6 PUSH2 0x4571 JUMP JUMPDEST SWAP2 POP PUSH2 0x4875 DUP3 DUP5 PUSH2 0x4571 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488C DUP3 PUSH2 0x4769 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x48AB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x440E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x48C6 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x440E JUMP JUMPDEST PUSH2 0x48D3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x440E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x48EF PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x440E JUMP JUMPDEST PUSH2 0x48FC PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x440E JUMP JUMPDEST PUSH2 0x4909 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x4830 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x491B DUP2 DUP5 PUSH2 0x44A8 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x493B PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x440E JUMP JUMPDEST PUSH2 0x4948 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x4830 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x495A DUP2 DUP5 PUSH2 0x4538 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x4979 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x440E JUMP JUMPDEST PUSH2 0x4986 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x4830 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x4998 DUP2 DUP6 PUSH2 0x4538 JUMP JUMPDEST SWAP1 POP PUSH2 0x49A7 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x4830 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x49CA DUP2 DUP5 PUSH2 0x441D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x49E7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x448A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x4A02 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x4499 JUMP JUMPDEST PUSH2 0x4A0F PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x484E JUMP JUMPDEST PUSH2 0x4A1C PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x4812 JUMP JUMPDEST PUSH2 0x4A29 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x483F JUMP JUMPDEST PUSH2 0x4A36 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x483F JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4A55 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x44E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4A70 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x44F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4A90 DUP2 DUP5 PUSH2 0x4538 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4AB1 DUP2 PUSH2 0x45A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4AD1 DUP2 PUSH2 0x45C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4AF1 DUP2 PUSH2 0x45E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4B11 DUP2 PUSH2 0x460B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4B31 DUP2 PUSH2 0x462E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4B51 DUP2 PUSH2 0x4651 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4B71 DUP2 PUSH2 0x4674 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4B91 DUP2 PUSH2 0x4697 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4BB1 DUP2 PUSH2 0x46BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4BD1 DUP2 PUSH2 0x46DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4BF1 DUP2 PUSH2 0x4700 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C11 DUP2 PUSH2 0x4723 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C31 DUP2 PUSH2 0x4746 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C51 DUP2 PUSH2 0x478C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C72 DUP2 DUP5 PUSH2 0x47AF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4C8F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4830 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4CAA PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4830 JUMP JUMPDEST PUSH2 0x4CB7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x440E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x4CD3 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x4830 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x4CE5 DUP2 DUP7 PUSH2 0x4538 JUMP JUMPDEST SWAP1 POP PUSH2 0x4CF4 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x448A JUMP JUMPDEST PUSH2 0x4D01 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x4830 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D14 PUSH2 0x4D25 JUMP JUMPDEST SWAP1 POP PUSH2 0x4D20 DUP3 DUP3 PUSH2 0x50C2 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4D4A JUMPI PUSH2 0x4D49 PUSH2 0x5229 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4D76 JUMPI PUSH2 0x4D75 PUSH2 0x5229 JUMP JUMPDEST JUMPDEST PUSH2 0x4D7F DUP3 PUSH2 0x5271 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4DA7 JUMPI PUSH2 0x4DA6 PUSH2 0x5229 JUMP JUMPDEST JUMPDEST PUSH2 0x4DB0 DUP3 PUSH2 0x5271 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E60 DUP3 PUSH2 0x4FC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E6B DUP4 PUSH2 0x4FC2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x4EA0 JUMPI PUSH2 0x4E9F PUSH2 0x516D JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EB6 DUP3 PUSH2 0x4FC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x4EC1 DUP4 PUSH2 0x4FC2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4ED1 JUMPI PUSH2 0x4ED0 PUSH2 0x519C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EE7 DUP3 PUSH2 0x4FC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x4EF2 DUP4 PUSH2 0x4FC2 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x4F2B JUMPI PUSH2 0x4F2A PUSH2 0x516D JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F41 DUP3 PUSH2 0x4FA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5011 DUP3 PUSH2 0x502A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5023 DUP3 PUSH2 0x502A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5035 DUP3 PUSH2 0x503C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5047 DUP3 PUSH2 0x4FA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x507B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5060 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x508A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x50A8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x50BC JUMPI PUSH2 0x50BB PUSH2 0x51CB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x50CB DUP3 PUSH2 0x5271 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x50EA JUMPI PUSH2 0x50E9 PUSH2 0x5229 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50FE DUP3 PUSH2 0x4FC2 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x5131 JUMPI PUSH2 0x5130 PUSH2 0x516D JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5147 DUP3 PUSH2 0x4FC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x5152 DUP4 PUSH2 0x4FC2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x5162 JUMPI PUSH2 0x5161 PUSH2 0x519C JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6578697374656E7420746F6B656E000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x5622 DUP2 PUSH2 0x4F36 JUMP JUMPDEST DUP2 EQ PUSH2 0x562D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5639 DUP2 PUSH2 0x4F48 JUMP JUMPDEST DUP2 EQ PUSH2 0x5644 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5650 DUP2 PUSH2 0x4F5E JUMP JUMPDEST DUP2 EQ PUSH2 0x565B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5667 DUP2 PUSH2 0x4F8A JUMP JUMPDEST DUP2 EQ PUSH2 0x5672 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x567E DUP2 PUSH2 0x4FC2 JUMP JUMPDEST DUP2 EQ PUSH2 0x5689 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5695 DUP2 PUSH2 0x4FF0 JUMP JUMPDEST DUP2 EQ PUSH2 0x56A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 0x4F CODECOPY PUSH28 0x26548B123133624BE961D002C44BDAE2E00AB4A2C438DF43964E2DBE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"652:10156:17:-:0;;;2919:751;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1390:113:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3236:16:17;5616:15:0;5599:32;;;;;;;;;;;;5556:80;1464:5:4;1456;:13;;;;;;;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;;;;;;;:::i;:::-;;1390:113;;936:32:3;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;3334:16:17::3;3289:62;;;;;;;;;;::::0;::::3;3381:14;3362:33;;;;;;;;;;::::0;::::3;3418:7;3406:19;;;;::::0;::::3;3457:16;3436:37;;;;;;;;;;::::0;::::3;3498:8;3484:11;:22;;;;;;;:::i;:::-;;3553:16;3517:53;;;;;;;;;;::::0;::::3;3598:1;3581:14;:18;;;;3644:17;3610:20;;:52;;;;;;;;;;;;;;;;;;2919:751:::0;;;;;;;652:10156;;640:96:10;693:7;719:10;712:17;;640:96;:::o;2433:187:3:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;652:10156:17:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;24:905:18:-;139:5;164:89;180:72;245:6;180:72;:::i;:::-;164:89;:::i;:::-;155:98;;273:5;299:6;349:3;341:4;333:6;329:17;324:3;320:27;317:36;314:143;;;368:79;;:::i;:::-;314:143;481:1;466:457;491:6;488:1;485:13;466:457;;;566:3;560:10;602:18;589:11;586:35;583:122;;;624:79;;:::i;:::-;583:122;748:11;740:6;736:24;786:58;840:3;828:10;786:58;:::i;:::-;781:3;774:71;874:4;869:3;865:14;858:21;;908:4;903:3;899:14;892:21;;526:397;;513:1;510;506:9;501:14;;466:457;;;470:14;145:784;;24:905;;;;;:::o;935:421::-;1024:5;1049:66;1065:49;1107:6;1065:49;:::i;:::-;1049:66;:::i;:::-;1040:75;;1138:6;1131:5;1124:21;1176:4;1169:5;1165:16;1214:3;1205:6;1200:3;1196:16;1193:25;1190:112;;;1221:79;;:::i;:::-;1190:112;1311:39;1343:6;1338:3;1333;1311:39;:::i;:::-;1030:326;935:421;;;;;:::o;1362:143::-;1419:5;1450:6;1444:13;1435:22;;1466:33;1493:5;1466:33;:::i;:::-;1362:143;;;;:::o;1528:381::-;1618:5;1667:3;1660:4;1652:6;1648:17;1644:27;1634:122;;1675:79;;:::i;:::-;1634:122;1779:4;1801:102;1899:3;1891:6;1883;1801:102;:::i;:::-;1792:111;;1624:285;1528:381;;;;:::o;1915:143::-;1972:5;2003:6;1997:13;1988:22;;2019:33;2046:5;2019:33;:::i;:::-;1915:143;;;;:::o;2078:355::-;2145:5;2194:3;2187:4;2179:6;2175:17;2171:27;2161:122;;2202:79;;:::i;:::-;2161:122;2312:6;2306:13;2337:90;2423:3;2415:6;2408:4;2400:6;2396:17;2337:90;:::i;:::-;2328:99;;2151:282;2078:355;;;;:::o;2439:141::-;2495:5;2526:6;2520:13;2511:22;;2542:32;2568:5;2542:32;:::i;:::-;2439:141;;;;:::o;2586:::-;2642:5;2673:6;2667:13;2658:22;;2689:32;2715:5;2689:32;:::i;:::-;2586:141;;;;:::o;2733:1506::-;2888:6;2896;2904;2912;2920;2928;2936;2985:3;2973:9;2964:7;2960:23;2956:33;2953:120;;;2992:79;;:::i;:::-;2953:120;3112:1;3137:64;3193:7;3184:6;3173:9;3169:22;3137:64;:::i;:::-;3127:74;;3083:128;3250:2;3276:63;3331:7;3322:6;3311:9;3307:22;3276:63;:::i;:::-;3266:73;;3221:128;3388:2;3414:64;3470:7;3461:6;3450:9;3446:22;3414:64;:::i;:::-;3404:74;;3359:129;3527:2;3553:63;3608:7;3599:6;3588:9;3584:22;3553:63;:::i;:::-;3543:73;;3498:128;3686:3;3675:9;3671:19;3665:26;3718:18;3710:6;3707:30;3704:117;;;3740:79;;:::i;:::-;3704:117;3845:97;3934:7;3925:6;3914:9;3910:22;3845:97;:::i;:::-;3835:107;;3636:316;3991:3;4018:64;4074:7;4065:6;4054:9;4050:22;4018:64;:::i;:::-;4008:74;;3962:130;4131:3;4158:64;4214:7;4205:6;4194:9;4190:22;4158:64;:::i;:::-;4148:74;;4102:130;2733:1506;;;;;;;;;;:::o;4245:129::-;4279:6;4306:20;;:::i;:::-;4296:30;;4335:33;4363:4;4355:6;4335:33;:::i;:::-;4245:129;;;:::o;4380:75::-;4413:6;4446:2;4440:9;4430:19;;4380:75;:::o;4461:259::-;4546:4;4636:18;4628:6;4625:30;4622:56;;;4658:18;;:::i;:::-;4622:56;4708:4;4700:6;4696:17;4688:25;;4461:259;;;:::o;4726:308::-;4788:4;4878:18;4870:6;4867:30;4864:56;;;4900:18;;:::i;:::-;4864:56;4938:29;4960:6;4938:29;:::i;:::-;4930:37;;5022:4;5016;5012:15;5004:23;;4726:308;;;:::o;5040:96::-;5077:7;5106:24;5124:5;5106:24;:::i;:::-;5095:35;;5040:96;;;:::o;5142:77::-;5179:7;5208:5;5197:16;;5142:77;;;:::o;5225:126::-;5262:7;5302:42;5295:5;5291:54;5280:65;;5225:126;;;:::o;5357:93::-;5393:7;5433:10;5426:5;5422:22;5411:33;;5357:93;;;:::o;5456:101::-;5492:7;5532:18;5525:5;5521:30;5510:41;;5456:101;;;:::o;5563:307::-;5631:1;5641:113;5655:6;5652:1;5649:13;5641:113;;;5740:1;5735:3;5731:11;5725:18;5721:1;5716:3;5712:11;5705:39;5677:2;5674:1;5670:10;5665:15;;5641:113;;;5772:6;5769:1;5766:13;5763:101;;;5852:1;5843:6;5838:3;5834:16;5827:27;5763:101;5612:258;5563:307;;;:::o;5876:320::-;5920:6;5957:1;5951:4;5947:12;5937:22;;6004:1;5998:4;5994:12;6025:18;6015:81;;6081:4;6073:6;6069:17;6059:27;;6015:81;6143:2;6135:6;6132:14;6112:18;6109:38;6106:84;;;6162:18;;:::i;:::-;6106:84;5927:269;5876:320;;;:::o;6202:281::-;6285:27;6307:4;6285:27;:::i;:::-;6277:6;6273:40;6415:6;6403:10;6400:22;6379:18;6367:10;6364:34;6361:62;6358:88;;;6426:18;;:::i;:::-;6358:88;6466:10;6462:2;6455:22;6245:238;6202:281;;:::o;6489:180::-;6537:77;6534:1;6527:88;6634:4;6631:1;6624:15;6658:4;6655:1;6648:15;6675:180;6723:77;6720:1;6713:88;6820:4;6817:1;6810:15;6844:4;6841:1;6834:15;6861:117;6970:1;6967;6960:12;6984:117;7093:1;7090;7083:12;7107:117;7216:1;7213;7206:12;7230:117;7339:1;7336;7329:12;7353:117;7462:1;7459;7452:12;7476:102;7517:6;7568:2;7564:7;7559:2;7552:5;7548:14;7544:28;7534:38;;7476:102;;;:::o;7584:122::-;7657:24;7675:5;7657:24;:::i;:::-;7650:5;7647:35;7637:63;;7696:1;7693;7686:12;7637:63;7584:122;:::o;7712:::-;7785:24;7803:5;7785:24;:::i;:::-;7778:5;7775:35;7765:63;;7824:1;7821;7814:12;7765:63;7712:122;:::o;7840:120::-;7912:23;7929:5;7912:23;:::i;:::-;7905:5;7902:34;7892:62;;7950:1;7947;7940:12;7892:62;7840:120;:::o;7966:::-;8038:23;8055:5;8038:23;:::i;:::-;8031:5;8028:34;8018:62;;8076:1;8073;8066:12;8018:62;7966:120;:::o;652:10156:17:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@PRICE_LEGENDARY_BOX_USD_4679":{"entryPoint":9746,"id":4679,"parameterSlots":0,"returnSlots":0},"@PRICE_NORMAL_BOX_USD_4673":{"entryPoint":5257,"id":4673,"parameterSlots":0,"returnSlots":0},"@PRICE_RARE_BOX_USD_4676":{"entryPoint":3559,"id":4676,"parameterSlots":0,"returnSlots":0},"@_afterTokenTransfer_1223":{"entryPoint":14030,"id":1223,"parameterSlots":4,"returnSlots":0},"@_approve_1089":{"entryPoint":9940,"id":1089,"parameterSlots":2,"returnSlots":0},"@_baseURI_526":{"entryPoint":13897,"id":526,"parameterSlots":0,"returnSlots":1},"@_beforeTokenTransfer_1210":{"entryPoint":14024,"id":1210,"parameterSlots":4,"returnSlots":0},"@_checkOnERC721Received_1197":{"entryPoint":14127,"id":1197,"parameterSlots":4,"returnSlots":1},"@_checkOwner_254":{"entryPoint":12844,"id":254,"parameterSlots":0,"returnSlots":0},"@_exists_758":{"entryPoint":13740,"id":758,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_792":{"entryPoint":11933,"id":792,"parameterSlots":2,"returnSlots":1},"@_mint_913":{"entryPoint":14750,"id":913,"parameterSlots":2,"returnSlots":0},"@_msgSender_1867":{"entryPoint":9932,"id":1867,"parameterSlots":0,"returnSlots":1},"@_ownerOf_740":{"entryPoint":13116,"id":740,"parameterSlots":1,"returnSlots":1},"@_requireMinted_1135":{"entryPoint":9857,"id":1135,"parameterSlots":1,"returnSlots":0},"@_safeMint_807":{"entryPoint":12970,"id":807,"parameterSlots":2,"returnSlots":0},"@_safeMint_836":{"entryPoint":14036,"id":836,"parameterSlots":3,"returnSlots":0},"@_safeTransfer_727":{"entryPoint":13805,"id":727,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_1121":{"entryPoint":13375,"id":1121,"parameterSlots":3,"returnSlots":0},"@_setTokenURI_1467":{"entryPoint":13000,"id":1467,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_311":{"entryPoint":13177,"id":311,"parameterSlots":1,"returnSlots":0},"@_transfer_1065":{"entryPoint":12082,"id":1065,"parameterSlots":3,"returnSlots":0},"@approve_569":{"entryPoint":2991,"id":569,"parameterSlots":2,"returnSlots":0},"@balanceOf_430":{"entryPoint":5407,"id":430,"parameterSlots":1,"returnSlots":1},"@buyLegendaryBox_5055":{"entryPoint":4524,"id":5055,"parameterSlots":0,"returnSlots":0},"@buyNormalBox_4925":{"entryPoint":8968,"id":4925,"parameterSlots":0,"returnSlots":0},"@buyRareBox_4990":{"entryPoint":8470,"id":4990,"parameterSlots":0,"returnSlots":0},"@fulfillRandomWords_5252":{"entryPoint":10125,"id":5252,"parameterSlots":2,"returnSlots":0},"@getApproved_587":{"entryPoint":2921,"id":587,"parameterSlots":1,"returnSlots":1},"@getLegendaryCardUrisLength_5456":{"entryPoint":3911,"id":5456,"parameterSlots":0,"returnSlots":1},"@getLegendaryCard_5426":{"entryPoint":6454,"id":5426,"parameterSlots":1,"returnSlots":1},"@getNftBoxesUri_5498":{"entryPoint":4348,"id":5498,"parameterSlots":1,"returnSlots":1},"@getNft_5486":{"entryPoint":4078,"id":5486,"parameterSlots":1,"returnSlots":1},"@getNormalCardUrisLength_5436":{"entryPoint":3564,"id":5436,"parameterSlots":0,"returnSlots":1},"@getNormalCard_5392":{"entryPoint":6052,"id":5392,"parameterSlots":1,"returnSlots":1},"@getPriceFeed_5465":{"entryPoint":6392,"id":5465,"parameterSlots":0,"returnSlots":1},"@getRareCardUrisLength_5446":{"entryPoint":5843,"id":5446,"parameterSlots":0,"returnSlots":1},"@getRareCard_5409":{"entryPoint":5611,"id":5409,"parameterSlots":1,"returnSlots":1},"@getTokenCounter_5473":{"entryPoint":5397,"id":5473,"parameterSlots":0,"returnSlots":1},"@getTokenIds_5375":{"entryPoint":8065,"id":5375,"parameterSlots":1,"returnSlots":1},"@i_charactersContract_4654":{"entryPoint":5805,"id":4654,"parameterSlots":0,"returnSlots":0},"@isApprovedForAll_622":{"entryPoint":9466,"id":622,"parameterSlots":2,"returnSlots":1},"@isContract_1543":{"entryPoint":15292,"id":1543,"parameterSlots":1,"returnSlots":1},"@log10_2790":{"entryPoint":15327,"id":2790,"parameterSlots":1,"returnSlots":1},"@mappingNfts_4702":{"entryPoint":7593,"id":4702,"parameterSlots":0,"returnSlots":0},"@mappingRequestToToken_4706":{"entryPoint":2487,"id":4706,"parameterSlots":0,"returnSlots":0},"@name_468":{"entryPoint":2775,"id":468,"parameterSlots":0,"returnSlots":1},"@openBox_5110":{"entryPoint":6648,"id":5110,"parameterSlots":1,"returnSlots":1},"@ownerOf_458":{"entryPoint":5262,"id":458,"parameterSlots":1,"returnSlots":1},"@owner_240":{"entryPoint":6010,"id":240,"parameterSlots":0,"returnSlots":1},"@priceFeedUsdToEth_5532":{"entryPoint":5022,"id":5532,"parameterSlots":1,"returnSlots":1},"@rawFulfillRandomWords_56":{"entryPoint":3271,"id":56,"parameterSlots":2,"returnSlots":0},"@renounceOwnership_268":{"entryPoint":5591,"id":268,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_668":{"entryPoint":4316,"id":668,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_698":{"entryPoint":7495,"id":698,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_604":{"entryPoint":6432,"id":604,"parameterSlots":2,"returnSlots":0},"@supportsInterface_2075":{"entryPoint":9751,"id":2075,"parameterSlots":1,"returnSlots":1},"@supportsInterface_406":{"entryPoint":2511,"id":406,"parameterSlots":1,"returnSlots":1},"@symbol_478":{"entryPoint":6246,"id":478,"parameterSlots":0,"returnSlots":1},"@toString_1935":{"entryPoint":14534,"id":1935,"parameterSlots":1,"returnSlots":1},"@tokenURI_1445":{"entryPoint":7790,"id":1445,"parameterSlots":1,"returnSlots":1},"@tokenURI_517":{"entryPoint":13920,"id":517,"parameterSlots":1,"returnSlots":1},"@tradeNftAddress_4656":{"entryPoint":2737,"id":4656,"parameterSlots":0,"returnSlots":0},"@transferFrom_649":{"entryPoint":3463,"id":649,"parameterSlots":3,"returnSlots":0},"@transferOwnership_291":{"entryPoint":9614,"id":291,"parameterSlots":1,"returnSlots":0},"@withdraw_5286":{"entryPoint":3731,"id":5286,"parameterSlots":0,"returnSlots":0},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":15871,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":15983,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":16049,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":16115,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":16136,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":16182,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":16203,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":16224,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":16245,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_int256_fromMemory":{"entryPoint":16291,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":16312,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":16358,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":16379,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint80_fromMemory":{"entryPoint":16400,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":16421,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":16466,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":16530,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":16613,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":16744,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":16808,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":16872,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":16917,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256t_uint256_fromMemory":{"entryPoint":16962,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256":{"entryPoint":17093,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":17138,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":17183,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory":{"entryPoint":17275,"id":null,"parameterSlots":2,"returnSlots":5},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":17398,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":17422,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":17437,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool":{"entryPoint":17531,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":17546,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":17561,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":17576,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_AggregatorV3Interface_$103_to_t_address_fromStack":{"entryPoint":17633,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_Characters_$3143_to_t_address_fromStack":{"entryPoint":17648,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":17663,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":17720,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":17777,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack":{"entryPoint":17826,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack":{"entryPoint":17861,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":17896,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack":{"entryPoint":17931,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack":{"entryPoint":17966,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack":{"entryPoint":18001,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack":{"entryPoint":18036,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack":{"entryPoint":18071,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack":{"entryPoint":18106,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack":{"entryPoint":18141,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":18176,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack":{"entryPoint":18211,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack":{"entryPoint":18246,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":18281,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack":{"entryPoint":18316,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_Nft_$4670_memory_ptr_to_t_struct$_Nft_$4670_memory_ptr_fromStack":{"entryPoint":18351,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint16_to_t_uint16_fromStack":{"entryPoint":18450,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":18465,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":18480,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":18495,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":18510,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":18525,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":18561,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":18582,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":18609,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":18650,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_string_memory_ptr__to_t_address_t_uint256_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18726,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_string_memory_ptr_t_uint256__to_t_address_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":18788,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":18864,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":18898,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed":{"entryPoint":18925,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_contract$_AggregatorV3Interface_$103__to_t_address__fromStack_reversed":{"entryPoint":19008,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_Characters_$3143__to_t_address__fromStack_reversed":{"entryPoint":19035,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19062,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19096,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19128,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19160,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19192,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19224,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19256,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19288,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19320,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19352,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19384,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19416,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19448,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19480,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19512,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_Nft_$4670_memory_ptr__to_t_struct$_Nft_$4670_memory_ptr__fromStack_reversed":{"entryPoint":19544,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":19578,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed":{"entryPoint":19605,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_bool_t_uint256__to_t_uint256_t_string_memory_ptr_t_bool_t_uint256__fromStack_reversed":{"entryPoint":19646,"id":null,"parameterSlots":5,"returnSlots":1},"allocate_memory":{"entryPoint":19722,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":19749,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":19759,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":19803,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":19852,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":19901,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":19917,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":19928,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":19939,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":19950,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":19963,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":19980,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":19997,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr":{"entryPoint":20008,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":20025,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":20042,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":20053,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":20139,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":20188,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":20278,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":20296,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":20308,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":20318,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_int256":{"entryPoint":20362,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint16":{"entryPoint":20372,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":20386,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":20418,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":20428,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":20444,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint80":{"entryPoint":20464,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_AggregatorV3Interface_$103_to_t_address":{"entryPoint":20486,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_Characters_$3143_to_t_address":{"entryPoint":20504,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":20522,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":20540,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":20558,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":20573,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":20624,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":20674,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":20723,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":20796,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":20845,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":20892,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":20939,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":20986,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":21033,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":21080,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":21085,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":21090,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":21095,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":21100,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":21105,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af":{"entryPoint":21122,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e":{"entryPoint":21201,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":21280,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48":{"entryPoint":21359,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57":{"entryPoint":21438,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4":{"entryPoint":21479,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05":{"entryPoint":21558,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159":{"entryPoint":21599,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4":{"entryPoint":21678,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6":{"entryPoint":21757,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":21798,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f":{"entryPoint":21839,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942":{"entryPoint":21880,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":21959,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83":{"entryPoint":21962,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":22041,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":22064,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":22087,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_int256":{"entryPoint":22110,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":22133,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint80":{"entryPoint":22156,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:47014:18","statements":[{"body":{"nodeType":"YulBlock","src":"126:620:18","statements":[{"nodeType":"YulAssignment","src":"136:90:18","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"218:6:18"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"161:56:18"},"nodeType":"YulFunctionCall","src":"161:64:18"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"145:15:18"},"nodeType":"YulFunctionCall","src":"145:81:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"136:5:18"}]},{"nodeType":"YulVariableDeclaration","src":"235:16:18","value":{"name":"array","nodeType":"YulIdentifier","src":"246:5:18"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"239:3:18","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"268:5:18"},{"name":"length","nodeType":"YulIdentifier","src":"275:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"261:6:18"},"nodeType":"YulFunctionCall","src":"261:21:18"},"nodeType":"YulExpressionStatement","src":"261:21:18"},{"nodeType":"YulAssignment","src":"291:23:18","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"302:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"309:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"298:3:18"},"nodeType":"YulFunctionCall","src":"298:16:18"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"291:3:18"}]},{"nodeType":"YulVariableDeclaration","src":"324:17:18","value":{"name":"offset","nodeType":"YulIdentifier","src":"335:6:18"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"328:3:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"390:103:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"404:77:18"},"nodeType":"YulFunctionCall","src":"404:79:18"},"nodeType":"YulExpressionStatement","src":"404:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"360:3:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"369:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"377:4:18","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"365:3:18"},"nodeType":"YulFunctionCall","src":"365:17:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"356:3:18"},"nodeType":"YulFunctionCall","src":"356:27:18"},{"name":"end","nodeType":"YulIdentifier","src":"385:3:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"353:2:18"},"nodeType":"YulFunctionCall","src":"353:36:18"},"nodeType":"YulIf","src":"350:143:18"},{"body":{"nodeType":"YulBlock","src":"562:178:18","statements":[{"nodeType":"YulVariableDeclaration","src":"577:21:18","value":{"name":"src","nodeType":"YulIdentifier","src":"595:3:18"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"581:10:18","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"619:3:18"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"645:10:18"},{"name":"end","nodeType":"YulIdentifier","src":"657:3:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"624:20:18"},"nodeType":"YulFunctionCall","src":"624:37:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"612:6:18"},"nodeType":"YulFunctionCall","src":"612:50:18"},"nodeType":"YulExpressionStatement","src":"612:50:18"},{"nodeType":"YulAssignment","src":"675:21:18","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"686:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"691:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"682:3:18"},"nodeType":"YulFunctionCall","src":"682:14:18"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"675:3:18"}]},{"nodeType":"YulAssignment","src":"709:21:18","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"720:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"725:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"716:3:18"},"nodeType":"YulFunctionCall","src":"716:14:18"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"709:3:18"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"524:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"527:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"521:2:18"},"nodeType":"YulFunctionCall","src":"521:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"535:18:18","statements":[{"nodeType":"YulAssignment","src":"537:14:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"546:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"549:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"542:3:18"},"nodeType":"YulFunctionCall","src":"542:9:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"537:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"506:14:18","statements":[{"nodeType":"YulVariableDeclaration","src":"508:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"517:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"512:1:18","type":""}]}]},"src":"502:238:18"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"96:6:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"104:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"112:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"120:5:18","type":""}],"src":"24:722:18"},{"body":{"nodeType":"YulBlock","src":"835:327:18","statements":[{"nodeType":"YulAssignment","src":"845:74:18","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"911:6:18"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"870:40:18"},"nodeType":"YulFunctionCall","src":"870:48:18"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"854:15:18"},"nodeType":"YulFunctionCall","src":"854:65:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"845:5:18"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"935:5:18"},{"name":"length","nodeType":"YulIdentifier","src":"942:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"928:6:18"},"nodeType":"YulFunctionCall","src":"928:21:18"},"nodeType":"YulExpressionStatement","src":"928:21:18"},{"nodeType":"YulVariableDeclaration","src":"958:27:18","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"973:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"980:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"969:3:18"},"nodeType":"YulFunctionCall","src":"969:16:18"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"962:3:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"1023:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"1025:77:18"},"nodeType":"YulFunctionCall","src":"1025:79:18"},"nodeType":"YulExpressionStatement","src":"1025:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1004:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"1009:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1000:3:18"},"nodeType":"YulFunctionCall","src":"1000:16:18"},{"name":"end","nodeType":"YulIdentifier","src":"1018:3:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"997:2:18"},"nodeType":"YulFunctionCall","src":"997:25:18"},"nodeType":"YulIf","src":"994:112:18"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1139:3:18"},{"name":"dst","nodeType":"YulIdentifier","src":"1144:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"1149:6:18"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"1115:23:18"},"nodeType":"YulFunctionCall","src":"1115:41:18"},"nodeType":"YulExpressionStatement","src":"1115:41:18"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"808:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"813:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"821:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"829:5:18","type":""}],"src":"752:410:18"},{"body":{"nodeType":"YulBlock","src":"1263:326:18","statements":[{"nodeType":"YulAssignment","src":"1273:75:18","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1340:6:18"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1298:41:18"},"nodeType":"YulFunctionCall","src":"1298:49:18"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1282:15:18"},"nodeType":"YulFunctionCall","src":"1282:66:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1273:5:18"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1364:5:18"},{"name":"length","nodeType":"YulIdentifier","src":"1371:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1357:6:18"},"nodeType":"YulFunctionCall","src":"1357:21:18"},"nodeType":"YulExpressionStatement","src":"1357:21:18"},{"nodeType":"YulVariableDeclaration","src":"1387:27:18","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1402:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"1409:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1398:3:18"},"nodeType":"YulFunctionCall","src":"1398:16:18"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"1391:3:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"1452:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"1454:77:18"},"nodeType":"YulFunctionCall","src":"1454:79:18"},"nodeType":"YulExpressionStatement","src":"1454:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1433:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"1438:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1429:3:18"},"nodeType":"YulFunctionCall","src":"1429:16:18"},{"name":"end","nodeType":"YulIdentifier","src":"1447:3:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1426:2:18"},"nodeType":"YulFunctionCall","src":"1426:25:18"},"nodeType":"YulIf","src":"1423:112:18"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1566:3:18"},{"name":"dst","nodeType":"YulIdentifier","src":"1571:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"1576:6:18"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"1544:21:18"},"nodeType":"YulFunctionCall","src":"1544:39:18"},"nodeType":"YulExpressionStatement","src":"1544:39:18"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1236:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"1241:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"1249:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1257:5:18","type":""}],"src":"1168:421:18"},{"body":{"nodeType":"YulBlock","src":"1647:87:18","statements":[{"nodeType":"YulAssignment","src":"1657:29:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1679:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1666:12:18"},"nodeType":"YulFunctionCall","src":"1666:20:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1657:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1722:5:18"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1695:26:18"},"nodeType":"YulFunctionCall","src":"1695:33:18"},"nodeType":"YulExpressionStatement","src":"1695:33:18"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1625:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"1633:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1641:5:18","type":""}],"src":"1595:139:18"},{"body":{"nodeType":"YulBlock","src":"1834:293:18","statements":[{"body":{"nodeType":"YulBlock","src":"1883:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"1885:77:18"},"nodeType":"YulFunctionCall","src":"1885:79:18"},"nodeType":"YulExpressionStatement","src":"1885:79:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1862:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"1870:4:18","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1858:3:18"},"nodeType":"YulFunctionCall","src":"1858:17:18"},{"name":"end","nodeType":"YulIdentifier","src":"1877:3:18"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1854:3:18"},"nodeType":"YulFunctionCall","src":"1854:27:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1847:6:18"},"nodeType":"YulFunctionCall","src":"1847:35:18"},"nodeType":"YulIf","src":"1844:122:18"},{"nodeType":"YulVariableDeclaration","src":"1975:34:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2002:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1989:12:18"},"nodeType":"YulFunctionCall","src":"1989:20:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1979:6:18","type":""}]},{"nodeType":"YulAssignment","src":"2018:103:18","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2094:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"2102:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2090:3:18"},"nodeType":"YulFunctionCall","src":"2090:17:18"},{"name":"length","nodeType":"YulIdentifier","src":"2109:6:18"},{"name":"end","nodeType":"YulIdentifier","src":"2117:3:18"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"2027:62:18"},"nodeType":"YulFunctionCall","src":"2027:94:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2018:5:18"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1812:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"1820:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1828:5:18","type":""}],"src":"1757:370:18"},{"body":{"nodeType":"YulBlock","src":"2182:84:18","statements":[{"nodeType":"YulAssignment","src":"2192:29:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2214:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2201:12:18"},"nodeType":"YulFunctionCall","src":"2201:20:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2192:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2254:5:18"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"2230:23:18"},"nodeType":"YulFunctionCall","src":"2230:30:18"},"nodeType":"YulExpressionStatement","src":"2230:30:18"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2160:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"2168:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2176:5:18","type":""}],"src":"2133:133:18"},{"body":{"nodeType":"YulBlock","src":"2323:86:18","statements":[{"nodeType":"YulAssignment","src":"2333:29:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2355:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2342:12:18"},"nodeType":"YulFunctionCall","src":"2342:20:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2333:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2397:5:18"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"2371:25:18"},"nodeType":"YulFunctionCall","src":"2371:32:18"},"nodeType":"YulExpressionStatement","src":"2371:32:18"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2301:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"2309:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2317:5:18","type":""}],"src":"2272:137:18"},{"body":{"nodeType":"YulBlock","src":"2477:79:18","statements":[{"nodeType":"YulAssignment","src":"2487:22:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2502:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2496:5:18"},"nodeType":"YulFunctionCall","src":"2496:13:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2487:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2544:5:18"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"2518:25:18"},"nodeType":"YulFunctionCall","src":"2518:32:18"},"nodeType":"YulExpressionStatement","src":"2518:32:18"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2455:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"2463:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2471:5:18","type":""}],"src":"2415:141:18"},{"body":{"nodeType":"YulBlock","src":"2636:277:18","statements":[{"body":{"nodeType":"YulBlock","src":"2685:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2687:77:18"},"nodeType":"YulFunctionCall","src":"2687:79:18"},"nodeType":"YulExpressionStatement","src":"2687:79:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2664:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"2672:4:18","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2660:3:18"},"nodeType":"YulFunctionCall","src":"2660:17:18"},{"name":"end","nodeType":"YulIdentifier","src":"2679:3:18"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2656:3:18"},"nodeType":"YulFunctionCall","src":"2656:27:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2649:6:18"},"nodeType":"YulFunctionCall","src":"2649:35:18"},"nodeType":"YulIf","src":"2646:122:18"},{"nodeType":"YulVariableDeclaration","src":"2777:34:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2804:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2791:12:18"},"nodeType":"YulFunctionCall","src":"2791:20:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2781:6:18","type":""}]},{"nodeType":"YulAssignment","src":"2820:87:18","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2880:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"2888:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2876:3:18"},"nodeType":"YulFunctionCall","src":"2876:17:18"},{"name":"length","nodeType":"YulIdentifier","src":"2895:6:18"},{"name":"end","nodeType":"YulIdentifier","src":"2903:3:18"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"2829:46:18"},"nodeType":"YulFunctionCall","src":"2829:78:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2820:5:18"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2614:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"2622:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2630:5:18","type":""}],"src":"2575:338:18"},{"body":{"nodeType":"YulBlock","src":"2981:79:18","statements":[{"nodeType":"YulAssignment","src":"2991:22:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3006:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3000:5:18"},"nodeType":"YulFunctionCall","src":"3000:13:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2991:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3048:5:18"}],"functionName":{"name":"validator_revert_t_int256","nodeType":"YulIdentifier","src":"3022:25:18"},"nodeType":"YulFunctionCall","src":"3022:32:18"},"nodeType":"YulExpressionStatement","src":"3022:32:18"}]},"name":"abi_decode_t_int256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2959:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"2967:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2975:5:18","type":""}],"src":"2919:141:18"},{"body":{"nodeType":"YulBlock","src":"3153:282:18","statements":[{"body":{"nodeType":"YulBlock","src":"3202:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"3204:77:18"},"nodeType":"YulFunctionCall","src":"3204:79:18"},"nodeType":"YulExpressionStatement","src":"3204:79:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3181:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"3189:4:18","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3177:3:18"},"nodeType":"YulFunctionCall","src":"3177:17:18"},{"name":"end","nodeType":"YulIdentifier","src":"3196:3:18"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3173:3:18"},"nodeType":"YulFunctionCall","src":"3173:27:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3166:6:18"},"nodeType":"YulFunctionCall","src":"3166:35:18"},"nodeType":"YulIf","src":"3163:122:18"},{"nodeType":"YulVariableDeclaration","src":"3294:27:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3314:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3308:5:18"},"nodeType":"YulFunctionCall","src":"3308:13:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3298:6:18","type":""}]},{"nodeType":"YulAssignment","src":"3330:99:18","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3402:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"3410:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3398:3:18"},"nodeType":"YulFunctionCall","src":"3398:17:18"},{"name":"length","nodeType":"YulIdentifier","src":"3417:6:18"},{"name":"end","nodeType":"YulIdentifier","src":"3425:3:18"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3339:58:18"},"nodeType":"YulFunctionCall","src":"3339:90:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3330:5:18"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3131:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"3139:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3147:5:18","type":""}],"src":"3080:355:18"},{"body":{"nodeType":"YulBlock","src":"3493:87:18","statements":[{"nodeType":"YulAssignment","src":"3503:29:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3525:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3512:12:18"},"nodeType":"YulFunctionCall","src":"3512:20:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3503:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3568:5:18"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3541:26:18"},"nodeType":"YulFunctionCall","src":"3541:33:18"},"nodeType":"YulExpressionStatement","src":"3541:33:18"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3471:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"3479:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3487:5:18","type":""}],"src":"3441:139:18"},{"body":{"nodeType":"YulBlock","src":"3649:80:18","statements":[{"nodeType":"YulAssignment","src":"3659:22:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3674:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3668:5:18"},"nodeType":"YulFunctionCall","src":"3668:13:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3659:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3717:5:18"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3690:26:18"},"nodeType":"YulFunctionCall","src":"3690:33:18"},"nodeType":"YulExpressionStatement","src":"3690:33:18"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3627:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"3635:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3643:5:18","type":""}],"src":"3586:143:18"},{"body":{"nodeType":"YulBlock","src":"3797:79:18","statements":[{"nodeType":"YulAssignment","src":"3807:22:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3822:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3816:5:18"},"nodeType":"YulFunctionCall","src":"3816:13:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3807:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3864:5:18"}],"functionName":{"name":"validator_revert_t_uint80","nodeType":"YulIdentifier","src":"3838:25:18"},"nodeType":"YulFunctionCall","src":"3838:32:18"},"nodeType":"YulExpressionStatement","src":"3838:32:18"}]},"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3775:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"3783:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3791:5:18","type":""}],"src":"3735:141:18"},{"body":{"nodeType":"YulBlock","src":"3948:263:18","statements":[{"body":{"nodeType":"YulBlock","src":"3994:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3996:77:18"},"nodeType":"YulFunctionCall","src":"3996:79:18"},"nodeType":"YulExpressionStatement","src":"3996:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3969:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"3978:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3965:3:18"},"nodeType":"YulFunctionCall","src":"3965:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"3990:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3961:3:18"},"nodeType":"YulFunctionCall","src":"3961:32:18"},"nodeType":"YulIf","src":"3958:119:18"},{"nodeType":"YulBlock","src":"4087:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"4102:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"4116:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4106:6:18","type":""}]},{"nodeType":"YulAssignment","src":"4131:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4166:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"4177:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4162:3:18"},"nodeType":"YulFunctionCall","src":"4162:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4186:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4141:20:18"},"nodeType":"YulFunctionCall","src":"4141:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4131:6:18"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3918:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3929:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3941:6:18","type":""}],"src":"3882:329:18"},{"body":{"nodeType":"YulBlock","src":"4300:391:18","statements":[{"body":{"nodeType":"YulBlock","src":"4346:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4348:77:18"},"nodeType":"YulFunctionCall","src":"4348:79:18"},"nodeType":"YulExpressionStatement","src":"4348:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4321:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"4330:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4317:3:18"},"nodeType":"YulFunctionCall","src":"4317:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"4342:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4313:3:18"},"nodeType":"YulFunctionCall","src":"4313:32:18"},"nodeType":"YulIf","src":"4310:119:18"},{"nodeType":"YulBlock","src":"4439:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"4454:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"4468:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4458:6:18","type":""}]},{"nodeType":"YulAssignment","src":"4483:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4518:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"4529:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4514:3:18"},"nodeType":"YulFunctionCall","src":"4514:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4538:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4493:20:18"},"nodeType":"YulFunctionCall","src":"4493:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4483:6:18"}]}]},{"nodeType":"YulBlock","src":"4566:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"4581:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"4595:2:18","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4585:6:18","type":""}]},{"nodeType":"YulAssignment","src":"4611:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4646:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"4657:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4642:3:18"},"nodeType":"YulFunctionCall","src":"4642:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4666:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4621:20:18"},"nodeType":"YulFunctionCall","src":"4621:53:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4611:6:18"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4262:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4273:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4285:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4293:6:18","type":""}],"src":"4217:474:18"},{"body":{"nodeType":"YulBlock","src":"4797:519:18","statements":[{"body":{"nodeType":"YulBlock","src":"4843:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4845:77:18"},"nodeType":"YulFunctionCall","src":"4845:79:18"},"nodeType":"YulExpressionStatement","src":"4845:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4818:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"4827:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4814:3:18"},"nodeType":"YulFunctionCall","src":"4814:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"4839:2:18","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4810:3:18"},"nodeType":"YulFunctionCall","src":"4810:32:18"},"nodeType":"YulIf","src":"4807:119:18"},{"nodeType":"YulBlock","src":"4936:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"4951:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"4965:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4955:6:18","type":""}]},{"nodeType":"YulAssignment","src":"4980:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5015:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"5026:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5011:3:18"},"nodeType":"YulFunctionCall","src":"5011:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5035:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4990:20:18"},"nodeType":"YulFunctionCall","src":"4990:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4980:6:18"}]}]},{"nodeType":"YulBlock","src":"5063:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"5078:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"5092:2:18","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5082:6:18","type":""}]},{"nodeType":"YulAssignment","src":"5108:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5143:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"5154:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5139:3:18"},"nodeType":"YulFunctionCall","src":"5139:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5163:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5118:20:18"},"nodeType":"YulFunctionCall","src":"5118:53:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5108:6:18"}]}]},{"nodeType":"YulBlock","src":"5191:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"5206:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"5220:2:18","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5210:6:18","type":""}]},{"nodeType":"YulAssignment","src":"5236:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5271:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"5282:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5267:3:18"},"nodeType":"YulFunctionCall","src":"5267:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5291:7:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5246:20:18"},"nodeType":"YulFunctionCall","src":"5246:53:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5236:6:18"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4751:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4762:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4774:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4782:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4790:6:18","type":""}],"src":"4697:619:18"},{"body":{"nodeType":"YulBlock","src":"5448:817:18","statements":[{"body":{"nodeType":"YulBlock","src":"5495:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5497:77:18"},"nodeType":"YulFunctionCall","src":"5497:79:18"},"nodeType":"YulExpressionStatement","src":"5497:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5469:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"5478:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5465:3:18"},"nodeType":"YulFunctionCall","src":"5465:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"5490:3:18","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5461:3:18"},"nodeType":"YulFunctionCall","src":"5461:33:18"},"nodeType":"YulIf","src":"5458:120:18"},{"nodeType":"YulBlock","src":"5588:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"5603:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"5617:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5607:6:18","type":""}]},{"nodeType":"YulAssignment","src":"5632:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5667:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"5678:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5663:3:18"},"nodeType":"YulFunctionCall","src":"5663:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5687:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5642:20:18"},"nodeType":"YulFunctionCall","src":"5642:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5632:6:18"}]}]},{"nodeType":"YulBlock","src":"5715:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"5730:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"5744:2:18","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5734:6:18","type":""}]},{"nodeType":"YulAssignment","src":"5760:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5795:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"5806:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5791:3:18"},"nodeType":"YulFunctionCall","src":"5791:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5815:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5770:20:18"},"nodeType":"YulFunctionCall","src":"5770:53:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5760:6:18"}]}]},{"nodeType":"YulBlock","src":"5843:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"5858:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"5872:2:18","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5862:6:18","type":""}]},{"nodeType":"YulAssignment","src":"5888:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5923:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"5934:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5919:3:18"},"nodeType":"YulFunctionCall","src":"5919:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5943:7:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5898:20:18"},"nodeType":"YulFunctionCall","src":"5898:53:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5888:6:18"}]}]},{"nodeType":"YulBlock","src":"5971:287:18","statements":[{"nodeType":"YulVariableDeclaration","src":"5986:46:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6017:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6028:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6013:3:18"},"nodeType":"YulFunctionCall","src":"6013:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6000:12:18"},"nodeType":"YulFunctionCall","src":"6000:32:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5990:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"6079:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"6081:77:18"},"nodeType":"YulFunctionCall","src":"6081:79:18"},"nodeType":"YulExpressionStatement","src":"6081:79:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6051:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"6059:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6048:2:18"},"nodeType":"YulFunctionCall","src":"6048:30:18"},"nodeType":"YulIf","src":"6045:117:18"},{"nodeType":"YulAssignment","src":"6176:72:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6220:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"6231:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6216:3:18"},"nodeType":"YulFunctionCall","src":"6216:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6240:7:18"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"6186:29:18"},"nodeType":"YulFunctionCall","src":"6186:62:18"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"6176:6:18"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5394:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5405:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5417:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5425:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5433:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5441:6:18","type":""}],"src":"5322:943:18"},{"body":{"nodeType":"YulBlock","src":"6351:388:18","statements":[{"body":{"nodeType":"YulBlock","src":"6397:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6399:77:18"},"nodeType":"YulFunctionCall","src":"6399:79:18"},"nodeType":"YulExpressionStatement","src":"6399:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6372:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"6381:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6368:3:18"},"nodeType":"YulFunctionCall","src":"6368:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"6393:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6364:3:18"},"nodeType":"YulFunctionCall","src":"6364:32:18"},"nodeType":"YulIf","src":"6361:119:18"},{"nodeType":"YulBlock","src":"6490:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"6505:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"6519:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6509:6:18","type":""}]},{"nodeType":"YulAssignment","src":"6534:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6569:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"6580:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6565:3:18"},"nodeType":"YulFunctionCall","src":"6565:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6589:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6544:20:18"},"nodeType":"YulFunctionCall","src":"6544:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6534:6:18"}]}]},{"nodeType":"YulBlock","src":"6617:115:18","statements":[{"nodeType":"YulVariableDeclaration","src":"6632:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"6646:2:18","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6636:6:18","type":""}]},{"nodeType":"YulAssignment","src":"6662:60:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6694:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"6705:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6690:3:18"},"nodeType":"YulFunctionCall","src":"6690:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6714:7:18"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"6672:17:18"},"nodeType":"YulFunctionCall","src":"6672:50:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6662:6:18"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6313:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6324:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6336:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6344:6:18","type":""}],"src":"6271:468:18"},{"body":{"nodeType":"YulBlock","src":"6828:391:18","statements":[{"body":{"nodeType":"YulBlock","src":"6874:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6876:77:18"},"nodeType":"YulFunctionCall","src":"6876:79:18"},"nodeType":"YulExpressionStatement","src":"6876:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6849:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"6858:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6845:3:18"},"nodeType":"YulFunctionCall","src":"6845:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"6870:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6841:3:18"},"nodeType":"YulFunctionCall","src":"6841:32:18"},"nodeType":"YulIf","src":"6838:119:18"},{"nodeType":"YulBlock","src":"6967:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"6982:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"6996:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6986:6:18","type":""}]},{"nodeType":"YulAssignment","src":"7011:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7046:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"7057:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7042:3:18"},"nodeType":"YulFunctionCall","src":"7042:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7066:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7021:20:18"},"nodeType":"YulFunctionCall","src":"7021:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7011:6:18"}]}]},{"nodeType":"YulBlock","src":"7094:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"7109:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"7123:2:18","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7113:6:18","type":""}]},{"nodeType":"YulAssignment","src":"7139:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7174:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"7185:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7170:3:18"},"nodeType":"YulFunctionCall","src":"7170:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7194:7:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7149:20:18"},"nodeType":"YulFunctionCall","src":"7149:53:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7139:6:18"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6790:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6801:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6813:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6821:6:18","type":""}],"src":"6745:474:18"},{"body":{"nodeType":"YulBlock","src":"7290:262:18","statements":[{"body":{"nodeType":"YulBlock","src":"7336:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7338:77:18"},"nodeType":"YulFunctionCall","src":"7338:79:18"},"nodeType":"YulExpressionStatement","src":"7338:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7311:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"7320:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7307:3:18"},"nodeType":"YulFunctionCall","src":"7307:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"7332:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7303:3:18"},"nodeType":"YulFunctionCall","src":"7303:32:18"},"nodeType":"YulIf","src":"7300:119:18"},{"nodeType":"YulBlock","src":"7429:116:18","statements":[{"nodeType":"YulVariableDeclaration","src":"7444:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"7458:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7448:6:18","type":""}]},{"nodeType":"YulAssignment","src":"7473:62:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7507:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"7518:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7503:3:18"},"nodeType":"YulFunctionCall","src":"7503:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7527:7:18"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"7483:19:18"},"nodeType":"YulFunctionCall","src":"7483:52:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7473:6:18"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7260:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7271:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7283:6:18","type":""}],"src":"7225:327:18"},{"body":{"nodeType":"YulBlock","src":"7634:273:18","statements":[{"body":{"nodeType":"YulBlock","src":"7680:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7682:77:18"},"nodeType":"YulFunctionCall","src":"7682:79:18"},"nodeType":"YulExpressionStatement","src":"7682:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7655:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"7664:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7651:3:18"},"nodeType":"YulFunctionCall","src":"7651:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"7676:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7647:3:18"},"nodeType":"YulFunctionCall","src":"7647:32:18"},"nodeType":"YulIf","src":"7644:119:18"},{"nodeType":"YulBlock","src":"7773:127:18","statements":[{"nodeType":"YulVariableDeclaration","src":"7788:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"7802:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7792:6:18","type":""}]},{"nodeType":"YulAssignment","src":"7817:73:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7862:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"7873:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7858:3:18"},"nodeType":"YulFunctionCall","src":"7858:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7882:7:18"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"7827:30:18"},"nodeType":"YulFunctionCall","src":"7827:63:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7817:6:18"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7604:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7615:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7627:6:18","type":""}],"src":"7558:349:18"},{"body":{"nodeType":"YulBlock","src":"8051:855:18","statements":[{"body":{"nodeType":"YulBlock","src":"8098:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8100:77:18"},"nodeType":"YulFunctionCall","src":"8100:79:18"},"nodeType":"YulExpressionStatement","src":"8100:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8072:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"8081:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8068:3:18"},"nodeType":"YulFunctionCall","src":"8068:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"8093:3:18","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8064:3:18"},"nodeType":"YulFunctionCall","src":"8064:33:18"},"nodeType":"YulIf","src":"8061:120:18"},{"nodeType":"YulBlock","src":"8191:291:18","statements":[{"nodeType":"YulVariableDeclaration","src":"8206:38:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8230:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8241:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8226:3:18"},"nodeType":"YulFunctionCall","src":"8226:17:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8220:5:18"},"nodeType":"YulFunctionCall","src":"8220:24:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8210:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"8291:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"8293:77:18"},"nodeType":"YulFunctionCall","src":"8293:79:18"},"nodeType":"YulExpressionStatement","src":"8293:79:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8263:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"8271:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8260:2:18"},"nodeType":"YulFunctionCall","src":"8260:30:18"},"nodeType":"YulIf","src":"8257:117:18"},{"nodeType":"YulAssignment","src":"8388:84:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8444:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"8455:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8440:3:18"},"nodeType":"YulFunctionCall","src":"8440:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8464:7:18"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"8398:41:18"},"nodeType":"YulFunctionCall","src":"8398:74:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8388:6:18"}]}]},{"nodeType":"YulBlock","src":"8492:129:18","statements":[{"nodeType":"YulVariableDeclaration","src":"8507:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"8521:2:18","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8511:6:18","type":""}]},{"nodeType":"YulAssignment","src":"8537:74:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8583:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"8594:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8579:3:18"},"nodeType":"YulFunctionCall","src":"8579:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8603:7:18"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"8547:31:18"},"nodeType":"YulFunctionCall","src":"8547:64:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8537:6:18"}]}]},{"nodeType":"YulBlock","src":"8631:129:18","statements":[{"nodeType":"YulVariableDeclaration","src":"8646:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"8660:2:18","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8650:6:18","type":""}]},{"nodeType":"YulAssignment","src":"8676:74:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8722:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"8733:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8718:3:18"},"nodeType":"YulFunctionCall","src":"8718:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8742:7:18"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"8686:31:18"},"nodeType":"YulFunctionCall","src":"8686:64:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"8676:6:18"}]}]},{"nodeType":"YulBlock","src":"8770:129:18","statements":[{"nodeType":"YulVariableDeclaration","src":"8785:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"8799:2:18","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8789:6:18","type":""}]},{"nodeType":"YulAssignment","src":"8815:74:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8861:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"8872:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8857:3:18"},"nodeType":"YulFunctionCall","src":"8857:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8881:7:18"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"8825:31:18"},"nodeType":"YulFunctionCall","src":"8825:64:18"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"8815:6:18"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7997:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8008:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8020:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8028:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8036:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8044:6:18","type":""}],"src":"7913:993:18"},{"body":{"nodeType":"YulBlock","src":"8978:263:18","statements":[{"body":{"nodeType":"YulBlock","src":"9024:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9026:77:18"},"nodeType":"YulFunctionCall","src":"9026:79:18"},"nodeType":"YulExpressionStatement","src":"9026:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8999:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"9008:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8995:3:18"},"nodeType":"YulFunctionCall","src":"8995:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"9020:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8991:3:18"},"nodeType":"YulFunctionCall","src":"8991:32:18"},"nodeType":"YulIf","src":"8988:119:18"},{"nodeType":"YulBlock","src":"9117:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"9132:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"9146:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9136:6:18","type":""}]},{"nodeType":"YulAssignment","src":"9161:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9196:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"9207:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9192:3:18"},"nodeType":"YulFunctionCall","src":"9192:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9216:7:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9171:20:18"},"nodeType":"YulFunctionCall","src":"9171:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9161:6:18"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8948:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8959:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8971:6:18","type":""}],"src":"8912:329:18"},{"body":{"nodeType":"YulBlock","src":"9324:274:18","statements":[{"body":{"nodeType":"YulBlock","src":"9370:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9372:77:18"},"nodeType":"YulFunctionCall","src":"9372:79:18"},"nodeType":"YulExpressionStatement","src":"9372:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9345:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"9354:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9341:3:18"},"nodeType":"YulFunctionCall","src":"9341:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"9366:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9337:3:18"},"nodeType":"YulFunctionCall","src":"9337:32:18"},"nodeType":"YulIf","src":"9334:119:18"},{"nodeType":"YulBlock","src":"9463:128:18","statements":[{"nodeType":"YulVariableDeclaration","src":"9478:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"9492:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9482:6:18","type":""}]},{"nodeType":"YulAssignment","src":"9507:74:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9553:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"9564:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9549:3:18"},"nodeType":"YulFunctionCall","src":"9549:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9573:7:18"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"9517:31:18"},"nodeType":"YulFunctionCall","src":"9517:64:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9507:6:18"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9294:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9305:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9317:6:18","type":""}],"src":"9247:351:18"},{"body":{"nodeType":"YulBlock","src":"9712:576:18","statements":[{"body":{"nodeType":"YulBlock","src":"9758:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9760:77:18"},"nodeType":"YulFunctionCall","src":"9760:79:18"},"nodeType":"YulExpressionStatement","src":"9760:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9733:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"9742:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9729:3:18"},"nodeType":"YulFunctionCall","src":"9729:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"9754:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9725:3:18"},"nodeType":"YulFunctionCall","src":"9725:32:18"},"nodeType":"YulIf","src":"9722:119:18"},{"nodeType":"YulBlock","src":"9851:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"9866:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"9880:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9870:6:18","type":""}]},{"nodeType":"YulAssignment","src":"9895:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9930:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"9941:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9926:3:18"},"nodeType":"YulFunctionCall","src":"9926:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9950:7:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9905:20:18"},"nodeType":"YulFunctionCall","src":"9905:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9895:6:18"}]}]},{"nodeType":"YulBlock","src":"9978:303:18","statements":[{"nodeType":"YulVariableDeclaration","src":"9993:46:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10024:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10035:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10020:3:18"},"nodeType":"YulFunctionCall","src":"10020:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10007:12:18"},"nodeType":"YulFunctionCall","src":"10007:32:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9997:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"10086:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"10088:77:18"},"nodeType":"YulFunctionCall","src":"10088:79:18"},"nodeType":"YulExpressionStatement","src":"10088:79:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10058:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"10066:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10055:2:18"},"nodeType":"YulFunctionCall","src":"10055:30:18"},"nodeType":"YulIf","src":"10052:117:18"},{"nodeType":"YulAssignment","src":"10183:88:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10243:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"10254:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10239:3:18"},"nodeType":"YulFunctionCall","src":"10239:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10263:7:18"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10193:45:18"},"nodeType":"YulFunctionCall","src":"10193:78:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10183:6:18"}]}]}]},"name":"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9674:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9685:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9697:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9705:6:18","type":""}],"src":"9604:684:18"},{"body":{"nodeType":"YulBlock","src":"10436:829:18","statements":[{"body":{"nodeType":"YulBlock","src":"10483:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10485:77:18"},"nodeType":"YulFunctionCall","src":"10485:79:18"},"nodeType":"YulExpressionStatement","src":"10485:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10457:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"10466:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10453:3:18"},"nodeType":"YulFunctionCall","src":"10453:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"10478:3:18","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10449:3:18"},"nodeType":"YulFunctionCall","src":"10449:33:18"},"nodeType":"YulIf","src":"10446:120:18"},{"nodeType":"YulBlock","src":"10576:127:18","statements":[{"nodeType":"YulVariableDeclaration","src":"10591:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"10605:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10595:6:18","type":""}]},{"nodeType":"YulAssignment","src":"10620:73:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10665:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"10676:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10661:3:18"},"nodeType":"YulFunctionCall","src":"10661:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10685:7:18"}],"functionName":{"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulIdentifier","src":"10630:30:18"},"nodeType":"YulFunctionCall","src":"10630:63:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10620:6:18"}]}]},{"nodeType":"YulBlock","src":"10713:128:18","statements":[{"nodeType":"YulVariableDeclaration","src":"10728:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"10742:2:18","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10732:6:18","type":""}]},{"nodeType":"YulAssignment","src":"10758:73:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10803:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"10814:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10799:3:18"},"nodeType":"YulFunctionCall","src":"10799:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10823:7:18"}],"functionName":{"name":"abi_decode_t_int256_fromMemory","nodeType":"YulIdentifier","src":"10768:30:18"},"nodeType":"YulFunctionCall","src":"10768:63:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10758:6:18"}]}]},{"nodeType":"YulBlock","src":"10851:129:18","statements":[{"nodeType":"YulVariableDeclaration","src":"10866:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"10880:2:18","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10870:6:18","type":""}]},{"nodeType":"YulAssignment","src":"10896:74:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10942:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"10953:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10938:3:18"},"nodeType":"YulFunctionCall","src":"10938:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10962:7:18"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"10906:31:18"},"nodeType":"YulFunctionCall","src":"10906:64:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"10896:6:18"}]}]},{"nodeType":"YulBlock","src":"10990:129:18","statements":[{"nodeType":"YulVariableDeclaration","src":"11005:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"11019:2:18","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11009:6:18","type":""}]},{"nodeType":"YulAssignment","src":"11035:74:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11081:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"11092:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11077:3:18"},"nodeType":"YulFunctionCall","src":"11077:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11101:7:18"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"11045:31:18"},"nodeType":"YulFunctionCall","src":"11045:64:18"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"11035:6:18"}]}]},{"nodeType":"YulBlock","src":"11129:129:18","statements":[{"nodeType":"YulVariableDeclaration","src":"11144:17:18","value":{"kind":"number","nodeType":"YulLiteral","src":"11158:3:18","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11148:6:18","type":""}]},{"nodeType":"YulAssignment","src":"11175:73:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11220:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"11231:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11216:3:18"},"nodeType":"YulFunctionCall","src":"11216:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11240:7:18"}],"functionName":{"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulIdentifier","src":"11185:30:18"},"nodeType":"YulFunctionCall","src":"11185:63:18"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"11175:6:18"}]}]}]},"name":"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10374:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10385:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10397:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10405:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10413:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10421:6:18","type":""},{"name":"value4","nodeType":"YulTypedName","src":"10429:6:18","type":""}],"src":"10294:971:18"},{"body":{"nodeType":"YulBlock","src":"11351:99:18","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11395:6:18"},{"name":"pos","nodeType":"YulIdentifier","src":"11403:3:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"11361:33:18"},"nodeType":"YulFunctionCall","src":"11361:46:18"},"nodeType":"YulExpressionStatement","src":"11361:46:18"},{"nodeType":"YulAssignment","src":"11416:28:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11434:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"11439:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11430:3:18"},"nodeType":"YulFunctionCall","src":"11430:14:18"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"11416:10:18"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"11324:6:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11332:3:18","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"11340:10:18","type":""}],"src":"11271:179:18"},{"body":{"nodeType":"YulBlock","src":"11521:53:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11538:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11561:5:18"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"11543:17:18"},"nodeType":"YulFunctionCall","src":"11543:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11531:6:18"},"nodeType":"YulFunctionCall","src":"11531:37:18"},"nodeType":"YulExpressionStatement","src":"11531:37:18"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11509:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11516:3:18","type":""}],"src":"11456:118:18"},{"body":{"nodeType":"YulBlock","src":"11734:608:18","statements":[{"nodeType":"YulVariableDeclaration","src":"11744:68:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11806:5:18"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"11758:47:18"},"nodeType":"YulFunctionCall","src":"11758:54:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11748:6:18","type":""}]},{"nodeType":"YulAssignment","src":"11821:93:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11902:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"11907:6:18"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11828:73:18"},"nodeType":"YulFunctionCall","src":"11828:86:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11821:3:18"}]},{"nodeType":"YulVariableDeclaration","src":"11923:71:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11988:5:18"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"11938:49:18"},"nodeType":"YulFunctionCall","src":"11938:56:18"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"11927:7:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12003:21:18","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"12017:7:18"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"12007:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"12093:224:18","statements":[{"nodeType":"YulVariableDeclaration","src":"12107:34:18","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"12134:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12128:5:18"},"nodeType":"YulFunctionCall","src":"12128:13:18"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"12111:13:18","type":""}]},{"nodeType":"YulAssignment","src":"12154:70:18","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"12205:13:18"},{"name":"pos","nodeType":"YulIdentifier","src":"12220:3:18"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"12161:43:18"},"nodeType":"YulFunctionCall","src":"12161:63:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12154:3:18"}]},{"nodeType":"YulAssignment","src":"12237:70:18","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"12300:6:18"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"12247:52:18"},"nodeType":"YulFunctionCall","src":"12247:60:18"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"12237:6:18"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12055:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"12058:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12052:2:18"},"nodeType":"YulFunctionCall","src":"12052:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"12066:18:18","statements":[{"nodeType":"YulAssignment","src":"12068:14:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12077:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"12080:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12073:3:18"},"nodeType":"YulFunctionCall","src":"12073:9:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"12068:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"12037:14:18","statements":[{"nodeType":"YulVariableDeclaration","src":"12039:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"12048:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"12043:1:18","type":""}]}]},"src":"12033:284:18"},{"nodeType":"YulAssignment","src":"12326:10:18","value":{"name":"pos","nodeType":"YulIdentifier","src":"12333:3:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12326:3:18"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11713:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11720:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11729:3:18","type":""}],"src":"11610:732:18"},{"body":{"nodeType":"YulBlock","src":"12397:50:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12414:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12434:5:18"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"12419:14:18"},"nodeType":"YulFunctionCall","src":"12419:21:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12407:6:18"},"nodeType":"YulFunctionCall","src":"12407:34:18"},"nodeType":"YulExpressionStatement","src":"12407:34:18"}]},"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12385:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12392:3:18","type":""}],"src":"12348:99:18"},{"body":{"nodeType":"YulBlock","src":"12512:50:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12529:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12549:5:18"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"12534:14:18"},"nodeType":"YulFunctionCall","src":"12534:21:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12522:6:18"},"nodeType":"YulFunctionCall","src":"12522:34:18"},"nodeType":"YulExpressionStatement","src":"12522:34:18"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12500:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12507:3:18","type":""}],"src":"12453:109:18"},{"body":{"nodeType":"YulBlock","src":"12633:53:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12650:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12673:5:18"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"12655:17:18"},"nodeType":"YulFunctionCall","src":"12655:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12643:6:18"},"nodeType":"YulFunctionCall","src":"12643:37:18"},"nodeType":"YulExpressionStatement","src":"12643:37:18"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12621:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12628:3:18","type":""}],"src":"12568:118:18"},{"body":{"nodeType":"YulBlock","src":"12782:270:18","statements":[{"nodeType":"YulVariableDeclaration","src":"12792:52:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12838:5:18"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"12806:31:18"},"nodeType":"YulFunctionCall","src":"12806:38:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12796:6:18","type":""}]},{"nodeType":"YulAssignment","src":"12853:77:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12918:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"12923:6:18"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12860:57:18"},"nodeType":"YulFunctionCall","src":"12860:70:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12853:3:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12965:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"12972:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12961:3:18"},"nodeType":"YulFunctionCall","src":"12961:16:18"},{"name":"pos","nodeType":"YulIdentifier","src":"12979:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"12984:6:18"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"12939:21:18"},"nodeType":"YulFunctionCall","src":"12939:52:18"},"nodeType":"YulExpressionStatement","src":"12939:52:18"},{"nodeType":"YulAssignment","src":"13000:46:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13011:3:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13038:6:18"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"13016:21:18"},"nodeType":"YulFunctionCall","src":"13016:29:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13007:3:18"},"nodeType":"YulFunctionCall","src":"13007:39:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13000:3:18"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12763:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12770:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12778:3:18","type":""}],"src":"12692:360:18"},{"body":{"nodeType":"YulBlock","src":"13152:95:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13169:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13234:5:18"}],"functionName":{"name":"convert_t_contract$_AggregatorV3Interface_$103_to_t_address","nodeType":"YulIdentifier","src":"13174:59:18"},"nodeType":"YulFunctionCall","src":"13174:66:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13162:6:18"},"nodeType":"YulFunctionCall","src":"13162:79:18"},"nodeType":"YulExpressionStatement","src":"13162:79:18"}]},"name":"abi_encode_t_contract$_AggregatorV3Interface_$103_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13140:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13147:3:18","type":""}],"src":"13058:189:18"},{"body":{"nodeType":"YulBlock","src":"13337:85:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13354:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13409:5:18"}],"functionName":{"name":"convert_t_contract$_Characters_$3143_to_t_address","nodeType":"YulIdentifier","src":"13359:49:18"},"nodeType":"YulFunctionCall","src":"13359:56:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13347:6:18"},"nodeType":"YulFunctionCall","src":"13347:69:18"},"nodeType":"YulExpressionStatement","src":"13347:69:18"}]},"name":"abi_encode_t_contract$_Characters_$3143_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13325:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13332:3:18","type":""}],"src":"13253:169:18"},{"body":{"nodeType":"YulBlock","src":"13510:262:18","statements":[{"nodeType":"YulVariableDeclaration","src":"13520:53:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13567:5:18"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"13534:32:18"},"nodeType":"YulFunctionCall","src":"13534:39:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"13524:6:18","type":""}]},{"nodeType":"YulAssignment","src":"13582:68:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13638:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"13643:6:18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulIdentifier","src":"13589:48:18"},"nodeType":"YulFunctionCall","src":"13589:61:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13582:3:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13685:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"13692:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13681:3:18"},"nodeType":"YulFunctionCall","src":"13681:16:18"},{"name":"pos","nodeType":"YulIdentifier","src":"13699:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"13704:6:18"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"13659:21:18"},"nodeType":"YulFunctionCall","src":"13659:52:18"},"nodeType":"YulExpressionStatement","src":"13659:52:18"},{"nodeType":"YulAssignment","src":"13720:46:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13731:3:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13758:6:18"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"13736:21:18"},"nodeType":"YulFunctionCall","src":"13736:29:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13727:3:18"},"nodeType":"YulFunctionCall","src":"13727:39:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13720:3:18"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13491:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13498:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13506:3:18","type":""}],"src":"13428:344:18"},{"body":{"nodeType":"YulBlock","src":"13870:272:18","statements":[{"nodeType":"YulVariableDeclaration","src":"13880:53:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13927:5:18"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"13894:32:18"},"nodeType":"YulFunctionCall","src":"13894:39:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"13884:6:18","type":""}]},{"nodeType":"YulAssignment","src":"13942:78:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14008:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"14013:6:18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13949:58:18"},"nodeType":"YulFunctionCall","src":"13949:71:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13942:3:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14055:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"14062:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14051:3:18"},"nodeType":"YulFunctionCall","src":"14051:16:18"},{"name":"pos","nodeType":"YulIdentifier","src":"14069:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"14074:6:18"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"14029:21:18"},"nodeType":"YulFunctionCall","src":"14029:52:18"},"nodeType":"YulExpressionStatement","src":"14029:52:18"},{"nodeType":"YulAssignment","src":"14090:46:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14101:3:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14128:6:18"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"14106:21:18"},"nodeType":"YulFunctionCall","src":"14106:29:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14097:3:18"},"nodeType":"YulFunctionCall","src":"14097:39:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14090:3:18"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13851:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13858:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13866:3:18","type":""}],"src":"13778:364:18"},{"body":{"nodeType":"YulBlock","src":"14258:267:18","statements":[{"nodeType":"YulVariableDeclaration","src":"14268:53:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14315:5:18"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"14282:32:18"},"nodeType":"YulFunctionCall","src":"14282:39:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"14272:6:18","type":""}]},{"nodeType":"YulAssignment","src":"14330:96:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14414:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"14419:6:18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"14337:76:18"},"nodeType":"YulFunctionCall","src":"14337:89:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14330:3:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14461:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"14468:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14457:3:18"},"nodeType":"YulFunctionCall","src":"14457:16:18"},{"name":"pos","nodeType":"YulIdentifier","src":"14475:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"14480:6:18"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"14435:21:18"},"nodeType":"YulFunctionCall","src":"14435:52:18"},"nodeType":"YulExpressionStatement","src":"14435:52:18"},{"nodeType":"YulAssignment","src":"14496:23:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14507:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"14512:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14503:3:18"},"nodeType":"YulFunctionCall","src":"14503:16:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14496:3:18"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14239:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14246:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14254:3:18","type":""}],"src":"14148:377:18"},{"body":{"nodeType":"YulBlock","src":"14677:220:18","statements":[{"nodeType":"YulAssignment","src":"14687:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14753:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"14758:2:18","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14694:58:18"},"nodeType":"YulFunctionCall","src":"14694:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14687:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14859:3:18"}],"functionName":{"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulIdentifier","src":"14770:88:18"},"nodeType":"YulFunctionCall","src":"14770:93:18"},"nodeType":"YulExpressionStatement","src":"14770:93:18"},{"nodeType":"YulAssignment","src":"14872:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14883:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"14888:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14879:3:18"},"nodeType":"YulFunctionCall","src":"14879:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14872:3:18"}]}]},"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14665:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14673:3:18","type":""}],"src":"14531:366:18"},{"body":{"nodeType":"YulBlock","src":"15049:220:18","statements":[{"nodeType":"YulAssignment","src":"15059:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15125:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"15130:2:18","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15066:58:18"},"nodeType":"YulFunctionCall","src":"15066:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15059:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15231:3:18"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"15142:88:18"},"nodeType":"YulFunctionCall","src":"15142:93:18"},"nodeType":"YulExpressionStatement","src":"15142:93:18"},{"nodeType":"YulAssignment","src":"15244:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15255:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"15260:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15251:3:18"},"nodeType":"YulFunctionCall","src":"15251:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15244:3:18"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15037:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15045:3:18","type":""}],"src":"14903:366:18"},{"body":{"nodeType":"YulBlock","src":"15421:220:18","statements":[{"nodeType":"YulAssignment","src":"15431:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15497:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"15502:2:18","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15438:58:18"},"nodeType":"YulFunctionCall","src":"15438:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15431:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15603:3:18"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"15514:88:18"},"nodeType":"YulFunctionCall","src":"15514:93:18"},"nodeType":"YulExpressionStatement","src":"15514:93:18"},{"nodeType":"YulAssignment","src":"15616:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15627:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"15632:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15623:3:18"},"nodeType":"YulFunctionCall","src":"15623:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15616:3:18"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15409:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15417:3:18","type":""}],"src":"15275:366:18"},{"body":{"nodeType":"YulBlock","src":"15793:220:18","statements":[{"nodeType":"YulAssignment","src":"15803:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15869:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"15874:2:18","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15810:58:18"},"nodeType":"YulFunctionCall","src":"15810:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15803:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15975:3:18"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulIdentifier","src":"15886:88:18"},"nodeType":"YulFunctionCall","src":"15886:93:18"},"nodeType":"YulExpressionStatement","src":"15886:93:18"},{"nodeType":"YulAssignment","src":"15988:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15999:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"16004:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15995:3:18"},"nodeType":"YulFunctionCall","src":"15995:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15988:3:18"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15781:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15789:3:18","type":""}],"src":"15647:366:18"},{"body":{"nodeType":"YulBlock","src":"16165:220:18","statements":[{"nodeType":"YulAssignment","src":"16175:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16241:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"16246:2:18","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16182:58:18"},"nodeType":"YulFunctionCall","src":"16182:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16175:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16347:3:18"}],"functionName":{"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulIdentifier","src":"16258:88:18"},"nodeType":"YulFunctionCall","src":"16258:93:18"},"nodeType":"YulExpressionStatement","src":"16258:93:18"},{"nodeType":"YulAssignment","src":"16360:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16371:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"16376:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16367:3:18"},"nodeType":"YulFunctionCall","src":"16367:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16360:3:18"}]}]},"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16153:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16161:3:18","type":""}],"src":"16019:366:18"},{"body":{"nodeType":"YulBlock","src":"16537:220:18","statements":[{"nodeType":"YulAssignment","src":"16547:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16613:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"16618:2:18","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16554:58:18"},"nodeType":"YulFunctionCall","src":"16554:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16547:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16719:3:18"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"16630:88:18"},"nodeType":"YulFunctionCall","src":"16630:93:18"},"nodeType":"YulExpressionStatement","src":"16630:93:18"},{"nodeType":"YulAssignment","src":"16732:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16743:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"16748:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16739:3:18"},"nodeType":"YulFunctionCall","src":"16739:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16732:3:18"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16525:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16533:3:18","type":""}],"src":"16391:366:18"},{"body":{"nodeType":"YulBlock","src":"16909:220:18","statements":[{"nodeType":"YulAssignment","src":"16919:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16985:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"16990:2:18","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16926:58:18"},"nodeType":"YulFunctionCall","src":"16926:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16919:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17091:3:18"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"17002:88:18"},"nodeType":"YulFunctionCall","src":"17002:93:18"},"nodeType":"YulExpressionStatement","src":"17002:93:18"},{"nodeType":"YulAssignment","src":"17104:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17115:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"17120:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17111:3:18"},"nodeType":"YulFunctionCall","src":"17111:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17104:3:18"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16897:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16905:3:18","type":""}],"src":"16763:366:18"},{"body":{"nodeType":"YulBlock","src":"17281:220:18","statements":[{"nodeType":"YulAssignment","src":"17291:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17357:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"17362:2:18","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17298:58:18"},"nodeType":"YulFunctionCall","src":"17298:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17291:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17463:3:18"}],"functionName":{"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulIdentifier","src":"17374:88:18"},"nodeType":"YulFunctionCall","src":"17374:93:18"},"nodeType":"YulExpressionStatement","src":"17374:93:18"},{"nodeType":"YulAssignment","src":"17476:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17487:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"17492:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17483:3:18"},"nodeType":"YulFunctionCall","src":"17483:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17476:3:18"}]}]},"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17269:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17277:3:18","type":""}],"src":"17135:366:18"},{"body":{"nodeType":"YulBlock","src":"17653:220:18","statements":[{"nodeType":"YulAssignment","src":"17663:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17729:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"17734:2:18","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17670:58:18"},"nodeType":"YulFunctionCall","src":"17670:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17663:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17835:3:18"}],"functionName":{"name":"store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","nodeType":"YulIdentifier","src":"17746:88:18"},"nodeType":"YulFunctionCall","src":"17746:93:18"},"nodeType":"YulExpressionStatement","src":"17746:93:18"},{"nodeType":"YulAssignment","src":"17848:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17859:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"17864:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17855:3:18"},"nodeType":"YulFunctionCall","src":"17855:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17848:3:18"}]}]},"name":"abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17641:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17649:3:18","type":""}],"src":"17507:366:18"},{"body":{"nodeType":"YulBlock","src":"18025:220:18","statements":[{"nodeType":"YulAssignment","src":"18035:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18101:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"18106:2:18","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18042:58:18"},"nodeType":"YulFunctionCall","src":"18042:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18035:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18207:3:18"}],"functionName":{"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulIdentifier","src":"18118:88:18"},"nodeType":"YulFunctionCall","src":"18118:93:18"},"nodeType":"YulExpressionStatement","src":"18118:93:18"},{"nodeType":"YulAssignment","src":"18220:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18231:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"18236:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18227:3:18"},"nodeType":"YulFunctionCall","src":"18227:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18220:3:18"}]}]},"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18013:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18021:3:18","type":""}],"src":"17879:366:18"},{"body":{"nodeType":"YulBlock","src":"18397:220:18","statements":[{"nodeType":"YulAssignment","src":"18407:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18473:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"18478:2:18","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18414:58:18"},"nodeType":"YulFunctionCall","src":"18414:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18407:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18579:3:18"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"18490:88:18"},"nodeType":"YulFunctionCall","src":"18490:93:18"},"nodeType":"YulExpressionStatement","src":"18490:93:18"},{"nodeType":"YulAssignment","src":"18592:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18603:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"18608:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18599:3:18"},"nodeType":"YulFunctionCall","src":"18599:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18592:3:18"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18385:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18393:3:18","type":""}],"src":"18251:366:18"},{"body":{"nodeType":"YulBlock","src":"18769:220:18","statements":[{"nodeType":"YulAssignment","src":"18779:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18845:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"18850:2:18","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18786:58:18"},"nodeType":"YulFunctionCall","src":"18786:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18779:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18951:3:18"}],"functionName":{"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulIdentifier","src":"18862:88:18"},"nodeType":"YulFunctionCall","src":"18862:93:18"},"nodeType":"YulExpressionStatement","src":"18862:93:18"},{"nodeType":"YulAssignment","src":"18964:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18975:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"18980:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18971:3:18"},"nodeType":"YulFunctionCall","src":"18971:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18964:3:18"}]}]},"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18757:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18765:3:18","type":""}],"src":"18623:366:18"},{"body":{"nodeType":"YulBlock","src":"19141:220:18","statements":[{"nodeType":"YulAssignment","src":"19151:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19217:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"19222:2:18","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19158:58:18"},"nodeType":"YulFunctionCall","src":"19158:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19151:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19323:3:18"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"19234:88:18"},"nodeType":"YulFunctionCall","src":"19234:93:18"},"nodeType":"YulExpressionStatement","src":"19234:93:18"},{"nodeType":"YulAssignment","src":"19336:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19347:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"19352:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19343:3:18"},"nodeType":"YulFunctionCall","src":"19343:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19336:3:18"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19129:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19137:3:18","type":""}],"src":"18995:366:18"},{"body":{"nodeType":"YulBlock","src":"19530:235:18","statements":[{"nodeType":"YulAssignment","src":"19540:90:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19623:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"19628:1:18","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"19547:75:18"},"nodeType":"YulFunctionCall","src":"19547:83:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19540:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19728:3:18"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulIdentifier","src":"19639:88:18"},"nodeType":"YulFunctionCall","src":"19639:93:18"},"nodeType":"YulExpressionStatement","src":"19639:93:18"},{"nodeType":"YulAssignment","src":"19741:18:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19752:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"19757:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19748:3:18"},"nodeType":"YulFunctionCall","src":"19748:11:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19741:3:18"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19518:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19526:3:18","type":""}],"src":"19367:398:18"},{"body":{"nodeType":"YulBlock","src":"19917:220:18","statements":[{"nodeType":"YulAssignment","src":"19927:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19993:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"19998:2:18","type":"","value":"61"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19934:58:18"},"nodeType":"YulFunctionCall","src":"19934:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19927:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20099:3:18"}],"functionName":{"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulIdentifier","src":"20010:88:18"},"nodeType":"YulFunctionCall","src":"20010:93:18"},"nodeType":"YulExpressionStatement","src":"20010:93:18"},{"nodeType":"YulAssignment","src":"20112:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20123:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"20128:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20119:3:18"},"nodeType":"YulFunctionCall","src":"20119:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20112:3:18"}]}]},"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19905:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19913:3:18","type":""}],"src":"19771:366:18"},{"body":{"nodeType":"YulBlock","src":"20305:839:18","statements":[{"nodeType":"YulVariableDeclaration","src":"20315:26:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20331:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"20336:4:18","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20327:3:18"},"nodeType":"YulFunctionCall","src":"20327:14:18"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"20319:4:18","type":""}]},{"nodeType":"YulBlock","src":"20351:167:18","statements":[{"nodeType":"YulVariableDeclaration","src":"20389:43:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20419:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"20426:4:18","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20415:3:18"},"nodeType":"YulFunctionCall","src":"20415:16:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20409:5:18"},"nodeType":"YulFunctionCall","src":"20409:23:18"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"20393:12:18","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"20479:12:18"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20497:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"20502:4:18","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20493:3:18"},"nodeType":"YulFunctionCall","src":"20493:14:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"20445:33:18"},"nodeType":"YulFunctionCall","src":"20445:63:18"},"nodeType":"YulExpressionStatement","src":"20445:63:18"}]},{"nodeType":"YulBlock","src":"20528:239:18","statements":[{"nodeType":"YulVariableDeclaration","src":"20567:43:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20597:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"20604:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20593:3:18"},"nodeType":"YulFunctionCall","src":"20593:16:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20587:5:18"},"nodeType":"YulFunctionCall","src":"20587:23:18"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"20571:12:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20635:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"20640:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20631:3:18"},"nodeType":"YulFunctionCall","src":"20631:14:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20651:4:18"},{"name":"pos","nodeType":"YulIdentifier","src":"20657:3:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20647:3:18"},"nodeType":"YulFunctionCall","src":"20647:14:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20624:6:18"},"nodeType":"YulFunctionCall","src":"20624:38:18"},"nodeType":"YulExpressionStatement","src":"20624:38:18"},{"nodeType":"YulAssignment","src":"20675:81:18","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"20737:12:18"},{"name":"tail","nodeType":"YulIdentifier","src":"20751:4:18"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"20683:53:18"},"nodeType":"YulFunctionCall","src":"20683:73:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20675:4:18"}]}]},{"nodeType":"YulBlock","src":"20777:163:18","statements":[{"nodeType":"YulVariableDeclaration","src":"20817:43:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20847:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"20854:4:18","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20843:3:18"},"nodeType":"YulFunctionCall","src":"20843:16:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20837:5:18"},"nodeType":"YulFunctionCall","src":"20837:23:18"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"20821:12:18","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"20901:12:18"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20919:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"20924:4:18","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20915:3:18"},"nodeType":"YulFunctionCall","src":"20915:14:18"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"20873:27:18"},"nodeType":"YulFunctionCall","src":"20873:57:18"},"nodeType":"YulExpressionStatement","src":"20873:57:18"}]},{"nodeType":"YulBlock","src":"20950:167:18","statements":[{"nodeType":"YulVariableDeclaration","src":"20988:43:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21018:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"21025:4:18","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21014:3:18"},"nodeType":"YulFunctionCall","src":"21014:16:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21008:5:18"},"nodeType":"YulFunctionCall","src":"21008:23:18"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"20992:12:18","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"21078:12:18"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21096:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"21101:4:18","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21092:3:18"},"nodeType":"YulFunctionCall","src":"21092:14:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"21044:33:18"},"nodeType":"YulFunctionCall","src":"21044:63:18"},"nodeType":"YulExpressionStatement","src":"21044:63:18"}]},{"nodeType":"YulAssignment","src":"21127:11:18","value":{"name":"tail","nodeType":"YulIdentifier","src":"21134:4:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21127:3:18"}]}]},"name":"abi_encode_t_struct$_Nft_$4670_memory_ptr_to_t_struct$_Nft_$4670_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20284:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"20291:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20300:3:18","type":""}],"src":"20189:955:18"},{"body":{"nodeType":"YulBlock","src":"21213:52:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21230:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21252:5:18"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"21235:16:18"},"nodeType":"YulFunctionCall","src":"21235:23:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21223:6:18"},"nodeType":"YulFunctionCall","src":"21223:36:18"},"nodeType":"YulExpressionStatement","src":"21223:36:18"}]},"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21201:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21208:3:18","type":""}],"src":"21150:115:18"},{"body":{"nodeType":"YulBlock","src":"21326:53:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21343:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21366:5:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21348:17:18"},"nodeType":"YulFunctionCall","src":"21348:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21336:6:18"},"nodeType":"YulFunctionCall","src":"21336:37:18"},"nodeType":"YulExpressionStatement","src":"21336:37:18"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21314:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21321:3:18","type":""}],"src":"21271:108:18"},{"body":{"nodeType":"YulBlock","src":"21450:53:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21467:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21490:5:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21472:17:18"},"nodeType":"YulFunctionCall","src":"21472:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21460:6:18"},"nodeType":"YulFunctionCall","src":"21460:37:18"},"nodeType":"YulExpressionStatement","src":"21460:37:18"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21438:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21445:3:18","type":""}],"src":"21385:118:18"},{"body":{"nodeType":"YulBlock","src":"21572:52:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21589:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21611:5:18"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"21594:16:18"},"nodeType":"YulFunctionCall","src":"21594:23:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21582:6:18"},"nodeType":"YulFunctionCall","src":"21582:36:18"},"nodeType":"YulExpressionStatement","src":"21582:36:18"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21560:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21567:3:18","type":""}],"src":"21509:115:18"},{"body":{"nodeType":"YulBlock","src":"21693:52:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21710:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21732:5:18"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"21715:16:18"},"nodeType":"YulFunctionCall","src":"21715:23:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21703:6:18"},"nodeType":"YulFunctionCall","src":"21703:36:18"},"nodeType":"YulExpressionStatement","src":"21703:36:18"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21681:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21688:3:18","type":""}],"src":"21630:115:18"},{"body":{"nodeType":"YulBlock","src":"21935:251:18","statements":[{"nodeType":"YulAssignment","src":"21946:102:18","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22035:6:18"},{"name":"pos","nodeType":"YulIdentifier","src":"22044:3:18"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"21953:81:18"},"nodeType":"YulFunctionCall","src":"21953:95:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21946:3:18"}]},{"nodeType":"YulAssignment","src":"22058:102:18","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22147:6:18"},{"name":"pos","nodeType":"YulIdentifier","src":"22156:3:18"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"22065:81:18"},"nodeType":"YulFunctionCall","src":"22065:95:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22058:3:18"}]},{"nodeType":"YulAssignment","src":"22170:10:18","value":{"name":"pos","nodeType":"YulIdentifier","src":"22177:3:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22170:3:18"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21906:3:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21912:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21920:6:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21931:3:18","type":""}],"src":"21751:435:18"},{"body":{"nodeType":"YulBlock","src":"22380:191:18","statements":[{"nodeType":"YulAssignment","src":"22391:154:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22541:3:18"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"22398:141:18"},"nodeType":"YulFunctionCall","src":"22398:147:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22391:3:18"}]},{"nodeType":"YulAssignment","src":"22555:10:18","value":{"name":"pos","nodeType":"YulIdentifier","src":"22562:3:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22555:3:18"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22367:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22376:3:18","type":""}],"src":"22192:379:18"},{"body":{"nodeType":"YulBlock","src":"22675:124:18","statements":[{"nodeType":"YulAssignment","src":"22685:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22697:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"22708:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22693:3:18"},"nodeType":"YulFunctionCall","src":"22693:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22685:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22765:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22778:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"22789:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22774:3:18"},"nodeType":"YulFunctionCall","src":"22774:17:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"22721:43:18"},"nodeType":"YulFunctionCall","src":"22721:71:18"},"nodeType":"YulExpressionStatement","src":"22721:71:18"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22647:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22659:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22670:4:18","type":""}],"src":"22577:222:18"},{"body":{"nodeType":"YulBlock","src":"22931:206:18","statements":[{"nodeType":"YulAssignment","src":"22941:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22953:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"22964:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22949:3:18"},"nodeType":"YulFunctionCall","src":"22949:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22941:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23021:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23034:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"23045:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23030:3:18"},"nodeType":"YulFunctionCall","src":"23030:17:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"22977:43:18"},"nodeType":"YulFunctionCall","src":"22977:71:18"},"nodeType":"YulExpressionStatement","src":"22977:71:18"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23102:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23115:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"23126:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23111:3:18"},"nodeType":"YulFunctionCall","src":"23111:18:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23058:43:18"},"nodeType":"YulFunctionCall","src":"23058:72:18"},"nodeType":"YulExpressionStatement","src":"23058:72:18"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22895:9:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22907:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22915:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22926:4:18","type":""}],"src":"22805:332:18"},{"body":{"nodeType":"YulBlock","src":"23343:440:18","statements":[{"nodeType":"YulAssignment","src":"23353:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23365:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"23376:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23361:3:18"},"nodeType":"YulFunctionCall","src":"23361:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23353:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23434:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23447:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"23458:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23443:3:18"},"nodeType":"YulFunctionCall","src":"23443:17:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23390:43:18"},"nodeType":"YulFunctionCall","src":"23390:71:18"},"nodeType":"YulExpressionStatement","src":"23390:71:18"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23515:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23528:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"23539:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23524:3:18"},"nodeType":"YulFunctionCall","src":"23524:18:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23471:43:18"},"nodeType":"YulFunctionCall","src":"23471:72:18"},"nodeType":"YulExpressionStatement","src":"23471:72:18"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"23597:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23610:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"23621:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23606:3:18"},"nodeType":"YulFunctionCall","src":"23606:18:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"23553:43:18"},"nodeType":"YulFunctionCall","src":"23553:72:18"},"nodeType":"YulExpressionStatement","src":"23553:72:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23646:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"23657:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23642:3:18"},"nodeType":"YulFunctionCall","src":"23642:18:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23666:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"23672:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23662:3:18"},"nodeType":"YulFunctionCall","src":"23662:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23635:6:18"},"nodeType":"YulFunctionCall","src":"23635:48:18"},"nodeType":"YulExpressionStatement","src":"23635:48:18"},{"nodeType":"YulAssignment","src":"23692:84:18","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"23762:6:18"},{"name":"tail","nodeType":"YulIdentifier","src":"23771:4:18"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23700:61:18"},"nodeType":"YulFunctionCall","src":"23700:76:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23692:4:18"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23291:9:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"23303:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23311:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23319:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23327:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23338:4:18","type":""}],"src":"23143:640:18"},{"body":{"nodeType":"YulBlock","src":"23963:359:18","statements":[{"nodeType":"YulAssignment","src":"23973:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23985:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"23996:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23981:3:18"},"nodeType":"YulFunctionCall","src":"23981:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23973:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24053:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24066:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"24077:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24062:3:18"},"nodeType":"YulFunctionCall","src":"24062:17:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"24009:43:18"},"nodeType":"YulFunctionCall","src":"24009:71:18"},"nodeType":"YulExpressionStatement","src":"24009:71:18"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"24134:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24147:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"24158:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24143:3:18"},"nodeType":"YulFunctionCall","src":"24143:18:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24090:43:18"},"nodeType":"YulFunctionCall","src":"24090:72:18"},"nodeType":"YulExpressionStatement","src":"24090:72:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24183:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"24194:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24179:3:18"},"nodeType":"YulFunctionCall","src":"24179:18:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24203:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"24209:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24199:3:18"},"nodeType":"YulFunctionCall","src":"24199:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24172:6:18"},"nodeType":"YulFunctionCall","src":"24172:48:18"},"nodeType":"YulExpressionStatement","src":"24172:48:18"},{"nodeType":"YulAssignment","src":"24229:86:18","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"24301:6:18"},{"name":"tail","nodeType":"YulIdentifier","src":"24310:4:18"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24237:63:18"},"nodeType":"YulFunctionCall","src":"24237:78:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24229:4:18"}]}]},"name":"abi_encode_tuple_t_address_t_uint256_t_string_memory_ptr__to_t_address_t_uint256_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23919:9:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23931:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23939:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23947:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23958:4:18","type":""}],"src":"23789:533:18"},{"body":{"nodeType":"YulBlock","src":"24530:442:18","statements":[{"nodeType":"YulAssignment","src":"24540:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24552:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"24563:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24548:3:18"},"nodeType":"YulFunctionCall","src":"24548:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24540:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24621:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24634:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"24645:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24630:3:18"},"nodeType":"YulFunctionCall","src":"24630:17:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"24577:43:18"},"nodeType":"YulFunctionCall","src":"24577:71:18"},"nodeType":"YulExpressionStatement","src":"24577:71:18"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"24702:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24715:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"24726:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24711:3:18"},"nodeType":"YulFunctionCall","src":"24711:18:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24658:43:18"},"nodeType":"YulFunctionCall","src":"24658:72:18"},"nodeType":"YulExpressionStatement","src":"24658:72:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24751:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"24762:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24747:3:18"},"nodeType":"YulFunctionCall","src":"24747:18:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24771:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"24777:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24767:3:18"},"nodeType":"YulFunctionCall","src":"24767:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24740:6:18"},"nodeType":"YulFunctionCall","src":"24740:48:18"},"nodeType":"YulExpressionStatement","src":"24740:48:18"},{"nodeType":"YulAssignment","src":"24797:86:18","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"24869:6:18"},{"name":"tail","nodeType":"YulIdentifier","src":"24878:4:18"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24805:63:18"},"nodeType":"YulFunctionCall","src":"24805:78:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24797:4:18"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"24937:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24950:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"24961:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24946:3:18"},"nodeType":"YulFunctionCall","src":"24946:18:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24893:43:18"},"nodeType":"YulFunctionCall","src":"24893:72:18"},"nodeType":"YulExpressionStatement","src":"24893:72:18"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_string_memory_ptr_t_uint256__to_t_address_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24478:9:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"24490:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"24498:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24506:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24514:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24525:4:18","type":""}],"src":"24328:644:18"},{"body":{"nodeType":"YulBlock","src":"25126:225:18","statements":[{"nodeType":"YulAssignment","src":"25136:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25148:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"25159:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25144:3:18"},"nodeType":"YulFunctionCall","src":"25144:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25136:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25183:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"25194:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25179:3:18"},"nodeType":"YulFunctionCall","src":"25179:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25202:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"25208:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25198:3:18"},"nodeType":"YulFunctionCall","src":"25198:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25172:6:18"},"nodeType":"YulFunctionCall","src":"25172:47:18"},"nodeType":"YulExpressionStatement","src":"25172:47:18"},{"nodeType":"YulAssignment","src":"25228:116:18","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25330:6:18"},{"name":"tail","nodeType":"YulIdentifier","src":"25339:4:18"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25236:93:18"},"nodeType":"YulFunctionCall","src":"25236:108:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25228:4:18"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25098:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25110:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25121:4:18","type":""}],"src":"24978:373:18"},{"body":{"nodeType":"YulBlock","src":"25449:118:18","statements":[{"nodeType":"YulAssignment","src":"25459:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25471:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"25482:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25467:3:18"},"nodeType":"YulFunctionCall","src":"25467:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25459:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25533:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25546:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"25557:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25542:3:18"},"nodeType":"YulFunctionCall","src":"25542:17:18"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"25495:37:18"},"nodeType":"YulFunctionCall","src":"25495:65:18"},"nodeType":"YulExpressionStatement","src":"25495:65:18"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25421:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25433:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25444:4:18","type":""}],"src":"25357:210:18"},{"body":{"nodeType":"YulBlock","src":"25775:446:18","statements":[{"nodeType":"YulAssignment","src":"25785:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25797:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"25808:3:18","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25793:3:18"},"nodeType":"YulFunctionCall","src":"25793:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25785:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25866:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25879:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"25890:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25875:3:18"},"nodeType":"YulFunctionCall","src":"25875:17:18"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"25822:43:18"},"nodeType":"YulFunctionCall","src":"25822:71:18"},"nodeType":"YulExpressionStatement","src":"25822:71:18"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"25945:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25958:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"25969:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25954:3:18"},"nodeType":"YulFunctionCall","src":"25954:18:18"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"25903:41:18"},"nodeType":"YulFunctionCall","src":"25903:70:18"},"nodeType":"YulExpressionStatement","src":"25903:70:18"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"26025:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26038:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"26049:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26034:3:18"},"nodeType":"YulFunctionCall","src":"26034:18:18"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"25983:41:18"},"nodeType":"YulFunctionCall","src":"25983:70:18"},"nodeType":"YulExpressionStatement","src":"25983:70:18"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"26105:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26118:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"26129:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26114:3:18"},"nodeType":"YulFunctionCall","src":"26114:18:18"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"26063:41:18"},"nodeType":"YulFunctionCall","src":"26063:70:18"},"nodeType":"YulExpressionStatement","src":"26063:70:18"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"26185:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26198:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"26209:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26194:3:18"},"nodeType":"YulFunctionCall","src":"26194:19:18"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"26143:41:18"},"nodeType":"YulFunctionCall","src":"26143:71:18"},"nodeType":"YulExpressionStatement","src":"26143:71:18"}]},"name":"abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25715:9:18","type":""},{"name":"value4","nodeType":"YulTypedName","src":"25727:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"25735:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"25743:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25751:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25759:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25770:4:18","type":""}],"src":"25573:648:18"},{"body":{"nodeType":"YulBlock","src":"26354:153:18","statements":[{"nodeType":"YulAssignment","src":"26364:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26376:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"26387:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26372:3:18"},"nodeType":"YulFunctionCall","src":"26372:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26364:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26473:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26486:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"26497:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26482:3:18"},"nodeType":"YulFunctionCall","src":"26482:17:18"}],"functionName":{"name":"abi_encode_t_contract$_AggregatorV3Interface_$103_to_t_address_fromStack","nodeType":"YulIdentifier","src":"26400:72:18"},"nodeType":"YulFunctionCall","src":"26400:100:18"},"nodeType":"YulExpressionStatement","src":"26400:100:18"}]},"name":"abi_encode_tuple_t_contract$_AggregatorV3Interface_$103__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26326:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26338:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26349:4:18","type":""}],"src":"26227:280:18"},{"body":{"nodeType":"YulBlock","src":"26630:143:18","statements":[{"nodeType":"YulAssignment","src":"26640:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26652:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"26663:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26648:3:18"},"nodeType":"YulFunctionCall","src":"26648:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26640:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26739:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26752:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"26763:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26748:3:18"},"nodeType":"YulFunctionCall","src":"26748:17:18"}],"functionName":{"name":"abi_encode_t_contract$_Characters_$3143_to_t_address_fromStack","nodeType":"YulIdentifier","src":"26676:62:18"},"nodeType":"YulFunctionCall","src":"26676:90:18"},"nodeType":"YulExpressionStatement","src":"26676:90:18"}]},"name":"abi_encode_tuple_t_contract$_Characters_$3143__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26602:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26614:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26625:4:18","type":""}],"src":"26513:260:18"},{"body":{"nodeType":"YulBlock","src":"26897:195:18","statements":[{"nodeType":"YulAssignment","src":"26907:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26919:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"26930:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26915:3:18"},"nodeType":"YulFunctionCall","src":"26915:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26907:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26954:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"26965:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26950:3:18"},"nodeType":"YulFunctionCall","src":"26950:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26973:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"26979:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26969:3:18"},"nodeType":"YulFunctionCall","src":"26969:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26943:6:18"},"nodeType":"YulFunctionCall","src":"26943:47:18"},"nodeType":"YulExpressionStatement","src":"26943:47:18"},{"nodeType":"YulAssignment","src":"26999:86:18","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27071:6:18"},{"name":"tail","nodeType":"YulIdentifier","src":"27080:4:18"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27007:63:18"},"nodeType":"YulFunctionCall","src":"27007:78:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26999:4:18"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26869:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26881:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26892:4:18","type":""}],"src":"26779:313:18"},{"body":{"nodeType":"YulBlock","src":"27269:248:18","statements":[{"nodeType":"YulAssignment","src":"27279:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27291:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"27302:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27287:3:18"},"nodeType":"YulFunctionCall","src":"27287:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27279:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27326:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"27337:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27322:3:18"},"nodeType":"YulFunctionCall","src":"27322:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27345:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"27351:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27341:3:18"},"nodeType":"YulFunctionCall","src":"27341:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27315:6:18"},"nodeType":"YulFunctionCall","src":"27315:47:18"},"nodeType":"YulExpressionStatement","src":"27315:47:18"},{"nodeType":"YulAssignment","src":"27371:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27505:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27379:124:18"},"nodeType":"YulFunctionCall","src":"27379:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27371:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27249:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27264:4:18","type":""}],"src":"27098:419:18"},{"body":{"nodeType":"YulBlock","src":"27694:248:18","statements":[{"nodeType":"YulAssignment","src":"27704:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27716:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"27727:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27712:3:18"},"nodeType":"YulFunctionCall","src":"27712:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27704:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27751:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"27762:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27747:3:18"},"nodeType":"YulFunctionCall","src":"27747:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27770:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"27776:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27766:3:18"},"nodeType":"YulFunctionCall","src":"27766:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27740:6:18"},"nodeType":"YulFunctionCall","src":"27740:47:18"},"nodeType":"YulExpressionStatement","src":"27740:47:18"},{"nodeType":"YulAssignment","src":"27796:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27930:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27804:124:18"},"nodeType":"YulFunctionCall","src":"27804:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27796:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27674:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27689:4:18","type":""}],"src":"27523:419:18"},{"body":{"nodeType":"YulBlock","src":"28119:248:18","statements":[{"nodeType":"YulAssignment","src":"28129:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28141:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"28152:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28137:3:18"},"nodeType":"YulFunctionCall","src":"28137:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28129:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28176:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"28187:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28172:3:18"},"nodeType":"YulFunctionCall","src":"28172:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28195:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"28201:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28191:3:18"},"nodeType":"YulFunctionCall","src":"28191:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28165:6:18"},"nodeType":"YulFunctionCall","src":"28165:47:18"},"nodeType":"YulExpressionStatement","src":"28165:47:18"},{"nodeType":"YulAssignment","src":"28221:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28355:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28229:124:18"},"nodeType":"YulFunctionCall","src":"28229:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28221:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28099:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28114:4:18","type":""}],"src":"27948:419:18"},{"body":{"nodeType":"YulBlock","src":"28544:248:18","statements":[{"nodeType":"YulAssignment","src":"28554:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28566:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"28577:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28562:3:18"},"nodeType":"YulFunctionCall","src":"28562:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28554:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28601:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"28612:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28597:3:18"},"nodeType":"YulFunctionCall","src":"28597:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28620:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"28626:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28616:3:18"},"nodeType":"YulFunctionCall","src":"28616:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28590:6:18"},"nodeType":"YulFunctionCall","src":"28590:47:18"},"nodeType":"YulExpressionStatement","src":"28590:47:18"},{"nodeType":"YulAssignment","src":"28646:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28780:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28654:124:18"},"nodeType":"YulFunctionCall","src":"28654:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28646:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28524:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28539:4:18","type":""}],"src":"28373:419:18"},{"body":{"nodeType":"YulBlock","src":"28969:248:18","statements":[{"nodeType":"YulAssignment","src":"28979:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28991:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"29002:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28987:3:18"},"nodeType":"YulFunctionCall","src":"28987:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28979:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29026:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"29037:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29022:3:18"},"nodeType":"YulFunctionCall","src":"29022:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29045:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"29051:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29041:3:18"},"nodeType":"YulFunctionCall","src":"29041:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29015:6:18"},"nodeType":"YulFunctionCall","src":"29015:47:18"},"nodeType":"YulExpressionStatement","src":"29015:47:18"},{"nodeType":"YulAssignment","src":"29071:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29205:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29079:124:18"},"nodeType":"YulFunctionCall","src":"29079:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29071:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28949:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28964:4:18","type":""}],"src":"28798:419:18"},{"body":{"nodeType":"YulBlock","src":"29394:248:18","statements":[{"nodeType":"YulAssignment","src":"29404:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29416:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"29427:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29412:3:18"},"nodeType":"YulFunctionCall","src":"29412:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29404:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29451:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"29462:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29447:3:18"},"nodeType":"YulFunctionCall","src":"29447:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29470:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"29476:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29466:3:18"},"nodeType":"YulFunctionCall","src":"29466:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29440:6:18"},"nodeType":"YulFunctionCall","src":"29440:47:18"},"nodeType":"YulExpressionStatement","src":"29440:47:18"},{"nodeType":"YulAssignment","src":"29496:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29630:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29504:124:18"},"nodeType":"YulFunctionCall","src":"29504:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29496:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29374:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29389:4:18","type":""}],"src":"29223:419:18"},{"body":{"nodeType":"YulBlock","src":"29819:248:18","statements":[{"nodeType":"YulAssignment","src":"29829:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29841:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"29852:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29837:3:18"},"nodeType":"YulFunctionCall","src":"29837:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29829:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29876:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"29887:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29872:3:18"},"nodeType":"YulFunctionCall","src":"29872:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29895:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"29901:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29891:3:18"},"nodeType":"YulFunctionCall","src":"29891:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29865:6:18"},"nodeType":"YulFunctionCall","src":"29865:47:18"},"nodeType":"YulExpressionStatement","src":"29865:47:18"},{"nodeType":"YulAssignment","src":"29921:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30055:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29929:124:18"},"nodeType":"YulFunctionCall","src":"29929:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29921:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29799:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29814:4:18","type":""}],"src":"29648:419:18"},{"body":{"nodeType":"YulBlock","src":"30244:248:18","statements":[{"nodeType":"YulAssignment","src":"30254:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30266:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"30277:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30262:3:18"},"nodeType":"YulFunctionCall","src":"30262:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30254:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30301:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"30312:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30297:3:18"},"nodeType":"YulFunctionCall","src":"30297:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30320:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"30326:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30316:3:18"},"nodeType":"YulFunctionCall","src":"30316:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30290:6:18"},"nodeType":"YulFunctionCall","src":"30290:47:18"},"nodeType":"YulExpressionStatement","src":"30290:47:18"},{"nodeType":"YulAssignment","src":"30346:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30480:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30354:124:18"},"nodeType":"YulFunctionCall","src":"30354:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30346:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30224:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30239:4:18","type":""}],"src":"30073:419:18"},{"body":{"nodeType":"YulBlock","src":"30669:248:18","statements":[{"nodeType":"YulAssignment","src":"30679:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30691:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"30702:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30687:3:18"},"nodeType":"YulFunctionCall","src":"30687:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30679:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30726:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"30737:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30722:3:18"},"nodeType":"YulFunctionCall","src":"30722:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30745:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"30751:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30741:3:18"},"nodeType":"YulFunctionCall","src":"30741:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30715:6:18"},"nodeType":"YulFunctionCall","src":"30715:47:18"},"nodeType":"YulExpressionStatement","src":"30715:47:18"},{"nodeType":"YulAssignment","src":"30771:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30905:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30779:124:18"},"nodeType":"YulFunctionCall","src":"30779:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30771:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30649:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30664:4:18","type":""}],"src":"30498:419:18"},{"body":{"nodeType":"YulBlock","src":"31094:248:18","statements":[{"nodeType":"YulAssignment","src":"31104:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31116:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"31127:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31112:3:18"},"nodeType":"YulFunctionCall","src":"31112:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31104:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31151:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"31162:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31147:3:18"},"nodeType":"YulFunctionCall","src":"31147:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31170:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"31176:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31166:3:18"},"nodeType":"YulFunctionCall","src":"31166:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31140:6:18"},"nodeType":"YulFunctionCall","src":"31140:47:18"},"nodeType":"YulExpressionStatement","src":"31140:47:18"},{"nodeType":"YulAssignment","src":"31196:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31330:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31204:124:18"},"nodeType":"YulFunctionCall","src":"31204:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31196:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31074:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31089:4:18","type":""}],"src":"30923:419:18"},{"body":{"nodeType":"YulBlock","src":"31519:248:18","statements":[{"nodeType":"YulAssignment","src":"31529:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31541:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"31552:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31537:3:18"},"nodeType":"YulFunctionCall","src":"31537:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31529:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31576:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"31587:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31572:3:18"},"nodeType":"YulFunctionCall","src":"31572:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31595:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"31601:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31591:3:18"},"nodeType":"YulFunctionCall","src":"31591:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31565:6:18"},"nodeType":"YulFunctionCall","src":"31565:47:18"},"nodeType":"YulExpressionStatement","src":"31565:47:18"},{"nodeType":"YulAssignment","src":"31621:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31755:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31629:124:18"},"nodeType":"YulFunctionCall","src":"31629:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31621:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31499:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31514:4:18","type":""}],"src":"31348:419:18"},{"body":{"nodeType":"YulBlock","src":"31944:248:18","statements":[{"nodeType":"YulAssignment","src":"31954:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31966:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"31977:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31962:3:18"},"nodeType":"YulFunctionCall","src":"31962:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31954:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32001:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"32012:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31997:3:18"},"nodeType":"YulFunctionCall","src":"31997:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32020:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"32026:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32016:3:18"},"nodeType":"YulFunctionCall","src":"32016:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31990:6:18"},"nodeType":"YulFunctionCall","src":"31990:47:18"},"nodeType":"YulExpressionStatement","src":"31990:47:18"},{"nodeType":"YulAssignment","src":"32046:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32180:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32054:124:18"},"nodeType":"YulFunctionCall","src":"32054:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32046:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31924:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31939:4:18","type":""}],"src":"31773:419:18"},{"body":{"nodeType":"YulBlock","src":"32369:248:18","statements":[{"nodeType":"YulAssignment","src":"32379:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32391:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"32402:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32387:3:18"},"nodeType":"YulFunctionCall","src":"32387:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32379:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32426:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"32437:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32422:3:18"},"nodeType":"YulFunctionCall","src":"32422:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32445:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"32451:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32441:3:18"},"nodeType":"YulFunctionCall","src":"32441:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32415:6:18"},"nodeType":"YulFunctionCall","src":"32415:47:18"},"nodeType":"YulExpressionStatement","src":"32415:47:18"},{"nodeType":"YulAssignment","src":"32471:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32605:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32479:124:18"},"nodeType":"YulFunctionCall","src":"32479:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32471:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32349:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32364:4:18","type":""}],"src":"32198:419:18"},{"body":{"nodeType":"YulBlock","src":"32794:248:18","statements":[{"nodeType":"YulAssignment","src":"32804:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32816:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"32827:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32812:3:18"},"nodeType":"YulFunctionCall","src":"32812:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32804:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32851:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"32862:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32847:3:18"},"nodeType":"YulFunctionCall","src":"32847:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32870:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"32876:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32866:3:18"},"nodeType":"YulFunctionCall","src":"32866:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32840:6:18"},"nodeType":"YulFunctionCall","src":"32840:47:18"},"nodeType":"YulExpressionStatement","src":"32840:47:18"},{"nodeType":"YulAssignment","src":"32896:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33030:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32904:124:18"},"nodeType":"YulFunctionCall","src":"32904:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32896:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32774:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32789:4:18","type":""}],"src":"32623:419:18"},{"body":{"nodeType":"YulBlock","src":"33188:217:18","statements":[{"nodeType":"YulAssignment","src":"33198:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33210:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"33221:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33206:3:18"},"nodeType":"YulFunctionCall","src":"33206:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33198:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33245:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"33256:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33241:3:18"},"nodeType":"YulFunctionCall","src":"33241:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33264:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"33270:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33260:3:18"},"nodeType":"YulFunctionCall","src":"33260:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33234:6:18"},"nodeType":"YulFunctionCall","src":"33234:47:18"},"nodeType":"YulExpressionStatement","src":"33234:47:18"},{"nodeType":"YulAssignment","src":"33290:108:18","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"33384:6:18"},{"name":"tail","nodeType":"YulIdentifier","src":"33393:4:18"}],"functionName":{"name":"abi_encode_t_struct$_Nft_$4670_memory_ptr_to_t_struct$_Nft_$4670_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33298:85:18"},"nodeType":"YulFunctionCall","src":"33298:100:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33290:4:18"}]}]},"name":"abi_encode_tuple_t_struct$_Nft_$4670_memory_ptr__to_t_struct$_Nft_$4670_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33160:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"33172:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33183:4:18","type":""}],"src":"33048:357:18"},{"body":{"nodeType":"YulBlock","src":"33509:124:18","statements":[{"nodeType":"YulAssignment","src":"33519:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33531:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"33542:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33527:3:18"},"nodeType":"YulFunctionCall","src":"33527:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33519:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"33599:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33612:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"33623:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33608:3:18"},"nodeType":"YulFunctionCall","src":"33608:17:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"33555:43:18"},"nodeType":"YulFunctionCall","src":"33555:71:18"},"nodeType":"YulExpressionStatement","src":"33555:71:18"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33481:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"33493:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33504:4:18","type":""}],"src":"33411:222:18"},{"body":{"nodeType":"YulBlock","src":"33765:206:18","statements":[{"nodeType":"YulAssignment","src":"33775:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33787:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"33798:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33783:3:18"},"nodeType":"YulFunctionCall","src":"33783:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33775:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"33855:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33868:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"33879:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33864:3:18"},"nodeType":"YulFunctionCall","src":"33864:17:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"33811:43:18"},"nodeType":"YulFunctionCall","src":"33811:71:18"},"nodeType":"YulExpressionStatement","src":"33811:71:18"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"33936:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33949:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"33960:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33945:3:18"},"nodeType":"YulFunctionCall","src":"33945:18:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"33892:43:18"},"nodeType":"YulFunctionCall","src":"33892:72:18"},"nodeType":"YulExpressionStatement","src":"33892:72:18"}]},"name":"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33729:9:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"33741:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"33749:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33760:4:18","type":""}],"src":"33639:332:18"},{"body":{"nodeType":"YulBlock","src":"34173:436:18","statements":[{"nodeType":"YulAssignment","src":"34183:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34195:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"34206:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34191:3:18"},"nodeType":"YulFunctionCall","src":"34191:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34183:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"34264:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34277:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"34288:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34273:3:18"},"nodeType":"YulFunctionCall","src":"34273:17:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"34220:43:18"},"nodeType":"YulFunctionCall","src":"34220:71:18"},"nodeType":"YulExpressionStatement","src":"34220:71:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34312:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"34323:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34308:3:18"},"nodeType":"YulFunctionCall","src":"34308:18:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34332:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"34338:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34328:3:18"},"nodeType":"YulFunctionCall","src":"34328:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34301:6:18"},"nodeType":"YulFunctionCall","src":"34301:48:18"},"nodeType":"YulExpressionStatement","src":"34301:48:18"},{"nodeType":"YulAssignment","src":"34358:86:18","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"34430:6:18"},{"name":"tail","nodeType":"YulIdentifier","src":"34439:4:18"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34366:63:18"},"nodeType":"YulFunctionCall","src":"34366:78:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34358:4:18"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"34492:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34505:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"34516:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34501:3:18"},"nodeType":"YulFunctionCall","src":"34501:18:18"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"34454:37:18"},"nodeType":"YulFunctionCall","src":"34454:66:18"},"nodeType":"YulExpressionStatement","src":"34454:66:18"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"34574:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34587:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"34598:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34583:3:18"},"nodeType":"YulFunctionCall","src":"34583:18:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"34530:43:18"},"nodeType":"YulFunctionCall","src":"34530:72:18"},"nodeType":"YulExpressionStatement","src":"34530:72:18"}]},"name":"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_bool_t_uint256__to_t_uint256_t_string_memory_ptr_t_bool_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34121:9:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"34133:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"34141:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"34149:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"34157:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34168:4:18","type":""}],"src":"33977:632:18"},{"body":{"nodeType":"YulBlock","src":"34656:88:18","statements":[{"nodeType":"YulAssignment","src":"34666:30:18","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"34676:18:18"},"nodeType":"YulFunctionCall","src":"34676:20:18"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"34666:6:18"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"34725:6:18"},{"name":"size","nodeType":"YulIdentifier","src":"34733:4:18"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"34705:19:18"},"nodeType":"YulFunctionCall","src":"34705:33:18"},"nodeType":"YulExpressionStatement","src":"34705:33:18"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"34640:4:18","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"34649:6:18","type":""}],"src":"34615:129:18"},{"body":{"nodeType":"YulBlock","src":"34790:35:18","statements":[{"nodeType":"YulAssignment","src":"34800:19:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34816:2:18","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"34810:5:18"},"nodeType":"YulFunctionCall","src":"34810:9:18"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"34800:6:18"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"34783:6:18","type":""}],"src":"34750:75:18"},{"body":{"nodeType":"YulBlock","src":"34913:229:18","statements":[{"body":{"nodeType":"YulBlock","src":"35018:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"35020:16:18"},"nodeType":"YulFunctionCall","src":"35020:18:18"},"nodeType":"YulExpressionStatement","src":"35020:18:18"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"34990:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"34998:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"34987:2:18"},"nodeType":"YulFunctionCall","src":"34987:30:18"},"nodeType":"YulIf","src":"34984:56:18"},{"nodeType":"YulAssignment","src":"35050:25:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"35062:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"35070:4:18","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"35058:3:18"},"nodeType":"YulFunctionCall","src":"35058:17:18"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"35050:4:18"}]},{"nodeType":"YulAssignment","src":"35112:23:18","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"35124:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"35130:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35120:3:18"},"nodeType":"YulFunctionCall","src":"35120:15:18"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"35112:4:18"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"34897:6:18","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"34908:4:18","type":""}],"src":"34831:311:18"},{"body":{"nodeType":"YulBlock","src":"35214:241:18","statements":[{"body":{"nodeType":"YulBlock","src":"35319:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"35321:16:18"},"nodeType":"YulFunctionCall","src":"35321:18:18"},"nodeType":"YulExpressionStatement","src":"35321:18:18"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"35291:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"35299:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"35288:2:18"},"nodeType":"YulFunctionCall","src":"35288:30:18"},"nodeType":"YulIf","src":"35285:56:18"},{"nodeType":"YulAssignment","src":"35351:37:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"35381:6:18"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"35359:21:18"},"nodeType":"YulFunctionCall","src":"35359:29:18"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"35351:4:18"}]},{"nodeType":"YulAssignment","src":"35425:23:18","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"35437:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"35443:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35433:3:18"},"nodeType":"YulFunctionCall","src":"35433:15:18"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"35425:4:18"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"35198:6:18","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"35209:4:18","type":""}],"src":"35148:307:18"},{"body":{"nodeType":"YulBlock","src":"35528:241:18","statements":[{"body":{"nodeType":"YulBlock","src":"35633:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"35635:16:18"},"nodeType":"YulFunctionCall","src":"35635:18:18"},"nodeType":"YulExpressionStatement","src":"35635:18:18"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"35605:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"35613:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"35602:2:18"},"nodeType":"YulFunctionCall","src":"35602:30:18"},"nodeType":"YulIf","src":"35599:56:18"},{"nodeType":"YulAssignment","src":"35665:37:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"35695:6:18"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"35673:21:18"},"nodeType":"YulFunctionCall","src":"35673:29:18"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"35665:4:18"}]},{"nodeType":"YulAssignment","src":"35739:23:18","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"35751:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"35757:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35747:3:18"},"nodeType":"YulFunctionCall","src":"35747:15:18"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"35739:4:18"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"35512:6:18","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"35523:4:18","type":""}],"src":"35461:308:18"},{"body":{"nodeType":"YulBlock","src":"35847:60:18","statements":[{"nodeType":"YulAssignment","src":"35857:11:18","value":{"name":"ptr","nodeType":"YulIdentifier","src":"35865:3:18"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"35857:4:18"}]},{"nodeType":"YulAssignment","src":"35878:22:18","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"35890:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"35895:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35886:3:18"},"nodeType":"YulFunctionCall","src":"35886:14:18"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"35878:4:18"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"35834:3:18","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"35842:4:18","type":""}],"src":"35775:132:18"},{"body":{"nodeType":"YulBlock","src":"35987:40:18","statements":[{"nodeType":"YulAssignment","src":"35998:22:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36014:5:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"36008:5:18"},"nodeType":"YulFunctionCall","src":"36008:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"35998:6:18"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35970:5:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"35980:6:18","type":""}],"src":"35913:114:18"},{"body":{"nodeType":"YulBlock","src":"36091:40:18","statements":[{"nodeType":"YulAssignment","src":"36102:22:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36118:5:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"36112:5:18"},"nodeType":"YulFunctionCall","src":"36112:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"36102:6:18"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"36074:5:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"36084:6:18","type":""}],"src":"36033:98:18"},{"body":{"nodeType":"YulBlock","src":"36196:40:18","statements":[{"nodeType":"YulAssignment","src":"36207:22:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36223:5:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"36217:5:18"},"nodeType":"YulFunctionCall","src":"36217:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"36207:6:18"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"36179:5:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"36189:6:18","type":""}],"src":"36137:99:18"},{"body":{"nodeType":"YulBlock","src":"36317:38:18","statements":[{"nodeType":"YulAssignment","src":"36327:22:18","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"36339:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"36344:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36335:3:18"},"nodeType":"YulFunctionCall","src":"36335:14:18"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"36327:4:18"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"36304:3:18","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"36312:4:18","type":""}],"src":"36242:113:18"},{"body":{"nodeType":"YulBlock","src":"36472:73:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36489:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"36494:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36482:6:18"},"nodeType":"YulFunctionCall","src":"36482:19:18"},"nodeType":"YulExpressionStatement","src":"36482:19:18"},{"nodeType":"YulAssignment","src":"36510:29:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36529:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"36534:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36525:3:18"},"nodeType":"YulFunctionCall","src":"36525:14:18"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"36510:11:18"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"36444:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"36449:6:18","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"36460:11:18","type":""}],"src":"36361:184:18"},{"body":{"nodeType":"YulBlock","src":"36646:73:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36663:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"36668:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36656:6:18"},"nodeType":"YulFunctionCall","src":"36656:19:18"},"nodeType":"YulExpressionStatement","src":"36656:19:18"},{"nodeType":"YulAssignment","src":"36684:29:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36703:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"36708:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36699:3:18"},"nodeType":"YulFunctionCall","src":"36699:14:18"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"36684:11:18"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"36618:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"36623:6:18","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"36634:11:18","type":""}],"src":"36551:168:18"},{"body":{"nodeType":"YulBlock","src":"36838:34:18","statements":[{"nodeType":"YulAssignment","src":"36848:18:18","value":{"name":"pos","nodeType":"YulIdentifier","src":"36863:3:18"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"36848:11:18"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"36810:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"36815:6:18","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"36826:11:18","type":""}],"src":"36725:147:18"},{"body":{"nodeType":"YulBlock","src":"36964:73:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36981:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"36986:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36974:6:18"},"nodeType":"YulFunctionCall","src":"36974:19:18"},"nodeType":"YulExpressionStatement","src":"36974:19:18"},{"nodeType":"YulAssignment","src":"37002:29:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37021:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"37026:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37017:3:18"},"nodeType":"YulFunctionCall","src":"37017:14:18"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"37002:11:18"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"36936:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"36941:6:18","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"36952:11:18","type":""}],"src":"36878:159:18"},{"body":{"nodeType":"YulBlock","src":"37139:73:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37156:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"37161:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37149:6:18"},"nodeType":"YulFunctionCall","src":"37149:19:18"},"nodeType":"YulExpressionStatement","src":"37149:19:18"},{"nodeType":"YulAssignment","src":"37177:29:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37196:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"37201:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37192:3:18"},"nodeType":"YulFunctionCall","src":"37192:14:18"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"37177:11:18"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"37111:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"37116:6:18","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"37127:11:18","type":""}],"src":"37043:169:18"},{"body":{"nodeType":"YulBlock","src":"37332:34:18","statements":[{"nodeType":"YulAssignment","src":"37342:18:18","value":{"name":"pos","nodeType":"YulIdentifier","src":"37357:3:18"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"37342:11:18"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"37304:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"37309:6:18","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"37320:11:18","type":""}],"src":"37218:148:18"},{"body":{"nodeType":"YulBlock","src":"37416:261:18","statements":[{"nodeType":"YulAssignment","src":"37426:25:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"37449:1:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"37431:17:18"},"nodeType":"YulFunctionCall","src":"37431:20:18"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"37426:1:18"}]},{"nodeType":"YulAssignment","src":"37460:25:18","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"37483:1:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"37465:17:18"},"nodeType":"YulFunctionCall","src":"37465:20:18"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"37460:1:18"}]},{"body":{"nodeType":"YulBlock","src":"37623:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"37625:16:18"},"nodeType":"YulFunctionCall","src":"37625:18:18"},"nodeType":"YulExpressionStatement","src":"37625:18:18"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"37544:1:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37551:66:18","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"37619:1:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37547:3:18"},"nodeType":"YulFunctionCall","src":"37547:74:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"37541:2:18"},"nodeType":"YulFunctionCall","src":"37541:81:18"},"nodeType":"YulIf","src":"37538:107:18"},{"nodeType":"YulAssignment","src":"37655:16:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"37666:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"37669:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37662:3:18"},"nodeType":"YulFunctionCall","src":"37662:9:18"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"37655:3:18"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"37403:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"37406:1:18","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"37412:3:18","type":""}],"src":"37372:305:18"},{"body":{"nodeType":"YulBlock","src":"37725:143:18","statements":[{"nodeType":"YulAssignment","src":"37735:25:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"37758:1:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"37740:17:18"},"nodeType":"YulFunctionCall","src":"37740:20:18"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"37735:1:18"}]},{"nodeType":"YulAssignment","src":"37769:25:18","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"37792:1:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"37774:17:18"},"nodeType":"YulFunctionCall","src":"37774:20:18"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"37769:1:18"}]},{"body":{"nodeType":"YulBlock","src":"37816:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"37818:16:18"},"nodeType":"YulFunctionCall","src":"37818:18:18"},"nodeType":"YulExpressionStatement","src":"37818:18:18"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"37813:1:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"37806:6:18"},"nodeType":"YulFunctionCall","src":"37806:9:18"},"nodeType":"YulIf","src":"37803:35:18"},{"nodeType":"YulAssignment","src":"37848:14:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"37857:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"37860:1:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"37853:3:18"},"nodeType":"YulFunctionCall","src":"37853:9:18"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"37848:1:18"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"37714:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"37717:1:18","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"37723:1:18","type":""}],"src":"37683:185:18"},{"body":{"nodeType":"YulBlock","src":"37922:300:18","statements":[{"nodeType":"YulAssignment","src":"37932:25:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"37955:1:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"37937:17:18"},"nodeType":"YulFunctionCall","src":"37937:20:18"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"37932:1:18"}]},{"nodeType":"YulAssignment","src":"37966:25:18","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"37989:1:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"37971:17:18"},"nodeType":"YulFunctionCall","src":"37971:20:18"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"37966:1:18"}]},{"body":{"nodeType":"YulBlock","src":"38164:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"38166:16:18"},"nodeType":"YulFunctionCall","src":"38166:18:18"},"nodeType":"YulExpressionStatement","src":"38166:18:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"38076:1:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"38069:6:18"},"nodeType":"YulFunctionCall","src":"38069:9:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"38062:6:18"},"nodeType":"YulFunctionCall","src":"38062:17:18"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"38084:1:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38091:66:18","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"38159:1:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"38087:3:18"},"nodeType":"YulFunctionCall","src":"38087:74:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"38081:2:18"},"nodeType":"YulFunctionCall","src":"38081:81:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"38058:3:18"},"nodeType":"YulFunctionCall","src":"38058:105:18"},"nodeType":"YulIf","src":"38055:131:18"},{"nodeType":"YulAssignment","src":"38196:20:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"38211:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"38214:1:18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"38207:3:18"},"nodeType":"YulFunctionCall","src":"38207:9:18"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"38196:7:18"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"37905:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"37908:1:18","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"37914:7:18","type":""}],"src":"37874:348:18"},{"body":{"nodeType":"YulBlock","src":"38273:51:18","statements":[{"nodeType":"YulAssignment","src":"38283:35:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38312:5:18"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"38294:17:18"},"nodeType":"YulFunctionCall","src":"38294:24:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"38283:7:18"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"38255:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"38265:7:18","type":""}],"src":"38228:96:18"},{"body":{"nodeType":"YulBlock","src":"38372:48:18","statements":[{"nodeType":"YulAssignment","src":"38382:32:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38407:5:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"38400:6:18"},"nodeType":"YulFunctionCall","src":"38400:13:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"38393:6:18"},"nodeType":"YulFunctionCall","src":"38393:21:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"38382:7:18"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"38354:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"38364:7:18","type":""}],"src":"38330:90:18"},{"body":{"nodeType":"YulBlock","src":"38471:32:18","statements":[{"nodeType":"YulAssignment","src":"38481:16:18","value":{"name":"value","nodeType":"YulIdentifier","src":"38492:5:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"38481:7:18"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"38453:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"38463:7:18","type":""}],"src":"38426:77:18"},{"body":{"nodeType":"YulBlock","src":"38553:105:18","statements":[{"nodeType":"YulAssignment","src":"38563:89:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38578:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"38585:66:18","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"38574:3:18"},"nodeType":"YulFunctionCall","src":"38574:78:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"38563:7:18"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"38535:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"38545:7:18","type":""}],"src":"38509:149:18"},{"body":{"nodeType":"YulBlock","src":"38708:32:18","statements":[{"nodeType":"YulAssignment","src":"38718:16:18","value":{"name":"value","nodeType":"YulIdentifier","src":"38729:5:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"38718:7:18"}]}]},"name":"cleanup_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"38690:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"38700:7:18","type":""}],"src":"38664:76:18"},{"body":{"nodeType":"YulBlock","src":"38790:45:18","statements":[{"nodeType":"YulAssignment","src":"38800:29:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38815:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"38822:6:18","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"38811:3:18"},"nodeType":"YulFunctionCall","src":"38811:18:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"38800:7:18"}]}]},"name":"cleanup_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"38772:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"38782:7:18","type":""}],"src":"38746:89:18"},{"body":{"nodeType":"YulBlock","src":"38886:81:18","statements":[{"nodeType":"YulAssignment","src":"38896:65:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38911:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"38918:42:18","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"38907:3:18"},"nodeType":"YulFunctionCall","src":"38907:54:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"38896:7:18"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"38868:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"38878:7:18","type":""}],"src":"38841:126:18"},{"body":{"nodeType":"YulBlock","src":"39018:32:18","statements":[{"nodeType":"YulAssignment","src":"39028:16:18","value":{"name":"value","nodeType":"YulIdentifier","src":"39039:5:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"39028:7:18"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"39000:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"39010:7:18","type":""}],"src":"38973:77:18"},{"body":{"nodeType":"YulBlock","src":"39100:49:18","statements":[{"nodeType":"YulAssignment","src":"39110:33:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"39125:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"39132:10:18","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"39121:3:18"},"nodeType":"YulFunctionCall","src":"39121:22:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"39110:7:18"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"39082:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"39092:7:18","type":""}],"src":"39056:93:18"},{"body":{"nodeType":"YulBlock","src":"39199:57:18","statements":[{"nodeType":"YulAssignment","src":"39209:41:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"39224:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"39231:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"39220:3:18"},"nodeType":"YulFunctionCall","src":"39220:30:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"39209:7:18"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"39181:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"39191:7:18","type":""}],"src":"39155:101:18"},{"body":{"nodeType":"YulBlock","src":"39306:61:18","statements":[{"nodeType":"YulAssignment","src":"39316:45:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"39331:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"39338:22:18","type":"","value":"0xffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"39327:3:18"},"nodeType":"YulFunctionCall","src":"39327:34:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"39316:7:18"}]}]},"name":"cleanup_t_uint80","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"39288:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"39298:7:18","type":""}],"src":"39262:105:18"},{"body":{"nodeType":"YulBlock","src":"39462:66:18","statements":[{"nodeType":"YulAssignment","src":"39472:50:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"39516:5:18"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"39485:30:18"},"nodeType":"YulFunctionCall","src":"39485:37:18"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"39472:9:18"}]}]},"name":"convert_t_contract$_AggregatorV3Interface_$103_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"39442:5:18","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"39452:9:18","type":""}],"src":"39373:155:18"},{"body":{"nodeType":"YulBlock","src":"39613:66:18","statements":[{"nodeType":"YulAssignment","src":"39623:50:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"39667:5:18"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"39636:30:18"},"nodeType":"YulFunctionCall","src":"39636:37:18"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"39623:9:18"}]}]},"name":"convert_t_contract$_Characters_$3143_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"39593:5:18","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"39603:9:18","type":""}],"src":"39534:145:18"},{"body":{"nodeType":"YulBlock","src":"39745:66:18","statements":[{"nodeType":"YulAssignment","src":"39755:50:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"39799:5:18"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"39768:30:18"},"nodeType":"YulFunctionCall","src":"39768:37:18"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"39755:9:18"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"39725:5:18","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"39735:9:18","type":""}],"src":"39685:126:18"},{"body":{"nodeType":"YulBlock","src":"39877:53:18","statements":[{"nodeType":"YulAssignment","src":"39887:37:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"39918:5:18"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"39900:17:18"},"nodeType":"YulFunctionCall","src":"39900:24:18"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"39887:9:18"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"39857:5:18","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"39867:9:18","type":""}],"src":"39817:113:18"},{"body":{"nodeType":"YulBlock","src":"39987:103:18","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"40010:3:18"},{"name":"src","nodeType":"YulIdentifier","src":"40015:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"40020:6:18"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"39997:12:18"},"nodeType":"YulFunctionCall","src":"39997:30:18"},"nodeType":"YulExpressionStatement","src":"39997:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"40068:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"40073:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40064:3:18"},"nodeType":"YulFunctionCall","src":"40064:16:18"},{"kind":"number","nodeType":"YulLiteral","src":"40082:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40057:6:18"},"nodeType":"YulFunctionCall","src":"40057:27:18"},"nodeType":"YulExpressionStatement","src":"40057:27:18"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"39969:3:18","type":""},{"name":"dst","nodeType":"YulTypedName","src":"39974:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"39979:6:18","type":""}],"src":"39936:154:18"},{"body":{"nodeType":"YulBlock","src":"40145:258:18","statements":[{"nodeType":"YulVariableDeclaration","src":"40155:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"40164:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"40159:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"40224:63:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"40249:3:18"},{"name":"i","nodeType":"YulIdentifier","src":"40254:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40245:3:18"},"nodeType":"YulFunctionCall","src":"40245:11:18"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"40268:3:18"},{"name":"i","nodeType":"YulIdentifier","src":"40273:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40264:3:18"},"nodeType":"YulFunctionCall","src":"40264:11:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"40258:5:18"},"nodeType":"YulFunctionCall","src":"40258:18:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40238:6:18"},"nodeType":"YulFunctionCall","src":"40238:39:18"},"nodeType":"YulExpressionStatement","src":"40238:39:18"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"40185:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"40188:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"40182:2:18"},"nodeType":"YulFunctionCall","src":"40182:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"40196:19:18","statements":[{"nodeType":"YulAssignment","src":"40198:15:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"40207:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"40210:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40203:3:18"},"nodeType":"YulFunctionCall","src":"40203:10:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"40198:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"40178:3:18","statements":[]},"src":"40174:113:18"},{"body":{"nodeType":"YulBlock","src":"40321:76:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"40371:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"40376:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40367:3:18"},"nodeType":"YulFunctionCall","src":"40367:16:18"},{"kind":"number","nodeType":"YulLiteral","src":"40385:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40360:6:18"},"nodeType":"YulFunctionCall","src":"40360:27:18"},"nodeType":"YulExpressionStatement","src":"40360:27:18"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"40302:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"40305:6:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"40299:2:18"},"nodeType":"YulFunctionCall","src":"40299:13:18"},"nodeType":"YulIf","src":"40296:101:18"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"40127:3:18","type":""},{"name":"dst","nodeType":"YulTypedName","src":"40132:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"40137:6:18","type":""}],"src":"40096:307:18"},{"body":{"nodeType":"YulBlock","src":"40460:269:18","statements":[{"nodeType":"YulAssignment","src":"40470:22:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"40484:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"40490:1:18","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"40480:3:18"},"nodeType":"YulFunctionCall","src":"40480:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"40470:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"40501:38:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"40531:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"40537:1:18","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"40527:3:18"},"nodeType":"YulFunctionCall","src":"40527:12:18"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"40505:18:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"40578:51:18","statements":[{"nodeType":"YulAssignment","src":"40592:27:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"40606:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"40614:4:18","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"40602:3:18"},"nodeType":"YulFunctionCall","src":"40602:17:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"40592:6:18"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"40558:18:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"40551:6:18"},"nodeType":"YulFunctionCall","src":"40551:26:18"},"nodeType":"YulIf","src":"40548:81:18"},{"body":{"nodeType":"YulBlock","src":"40681:42:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"40695:16:18"},"nodeType":"YulFunctionCall","src":"40695:18:18"},"nodeType":"YulExpressionStatement","src":"40695:18:18"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"40645:18:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"40668:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"40676:2:18","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"40665:2:18"},"nodeType":"YulFunctionCall","src":"40665:14:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"40642:2:18"},"nodeType":"YulFunctionCall","src":"40642:38:18"},"nodeType":"YulIf","src":"40639:84:18"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"40444:4:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"40453:6:18","type":""}],"src":"40409:320:18"},{"body":{"nodeType":"YulBlock","src":"40778:238:18","statements":[{"nodeType":"YulVariableDeclaration","src":"40788:58:18","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"40810:6:18"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"40840:4:18"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"40818:21:18"},"nodeType":"YulFunctionCall","src":"40818:27:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40806:3:18"},"nodeType":"YulFunctionCall","src":"40806:40:18"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"40792:10:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"40957:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"40959:16:18"},"nodeType":"YulFunctionCall","src":"40959:18:18"},"nodeType":"YulExpressionStatement","src":"40959:18:18"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"40900:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"40912:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"40897:2:18"},"nodeType":"YulFunctionCall","src":"40897:34:18"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"40936:10:18"},{"name":"memPtr","nodeType":"YulIdentifier","src":"40948:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"40933:2:18"},"nodeType":"YulFunctionCall","src":"40933:22:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"40894:2:18"},"nodeType":"YulFunctionCall","src":"40894:62:18"},"nodeType":"YulIf","src":"40891:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"40995:2:18","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"40999:10:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40988:6:18"},"nodeType":"YulFunctionCall","src":"40988:22:18"},"nodeType":"YulExpressionStatement","src":"40988:22:18"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"40764:6:18","type":""},{"name":"size","nodeType":"YulTypedName","src":"40772:4:18","type":""}],"src":"40735:281:18"},{"body":{"nodeType":"YulBlock","src":"41065:190:18","statements":[{"nodeType":"YulAssignment","src":"41075:33:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"41102:5:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"41084:17:18"},"nodeType":"YulFunctionCall","src":"41084:24:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"41075:5:18"}]},{"body":{"nodeType":"YulBlock","src":"41198:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"41200:16:18"},"nodeType":"YulFunctionCall","src":"41200:18:18"},"nodeType":"YulExpressionStatement","src":"41200:18:18"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"41123:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"41130:66:18","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"41120:2:18"},"nodeType":"YulFunctionCall","src":"41120:77:18"},"nodeType":"YulIf","src":"41117:103:18"},{"nodeType":"YulAssignment","src":"41229:20:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"41240:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"41247:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41236:3:18"},"nodeType":"YulFunctionCall","src":"41236:13:18"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"41229:3:18"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"41051:5:18","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"41061:3:18","type":""}],"src":"41022:233:18"},{"body":{"nodeType":"YulBlock","src":"41295:142:18","statements":[{"nodeType":"YulAssignment","src":"41305:25:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"41328:1:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"41310:17:18"},"nodeType":"YulFunctionCall","src":"41310:20:18"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"41305:1:18"}]},{"nodeType":"YulAssignment","src":"41339:25:18","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"41362:1:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"41344:17:18"},"nodeType":"YulFunctionCall","src":"41344:20:18"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"41339:1:18"}]},{"body":{"nodeType":"YulBlock","src":"41386:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"41388:16:18"},"nodeType":"YulFunctionCall","src":"41388:18:18"},"nodeType":"YulExpressionStatement","src":"41388:18:18"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"41383:1:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"41376:6:18"},"nodeType":"YulFunctionCall","src":"41376:9:18"},"nodeType":"YulIf","src":"41373:35:18"},{"nodeType":"YulAssignment","src":"41417:14:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"41426:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"41429:1:18"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"41422:3:18"},"nodeType":"YulFunctionCall","src":"41422:9:18"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"41417:1:18"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"41284:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"41287:1:18","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"41293:1:18","type":""}],"src":"41261:176:18"},{"body":{"nodeType":"YulBlock","src":"41471:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"41488:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"41491:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41481:6:18"},"nodeType":"YulFunctionCall","src":"41481:88:18"},"nodeType":"YulExpressionStatement","src":"41481:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"41585:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"41588:4:18","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41578:6:18"},"nodeType":"YulFunctionCall","src":"41578:15:18"},"nodeType":"YulExpressionStatement","src":"41578:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"41609:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"41612:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"41602:6:18"},"nodeType":"YulFunctionCall","src":"41602:15:18"},"nodeType":"YulExpressionStatement","src":"41602:15:18"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"41443:180:18"},{"body":{"nodeType":"YulBlock","src":"41657:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"41674:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"41677:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41667:6:18"},"nodeType":"YulFunctionCall","src":"41667:88:18"},"nodeType":"YulExpressionStatement","src":"41667:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"41771:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"41774:4:18","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41764:6:18"},"nodeType":"YulFunctionCall","src":"41764:15:18"},"nodeType":"YulExpressionStatement","src":"41764:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"41795:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"41798:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"41788:6:18"},"nodeType":"YulFunctionCall","src":"41788:15:18"},"nodeType":"YulExpressionStatement","src":"41788:15:18"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"41629:180:18"},{"body":{"nodeType":"YulBlock","src":"41843:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"41860:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"41863:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41853:6:18"},"nodeType":"YulFunctionCall","src":"41853:88:18"},"nodeType":"YulExpressionStatement","src":"41853:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"41957:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"41960:4:18","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41950:6:18"},"nodeType":"YulFunctionCall","src":"41950:15:18"},"nodeType":"YulExpressionStatement","src":"41950:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"41981:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"41984:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"41974:6:18"},"nodeType":"YulFunctionCall","src":"41974:15:18"},"nodeType":"YulExpressionStatement","src":"41974:15:18"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"41815:180:18"},{"body":{"nodeType":"YulBlock","src":"42029:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"42046:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"42049:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42039:6:18"},"nodeType":"YulFunctionCall","src":"42039:88:18"},"nodeType":"YulExpressionStatement","src":"42039:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"42143:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"42146:4:18","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42136:6:18"},"nodeType":"YulFunctionCall","src":"42136:15:18"},"nodeType":"YulExpressionStatement","src":"42136:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"42167:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"42170:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"42160:6:18"},"nodeType":"YulFunctionCall","src":"42160:15:18"},"nodeType":"YulExpressionStatement","src":"42160:15:18"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"42001:180:18"},{"body":{"nodeType":"YulBlock","src":"42215:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"42232:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"42235:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42225:6:18"},"nodeType":"YulFunctionCall","src":"42225:88:18"},"nodeType":"YulExpressionStatement","src":"42225:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"42329:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"42332:4:18","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42322:6:18"},"nodeType":"YulFunctionCall","src":"42322:15:18"},"nodeType":"YulExpressionStatement","src":"42322:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"42353:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"42356:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"42346:6:18"},"nodeType":"YulFunctionCall","src":"42346:15:18"},"nodeType":"YulExpressionStatement","src":"42346:15:18"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"42187:180:18"},{"body":{"nodeType":"YulBlock","src":"42462:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"42479:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"42482:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"42472:6:18"},"nodeType":"YulFunctionCall","src":"42472:12:18"},"nodeType":"YulExpressionStatement","src":"42472:12:18"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"42373:117:18"},{"body":{"nodeType":"YulBlock","src":"42585:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"42602:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"42605:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"42595:6:18"},"nodeType":"YulFunctionCall","src":"42595:12:18"},"nodeType":"YulExpressionStatement","src":"42595:12:18"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"42496:117:18"},{"body":{"nodeType":"YulBlock","src":"42708:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"42725:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"42728:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"42718:6:18"},"nodeType":"YulFunctionCall","src":"42718:12:18"},"nodeType":"YulExpressionStatement","src":"42718:12:18"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"42619:117:18"},{"body":{"nodeType":"YulBlock","src":"42831:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"42848:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"42851:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"42841:6:18"},"nodeType":"YulFunctionCall","src":"42841:12:18"},"nodeType":"YulExpressionStatement","src":"42841:12:18"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"42742:117:18"},{"body":{"nodeType":"YulBlock","src":"42954:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"42971:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"42974:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"42964:6:18"},"nodeType":"YulFunctionCall","src":"42964:12:18"},"nodeType":"YulExpressionStatement","src":"42964:12:18"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"42865:117:18"},{"body":{"nodeType":"YulBlock","src":"43036:54:18","statements":[{"nodeType":"YulAssignment","src":"43046:38:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43064:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"43071:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43060:3:18"},"nodeType":"YulFunctionCall","src":"43060:14:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43080:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"43076:3:18"},"nodeType":"YulFunctionCall","src":"43076:7:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"43056:3:18"},"nodeType":"YulFunctionCall","src":"43056:28:18"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"43046:6:18"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"43019:5:18","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"43029:6:18","type":""}],"src":"42988:102:18"},{"body":{"nodeType":"YulBlock","src":"43202:126:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"43224:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"43232:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43220:3:18"},"nodeType":"YulFunctionCall","src":"43220:14:18"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"43236:34:18","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43213:6:18"},"nodeType":"YulFunctionCall","src":"43213:58:18"},"nodeType":"YulExpressionStatement","src":"43213:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"43292:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"43300:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43288:3:18"},"nodeType":"YulFunctionCall","src":"43288:15:18"},{"hexValue":"72206f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"43305:15:18","type":"","value":"r or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43281:6:18"},"nodeType":"YulFunctionCall","src":"43281:40:18"},"nodeType":"YulExpressionStatement","src":"43281:40:18"}]},"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"43194:6:18","type":""}],"src":"43096:232:18"},{"body":{"nodeType":"YulBlock","src":"43440:131:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"43462:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"43470:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43458:3:18"},"nodeType":"YulFunctionCall","src":"43458:14:18"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"43474:34:18","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43451:6:18"},"nodeType":"YulFunctionCall","src":"43451:58:18"},"nodeType":"YulExpressionStatement","src":"43451:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"43530:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"43538:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43526:3:18"},"nodeType":"YulFunctionCall","src":"43526:15:18"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"43543:20:18","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43519:6:18"},"nodeType":"YulFunctionCall","src":"43519:45:18"},"nodeType":"YulExpressionStatement","src":"43519:45:18"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"43432:6:18","type":""}],"src":"43334:237:18"},{"body":{"nodeType":"YulBlock","src":"43683:119:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"43705:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"43713:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43701:3:18"},"nodeType":"YulFunctionCall","src":"43701:14:18"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"43717:34:18","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43694:6:18"},"nodeType":"YulFunctionCall","src":"43694:58:18"},"nodeType":"YulExpressionStatement","src":"43694:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"43773:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"43781:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43769:3:18"},"nodeType":"YulFunctionCall","src":"43769:15:18"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"43786:8:18","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43762:6:18"},"nodeType":"YulFunctionCall","src":"43762:33:18"},"nodeType":"YulExpressionStatement","src":"43762:33:18"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"43675:6:18","type":""}],"src":"43577:225:18"},{"body":{"nodeType":"YulBlock","src":"43914:118:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"43936:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"43944:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43932:3:18"},"nodeType":"YulFunctionCall","src":"43932:14:18"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"43948:34:18","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43925:6:18"},"nodeType":"YulFunctionCall","src":"43925:58:18"},"nodeType":"YulExpressionStatement","src":"43925:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"44004:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"44012:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44000:3:18"},"nodeType":"YulFunctionCall","src":"44000:15:18"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"44017:7:18","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43993:6:18"},"nodeType":"YulFunctionCall","src":"43993:32:18"},"nodeType":"YulExpressionStatement","src":"43993:32:18"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"43906:6:18","type":""}],"src":"43808:224:18"},{"body":{"nodeType":"YulBlock","src":"44144:72:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"44166:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"44174:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44162:3:18"},"nodeType":"YulFunctionCall","src":"44162:14:18"},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","kind":"string","nodeType":"YulLiteral","src":"44178:30:18","type":"","value":"ERC721: token already minted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44155:6:18"},"nodeType":"YulFunctionCall","src":"44155:54:18"},"nodeType":"YulExpressionStatement","src":"44155:54:18"}]},"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"44136:6:18","type":""}],"src":"44038:178:18"},{"body":{"nodeType":"YulBlock","src":"44328:117:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"44350:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"44358:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44346:3:18"},"nodeType":"YulFunctionCall","src":"44346:14:18"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"44362:34:18","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44339:6:18"},"nodeType":"YulFunctionCall","src":"44339:58:18"},"nodeType":"YulExpressionStatement","src":"44339:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"44418:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"44426:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44414:3:18"},"nodeType":"YulFunctionCall","src":"44414:15:18"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"44431:6:18","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44407:6:18"},"nodeType":"YulFunctionCall","src":"44407:31:18"},"nodeType":"YulExpressionStatement","src":"44407:31:18"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"44320:6:18","type":""}],"src":"44222:223:18"},{"body":{"nodeType":"YulBlock","src":"44557:69:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"44579:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"44587:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44575:3:18"},"nodeType":"YulFunctionCall","src":"44575:14:18"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"44591:27:18","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44568:6:18"},"nodeType":"YulFunctionCall","src":"44568:51:18"},"nodeType":"YulExpressionStatement","src":"44568:51:18"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"44549:6:18","type":""}],"src":"44451:175:18"},{"body":{"nodeType":"YulBlock","src":"44738:122:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"44760:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"44768:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44756:3:18"},"nodeType":"YulFunctionCall","src":"44756:14:18"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nodeType":"YulLiteral","src":"44772:34:18","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44749:6:18"},"nodeType":"YulFunctionCall","src":"44749:58:18"},"nodeType":"YulExpressionStatement","src":"44749:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"44828:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"44836:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44824:3:18"},"nodeType":"YulFunctionCall","src":"44824:15:18"},{"hexValue":"6c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"44841:11:18","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44817:6:18"},"nodeType":"YulFunctionCall","src":"44817:36:18"},"nodeType":"YulExpressionStatement","src":"44817:36:18"}]},"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"44730:6:18","type":""}],"src":"44632:228:18"},{"body":{"nodeType":"YulBlock","src":"44972:127:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"44994:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"45002:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44990:3:18"},"nodeType":"YulFunctionCall","src":"44990:14:18"},{"hexValue":"45524337323155524953746f726167653a2055524920736574206f66206e6f6e","kind":"string","nodeType":"YulLiteral","src":"45006:34:18","type":"","value":"ERC721URIStorage: URI set of non"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44983:6:18"},"nodeType":"YulFunctionCall","src":"44983:58:18"},"nodeType":"YulExpressionStatement","src":"44983:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"45062:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"45070:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45058:3:18"},"nodeType":"YulFunctionCall","src":"45058:15:18"},{"hexValue":"6578697374656e7420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"45075:16:18","type":"","value":"existent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45051:6:18"},"nodeType":"YulFunctionCall","src":"45051:41:18"},"nodeType":"YulExpressionStatement","src":"45051:41:18"}]},"name":"store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"44964:6:18","type":""}],"src":"44866:233:18"},{"body":{"nodeType":"YulBlock","src":"45211:76:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"45233:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"45241:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45229:3:18"},"nodeType":"YulFunctionCall","src":"45229:14:18"},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"45245:34:18","type":"","value":"ERC721: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45222:6:18"},"nodeType":"YulFunctionCall","src":"45222:58:18"},"nodeType":"YulExpressionStatement","src":"45222:58:18"}]},"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"45203:6:18","type":""}],"src":"45105:182:18"},{"body":{"nodeType":"YulBlock","src":"45399:76:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"45421:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"45429:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45417:3:18"},"nodeType":"YulFunctionCall","src":"45417:14:18"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"45433:34:18","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45410:6:18"},"nodeType":"YulFunctionCall","src":"45410:58:18"},"nodeType":"YulExpressionStatement","src":"45410:58:18"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"45391:6:18","type":""}],"src":"45293:182:18"},{"body":{"nodeType":"YulBlock","src":"45587:68:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"45609:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"45617:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45605:3:18"},"nodeType":"YulFunctionCall","src":"45605:14:18"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"45621:26:18","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45598:6:18"},"nodeType":"YulFunctionCall","src":"45598:50:18"},"nodeType":"YulExpressionStatement","src":"45598:50:18"}]},"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"45579:6:18","type":""}],"src":"45481:174:18"},{"body":{"nodeType":"YulBlock","src":"45767:114:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"45789:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"45797:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45785:3:18"},"nodeType":"YulFunctionCall","src":"45785:14:18"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"45801:34:18","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45778:6:18"},"nodeType":"YulFunctionCall","src":"45778:58:18"},"nodeType":"YulExpressionStatement","src":"45778:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"45857:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"45865:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45853:3:18"},"nodeType":"YulFunctionCall","src":"45853:15:18"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"45870:3:18","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45846:6:18"},"nodeType":"YulFunctionCall","src":"45846:28:18"},"nodeType":"YulExpressionStatement","src":"45846:28:18"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"45759:6:18","type":""}],"src":"45661:220:18"},{"body":{"nodeType":"YulBlock","src":"45993:8:18","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"45985:6:18","type":""}],"src":"45887:114:18"},{"body":{"nodeType":"YulBlock","src":"46113:142:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"46135:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"46143:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46131:3:18"},"nodeType":"YulFunctionCall","src":"46131:14:18"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"46147:34:18","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46124:6:18"},"nodeType":"YulFunctionCall","src":"46124:58:18"},"nodeType":"YulExpressionStatement","src":"46124:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"46203:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"46211:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46199:3:18"},"nodeType":"YulFunctionCall","src":"46199:15:18"},{"hexValue":"6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"46216:31:18","type":"","value":"ken owner or approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46192:6:18"},"nodeType":"YulFunctionCall","src":"46192:56:18"},"nodeType":"YulExpressionStatement","src":"46192:56:18"}]},"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"46105:6:18","type":""}],"src":"46007:248:18"},{"body":{"nodeType":"YulBlock","src":"46304:79:18","statements":[{"body":{"nodeType":"YulBlock","src":"46361:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"46370:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"46373:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"46363:6:18"},"nodeType":"YulFunctionCall","src":"46363:12:18"},"nodeType":"YulExpressionStatement","src":"46363:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"46327:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"46352:5:18"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"46334:17:18"},"nodeType":"YulFunctionCall","src":"46334:24:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"46324:2:18"},"nodeType":"YulFunctionCall","src":"46324:35:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"46317:6:18"},"nodeType":"YulFunctionCall","src":"46317:43:18"},"nodeType":"YulIf","src":"46314:63:18"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"46297:5:18","type":""}],"src":"46261:122:18"},{"body":{"nodeType":"YulBlock","src":"46429:76:18","statements":[{"body":{"nodeType":"YulBlock","src":"46483:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"46492:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"46495:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"46485:6:18"},"nodeType":"YulFunctionCall","src":"46485:12:18"},"nodeType":"YulExpressionStatement","src":"46485:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"46452:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"46474:5:18"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"46459:14:18"},"nodeType":"YulFunctionCall","src":"46459:21:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"46449:2:18"},"nodeType":"YulFunctionCall","src":"46449:32:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"46442:6:18"},"nodeType":"YulFunctionCall","src":"46442:40:18"},"nodeType":"YulIf","src":"46439:60:18"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"46422:5:18","type":""}],"src":"46389:116:18"},{"body":{"nodeType":"YulBlock","src":"46553:78:18","statements":[{"body":{"nodeType":"YulBlock","src":"46609:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"46618:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"46621:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"46611:6:18"},"nodeType":"YulFunctionCall","src":"46611:12:18"},"nodeType":"YulExpressionStatement","src":"46611:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"46576:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"46600:5:18"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"46583:16:18"},"nodeType":"YulFunctionCall","src":"46583:23:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"46573:2:18"},"nodeType":"YulFunctionCall","src":"46573:34:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"46566:6:18"},"nodeType":"YulFunctionCall","src":"46566:42:18"},"nodeType":"YulIf","src":"46563:62:18"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"46546:5:18","type":""}],"src":"46511:120:18"},{"body":{"nodeType":"YulBlock","src":"46679:78:18","statements":[{"body":{"nodeType":"YulBlock","src":"46735:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"46744:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"46747:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"46737:6:18"},"nodeType":"YulFunctionCall","src":"46737:12:18"},"nodeType":"YulExpressionStatement","src":"46737:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"46702:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"46726:5:18"}],"functionName":{"name":"cleanup_t_int256","nodeType":"YulIdentifier","src":"46709:16:18"},"nodeType":"YulFunctionCall","src":"46709:23:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"46699:2:18"},"nodeType":"YulFunctionCall","src":"46699:34:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"46692:6:18"},"nodeType":"YulFunctionCall","src":"46692:42:18"},"nodeType":"YulIf","src":"46689:62:18"}]},"name":"validator_revert_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"46672:5:18","type":""}],"src":"46637:120:18"},{"body":{"nodeType":"YulBlock","src":"46806:79:18","statements":[{"body":{"nodeType":"YulBlock","src":"46863:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"46872:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"46875:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"46865:6:18"},"nodeType":"YulFunctionCall","src":"46865:12:18"},"nodeType":"YulExpressionStatement","src":"46865:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"46829:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"46854:5:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"46836:17:18"},"nodeType":"YulFunctionCall","src":"46836:24:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"46826:2:18"},"nodeType":"YulFunctionCall","src":"46826:35:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"46819:6:18"},"nodeType":"YulFunctionCall","src":"46819:43:18"},"nodeType":"YulIf","src":"46816:63:18"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"46799:5:18","type":""}],"src":"46763:122:18"},{"body":{"nodeType":"YulBlock","src":"46933:78:18","statements":[{"body":{"nodeType":"YulBlock","src":"46989:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"46998:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"47001:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"46991:6:18"},"nodeType":"YulFunctionCall","src":"46991:12:18"},"nodeType":"YulExpressionStatement","src":"46991:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"46956:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"46980:5:18"}],"functionName":{"name":"cleanup_t_uint80","nodeType":"YulIdentifier","src":"46963:16:18"},"nodeType":"YulFunctionCall","src":"46963:23:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"46953:2:18"},"nodeType":"YulFunctionCall","src":"46953:34:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"46946:6:18"},"nodeType":"YulFunctionCall","src":"46946:42:18"},"nodeType":"YulIf","src":"46943:62:18"}]},"name":"validator_revert_t_uint80","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"46926:5:18","type":""}],"src":"46891:120:18"}]},"contents":"{\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_contract$_AggregatorV3Interface_$103_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_AggregatorV3Interface_$103_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_Characters_$3143_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_Characters_$3143_to_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n        store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(pos)\n        end := add(pos, 64)\n    }\n\n    // struct NftBox.Nft -> struct NftBox.Nft\n    function abi_encode_t_struct$_Nft_$4670_memory_ptr_to_t_struct$_Nft_$4670_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x80)\n\n        {\n            // tokenId\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenUri\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // Boxopened\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // boxType\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        end := tail\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_string_memory_ptr__to_t_address_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_string_memory_ptr_t_uint256__to_t_address_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_contract$_AggregatorV3Interface_$103__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_AggregatorV3Interface_$103_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_Characters_$3143__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_Characters_$3143_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_struct$_Nft_$4670_memory_ptr__to_t_struct$_Nft_$4670_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_Nft_$4670_memory_ptr_to_t_struct$_Nft_$4670_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr_t_bool_t_uint256__to_t_uint256_t_string_memory_ptr_t_bool_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function convert_t_contract$_AggregatorV3Interface_$103_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_contract$_Characters_$3143_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r or approved\")\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: token already minted\")\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721URIStorage: URI set of non\")\n\n        mstore(add(memPtr, 32), \"existent token\")\n\n    }\n\n    function store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: mint to the zero address\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner or approved for all\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n}\n","id":18,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"10":[{"length":32,"start":3273},{"length":32,"start":3357}],"4682":[{"length":32,"start":7125}],"4684":[{"length":32,"start":7218}],"4686":[{"length":32,"start":7185}],"4688":[{"length":32,"start":7253}],"4697":[{"length":32,"start":5027},{"length":32,"start":6396}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x245 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x139 JUMPI DUP1 PUSH4 0xA2E18EB7 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xD004B036 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xD004B036 EQ PUSH2 0x8D5 JUMPI DUP1 PUSH4 0xD1A6BC87 EQ PUSH2 0x912 JUMPI DUP1 PUSH4 0xE6A4EE15 EQ PUSH2 0x91C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x926 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x963 JUMPI DUP1 PUSH4 0xF5CB797C EQ PUSH2 0x98C JUMPI PUSH2 0x245 JUMP JUMPDEST DUP1 PUSH4 0xA2E18EB7 EQ PUSH2 0x7B5 JUMPI DUP1 PUSH4 0xB1E5E2B7 EQ PUSH2 0x7F2 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x82F JUMPI DUP1 PUSH4 0xBDC60BF9 EQ PUSH2 0x858 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x898 JUMPI PUSH2 0x245 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6CE JUMPI DUP1 PUSH4 0x919FB5BB EQ PUSH2 0x6F9 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x736 JUMPI DUP1 PUSH4 0x9E87A5CD EQ PUSH2 0x761 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x78C JUMPI PUSH2 0x245 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x5E7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x624 JUMPI DUP1 PUSH4 0x7C3B1829 EQ PUSH2 0x63B JUMPI DUP1 PUSH4 0x8607D5C9 EQ PUSH2 0x678 JUMPI DUP1 PUSH4 0x88916B9A EQ PUSH2 0x6A3 JUMPI PUSH2 0x245 JUMP JUMPDEST DUP1 PUSH4 0x3CCFD60B GT PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x4DEEA57E GT PUSH2 0x18B JUMPI DUP1 PUSH4 0x4DEEA57E EQ PUSH2 0x50D JUMPI DUP1 PUSH4 0x506805DA EQ PUSH2 0x517 JUMPI DUP1 PUSH4 0x5EA83561 EQ PUSH2 0x554 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x57F JUMPI DUP1 PUSH4 0x6E02007D EQ PUSH2 0x5BC JUMPI PUSH2 0x245 JUMP JUMPDEST DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x428 JUMPI DUP1 PUSH4 0x3D9CCDE0 EQ PUSH2 0x43F JUMPI DUP1 PUSH4 0x41F63BFD EQ PUSH2 0x46A JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x4A7 JUMPI DUP1 PUSH4 0x4CF5DB48 EQ PUSH2 0x4D0 JUMPI PUSH2 0x245 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x20E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x357 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0x2CE9E693 EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0x2E566B70 EQ PUSH2 0x3FD JUMPI PUSH2 0x245 JUMP JUMPDEST DUP1 PUSH3 0x7BB968 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x5114490 EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x31A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x42C5 JUMP JUMPDEST PUSH2 0x9B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x4C7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x41E8 JUMP JUMPDEST PUSH2 0x9CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x49D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D9 PUSH2 0xAB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x4896 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x304 PUSH2 0xAD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x4A76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x326 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x341 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33C SWAP2 SWAP1 PUSH2 0x42C5 JUMP JUMPDEST PUSH2 0xB69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34E SWAP2 SWAP1 PUSH2 0x4896 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x363 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x379 SWAP2 SWAP1 PUSH2 0x41A8 JUMP JUMPDEST PUSH2 0xBAF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A2 SWAP2 SWAP1 PUSH2 0x431F JUMP JUMPDEST PUSH2 0xCC7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x4092 JUMP JUMPDEST PUSH2 0xD87 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E7 PUSH2 0xDE7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x4C7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x409 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x412 PUSH2 0xDEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41F SWAP2 SWAP1 PUSH2 0x4C7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x43D PUSH2 0xE93 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x454 PUSH2 0xF47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x461 SWAP2 SWAP1 PUSH2 0x4C7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x476 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x491 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x48C SWAP2 SWAP1 PUSH2 0x42C5 JUMP JUMPDEST PUSH2 0xFEE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x49E SWAP2 SWAP1 PUSH2 0x4C58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C9 SWAP2 SWAP1 PUSH2 0x4092 JUMP JUMPDEST PUSH2 0x10DC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F2 SWAP2 SWAP1 PUSH2 0x42C5 JUMP JUMPDEST PUSH2 0x10FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x504 SWAP2 SWAP1 PUSH2 0x4A76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x515 PUSH2 0x11AC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x523 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x53E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x539 SWAP2 SWAP1 PUSH2 0x42C5 JUMP JUMPDEST PUSH2 0x139E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54B SWAP2 SWAP1 PUSH2 0x4C7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x560 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x569 PUSH2 0x1489 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x576 SWAP2 SWAP1 PUSH2 0x4C7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A1 SWAP2 SWAP1 PUSH2 0x42C5 JUMP JUMPDEST PUSH2 0x148E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B3 SWAP2 SWAP1 PUSH2 0x4896 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D1 PUSH2 0x1515 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5DE SWAP2 SWAP1 PUSH2 0x4C7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x60E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x609 SWAP2 SWAP1 PUSH2 0x4025 JUMP JUMPDEST PUSH2 0x151F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61B SWAP2 SWAP1 PUSH2 0x4C7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x630 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x639 PUSH2 0x15D7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x647 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x662 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x65D SWAP2 SWAP1 PUSH2 0x42C5 JUMP JUMPDEST PUSH2 0x15EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66F SWAP2 SWAP1 PUSH2 0x4A76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x684 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x68D PUSH2 0x16AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x69A SWAP2 SWAP1 PUSH2 0x4A5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6B8 PUSH2 0x16D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C5 SWAP2 SWAP1 PUSH2 0x4C7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6E3 PUSH2 0x177A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6F0 SWAP2 SWAP1 PUSH2 0x4896 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x705 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x720 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71B SWAP2 SWAP1 PUSH2 0x42C5 JUMP JUMPDEST PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x72D SWAP2 SWAP1 PUSH2 0x4A76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x742 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x74B PUSH2 0x1866 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x758 SWAP2 SWAP1 PUSH2 0x4A76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x76D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x776 PUSH2 0x18F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x783 SWAP2 SWAP1 PUSH2 0x4A40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x798 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7AE SWAP2 SWAP1 PUSH2 0x4168 JUMP JUMPDEST PUSH2 0x1920 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7D7 SWAP2 SWAP1 PUSH2 0x42C5 JUMP JUMPDEST PUSH2 0x1936 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7E9 SWAP2 SWAP1 PUSH2 0x4A76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x819 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x814 SWAP2 SWAP1 PUSH2 0x42C5 JUMP JUMPDEST PUSH2 0x19F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x826 SWAP2 SWAP1 PUSH2 0x4C7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x83B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x856 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x851 SWAP2 SWAP1 PUSH2 0x40E5 JUMP JUMPDEST PUSH2 0x1D47 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x864 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x87F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x87A SWAP2 SWAP1 PUSH2 0x42C5 JUMP JUMPDEST PUSH2 0x1DA9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x88F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4CBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8BA SWAP2 SWAP1 PUSH2 0x42C5 JUMP JUMPDEST PUSH2 0x1E6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8CC SWAP2 SWAP1 PUSH2 0x4A76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8F7 SWAP2 SWAP1 PUSH2 0x4025 JUMP JUMPDEST PUSH2 0x1F81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x909 SWAP2 SWAP1 PUSH2 0x49B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x91A PUSH2 0x2116 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x924 PUSH2 0x2308 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x932 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x94D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x948 SWAP2 SWAP1 PUSH2 0x4052 JUMP JUMPDEST PUSH2 0x24FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x95A SWAP2 SWAP1 PUSH2 0x49D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x96F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x98A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x985 SWAP2 SWAP1 PUSH2 0x4025 JUMP JUMPDEST PUSH2 0x258E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x998 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9A1 PUSH2 0x2612 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9AE SWAP2 SWAP1 PUSH2 0x4C7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xA9A JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0xAAA JUMPI POP PUSH2 0xAA9 DUP3 PUSH2 0x2617 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0xAE6 SWAP1 PUSH2 0x5090 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB12 SWAP1 PUSH2 0x5090 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB5F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB34 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB5F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB42 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB74 DUP3 PUSH2 0x2681 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBBA DUP3 PUSH2 0x148E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC2B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC22 SWAP1 PUSH2 0x4C18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC4A PUSH2 0x26CC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xC79 JUMPI POP PUSH2 0xC78 DUP2 PUSH2 0xC73 PUSH2 0x26CC JUMP JUMPDEST PUSH2 0x24FA JUMP JUMPDEST JUMPDEST PUSH2 0xCB8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCAF SWAP1 PUSH2 0x4C38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCC2 DUP4 DUP4 PUSH2 0x26D4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD79 JUMPI CALLER PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD70 SWAP3 SWAP2 SWAP1 PUSH2 0x48B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD83 DUP3 DUP3 PUSH2 0x278D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xD98 PUSH2 0xD92 PUSH2 0x26CC JUMP JUMPDEST DUP3 PUSH2 0x2E9D JUMP JUMPDEST PUSH2 0xDD7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDCE SWAP1 PUSH2 0x4A98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDE2 DUP4 DUP4 DUP4 PUSH2 0x2F32 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x32 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x65C889DB PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE6A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE8E SWAP2 SWAP1 PUSH2 0x42F2 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE9B PUSH2 0x322C JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xEC6 SWAP1 PUSH2 0x4881 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xF03 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF08 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xF43 JUMPI PUSH1 0x40 MLOAD PUSH32 0x794E4B8400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x71BE7002 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFC5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFE9 SWAP2 SWAP1 PUSH2 0x42F2 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xFF6 PUSH2 0x3D32 JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x102E SWAP1 PUSH2 0x5090 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x105A SWAP1 PUSH2 0x5090 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x10A7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x107C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x10A7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x108A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10F7 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1D47 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xB DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1112 JUMPI PUSH2 0x1111 PUSH2 0x51FA JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x1127 SWAP1 PUSH2 0x5090 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1153 SWAP1 PUSH2 0x5090 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x11A0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1175 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x11A0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1183 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11B8 PUSH1 0x64 PUSH2 0x139E JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x11F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC5F39E8700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA SLOAD SWAP1 POP PUSH1 0x1 PUSH1 0xA SLOAD PUSH2 0x120A SWAP2 SWAP1 PUSH2 0x4E55 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH2 0x121A CALLER DUP3 PUSH2 0x32AA JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x2 DUP2 SLOAD DUP2 LT PUSH2 0x1231 JUMPI PUSH2 0x1230 PUSH2 0x51FA JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x1246 SWAP1 PUSH2 0x5090 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1272 SWAP1 PUSH2 0x5090 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x12BF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1294 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x12BF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x12A2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH2 0x12D0 DUP3 DUP3 PUSH2 0x32C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP2 MSTORE POP PUSH1 0xC PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x132E SWAP3 SWAP2 SWAP1 PUSH2 0x3D5C JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE SWAP1 POP POP PUSH32 0xE513C5910A384615E43CB8685907BF71B6085F60BC3EE2647BA3B09780F609C8 CALLER DUP4 DUP4 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1391 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4964 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1407 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x141B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x143F SWAP2 SWAP1 PUSH2 0x437B JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 PUSH5 0x2540BE400 DUP3 PUSH2 0x1458 SWAP2 SWAP1 PUSH2 0x4EDC JUMP JUMPDEST PUSH15 0xC097CE7BC90715B34B9F1000000000 DUP6 PUSH2 0x1473 SWAP2 SWAP1 PUSH2 0x4EDC JUMP JUMPDEST PUSH2 0x147D SWAP2 SWAP1 PUSH2 0x4EAB JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x149A DUP4 PUSH2 0x333C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x150C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1503 SWAP1 PUSH2 0x4BF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1590 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1587 SWAP1 PUSH2 0x4B78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15DF PUSH2 0x322C JUMP JUMPDEST PUSH2 0x15E9 PUSH1 0x0 PUSH2 0x3379 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCFF2C359 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x164A SWAP2 SWAP1 PUSH2 0x4C7A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1662 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1676 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x169F SWAP2 SWAP1 PUSH2 0x4242 JUMP JUMPDEST POP POP POP SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA83DE16 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x173D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1751 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1775 SWAP2 SWAP1 PUSH2 0x42F2 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4132607B DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1803 SWAP2 SWAP1 PUSH2 0x4C7A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x181B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x182F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1858 SWAP2 SWAP1 PUSH2 0x4242 JUMP JUMPDEST POP POP POP SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x1875 SWAP1 PUSH2 0x5090 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x18A1 SWAP1 PUSH2 0x5090 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x18EE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x18C3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x18EE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x18D1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1932 PUSH2 0x192B PUSH2 0x26CC JUMP JUMPDEST DUP4 DUP4 PUSH2 0x343F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9CFA7DAA DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1995 SWAP2 SWAP1 PUSH2 0x4C7A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19EA SWAP2 SWAP1 PUSH2 0x4242 JUMP JUMPDEST POP POP POP SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER DUP3 PUSH1 0x0 PUSH2 0x1A07 DUP3 PUSH2 0x35AC JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1A40 JUMPI PUSH1 0x40 MLOAD PUSH32 0x12F49E5300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 CALLER PUSH1 0x0 PUSH2 0x1A4D DUP4 PUSH2 0x148E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1AB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA73EC3BD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x1AEE SWAP1 PUSH2 0x5090 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1B1A SWAP1 PUSH2 0x5090 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B67 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1B3C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B67 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B4A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x40 ADD MLOAD ISZERO PUSH2 0x1BD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3DA741A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D3B1D30 PUSH32 0x0 PUSH32 0x0 PUSH1 0x3 PUSH32 0x0 PUSH1 0x1 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C96 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x49ED JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1CC4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CE8 SWAP2 SWAP1 PUSH2 0x42F2 JUMP JUMPDEST SWAP8 POP DUP9 PUSH1 0xD PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0x39E3D8A7823BFBCD1FF6AAE964C13271C920CE4DAA29ADBE83EBE7753DD027D9 DUP9 CALLER PUSH1 0x40 MLOAD PUSH2 0x1D33 SWAP3 SWAP2 SWAP1 PUSH2 0x4C95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D58 PUSH2 0x1D52 PUSH2 0x26CC JUMP JUMPDEST DUP4 PUSH2 0x2E9D JUMP JUMPDEST PUSH2 0x1D97 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D8E SWAP1 PUSH2 0x4A98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1DA3 DUP5 DUP5 DUP5 DUP5 PUSH2 0x35ED JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x1DD2 SWAP1 PUSH2 0x5090 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DFE SWAP1 PUSH2 0x5090 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1E4B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E20 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1E4B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1E2E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1E79 DUP3 PUSH2 0x2681 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x1E99 SWAP1 PUSH2 0x5090 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1EC5 SWAP1 PUSH2 0x5090 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1F12 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1EE7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1F12 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1EF5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x1F23 PUSH2 0x3649 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x1F39 JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x1F7C JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x1F6E JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1F56 SWAP3 SWAP2 SWAP1 PUSH2 0x485D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x1F7C JUMP JUMPDEST PUSH2 0x1F77 DUP5 PUSH2 0x3660 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0xA SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FA1 JUMPI PUSH2 0x1FA0 PUSH2 0x5229 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1FCF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x2064 JUMPI PUSH1 0x0 PUSH2 0x1FEB DUP3 PUSH2 0x148E JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2050 JUMPI DUP2 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2035 JUMPI PUSH2 0x2034 PUSH2 0x51FA JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP3 DUP1 PUSH2 0x204C SWAP1 PUSH2 0x50F3 JUMP JUMPDEST SWAP4 POP POP JUMPDEST POP DUP1 DUP1 PUSH2 0x205C SWAP1 PUSH2 0x50F3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1FD6 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2081 JUMPI PUSH2 0x2080 PUSH2 0x5229 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x20AF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x210A JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x20D0 JUMPI PUSH2 0x20CF PUSH2 0x51FA JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x20EB JUMPI PUSH2 0x20EA PUSH2 0x51FA JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0x2102 SWAP1 PUSH2 0x50F3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x20B5 JUMP JUMPDEST POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2122 PUSH1 0x32 PUSH2 0x139E JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x215E JUMPI PUSH1 0x40 MLOAD PUSH32 0xC5F39E8700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA SLOAD SWAP1 POP PUSH1 0x1 PUSH1 0xA SLOAD PUSH2 0x2174 SWAP2 SWAP1 PUSH2 0x4E55 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH2 0x2184 CALLER DUP3 PUSH2 0x32AA JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x1 DUP2 SLOAD DUP2 LT PUSH2 0x219B JUMPI PUSH2 0x219A PUSH2 0x51FA JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x21B0 SWAP1 PUSH2 0x5090 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x21DC SWAP1 PUSH2 0x5090 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2229 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x21FE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2229 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x220C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH2 0x223A DUP3 DUP3 PUSH2 0x32C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP2 MSTORE POP PUSH1 0xC PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x2298 SWAP3 SWAP2 SWAP1 PUSH2 0x3D5C JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE SWAP1 POP POP PUSH32 0x43AFFEA23111096B9EB47B0E4411D29149F6004E1B65322B46EEB358794E289F CALLER DUP4 DUP4 DUP7 PUSH1 0x40 MLOAD PUSH2 0x22FB SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4964 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2314 PUSH1 0xA PUSH2 0x139E JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x2350 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC5F39E8700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA SLOAD SWAP1 POP PUSH1 0x1 PUSH1 0xA SLOAD PUSH2 0x2366 SWAP2 SWAP1 PUSH2 0x4E55 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH2 0x2376 CALLER DUP3 PUSH2 0x32AA JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x238D JUMPI PUSH2 0x238C PUSH2 0x51FA JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x23A2 SWAP1 PUSH2 0x5090 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x23CE SWAP1 PUSH2 0x5090 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x241B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x23F0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x241B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x23FE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH2 0x242C DUP3 DUP3 PUSH2 0x32C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0xC PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x248A SWAP3 SWAP2 SWAP1 PUSH2 0x3D5C JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE SWAP1 POP POP PUSH32 0x3DDBE03BAAAAD5C81CFD7B4A1B40247D916EA64E64B4B697C1343586CCC8D3C8 CALLER DUP4 DUP4 DUP7 PUSH1 0x40 MLOAD PUSH2 0x24ED SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4964 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2596 PUSH2 0x322C JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2606 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25FD SWAP1 PUSH2 0x4AD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x260F DUP2 PUSH2 0x3379 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x64 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x268A DUP2 PUSH2 0x35AC JUMP JUMPDEST PUSH2 0x26C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26C0 SWAP1 PUSH2 0x4BF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2747 DUP4 PUSH2 0x148E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0xC PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x27DF SWAP1 PUSH2 0x5090 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x280B SWAP1 PUSH2 0x5090 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2858 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x282D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2858 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x283B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x40 ADD MLOAD ISZERO PUSH2 0x28C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3DA741A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 PUSH1 0x60 ADD MLOAD EQ ISZERO PUSH2 0x2A5E JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x65C889DB PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x293D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2951 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2975 SWAP2 SWAP1 PUSH2 0x42F2 JUMP JUMPDEST DUP6 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2989 JUMPI PUSH2 0x2988 PUSH2 0x51FA JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x299B SWAP2 SWAP1 PUSH2 0x513C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4132607B DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29FA SWAP2 SWAP1 PUSH2 0x4C7A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A26 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A4F SWAP2 SWAP1 PUSH2 0x4242 JUMP JUMPDEST POP POP POP SWAP1 POP DUP1 SWAP3 POP POP POP PUSH2 0x2DC2 JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x60 ADD MLOAD EQ ISZERO PUSH2 0x2BF6 JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA83DE16 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2AD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2AE9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B0D SWAP2 SWAP1 PUSH2 0x42F2 JUMP JUMPDEST DUP6 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2B21 JUMPI PUSH2 0x2B20 PUSH2 0x51FA JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2B33 SWAP2 SWAP1 PUSH2 0x513C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCFF2C359 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B92 SWAP2 SWAP1 PUSH2 0x4C7A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2BAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2BBE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2BE7 SWAP2 SWAP1 PUSH2 0x4242 JUMP JUMPDEST POP POP POP SWAP1 POP DUP1 SWAP3 POP POP POP PUSH2 0x2DC1 JUMP JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x60 ADD MLOAD EQ ISZERO PUSH2 0x2D8E JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x71BE7002 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2C6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2C81 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2CA5 SWAP2 SWAP1 PUSH2 0x42F2 JUMP JUMPDEST DUP6 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2CB9 JUMPI PUSH2 0x2CB8 PUSH2 0x51FA JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2CCB SWAP2 SWAP1 PUSH2 0x513C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9CFA7DAA DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D2A SWAP2 SWAP1 PUSH2 0x4C7A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D56 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2D7F SWAP2 SWAP1 PUSH2 0x4242 JUMP JUMPDEST POP POP POP SWAP1 POP DUP1 SWAP3 POP POP POP PUSH2 0x2DC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x3DA741A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x60 ADD MLOAD DUP2 MSTORE POP PUSH1 0xC PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x2E23 SWAP3 SWAP2 SWAP1 PUSH2 0x3D5C JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE SWAP1 POP POP PUSH2 0x2E5B DUP4 DUP3 PUSH2 0x32C8 JUMP JUMPDEST PUSH32 0xB6CA0E5B4BB519E8867FD94662DDBD0F8CA710A53DF4328FCBFA257E1E9630A0 CALLER DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2E8E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4926 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2EA9 DUP4 PUSH2 0x148E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x2EEB JUMPI POP PUSH2 0x2EEA DUP2 DUP6 PUSH2 0x24FA JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x2F29 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2F11 DUP5 PUSH2 0xB69 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2F52 DUP3 PUSH2 0x148E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2FA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F9F SWAP1 PUSH2 0x4AF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3018 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x300F SWAP1 PUSH2 0x4B38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3025 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x36C8 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3045 DUP3 PUSH2 0x148E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x309B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3092 SWAP1 PUSH2 0x4AF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x3227 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x36CE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x3234 PUSH2 0x26CC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3252 PUSH2 0x177A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x32A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x329F SWAP1 PUSH2 0x4BD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x32C4 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x36D4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x32D1 DUP3 PUSH2 0x35AC JUMP JUMPDEST PUSH2 0x3310 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3307 SWAP1 PUSH2 0x4B98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x3337 SWAP3 SWAP2 SWAP1 PUSH2 0x3D5C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x34AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34A5 SWAP1 PUSH2 0x4B58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x359F SWAP2 SWAP1 PUSH2 0x49D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x35CE DUP4 PUSH2 0x333C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x35F8 DUP5 DUP5 DUP5 PUSH2 0x2F32 JUMP JUMPDEST PUSH2 0x3604 DUP5 DUP5 DUP5 DUP5 PUSH2 0x372F JUMP JUMPDEST PUSH2 0x3643 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x363A SWAP1 PUSH2 0x4AB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x366B DUP3 PUSH2 0x2681 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3675 PUSH2 0x3649 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x3695 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x36C0 JUMP JUMPDEST DUP1 PUSH2 0x369F DUP5 PUSH2 0x38C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x36B0 SWAP3 SWAP2 SWAP1 PUSH2 0x485D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x36DE DUP4 DUP4 PUSH2 0x399E JUMP JUMPDEST PUSH2 0x36EB PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x372F JUMP JUMPDEST PUSH2 0x372A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3721 SWAP1 PUSH2 0x4AB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3750 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3BBC JUMP JUMPDEST ISZERO PUSH2 0x38B9 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x3779 PUSH2 0x26CC JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x379B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x48DA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x37B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x37E6 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x37E3 SWAP2 SWAP1 PUSH2 0x4215 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x3869 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3816 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x381B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x3861 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3858 SWAP1 PUSH2 0x4AB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x38BE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x38D5 DUP5 PUSH2 0x3BDF JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x38F4 JUMPI PUSH2 0x38F3 PUSH2 0x5229 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3926 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x3993 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x397D JUMPI PUSH2 0x397C PUSH2 0x519C JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x398E JUMPI PUSH2 0x3993 JUMP JUMPDEST PUSH2 0x3934 JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3A0E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A05 SWAP1 PUSH2 0x4BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3A17 DUP2 PUSH2 0x35AC JUMP JUMPDEST ISZERO PUSH2 0x3A57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A4E SWAP1 PUSH2 0x4B18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3A65 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x36C8 JUMP JUMPDEST PUSH2 0x3A6E DUP2 PUSH2 0x35AC JUMP JUMPDEST ISZERO PUSH2 0x3AAE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AA5 SWAP1 PUSH2 0x4B18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x3BB8 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x36CE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x3C3D JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x3C33 JUMPI PUSH2 0x3C32 PUSH2 0x519C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x3C7A JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x3C70 JUMPI PUSH2 0x3C6F PUSH2 0x519C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x3CA9 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x3C9F JUMPI PUSH2 0x3C9E PUSH2 0x519C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x3CD2 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x3CC8 JUMPI PUSH2 0x3CC7 PUSH2 0x519C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x3CF7 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x3CED JUMPI PUSH2 0x3CEC PUSH2 0x519C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x3D1A JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x3D10 JUMPI PUSH2 0x3D0F PUSH2 0x519C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x3D29 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x3D68 SWAP1 PUSH2 0x5090 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x3D8A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x3DD1 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x3DA3 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x3DD1 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x3DD1 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x3DD0 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x3DB5 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x3DDE SWAP2 SWAP1 PUSH2 0x3DE2 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x3DFB JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x3DE3 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E12 PUSH2 0x3E0D DUP5 PUSH2 0x4D2F JUMP JUMPDEST PUSH2 0x4D0A JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x3E35 JUMPI PUSH2 0x3E34 PUSH2 0x525D JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3E65 JUMPI DUP2 PUSH2 0x3E4B DUP9 DUP3 PUSH2 0x3FE6 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3E38 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E82 PUSH2 0x3E7D DUP5 PUSH2 0x4D5B JUMP JUMPDEST PUSH2 0x4D0A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3E9E JUMPI PUSH2 0x3E9D PUSH2 0x5262 JUMP JUMPDEST JUMPDEST PUSH2 0x3EA9 DUP5 DUP3 DUP6 PUSH2 0x504E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EC4 PUSH2 0x3EBF DUP5 PUSH2 0x4D8C JUMP JUMPDEST PUSH2 0x4D0A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3EE0 JUMPI PUSH2 0x3EDF PUSH2 0x5262 JUMP JUMPDEST JUMPDEST PUSH2 0x3EEB DUP5 DUP3 DUP6 PUSH2 0x505D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3F02 DUP2 PUSH2 0x5619 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3F1D JUMPI PUSH2 0x3F1C PUSH2 0x5258 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3F2D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3DFF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3F45 DUP2 PUSH2 0x5630 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3F5A DUP2 PUSH2 0x5647 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3F6F DUP2 PUSH2 0x5647 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3F8A JUMPI PUSH2 0x3F89 PUSH2 0x5258 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3F9A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3E6F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3FB2 DUP2 PUSH2 0x565E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3FCD JUMPI PUSH2 0x3FCC PUSH2 0x5258 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x3FDD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3EB1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3FF5 DUP2 PUSH2 0x5675 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x400A DUP2 PUSH2 0x5675 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x401F DUP2 PUSH2 0x568C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x403B JUMPI PUSH2 0x403A PUSH2 0x526C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4049 DUP5 DUP3 DUP6 ADD PUSH2 0x3EF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4069 JUMPI PUSH2 0x4068 PUSH2 0x526C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4077 DUP6 DUP3 DUP7 ADD PUSH2 0x3EF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x4088 DUP6 DUP3 DUP7 ADD PUSH2 0x3EF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x40AB JUMPI PUSH2 0x40AA PUSH2 0x526C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x40B9 DUP7 DUP3 DUP8 ADD PUSH2 0x3EF3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x40CA DUP7 DUP3 DUP8 ADD PUSH2 0x3EF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x40DB DUP7 DUP3 DUP8 ADD PUSH2 0x3FE6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x40FF JUMPI PUSH2 0x40FE PUSH2 0x526C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x410D DUP8 DUP3 DUP9 ADD PUSH2 0x3EF3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x411E DUP8 DUP3 DUP9 ADD PUSH2 0x3EF3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x412F DUP8 DUP3 DUP9 ADD PUSH2 0x3FE6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4150 JUMPI PUSH2 0x414F PUSH2 0x5267 JUMP JUMPDEST JUMPDEST PUSH2 0x415C DUP8 DUP3 DUP9 ADD PUSH2 0x3F75 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x417F JUMPI PUSH2 0x417E PUSH2 0x526C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x418D DUP6 DUP3 DUP7 ADD PUSH2 0x3EF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x419E DUP6 DUP3 DUP7 ADD PUSH2 0x3F36 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x41BF JUMPI PUSH2 0x41BE PUSH2 0x526C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x41CD DUP6 DUP3 DUP7 ADD PUSH2 0x3EF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x41DE DUP6 DUP3 DUP7 ADD PUSH2 0x3FE6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x41FE JUMPI PUSH2 0x41FD PUSH2 0x526C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x420C DUP5 DUP3 DUP6 ADD PUSH2 0x3F4B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x422B JUMPI PUSH2 0x422A PUSH2 0x526C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4239 DUP5 DUP3 DUP6 ADD PUSH2 0x3F60 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x425C JUMPI PUSH2 0x425B PUSH2 0x526C JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x427A JUMPI PUSH2 0x4279 PUSH2 0x5267 JUMP JUMPDEST JUMPDEST PUSH2 0x4286 DUP8 DUP3 DUP9 ADD PUSH2 0x3FB8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x4297 DUP8 DUP3 DUP9 ADD PUSH2 0x3FFB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x42A8 DUP8 DUP3 DUP9 ADD PUSH2 0x3FFB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x42B9 DUP8 DUP3 DUP9 ADD PUSH2 0x3FFB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x42DB JUMPI PUSH2 0x42DA PUSH2 0x526C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x42E9 DUP5 DUP3 DUP6 ADD PUSH2 0x3FE6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4308 JUMPI PUSH2 0x4307 PUSH2 0x526C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4316 DUP5 DUP3 DUP6 ADD PUSH2 0x3FFB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4336 JUMPI PUSH2 0x4335 PUSH2 0x526C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4344 DUP6 DUP3 DUP7 ADD PUSH2 0x3FE6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4365 JUMPI PUSH2 0x4364 PUSH2 0x5267 JUMP JUMPDEST JUMPDEST PUSH2 0x4371 DUP6 DUP3 DUP7 ADD PUSH2 0x3F08 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4397 JUMPI PUSH2 0x4396 PUSH2 0x526C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x43A5 DUP9 DUP3 DUP10 ADD PUSH2 0x4010 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x43B6 DUP9 DUP3 DUP10 ADD PUSH2 0x3FA3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x43C7 DUP9 DUP3 DUP10 ADD PUSH2 0x3FFB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x43D8 DUP9 DUP3 DUP10 ADD PUSH2 0x3FFB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x43E9 DUP9 DUP3 DUP10 ADD PUSH2 0x4010 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4402 DUP4 DUP4 PUSH2 0x4821 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4417 DUP2 PUSH2 0x4F36 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4428 DUP3 PUSH2 0x4DCD JUMP JUMPDEST PUSH2 0x4432 DUP2 DUP6 PUSH2 0x4DFB JUMP JUMPDEST SWAP4 POP PUSH2 0x443D DUP4 PUSH2 0x4DBD JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x446E JUMPI DUP2 MLOAD PUSH2 0x4455 DUP9 DUP3 PUSH2 0x43F6 JUMP JUMPDEST SWAP8 POP PUSH2 0x4460 DUP4 PUSH2 0x4DEE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4441 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4484 DUP2 PUSH2 0x4F48 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4493 DUP2 PUSH2 0x4F48 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x44A2 DUP2 PUSH2 0x4F54 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44B3 DUP3 PUSH2 0x4DD8 JUMP JUMPDEST PUSH2 0x44BD DUP2 DUP6 PUSH2 0x4E0C JUMP JUMPDEST SWAP4 POP PUSH2 0x44CD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x505D JUMP JUMPDEST PUSH2 0x44D6 DUP2 PUSH2 0x5271 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x44EA DUP2 PUSH2 0x5006 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x44F9 DUP2 PUSH2 0x5018 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x450A DUP3 PUSH2 0x4DE3 JUMP JUMPDEST PUSH2 0x4514 DUP2 DUP6 PUSH2 0x4E28 JUMP JUMPDEST SWAP4 POP PUSH2 0x4524 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x505D JUMP JUMPDEST PUSH2 0x452D DUP2 PUSH2 0x5271 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4543 DUP3 PUSH2 0x4DE3 JUMP JUMPDEST PUSH2 0x454D DUP2 DUP6 PUSH2 0x4E39 JUMP JUMPDEST SWAP4 POP PUSH2 0x455D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x505D JUMP JUMPDEST PUSH2 0x4566 DUP2 PUSH2 0x5271 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x457C DUP3 PUSH2 0x4DE3 JUMP JUMPDEST PUSH2 0x4586 DUP2 DUP6 PUSH2 0x4E4A JUMP JUMPDEST SWAP4 POP PUSH2 0x4596 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x505D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45AF PUSH1 0x2D DUP4 PUSH2 0x4E39 JUMP JUMPDEST SWAP2 POP PUSH2 0x45BA DUP3 PUSH2 0x5282 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45D2 PUSH1 0x32 DUP4 PUSH2 0x4E39 JUMP JUMPDEST SWAP2 POP PUSH2 0x45DD DUP3 PUSH2 0x52D1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45F5 PUSH1 0x26 DUP4 PUSH2 0x4E39 JUMP JUMPDEST SWAP2 POP PUSH2 0x4600 DUP3 PUSH2 0x5320 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4618 PUSH1 0x25 DUP4 PUSH2 0x4E39 JUMP JUMPDEST SWAP2 POP PUSH2 0x4623 DUP3 PUSH2 0x536F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x463B PUSH1 0x1C DUP4 PUSH2 0x4E39 JUMP JUMPDEST SWAP2 POP PUSH2 0x4646 DUP3 PUSH2 0x53BE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x465E PUSH1 0x24 DUP4 PUSH2 0x4E39 JUMP JUMPDEST SWAP2 POP PUSH2 0x4669 DUP3 PUSH2 0x53E7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4681 PUSH1 0x19 DUP4 PUSH2 0x4E39 JUMP JUMPDEST SWAP2 POP PUSH2 0x468C DUP3 PUSH2 0x5436 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46A4 PUSH1 0x29 DUP4 PUSH2 0x4E39 JUMP JUMPDEST SWAP2 POP PUSH2 0x46AF DUP3 PUSH2 0x545F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46C7 PUSH1 0x2E DUP4 PUSH2 0x4E39 JUMP JUMPDEST SWAP2 POP PUSH2 0x46D2 DUP3 PUSH2 0x54AE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46EA PUSH1 0x20 DUP4 PUSH2 0x4E39 JUMP JUMPDEST SWAP2 POP PUSH2 0x46F5 DUP3 PUSH2 0x54FD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x470D PUSH1 0x20 DUP4 PUSH2 0x4E39 JUMP JUMPDEST SWAP2 POP PUSH2 0x4718 DUP3 PUSH2 0x5526 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4730 PUSH1 0x18 DUP4 PUSH2 0x4E39 JUMP JUMPDEST SWAP2 POP PUSH2 0x473B DUP3 PUSH2 0x554F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4753 PUSH1 0x21 DUP4 PUSH2 0x4E39 JUMP JUMPDEST SWAP2 POP PUSH2 0x475E DUP3 PUSH2 0x5578 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4776 PUSH1 0x0 DUP4 PUSH2 0x4E1D JUMP JUMPDEST SWAP2 POP PUSH2 0x4781 DUP3 PUSH2 0x55C7 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4799 PUSH1 0x3D DUP4 PUSH2 0x4E39 JUMP JUMPDEST SWAP2 POP PUSH2 0x47A4 DUP3 PUSH2 0x55CA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x47C7 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x4821 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x47DF DUP3 DUP3 PUSH2 0x44FF JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x47F4 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x447B JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x4807 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x4821 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x481B DUP2 PUSH2 0x4F94 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x482A DUP2 PUSH2 0x4FC2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4839 DUP2 PUSH2 0x4FC2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4848 DUP2 PUSH2 0x4FCC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4857 DUP2 PUSH2 0x4FDC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4869 DUP3 DUP6 PUSH2 0x4571 JUMP JUMPDEST SWAP2 POP PUSH2 0x4875 DUP3 DUP5 PUSH2 0x4571 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488C DUP3 PUSH2 0x4769 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x48AB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x440E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x48C6 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x440E JUMP JUMPDEST PUSH2 0x48D3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x440E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x48EF PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x440E JUMP JUMPDEST PUSH2 0x48FC PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x440E JUMP JUMPDEST PUSH2 0x4909 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x4830 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x491B DUP2 DUP5 PUSH2 0x44A8 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x493B PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x440E JUMP JUMPDEST PUSH2 0x4948 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x4830 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x495A DUP2 DUP5 PUSH2 0x4538 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x4979 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x440E JUMP JUMPDEST PUSH2 0x4986 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x4830 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x4998 DUP2 DUP6 PUSH2 0x4538 JUMP JUMPDEST SWAP1 POP PUSH2 0x49A7 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x4830 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x49CA DUP2 DUP5 PUSH2 0x441D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x49E7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x448A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x4A02 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x4499 JUMP JUMPDEST PUSH2 0x4A0F PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x484E JUMP JUMPDEST PUSH2 0x4A1C PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x4812 JUMP JUMPDEST PUSH2 0x4A29 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x483F JUMP JUMPDEST PUSH2 0x4A36 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x483F JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4A55 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x44E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4A70 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x44F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4A90 DUP2 DUP5 PUSH2 0x4538 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4AB1 DUP2 PUSH2 0x45A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4AD1 DUP2 PUSH2 0x45C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4AF1 DUP2 PUSH2 0x45E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4B11 DUP2 PUSH2 0x460B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4B31 DUP2 PUSH2 0x462E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4B51 DUP2 PUSH2 0x4651 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4B71 DUP2 PUSH2 0x4674 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4B91 DUP2 PUSH2 0x4697 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4BB1 DUP2 PUSH2 0x46BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4BD1 DUP2 PUSH2 0x46DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4BF1 DUP2 PUSH2 0x4700 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C11 DUP2 PUSH2 0x4723 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C31 DUP2 PUSH2 0x4746 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C51 DUP2 PUSH2 0x478C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C72 DUP2 DUP5 PUSH2 0x47AF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4C8F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4830 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4CAA PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x4830 JUMP JUMPDEST PUSH2 0x4CB7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x440E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x4CD3 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x4830 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x4CE5 DUP2 DUP7 PUSH2 0x4538 JUMP JUMPDEST SWAP1 POP PUSH2 0x4CF4 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x448A JUMP JUMPDEST PUSH2 0x4D01 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x4830 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D14 PUSH2 0x4D25 JUMP JUMPDEST SWAP1 POP PUSH2 0x4D20 DUP3 DUP3 PUSH2 0x50C2 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4D4A JUMPI PUSH2 0x4D49 PUSH2 0x5229 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4D76 JUMPI PUSH2 0x4D75 PUSH2 0x5229 JUMP JUMPDEST JUMPDEST PUSH2 0x4D7F DUP3 PUSH2 0x5271 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4DA7 JUMPI PUSH2 0x4DA6 PUSH2 0x5229 JUMP JUMPDEST JUMPDEST PUSH2 0x4DB0 DUP3 PUSH2 0x5271 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E60 DUP3 PUSH2 0x4FC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E6B DUP4 PUSH2 0x4FC2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x4EA0 JUMPI PUSH2 0x4E9F PUSH2 0x516D JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EB6 DUP3 PUSH2 0x4FC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x4EC1 DUP4 PUSH2 0x4FC2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4ED1 JUMPI PUSH2 0x4ED0 PUSH2 0x519C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EE7 DUP3 PUSH2 0x4FC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x4EF2 DUP4 PUSH2 0x4FC2 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x4F2B JUMPI PUSH2 0x4F2A PUSH2 0x516D JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F41 DUP3 PUSH2 0x4FA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5011 DUP3 PUSH2 0x502A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5023 DUP3 PUSH2 0x502A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5035 DUP3 PUSH2 0x503C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5047 DUP3 PUSH2 0x4FA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x507B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5060 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x508A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x50A8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x50BC JUMPI PUSH2 0x50BB PUSH2 0x51CB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x50CB DUP3 PUSH2 0x5271 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x50EA JUMPI PUSH2 0x50E9 PUSH2 0x5229 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50FE DUP3 PUSH2 0x4FC2 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x5131 JUMPI PUSH2 0x5130 PUSH2 0x516D JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5147 DUP3 PUSH2 0x4FC2 JUMP JUMPDEST SWAP2 POP PUSH2 0x5152 DUP4 PUSH2 0x4FC2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x5162 JUMPI PUSH2 0x5161 PUSH2 0x519C JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6578697374656E7420746F6B656E000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x5622 DUP2 PUSH2 0x4F36 JUMP JUMPDEST DUP2 EQ PUSH2 0x562D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5639 DUP2 PUSH2 0x4F48 JUMP JUMPDEST DUP2 EQ PUSH2 0x5644 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5650 DUP2 PUSH2 0x4F5E JUMP JUMPDEST DUP2 EQ PUSH2 0x565B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5667 DUP2 PUSH2 0x4F8A JUMP JUMPDEST DUP2 EQ PUSH2 0x5672 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x567E DUP2 PUSH2 0x4FC2 JUMP JUMPDEST DUP2 EQ PUSH2 0x5689 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x5695 DUP2 PUSH2 0x4FF0 JUMP JUMPDEST DUP2 EQ PUSH2 0x56A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 0x4F CODECOPY PUSH28 0x26548B123133624BE961D002C44BDAE2E00AB4A2C438DF43964E2DBE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"652:10156:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1864:56;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1570:300:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;813:30:17;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2471:98:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3468:406;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6618:256:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:326:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1262:47:17;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9675:133;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8140:249;;;;;;;;;;;;;:::i;:::-;;9953:139;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10318:112;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5004:179:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10438:119:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5220:737;;;:::i;:::-;;10565:240;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1206:49;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2190:219:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10213:97:17;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:3;;;;;;;;;;;;;:::i;:::-;;9251:179:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;723:38;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9816:129;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9060:183:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2633:102:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10100:105:17;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9438:229:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5965:663;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5249:314:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1815:42:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;482:608:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8405:647:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4427:785;;;:::i;:::-;;3678:741;;;:::i;:::-;;4388:162:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1316:53:17;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1864:56;;;;;;;;;;;;;;;;;:::o;1570:300:4:-;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;813:30:17:-;;;;;;;;;;;;;:::o;2471:98:4:-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;3605:11;;:2;:11;;;;3597:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3702:5;3686:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3711:37;3728:5;3735:12;:10;:12::i;:::-;3711:16;:37::i;:::-;3686:62;3665:170;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;6618:256:0:-;6731:14;6717:28;;:10;:28;;;6713:109;;6788:10;6800:14;6762:53;;;;;;;;;;;;:::i;:::-;;;;;;;;6713:109;6827:42;6846:9;6857:11;6827:18;:42::i;:::-;6618:256;;:::o;4612:326:4:-;4801:41;4820:12;:10;:12::i;:::-;4834:7;4801:18;:41::i;:::-;4793:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;4903:28;4913:4;4919:2;4923:7;4903:9;:28::i;:::-;4612:326;;;:::o;1262:47:17:-;1307:2;1262:47;:::o;9675:133::-;9731:7;9758:20;;;;;;;;;;;:40;;;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9751:49;;9675:133;:::o;8140:249::-;1094:13:3;:11;:13::i;:::-;8188:14:17::1;8205:21;8188:38;;8238:12;8264:10;8256:24;;8288:6;8256:43;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8237:62;;;8315:7;8310:72;;8346:24;;;;;;;;;;;;;;8310:72;8177:212;;8140:249::o:0;9953:139::-;10012:7;10039:20;;;;;;;;;;;:43;;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10032:52;;9953:139;:::o;10318:112::-;10372:10;;:::i;:::-;10402:11;:20;10414:7;10402:20;;;;;;;;;;;10395:27;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10318:112;;;:::o;5004:179:4:-;5137:39;5154:4;5160:2;5164:7;5137:39;;;;;;;;;;;;:16;:39::i;:::-;5004:179;;;:::o;10438:119:17:-;10498:13;10531:11;10543:5;10531:18;;;;;;;;:::i;:::-;;;;;;;;;10524:25;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10438:119;;;:::o;5220:737::-;5273:21;5297:42;1366:3;5297:17;:42::i;:::-;5273:66;;5366:13;5354:9;:25;5350:90;;;5403:25;;;;;;;;;;;;;;5350:90;5450:18;5471:14;;5450:35;;5591:1;5574:14;;:18;;;;:::i;:::-;5557:14;:35;;;;5603:33;5613:10;5625;5603:9;:33::i;:::-;5647:22;5672:11;5684:1;5672:14;;;;;;;;:::i;:::-;;;;;;;;;5647:39;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5697:34;5710:10;5722:8;5697:12;:34::i;:::-;5768:35;;;;;;;;5772:10;5768:35;;;;5784:8;5768:35;;;;5794:5;5768:35;;;;;;5801:1;5768:35;;;5742:11;:23;5754:10;5742:23;;;;;;;;;;;:61;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5819:130;5852:10;5877;5902:8;5925:13;5819:130;;;;;;;;;:::i;:::-;;;;;;;;5262:695;;;5220:737::o;10565:240::-;10626:7;10649:12;10671:11;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10646:54;;;;;;10711:13;10760:4;10751:5;10743:21;;;;:::i;:::-;10734:4;10728:3;:10;;;;:::i;:::-;10727:38;;;;:::i;:::-;10711:54;;10791:5;10776:21;;;;10565:240;;;:::o;1206:49::-;1253:2;1206:49;:::o;2190:219:4:-;2262:7;2281:13;2297:17;2306:7;2297:8;:17::i;:::-;2281:33;;2349:1;2332:19;;:5;:19;;;;2324:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2397:5;2390:12;;;2190:219;;;:::o;10213:97:17:-;10261:7;10288:14;;10281:21;;10213:97;:::o;1929:204:4:-;2001:7;2045:1;2028:19;;:5;:19;;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;1831:101:3:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;9251:179:17:-;9308:13;9335:17;9362:20;;;;;;;;;;;:32;;;9395:5;9362:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9334:67;;;;;9419:3;9412:10;;;9251:179;;;:::o;723:38::-;;;;;;;;;;;;;:::o;9816:129::-;9870:7;9897:20;;;;;;;;;;;:38;;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9890:47;;9816:129;:::o;1201:85:3:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;9060:183:17:-;9119:13;9146:17;9173:20;;;;;;;;;;;:34;;;9208:5;9173:41;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9145:69;;;;;9232:3;9225:10;;;9060:183;;;:::o;2633:102:4:-;2689:13;2721:7;2714:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2633:102;:::o;10100:105:17:-;10145:21;10186:11;10179:18;;10100:105;:::o;4169:153:4:-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;9438:229:17:-;9516:13;9543:17;9570:20;;;;;;;;;;;:37;;;9622:5;9570:68;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9542:96;;;;;9656:3;9649:10;;;9438:229;;;:::o;5965:663::-;6131:17;6054:10;6066:7;2777:12;2792:16;2800:7;2792;:16::i;:::-;2777:31;;2824:7;2819:73;;2855:25;;;;;;;;;;;;;;2819:73;6092:7:::1;6101:10;2569:13;2585:16;2593:7;2585;:16::i;:::-;2569:32;;2627:5;2616:16;;:7;:16;;;2612:74;;2656:18;;;;;;;;;;;;;;2612:74;6166:14:::2;6183:11;:20;6195:7;6183:20;;;;;;;;;;;6166:37;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;6218:3;:13;;;6214:76;;;6255:23;;;;;;;;;;;;;;6214:76;6312:16;:35;;;6362:9;6386:16;1671:1;6453:18;1715:1;6312:194;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6300:206;;6552:7;6517:21;:32;6539:9;6517:32;;;;;;;;;;;:42;;;;6575:45;6598:9;6609:10;6575:45;;;;;;;:::i;:::-;;;;;;;;6155:473;2558:147:::1;2902:1;;2766:145:::0;5965:663;;;;;:::o;5249:314:4:-;5417:41;5436:12;:10;:12::i;:::-;5450:7;5417:18;:41::i;:::-;5409:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;5518:38;5532:4;5538:2;5542:7;5551:4;5518:13;:38::i;:::-;5249:314;;;;:::o;1815:42:17:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;482:608:7:-;555:13;580:23;595:7;580:14;:23::i;:::-;614;640:10;:19;651:7;640:19;;;;;;;;;;;614:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;669:18;690:10;:8;:10::i;:::-;669:31;;795:1;779:4;773:18;:23;769:70;;;819:9;812:16;;;;;;769:70;967:1;947:9;941:23;:27;937:106;;;1015:4;1021:9;998:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;;984:48;;;;;;937:106;1060:23;1075:7;1060:14;:23::i;:::-;1053:30;;;;482:608;;;;:::o;8405:647:17:-;8462:16;8491:27;8535:14;;8521:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8491:59;;8561:13;8594:9;8589:218;8613:14;;8609:1;:18;8589:218;;;8649:15;8667:10;8675:1;8667:7;:10::i;:::-;8649:28;;8707:5;8696:16;;:7;:16;;;8692:104;;;8753:1;8733:10;8744:5;8733:17;;;;;;;;:::i;:::-;;;;;;;:21;;;;;8773:7;;;;;:::i;:::-;;;;8692:104;8634:173;8629:3;;;;;:::i;:::-;;;;8589:218;;;;8876:23;8916:5;8902:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8876:46;;8938:9;8933:88;8957:5;8953:1;:9;8933:88;;;8996:10;9007:1;8996:13;;;;;;;;:::i;:::-;;;;;;;;8984:6;8991:1;8984:9;;;;;;;;:::i;:::-;;;;;;;:25;;;;;8964:3;;;;;:::i;:::-;;;;8933:88;;;;9038:6;9031:13;;;;;8405:647;;;:::o;4427:785::-;4475:21;4499:37;1307:2;4499:17;:37::i;:::-;4475:61;;4563:13;4551:9;:25;4547:90;;;4600:25;;;;;;;;;;;;;;4547:90;4647:18;4668:14;;4647:35;;4788:1;4771:14;;:18;;;;:::i;:::-;4754:14;:35;;;;4800:33;4810:10;4822;4800:9;:33::i;:::-;4844:22;4869:11;4881:1;4869:14;;;;;;;;:::i;:::-;;;;;;;;;4844:39;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4894:34;4907:10;4919:8;4894:12;:34::i;:::-;4965:35;;;;;;;;4969:10;4965:35;;;;4981:8;4965:35;;;;4991:5;4965:35;;;;;;4998:1;4965:35;;;4939:11;:23;4951:10;4939:23;;;;;;;;;;;:61;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5016:136;5044:10;5080;5105:8;5128:13;5016:136;;;;;;;;;:::i;:::-;;;;;;;;4464:748;;;4427:785::o;3678:741::-;3728:21;3752:39;1253:2;3752:17;:39::i;:::-;3728:63;;3818:13;3806:9;:25;3802:90;;;3855:25;;;;;;;;;;;;;;3802:90;3902:18;3923:14;;3902:35;;4043:1;4026:14;;:18;;;;:::i;:::-;4009:14;:35;;;;4055:33;4065:10;4077;4055:9;:33::i;:::-;4099:22;4124:11;4136:1;4124:14;;;;;;;;:::i;:::-;;;;;;;;;4099:39;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4149:34;4162:10;4174:8;4149:12;:34::i;:::-;4220:35;;;;;;;;4224:10;4220:35;;;;4236:8;4220:35;;;;4246:5;4220:35;;;;;;4253:1;4220:35;;;4194:11;:23;4206:10;4194:23;;;;;;;;;;;:61;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4273:138;4303:10;4339;4364:8;4387:13;4273:138;;;;;;;;;:::i;:::-;;;;;;;;3717:702;;;3678:741::o;4388:162:4:-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;2081:198:3:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1316:53:17:-;1366:3;1316:53;:::o;829:155:12:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;13466:133:4:-;13547:16;13555:7;13547;:16::i;:::-;13539:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;13466:133;:::o;640:96:10:-;693:7;719:10;712:17;;640:96;:::o;12768:171:4:-;12869:2;12842:15;:24;12858:7;12842:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12924:7;12920:2;12886:46;;12895:23;12910:7;12895:14;:23::i;:::-;12886:46;;;;;;;;;;;;12768:171;;:::o;6636:1496:17:-;6767:15;6785:21;:32;6807:9;6785:32;;;;;;;;;;;;6767:50;;6828:14;6845:11;:20;6857:7;6845:20;;;;;;;;;;;6828:37;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6880:3;:13;;;6876:76;;;6917:23;;;;;;;;;;;;;;6876:76;6962:20;7012:1;6997:3;:11;;;:16;6993:965;;;7030:19;7086:20;;;;;;;;;;;:40;;;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7052:11;7064:1;7052:14;;;;;;;;:::i;:::-;;;;;;;;:76;;;;:::i;:::-;7030:98;;7144:17;7171:20;;;;;;;;;;;:34;;;7224:11;7171:79;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7143:107;;;;;7274:3;7265:12;;7015:274;;6993:965;;;7314:1;7299:3;:11;;;:16;7295:663;;;7332:19;7388:20;;;;;;;;;;;:38;;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7354:11;7366:1;7354:14;;;;;;;;:::i;:::-;;;;;;;;:74;;;;:::i;:::-;7332:96;;7444:17;7471:20;;;;;;;;;;;:32;;;7522:11;7471:77;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7443:105;;;;;7572:3;7563:12;;7317:270;;7295:663;;;7612:1;7597:3;:11;;;:16;7593:365;;;7630:19;7686:20;;;;;;;;;;;:43;;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7652:11;7664:1;7652:14;;;;;;;;:::i;:::-;;;;;;;;:79;;;;:::i;:::-;7630:101;;7747:17;7774:20;;;;;;;;;;;:37;;;7830:11;7774:82;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7746:110;;;;;7880:3;7871:12;;7615:280;;7593:365;;;7923:23;;;;;;;;;;;;;;7593:365;7295:663;6993:965;7991:39;;;;;;;;7995:7;7991:39;;;;8004:6;7991:39;;;;8012:4;7991:39;;;;;;8018:3;:11;;;7991:39;;;7968:11;:20;7980:7;7968:20;;;;;;;;;;;:62;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8041:29;8054:7;8063:6;8041:12;:29::i;:::-;8086:38;8096:10;8108:7;8117:6;8086:38;;;;;;;;:::i;:::-;;;;;;;;6756:1376;;;6636:1496;;:::o;7540:261:4:-;7633:4;7649:13;7665:23;7680:7;7665:14;:23::i;:::-;7649:39;;7717:5;7706:16;;:7;:16;;;:52;;;;7726:32;7743:5;7750:7;7726:16;:32::i;:::-;7706:52;:87;;;;7786:7;7762:31;;:20;7774:7;7762:11;:20::i;:::-;:31;;;7706:87;7698:96;;;7540:261;;;;:::o;11423:1233::-;11577:4;11550:31;;:23;11565:7;11550:14;:23::i;:::-;:31;;;11542:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11655:1;11641:16;;:2;:16;;;;11633:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;11709:42;11730:4;11736:2;11740:7;11749:1;11709:20;:42::i;:::-;11878:4;11851:31;;:23;11866:7;11851:14;:23::i;:::-;:31;;;11843:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11993:15;:24;12009:7;11993:24;;;;;;;;;;;;11986:31;;;;;;;;;;;12480:1;12461:9;:15;12471:4;12461:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;12512:1;12495:9;:13;12505:2;12495:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;12552:2;12533:7;:16;12541:7;12533:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;12589:7;12585:2;12570:27;;12579:4;12570:27;;;;;;;;;;;;12608:41;12628:4;12634:2;12638:7;12647:1;12608:19;:41::i;:::-;11423:1233;;;:::o;1359:130:3:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;8131:108:4:-;8206:26;8216:2;8220:7;8206:26;;;;;;;;;;;;:9;:26::i;:::-;8131:108;;:::o;1237:214:7:-;1336:16;1344:7;1336;:16::i;:::-;1328:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;1435:9;1413:10;:19;1424:7;1413:19;;;;;;;;;;;:31;;;;;;;;;;;;:::i;:::-;;1237:214;;:::o;6838:115:4:-;6904:7;6930;:16;6938:7;6930:16;;;;;;;;;;;;;;;;;;;;;6923:23;;6838:115;;;:::o;2433:187:3:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;13075:307:4:-;13225:8;13216:17;;:5;:17;;;;13208:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;13311:8;13273:18;:25;13292:5;13273:25;;;;;;;;;;;;;;;:35;13299:8;13273:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13356:8;13334:41;;13349:5;13334:41;;;13366:8;13334:41;;;;;;:::i;:::-;;;;;;;;13075:307;;;:::o;7256:126::-;7321:4;7373:1;7344:31;;:17;7353:7;7344:8;:17::i;:::-;:31;;;;7337:38;;7256:126;;;:::o;6424:305::-;6574:28;6584:4;6590:2;6594:7;6574:9;:28::i;:::-;6620:47;6643:4;6649:2;6653:7;6662:4;6620:22;:47::i;:::-;6612:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6424:305;;;;:::o;3319:92::-;3370:13;3395:9;;;;;;;;;;;;;;3319:92;:::o;2801:276::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;:8;:10::i;:::-;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2984:86;2977:93;;;2801:276;;;:::o;15698:154::-;;;;;:::o;16558:153::-;;;;;:::o;8460:309::-;8584:18;8590:2;8594:7;8584:5;:18::i;:::-;8633:53;8664:1;8668:2;8672:7;8681:4;8633:22;:53::i;:::-;8612:150;;;;;;;;;;;;:::i;:::-;;;;;;;;;8460:309;;;:::o;14151:831::-;14300:4;14320:15;:2;:13;;;:15::i;:::-;14316:660;;;14371:2;14355:36;;;14392:12;:10;:12::i;:::-;14406:4;14412:7;14421:4;14355:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14351:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14610:1;14593:6;:13;:18;14589:321;;;14635:60;;;;;;;;;;:::i;:::-;;;;;;;;14589:321;14862:6;14856:13;14847:6;14843:2;14839:15;14832:38;14351:573;14486:41;;;14476:51;;;:6;:51;;;;14469:58;;;;;14316:660;14961:4;14954:11;;14151:831;;;;;;;:::o;415:696:11:-;471:13;520:14;557:1;537:17;548:5;537:10;:17::i;:::-;:21;520:38;;572:20;606:6;595:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;572:41;;627:11;753:6;749:2;745:15;737:6;733:28;726:35;;788:280;795:4;788:280;;;819:5;;;;;;;;958:8;953:2;946:5;942:14;937:30;932:3;924:44;1012:2;1003:11;;;;;;:::i;:::-;;;;;1045:1;1036:5;:10;1032:21;;;1048:5;;1032:21;788:280;;;1088:6;1081:13;;;;;415:696;;;:::o;9091:920:4:-;9184:1;9170:16;;:2;:16;;;;9162:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;9242:16;9250:7;9242;:16::i;:::-;9241:17;9233:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9302:48;9331:1;9335:2;9339:7;9348:1;9302:20;:48::i;:::-;9446:16;9454:7;9446;:16::i;:::-;9445:17;9437:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9854:1;9837:9;:13;9847:2;9837:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9895:2;9876:7;:16;9884:7;9876:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9938:7;9934:2;9913:33;;9930:1;9913:33;;;;;;;;;;;;9957:47;9985:1;9989:2;9993:7;10002:1;9957:19;:47::i;:::-;9091:920;;:::o;1175:320:9:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;9889:890:14:-;9942:7;9961:14;9978:1;9961:18;;10026:6;10017:5;:15;10013:99;;10061:6;10052:15;;;;;;:::i;:::-;;;;;10095:2;10085:12;;;;10013:99;10138:6;10129:5;:15;10125:99;;10173:6;10164:15;;;;;;:::i;:::-;;;;;10207:2;10197:12;;;;10125:99;10250:6;10241:5;:15;10237:99;;10285:6;10276:15;;;;;;:::i;:::-;;;;;10319:2;10309:12;;;;10237:99;10362:5;10353;:14;10349:96;;10396:5;10387:14;;;;;;:::i;:::-;;;;;10429:1;10419:11;;;;10349:96;10471:5;10462;:14;10458:96;;10505:5;10496:14;;;;;;:::i;:::-;;;;;10538:1;10528:11;;;;10458:96;10580:5;10571;:14;10567:96;;10614:5;10605:14;;;;;;:::i;:::-;;;;;10647:1;10637:11;;;;10567:96;10689:5;10680;:14;10676:64;;10724:1;10714:11;;;;10676:64;10766:6;10759:13;;;9889:890;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;24:722:18:-;120:5;145:81;161:64;218:6;161:64;:::i;:::-;145:81;:::i;:::-;136:90;;246:5;275:6;268:5;261:21;309:4;302:5;298:16;291:23;;335:6;385:3;377:4;369:6;365:17;360:3;356:27;353:36;350:143;;;404:79;;:::i;:::-;350:143;517:1;502:238;527:6;524:1;521:13;502:238;;;595:3;624:37;657:3;645:10;624:37;:::i;:::-;619:3;612:50;691:4;686:3;682:14;675:21;;725:4;720:3;716:14;709:21;;562:178;549:1;546;542:9;537:14;;502:238;;;506:14;126:620;;24:722;;;;;:::o;752:410::-;829:5;854:65;870:48;911:6;870:48;:::i;:::-;854:65;:::i;:::-;845:74;;942:6;935:5;928:21;980:4;973:5;969:16;1018:3;1009:6;1004:3;1000:16;997:25;994:112;;;1025:79;;:::i;:::-;994:112;1115:41;1149:6;1144:3;1139;1115:41;:::i;:::-;835:327;752:410;;;;;:::o;1168:421::-;1257:5;1282:66;1298:49;1340:6;1298:49;:::i;:::-;1282:66;:::i;:::-;1273:75;;1371:6;1364:5;1357:21;1409:4;1402:5;1398:16;1447:3;1438:6;1433:3;1429:16;1426:25;1423:112;;;1454:79;;:::i;:::-;1423:112;1544:39;1576:6;1571:3;1566;1544:39;:::i;:::-;1263:326;1168:421;;;;;:::o;1595:139::-;1641:5;1679:6;1666:20;1657:29;;1695:33;1722:5;1695:33;:::i;:::-;1595:139;;;;:::o;1757:370::-;1828:5;1877:3;1870:4;1862:6;1858:17;1854:27;1844:122;;1885:79;;:::i;:::-;1844:122;2002:6;1989:20;2027:94;2117:3;2109:6;2102:4;2094:6;2090:17;2027:94;:::i;:::-;2018:103;;1834:293;1757:370;;;;:::o;2133:133::-;2176:5;2214:6;2201:20;2192:29;;2230:30;2254:5;2230:30;:::i;:::-;2133:133;;;;:::o;2272:137::-;2317:5;2355:6;2342:20;2333:29;;2371:32;2397:5;2371:32;:::i;:::-;2272:137;;;;:::o;2415:141::-;2471:5;2502:6;2496:13;2487:22;;2518:32;2544:5;2518:32;:::i;:::-;2415:141;;;;:::o;2575:338::-;2630:5;2679:3;2672:4;2664:6;2660:17;2656:27;2646:122;;2687:79;;:::i;:::-;2646:122;2804:6;2791:20;2829:78;2903:3;2895:6;2888:4;2880:6;2876:17;2829:78;:::i;:::-;2820:87;;2636:277;2575:338;;;;:::o;2919:141::-;2975:5;3006:6;3000:13;2991:22;;3022:32;3048:5;3022:32;:::i;:::-;2919:141;;;;:::o;3080:355::-;3147:5;3196:3;3189:4;3181:6;3177:17;3173:27;3163:122;;3204:79;;:::i;:::-;3163:122;3314:6;3308:13;3339:90;3425:3;3417:6;3410:4;3402:6;3398:17;3339:90;:::i;:::-;3330:99;;3153:282;3080:355;;;;:::o;3441:139::-;3487:5;3525:6;3512:20;3503:29;;3541:33;3568:5;3541:33;:::i;:::-;3441:139;;;;:::o;3586:143::-;3643:5;3674:6;3668:13;3659:22;;3690:33;3717:5;3690:33;:::i;:::-;3586:143;;;;:::o;3735:141::-;3791:5;3822:6;3816:13;3807:22;;3838:32;3864:5;3838:32;:::i;:::-;3735:141;;;;:::o;3882:329::-;3941:6;3990:2;3978:9;3969:7;3965:23;3961:32;3958:119;;;3996:79;;:::i;:::-;3958:119;4116:1;4141:53;4186:7;4177:6;4166:9;4162:22;4141:53;:::i;:::-;4131:63;;4087:117;3882:329;;;;:::o;4217:474::-;4285:6;4293;4342:2;4330:9;4321:7;4317:23;4313:32;4310:119;;;4348:79;;:::i;:::-;4310:119;4468:1;4493:53;4538:7;4529:6;4518:9;4514:22;4493:53;:::i;:::-;4483:63;;4439:117;4595:2;4621:53;4666:7;4657:6;4646:9;4642:22;4621:53;:::i;:::-;4611:63;;4566:118;4217:474;;;;;:::o;4697:619::-;4774:6;4782;4790;4839:2;4827:9;4818:7;4814:23;4810:32;4807:119;;;4845:79;;:::i;:::-;4807:119;4965:1;4990:53;5035:7;5026:6;5015:9;5011:22;4990:53;:::i;:::-;4980:63;;4936:117;5092:2;5118:53;5163:7;5154:6;5143:9;5139:22;5118:53;:::i;:::-;5108:63;;5063:118;5220:2;5246:53;5291:7;5282:6;5271:9;5267:22;5246:53;:::i;:::-;5236:63;;5191:118;4697:619;;;;;:::o;5322:943::-;5417:6;5425;5433;5441;5490:3;5478:9;5469:7;5465:23;5461:33;5458:120;;;5497:79;;:::i;:::-;5458:120;5617:1;5642:53;5687:7;5678:6;5667:9;5663:22;5642:53;:::i;:::-;5632:63;;5588:117;5744:2;5770:53;5815:7;5806:6;5795:9;5791:22;5770:53;:::i;:::-;5760:63;;5715:118;5872:2;5898:53;5943:7;5934:6;5923:9;5919:22;5898:53;:::i;:::-;5888:63;;5843:118;6028:2;6017:9;6013:18;6000:32;6059:18;6051:6;6048:30;6045:117;;;6081:79;;:::i;:::-;6045:117;6186:62;6240:7;6231:6;6220:9;6216:22;6186:62;:::i;:::-;6176:72;;5971:287;5322:943;;;;;;;:::o;6271:468::-;6336:6;6344;6393:2;6381:9;6372:7;6368:23;6364:32;6361:119;;;6399:79;;:::i;:::-;6361:119;6519:1;6544:53;6589:7;6580:6;6569:9;6565:22;6544:53;:::i;:::-;6534:63;;6490:117;6646:2;6672:50;6714:7;6705:6;6694:9;6690:22;6672:50;:::i;:::-;6662:60;;6617:115;6271:468;;;;;:::o;6745:474::-;6813:6;6821;6870:2;6858:9;6849:7;6845:23;6841:32;6838:119;;;6876:79;;:::i;:::-;6838:119;6996:1;7021:53;7066:7;7057:6;7046:9;7042:22;7021:53;:::i;:::-;7011:63;;6967:117;7123:2;7149:53;7194:7;7185:6;7174:9;7170:22;7149:53;:::i;:::-;7139:63;;7094:118;6745:474;;;;;:::o;7225:327::-;7283:6;7332:2;7320:9;7311:7;7307:23;7303:32;7300:119;;;7338:79;;:::i;:::-;7300:119;7458:1;7483:52;7527:7;7518:6;7507:9;7503:22;7483:52;:::i;:::-;7473:62;;7429:116;7225:327;;;;:::o;7558:349::-;7627:6;7676:2;7664:9;7655:7;7651:23;7647:32;7644:119;;;7682:79;;:::i;:::-;7644:119;7802:1;7827:63;7882:7;7873:6;7862:9;7858:22;7827:63;:::i;:::-;7817:73;;7773:127;7558:349;;;;:::o;7913:993::-;8020:6;8028;8036;8044;8093:3;8081:9;8072:7;8068:23;8064:33;8061:120;;;8100:79;;:::i;:::-;8061:120;8241:1;8230:9;8226:17;8220:24;8271:18;8263:6;8260:30;8257:117;;;8293:79;;:::i;:::-;8257:117;8398:74;8464:7;8455:6;8444:9;8440:22;8398:74;:::i;:::-;8388:84;;8191:291;8521:2;8547:64;8603:7;8594:6;8583:9;8579:22;8547:64;:::i;:::-;8537:74;;8492:129;8660:2;8686:64;8742:7;8733:6;8722:9;8718:22;8686:64;:::i;:::-;8676:74;;8631:129;8799:2;8825:64;8881:7;8872:6;8861:9;8857:22;8825:64;:::i;:::-;8815:74;;8770:129;7913:993;;;;;;;:::o;8912:329::-;8971:6;9020:2;9008:9;8999:7;8995:23;8991:32;8988:119;;;9026:79;;:::i;:::-;8988:119;9146:1;9171:53;9216:7;9207:6;9196:9;9192:22;9171:53;:::i;:::-;9161:63;;9117:117;8912:329;;;;:::o;9247:351::-;9317:6;9366:2;9354:9;9345:7;9341:23;9337:32;9334:119;;;9372:79;;:::i;:::-;9334:119;9492:1;9517:64;9573:7;9564:6;9553:9;9549:22;9517:64;:::i;:::-;9507:74;;9463:128;9247:351;;;;:::o;9604:684::-;9697:6;9705;9754:2;9742:9;9733:7;9729:23;9725:32;9722:119;;;9760:79;;:::i;:::-;9722:119;9880:1;9905:53;9950:7;9941:6;9930:9;9926:22;9905:53;:::i;:::-;9895:63;;9851:117;10035:2;10024:9;10020:18;10007:32;10066:18;10058:6;10055:30;10052:117;;;10088:79;;:::i;:::-;10052:117;10193:78;10263:7;10254:6;10243:9;10239:22;10193:78;:::i;:::-;10183:88;;9978:303;9604:684;;;;;:::o;10294:971::-;10397:6;10405;10413;10421;10429;10478:3;10466:9;10457:7;10453:23;10449:33;10446:120;;;10485:79;;:::i;:::-;10446:120;10605:1;10630:63;10685:7;10676:6;10665:9;10661:22;10630:63;:::i;:::-;10620:73;;10576:127;10742:2;10768:63;10823:7;10814:6;10803:9;10799:22;10768:63;:::i;:::-;10758:73;;10713:128;10880:2;10906:64;10962:7;10953:6;10942:9;10938:22;10906:64;:::i;:::-;10896:74;;10851:129;11019:2;11045:64;11101:7;11092:6;11081:9;11077:22;11045:64;:::i;:::-;11035:74;;10990:129;11158:3;11185:63;11240:7;11231:6;11220:9;11216:22;11185:63;:::i;:::-;11175:73;;11129:129;10294:971;;;;;;;;:::o;11271:179::-;11340:10;11361:46;11403:3;11395:6;11361:46;:::i;:::-;11439:4;11434:3;11430:14;11416:28;;11271:179;;;;:::o;11456:118::-;11543:24;11561:5;11543:24;:::i;:::-;11538:3;11531:37;11456:118;;:::o;11610:732::-;11729:3;11758:54;11806:5;11758:54;:::i;:::-;11828:86;11907:6;11902:3;11828:86;:::i;:::-;11821:93;;11938:56;11988:5;11938:56;:::i;:::-;12017:7;12048:1;12033:284;12058:6;12055:1;12052:13;12033:284;;;12134:6;12128:13;12161:63;12220:3;12205:13;12161:63;:::i;:::-;12154:70;;12247:60;12300:6;12247:60;:::i;:::-;12237:70;;12093:224;12080:1;12077;12073:9;12068:14;;12033:284;;;12037:14;12333:3;12326:10;;11734:608;;;11610:732;;;;:::o;12348:99::-;12419:21;12434:5;12419:21;:::i;:::-;12414:3;12407:34;12348:99;;:::o;12453:109::-;12534:21;12549:5;12534:21;:::i;:::-;12529:3;12522:34;12453:109;;:::o;12568:118::-;12655:24;12673:5;12655:24;:::i;:::-;12650:3;12643:37;12568:118;;:::o;12692:360::-;12778:3;12806:38;12838:5;12806:38;:::i;:::-;12860:70;12923:6;12918:3;12860:70;:::i;:::-;12853:77;;12939:52;12984:6;12979:3;12972:4;12965:5;12961:16;12939:52;:::i;:::-;13016:29;13038:6;13016:29;:::i;:::-;13011:3;13007:39;13000:46;;12782:270;12692:360;;;;:::o;13058:189::-;13174:66;13234:5;13174:66;:::i;:::-;13169:3;13162:79;13058:189;;:::o;13253:169::-;13359:56;13409:5;13359:56;:::i;:::-;13354:3;13347:69;13253:169;;:::o;13428:344::-;13506:3;13534:39;13567:5;13534:39;:::i;:::-;13589:61;13643:6;13638:3;13589:61;:::i;:::-;13582:68;;13659:52;13704:6;13699:3;13692:4;13685:5;13681:16;13659:52;:::i;:::-;13736:29;13758:6;13736:29;:::i;:::-;13731:3;13727:39;13720:46;;13510:262;13428:344;;;;:::o;13778:364::-;13866:3;13894:39;13927:5;13894:39;:::i;:::-;13949:71;14013:6;14008:3;13949:71;:::i;:::-;13942:78;;14029:52;14074:6;14069:3;14062:4;14055:5;14051:16;14029:52;:::i;:::-;14106:29;14128:6;14106:29;:::i;:::-;14101:3;14097:39;14090:46;;13870:272;13778:364;;;;:::o;14148:377::-;14254:3;14282:39;14315:5;14282:39;:::i;:::-;14337:89;14419:6;14414:3;14337:89;:::i;:::-;14330:96;;14435:52;14480:6;14475:3;14468:4;14461:5;14457:16;14435:52;:::i;:::-;14512:6;14507:3;14503:16;14496:23;;14258:267;14148:377;;;;:::o;14531:366::-;14673:3;14694:67;14758:2;14753:3;14694:67;:::i;:::-;14687:74;;14770:93;14859:3;14770:93;:::i;:::-;14888:2;14883:3;14879:12;14872:19;;14531:366;;;:::o;14903:::-;15045:3;15066:67;15130:2;15125:3;15066:67;:::i;:::-;15059:74;;15142:93;15231:3;15142:93;:::i;:::-;15260:2;15255:3;15251:12;15244:19;;14903:366;;;:::o;15275:::-;15417:3;15438:67;15502:2;15497:3;15438:67;:::i;:::-;15431:74;;15514:93;15603:3;15514:93;:::i;:::-;15632:2;15627:3;15623:12;15616:19;;15275:366;;;:::o;15647:::-;15789:3;15810:67;15874:2;15869:3;15810:67;:::i;:::-;15803:74;;15886:93;15975:3;15886:93;:::i;:::-;16004:2;15999:3;15995:12;15988:19;;15647:366;;;:::o;16019:::-;16161:3;16182:67;16246:2;16241:3;16182:67;:::i;:::-;16175:74;;16258:93;16347:3;16258:93;:::i;:::-;16376:2;16371:3;16367:12;16360:19;;16019:366;;;:::o;16391:::-;16533:3;16554:67;16618:2;16613:3;16554:67;:::i;:::-;16547:74;;16630:93;16719:3;16630:93;:::i;:::-;16748:2;16743:3;16739:12;16732:19;;16391:366;;;:::o;16763:::-;16905:3;16926:67;16990:2;16985:3;16926:67;:::i;:::-;16919:74;;17002:93;17091:3;17002:93;:::i;:::-;17120:2;17115:3;17111:12;17104:19;;16763:366;;;:::o;17135:::-;17277:3;17298:67;17362:2;17357:3;17298:67;:::i;:::-;17291:74;;17374:93;17463:3;17374:93;:::i;:::-;17492:2;17487:3;17483:12;17476:19;;17135:366;;;:::o;17507:::-;17649:3;17670:67;17734:2;17729:3;17670:67;:::i;:::-;17663:74;;17746:93;17835:3;17746:93;:::i;:::-;17864:2;17859:3;17855:12;17848:19;;17507:366;;;:::o;17879:::-;18021:3;18042:67;18106:2;18101:3;18042:67;:::i;:::-;18035:74;;18118:93;18207:3;18118:93;:::i;:::-;18236:2;18231:3;18227:12;18220:19;;17879:366;;;:::o;18251:::-;18393:3;18414:67;18478:2;18473:3;18414:67;:::i;:::-;18407:74;;18490:93;18579:3;18490:93;:::i;:::-;18608:2;18603:3;18599:12;18592:19;;18251:366;;;:::o;18623:::-;18765:3;18786:67;18850:2;18845:3;18786:67;:::i;:::-;18779:74;;18862:93;18951:3;18862:93;:::i;:::-;18980:2;18975:3;18971:12;18964:19;;18623:366;;;:::o;18995:::-;19137:3;19158:67;19222:2;19217:3;19158:67;:::i;:::-;19151:74;;19234:93;19323:3;19234:93;:::i;:::-;19352:2;19347:3;19343:12;19336:19;;18995:366;;;:::o;19367:398::-;19526:3;19547:83;19628:1;19623:3;19547:83;:::i;:::-;19540:90;;19639:93;19728:3;19639:93;:::i;:::-;19757:1;19752:3;19748:11;19741:18;;19367:398;;;:::o;19771:366::-;19913:3;19934:67;19998:2;19993:3;19934:67;:::i;:::-;19927:74;;20010:93;20099:3;20010:93;:::i;:::-;20128:2;20123:3;20119:12;20112:19;;19771:366;;;:::o;20189:955::-;20300:3;20336:4;20331:3;20327:14;20426:4;20419:5;20415:16;20409:23;20445:63;20502:4;20497:3;20493:14;20479:12;20445:63;:::i;:::-;20351:167;20604:4;20597:5;20593:16;20587:23;20657:3;20651:4;20647:14;20640:4;20635:3;20631:14;20624:38;20683:73;20751:4;20737:12;20683:73;:::i;:::-;20675:81;;20528:239;20854:4;20847:5;20843:16;20837:23;20873:57;20924:4;20919:3;20915:14;20901:12;20873:57;:::i;:::-;20777:163;21025:4;21018:5;21014:16;21008:23;21044:63;21101:4;21096:3;21092:14;21078:12;21044:63;:::i;:::-;20950:167;21134:4;21127:11;;20305:839;20189:955;;;;:::o;21150:115::-;21235:23;21252:5;21235:23;:::i;:::-;21230:3;21223:36;21150:115;;:::o;21271:108::-;21348:24;21366:5;21348:24;:::i;:::-;21343:3;21336:37;21271:108;;:::o;21385:118::-;21472:24;21490:5;21472:24;:::i;:::-;21467:3;21460:37;21385:118;;:::o;21509:115::-;21594:23;21611:5;21594:23;:::i;:::-;21589:3;21582:36;21509:115;;:::o;21630:::-;21715:23;21732:5;21715:23;:::i;:::-;21710:3;21703:36;21630:115;;:::o;21751:435::-;21931:3;21953:95;22044:3;22035:6;21953:95;:::i;:::-;21946:102;;22065:95;22156:3;22147:6;22065:95;:::i;:::-;22058:102;;22177:3;22170:10;;21751:435;;;;;:::o;22192:379::-;22376:3;22398:147;22541:3;22398:147;:::i;:::-;22391:154;;22562:3;22555:10;;22192:379;;;:::o;22577:222::-;22670:4;22708:2;22697:9;22693:18;22685:26;;22721:71;22789:1;22778:9;22774:17;22765:6;22721:71;:::i;:::-;22577:222;;;;:::o;22805:332::-;22926:4;22964:2;22953:9;22949:18;22941:26;;22977:71;23045:1;23034:9;23030:17;23021:6;22977:71;:::i;:::-;23058:72;23126:2;23115:9;23111:18;23102:6;23058:72;:::i;:::-;22805:332;;;;;:::o;23143:640::-;23338:4;23376:3;23365:9;23361:19;23353:27;;23390:71;23458:1;23447:9;23443:17;23434:6;23390:71;:::i;:::-;23471:72;23539:2;23528:9;23524:18;23515:6;23471:72;:::i;:::-;23553;23621:2;23610:9;23606:18;23597:6;23553:72;:::i;:::-;23672:9;23666:4;23662:20;23657:2;23646:9;23642:18;23635:48;23700:76;23771:4;23762:6;23700:76;:::i;:::-;23692:84;;23143:640;;;;;;;:::o;23789:533::-;23958:4;23996:2;23985:9;23981:18;23973:26;;24009:71;24077:1;24066:9;24062:17;24053:6;24009:71;:::i;:::-;24090:72;24158:2;24147:9;24143:18;24134:6;24090:72;:::i;:::-;24209:9;24203:4;24199:20;24194:2;24183:9;24179:18;24172:48;24237:78;24310:4;24301:6;24237:78;:::i;:::-;24229:86;;23789:533;;;;;;:::o;24328:644::-;24525:4;24563:3;24552:9;24548:19;24540:27;;24577:71;24645:1;24634:9;24630:17;24621:6;24577:71;:::i;:::-;24658:72;24726:2;24715:9;24711:18;24702:6;24658:72;:::i;:::-;24777:9;24771:4;24767:20;24762:2;24751:9;24747:18;24740:48;24805:78;24878:4;24869:6;24805:78;:::i;:::-;24797:86;;24893:72;24961:2;24950:9;24946:18;24937:6;24893:72;:::i;:::-;24328:644;;;;;;;:::o;24978:373::-;25121:4;25159:2;25148:9;25144:18;25136:26;;25208:9;25202:4;25198:20;25194:1;25183:9;25179:17;25172:47;25236:108;25339:4;25330:6;25236:108;:::i;:::-;25228:116;;24978:373;;;;:::o;25357:210::-;25444:4;25482:2;25471:9;25467:18;25459:26;;25495:65;25557:1;25546:9;25542:17;25533:6;25495:65;:::i;:::-;25357:210;;;;:::o;25573:648::-;25770:4;25808:3;25797:9;25793:19;25785:27;;25822:71;25890:1;25879:9;25875:17;25866:6;25822:71;:::i;:::-;25903:70;25969:2;25958:9;25954:18;25945:6;25903:70;:::i;:::-;25983;26049:2;26038:9;26034:18;26025:6;25983:70;:::i;:::-;26063;26129:2;26118:9;26114:18;26105:6;26063:70;:::i;:::-;26143:71;26209:3;26198:9;26194:19;26185:6;26143:71;:::i;:::-;25573:648;;;;;;;;:::o;26227:280::-;26349:4;26387:2;26376:9;26372:18;26364:26;;26400:100;26497:1;26486:9;26482:17;26473:6;26400:100;:::i;:::-;26227:280;;;;:::o;26513:260::-;26625:4;26663:2;26652:9;26648:18;26640:26;;26676:90;26763:1;26752:9;26748:17;26739:6;26676:90;:::i;:::-;26513:260;;;;:::o;26779:313::-;26892:4;26930:2;26919:9;26915:18;26907:26;;26979:9;26973:4;26969:20;26965:1;26954:9;26950:17;26943:47;27007:78;27080:4;27071:6;27007:78;:::i;:::-;26999:86;;26779:313;;;;:::o;27098:419::-;27264:4;27302:2;27291:9;27287:18;27279:26;;27351:9;27345:4;27341:20;27337:1;27326:9;27322:17;27315:47;27379:131;27505:4;27379:131;:::i;:::-;27371:139;;27098:419;;;:::o;27523:::-;27689:4;27727:2;27716:9;27712:18;27704:26;;27776:9;27770:4;27766:20;27762:1;27751:9;27747:17;27740:47;27804:131;27930:4;27804:131;:::i;:::-;27796:139;;27523:419;;;:::o;27948:::-;28114:4;28152:2;28141:9;28137:18;28129:26;;28201:9;28195:4;28191:20;28187:1;28176:9;28172:17;28165:47;28229:131;28355:4;28229:131;:::i;:::-;28221:139;;27948:419;;;:::o;28373:::-;28539:4;28577:2;28566:9;28562:18;28554:26;;28626:9;28620:4;28616:20;28612:1;28601:9;28597:17;28590:47;28654:131;28780:4;28654:131;:::i;:::-;28646:139;;28373:419;;;:::o;28798:::-;28964:4;29002:2;28991:9;28987:18;28979:26;;29051:9;29045:4;29041:20;29037:1;29026:9;29022:17;29015:47;29079:131;29205:4;29079:131;:::i;:::-;29071:139;;28798:419;;;:::o;29223:::-;29389:4;29427:2;29416:9;29412:18;29404:26;;29476:9;29470:4;29466:20;29462:1;29451:9;29447:17;29440:47;29504:131;29630:4;29504:131;:::i;:::-;29496:139;;29223:419;;;:::o;29648:::-;29814:4;29852:2;29841:9;29837:18;29829:26;;29901:9;29895:4;29891:20;29887:1;29876:9;29872:17;29865:47;29929:131;30055:4;29929:131;:::i;:::-;29921:139;;29648:419;;;:::o;30073:::-;30239:4;30277:2;30266:9;30262:18;30254:26;;30326:9;30320:4;30316:20;30312:1;30301:9;30297:17;30290:47;30354:131;30480:4;30354:131;:::i;:::-;30346:139;;30073:419;;;:::o;30498:::-;30664:4;30702:2;30691:9;30687:18;30679:26;;30751:9;30745:4;30741:20;30737:1;30726:9;30722:17;30715:47;30779:131;30905:4;30779:131;:::i;:::-;30771:139;;30498:419;;;:::o;30923:::-;31089:4;31127:2;31116:9;31112:18;31104:26;;31176:9;31170:4;31166:20;31162:1;31151:9;31147:17;31140:47;31204:131;31330:4;31204:131;:::i;:::-;31196:139;;30923:419;;;:::o;31348:::-;31514:4;31552:2;31541:9;31537:18;31529:26;;31601:9;31595:4;31591:20;31587:1;31576:9;31572:17;31565:47;31629:131;31755:4;31629:131;:::i;:::-;31621:139;;31348:419;;;:::o;31773:::-;31939:4;31977:2;31966:9;31962:18;31954:26;;32026:9;32020:4;32016:20;32012:1;32001:9;31997:17;31990:47;32054:131;32180:4;32054:131;:::i;:::-;32046:139;;31773:419;;;:::o;32198:::-;32364:4;32402:2;32391:9;32387:18;32379:26;;32451:9;32445:4;32441:20;32437:1;32426:9;32422:17;32415:47;32479:131;32605:4;32479:131;:::i;:::-;32471:139;;32198:419;;;:::o;32623:::-;32789:4;32827:2;32816:9;32812:18;32804:26;;32876:9;32870:4;32866:20;32862:1;32851:9;32847:17;32840:47;32904:131;33030:4;32904:131;:::i;:::-;32896:139;;32623:419;;;:::o;33048:357::-;33183:4;33221:2;33210:9;33206:18;33198:26;;33270:9;33264:4;33260:20;33256:1;33245:9;33241:17;33234:47;33298:100;33393:4;33384:6;33298:100;:::i;:::-;33290:108;;33048:357;;;;:::o;33411:222::-;33504:4;33542:2;33531:9;33527:18;33519:26;;33555:71;33623:1;33612:9;33608:17;33599:6;33555:71;:::i;:::-;33411:222;;;;:::o;33639:332::-;33760:4;33798:2;33787:9;33783:18;33775:26;;33811:71;33879:1;33868:9;33864:17;33855:6;33811:71;:::i;:::-;33892:72;33960:2;33949:9;33945:18;33936:6;33892:72;:::i;:::-;33639:332;;;;;:::o;33977:632::-;34168:4;34206:3;34195:9;34191:19;34183:27;;34220:71;34288:1;34277:9;34273:17;34264:6;34220:71;:::i;:::-;34338:9;34332:4;34328:20;34323:2;34312:9;34308:18;34301:48;34366:78;34439:4;34430:6;34366:78;:::i;:::-;34358:86;;34454:66;34516:2;34505:9;34501:18;34492:6;34454:66;:::i;:::-;34530:72;34598:2;34587:9;34583:18;34574:6;34530:72;:::i;:::-;33977:632;;;;;;;:::o;34615:129::-;34649:6;34676:20;;:::i;:::-;34666:30;;34705:33;34733:4;34725:6;34705:33;:::i;:::-;34615:129;;;:::o;34750:75::-;34783:6;34816:2;34810:9;34800:19;;34750:75;:::o;34831:311::-;34908:4;34998:18;34990:6;34987:30;34984:56;;;35020:18;;:::i;:::-;34984:56;35070:4;35062:6;35058:17;35050:25;;35130:4;35124;35120:15;35112:23;;34831:311;;;:::o;35148:307::-;35209:4;35299:18;35291:6;35288:30;35285:56;;;35321:18;;:::i;:::-;35285:56;35359:29;35381:6;35359:29;:::i;:::-;35351:37;;35443:4;35437;35433:15;35425:23;;35148:307;;;:::o;35461:308::-;35523:4;35613:18;35605:6;35602:30;35599:56;;;35635:18;;:::i;:::-;35599:56;35673:29;35695:6;35673:29;:::i;:::-;35665:37;;35757:4;35751;35747:15;35739:23;;35461:308;;;:::o;35775:132::-;35842:4;35865:3;35857:11;;35895:4;35890:3;35886:14;35878:22;;35775:132;;;:::o;35913:114::-;35980:6;36014:5;36008:12;35998:22;;35913:114;;;:::o;36033:98::-;36084:6;36118:5;36112:12;36102:22;;36033:98;;;:::o;36137:99::-;36189:6;36223:5;36217:12;36207:22;;36137:99;;;:::o;36242:113::-;36312:4;36344;36339:3;36335:14;36327:22;;36242:113;;;:::o;36361:184::-;36460:11;36494:6;36489:3;36482:19;36534:4;36529:3;36525:14;36510:29;;36361:184;;;;:::o;36551:168::-;36634:11;36668:6;36663:3;36656:19;36708:4;36703:3;36699:14;36684:29;;36551:168;;;;:::o;36725:147::-;36826:11;36863:3;36848:18;;36725:147;;;;:::o;36878:159::-;36952:11;36986:6;36981:3;36974:19;37026:4;37021:3;37017:14;37002:29;;36878:159;;;;:::o;37043:169::-;37127:11;37161:6;37156:3;37149:19;37201:4;37196:3;37192:14;37177:29;;37043:169;;;;:::o;37218:148::-;37320:11;37357:3;37342:18;;37218:148;;;;:::o;37372:305::-;37412:3;37431:20;37449:1;37431:20;:::i;:::-;37426:25;;37465:20;37483:1;37465:20;:::i;:::-;37460:25;;37619:1;37551:66;37547:74;37544:1;37541:81;37538:107;;;37625:18;;:::i;:::-;37538:107;37669:1;37666;37662:9;37655:16;;37372:305;;;;:::o;37683:185::-;37723:1;37740:20;37758:1;37740:20;:::i;:::-;37735:25;;37774:20;37792:1;37774:20;:::i;:::-;37769:25;;37813:1;37803:35;;37818:18;;:::i;:::-;37803:35;37860:1;37857;37853:9;37848:14;;37683:185;;;;:::o;37874:348::-;37914:7;37937:20;37955:1;37937:20;:::i;:::-;37932:25;;37971:20;37989:1;37971:20;:::i;:::-;37966:25;;38159:1;38091:66;38087:74;38084:1;38081:81;38076:1;38069:9;38062:17;38058:105;38055:131;;;38166:18;;:::i;:::-;38055:131;38214:1;38211;38207:9;38196:20;;37874:348;;;;:::o;38228:96::-;38265:7;38294:24;38312:5;38294:24;:::i;:::-;38283:35;;38228:96;;;:::o;38330:90::-;38364:7;38407:5;38400:13;38393:21;38382:32;;38330:90;;;:::o;38426:77::-;38463:7;38492:5;38481:16;;38426:77;;;:::o;38509:149::-;38545:7;38585:66;38578:5;38574:78;38563:89;;38509:149;;;:::o;38664:76::-;38700:7;38729:5;38718:16;;38664:76;;;:::o;38746:89::-;38782:7;38822:6;38815:5;38811:18;38800:29;;38746:89;;;:::o;38841:126::-;38878:7;38918:42;38911:5;38907:54;38896:65;;38841:126;;;:::o;38973:77::-;39010:7;39039:5;39028:16;;38973:77;;;:::o;39056:93::-;39092:7;39132:10;39125:5;39121:22;39110:33;;39056:93;;;:::o;39155:101::-;39191:7;39231:18;39224:5;39220:30;39209:41;;39155:101;;;:::o;39262:105::-;39298:7;39338:22;39331:5;39327:34;39316:45;;39262:105;;;:::o;39373:155::-;39452:9;39485:37;39516:5;39485:37;:::i;:::-;39472:50;;39373:155;;;:::o;39534:145::-;39603:9;39636:37;39667:5;39636:37;:::i;:::-;39623:50;;39534:145;;;:::o;39685:126::-;39735:9;39768:37;39799:5;39768:37;:::i;:::-;39755:50;;39685:126;;;:::o;39817:113::-;39867:9;39900:24;39918:5;39900:24;:::i;:::-;39887:37;;39817:113;;;:::o;39936:154::-;40020:6;40015:3;40010;39997:30;40082:1;40073:6;40068:3;40064:16;40057:27;39936:154;;;:::o;40096:307::-;40164:1;40174:113;40188:6;40185:1;40182:13;40174:113;;;40273:1;40268:3;40264:11;40258:18;40254:1;40249:3;40245:11;40238:39;40210:2;40207:1;40203:10;40198:15;;40174:113;;;40305:6;40302:1;40299:13;40296:101;;;40385:1;40376:6;40371:3;40367:16;40360:27;40296:101;40145:258;40096:307;;;:::o;40409:320::-;40453:6;40490:1;40484:4;40480:12;40470:22;;40537:1;40531:4;40527:12;40558:18;40548:81;;40614:4;40606:6;40602:17;40592:27;;40548:81;40676:2;40668:6;40665:14;40645:18;40642:38;40639:84;;;40695:18;;:::i;:::-;40639:84;40460:269;40409:320;;;:::o;40735:281::-;40818:27;40840:4;40818:27;:::i;:::-;40810:6;40806:40;40948:6;40936:10;40933:22;40912:18;40900:10;40897:34;40894:62;40891:88;;;40959:18;;:::i;:::-;40891:88;40999:10;40995:2;40988:22;40778:238;40735:281;;:::o;41022:233::-;41061:3;41084:24;41102:5;41084:24;:::i;:::-;41075:33;;41130:66;41123:5;41120:77;41117:103;;;41200:18;;:::i;:::-;41117:103;41247:1;41240:5;41236:13;41229:20;;41022:233;;;:::o;41261:176::-;41293:1;41310:20;41328:1;41310:20;:::i;:::-;41305:25;;41344:20;41362:1;41344:20;:::i;:::-;41339:25;;41383:1;41373:35;;41388:18;;:::i;:::-;41373:35;41429:1;41426;41422:9;41417:14;;41261:176;;;;:::o;41443:180::-;41491:77;41488:1;41481:88;41588:4;41585:1;41578:15;41612:4;41609:1;41602:15;41629:180;41677:77;41674:1;41667:88;41774:4;41771:1;41764:15;41798:4;41795:1;41788:15;41815:180;41863:77;41860:1;41853:88;41960:4;41957:1;41950:15;41984:4;41981:1;41974:15;42001:180;42049:77;42046:1;42039:88;42146:4;42143:1;42136:15;42170:4;42167:1;42160:15;42187:180;42235:77;42232:1;42225:88;42332:4;42329:1;42322:15;42356:4;42353:1;42346:15;42373:117;42482:1;42479;42472:12;42496:117;42605:1;42602;42595:12;42619:117;42728:1;42725;42718:12;42742:117;42851:1;42848;42841:12;42865:117;42974:1;42971;42964:12;42988:102;43029:6;43080:2;43076:7;43071:2;43064:5;43060:14;43056:28;43046:38;;42988:102;;;:::o;43096:232::-;43236:34;43232:1;43224:6;43220:14;43213:58;43305:15;43300:2;43292:6;43288:15;43281:40;43096:232;:::o;43334:237::-;43474:34;43470:1;43462:6;43458:14;43451:58;43543:20;43538:2;43530:6;43526:15;43519:45;43334:237;:::o;43577:225::-;43717:34;43713:1;43705:6;43701:14;43694:58;43786:8;43781:2;43773:6;43769:15;43762:33;43577:225;:::o;43808:224::-;43948:34;43944:1;43936:6;43932:14;43925:58;44017:7;44012:2;44004:6;44000:15;43993:32;43808:224;:::o;44038:178::-;44178:30;44174:1;44166:6;44162:14;44155:54;44038:178;:::o;44222:223::-;44362:34;44358:1;44350:6;44346:14;44339:58;44431:6;44426:2;44418:6;44414:15;44407:31;44222:223;:::o;44451:175::-;44591:27;44587:1;44579:6;44575:14;44568:51;44451:175;:::o;44632:228::-;44772:34;44768:1;44760:6;44756:14;44749:58;44841:11;44836:2;44828:6;44824:15;44817:36;44632:228;:::o;44866:233::-;45006:34;45002:1;44994:6;44990:14;44983:58;45075:16;45070:2;45062:6;45058:15;45051:41;44866:233;:::o;45105:182::-;45245:34;45241:1;45233:6;45229:14;45222:58;45105:182;:::o;45293:::-;45433:34;45429:1;45421:6;45417:14;45410:58;45293:182;:::o;45481:174::-;45621:26;45617:1;45609:6;45605:14;45598:50;45481:174;:::o;45661:220::-;45801:34;45797:1;45789:6;45785:14;45778:58;45870:3;45865:2;45857:6;45853:15;45846:28;45661:220;:::o;45887:114::-;;:::o;46007:248::-;46147:34;46143:1;46135:6;46131:14;46124:58;46216:31;46211:2;46203:6;46199:15;46192:56;46007:248;:::o;46261:122::-;46334:24;46352:5;46334:24;:::i;:::-;46327:5;46324:35;46314:63;;46373:1;46370;46363:12;46314:63;46261:122;:::o;46389:116::-;46459:21;46474:5;46459:21;:::i;:::-;46452:5;46449:32;46439:60;;46495:1;46492;46485:12;46439:60;46389:116;:::o;46511:120::-;46583:23;46600:5;46583:23;:::i;:::-;46576:5;46573:34;46563:62;;46621:1;46618;46611:12;46563:62;46511:120;:::o;46637:::-;46709:23;46726:5;46709:23;:::i;:::-;46702:5;46699:34;46689:62;;46747:1;46744;46737:12;46689:62;46637:120;:::o;46763:122::-;46836:24;46854:5;46836:24;:::i;:::-;46829:5;46826:35;46816:63;;46875:1;46872;46865:12;46816:63;46763:122;:::o;46891:120::-;46963:23;46980:5;46963:23;:::i;:::-;46956:5;46953:34;46943:62;;47001:1;46998;46991:12;46943:62;46891:120;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"4446600","executionCost":"infinite","totalCost":"infinite"},"external":{"PRICE_LEGENDARY_BOX_USD()":"483","PRICE_NORMAL_BOX_USD()":"418","PRICE_RARE_BOX_USD()":"441","approve(address,uint256)":"infinite","balanceOf(address)":"2925","buyLegendaryBox()":"infinite","buyNormalBox()":"infinite","buyRareBox()":"infinite","getApproved(uint256)":"5367","getLegendaryCard(uint256)":"infinite","getLegendaryCardUrisLength()":"infinite","getNft(uint256)":"infinite","getNftBoxesUri(uint256)":"infinite","getNormalCard(uint256)":"infinite","getNormalCardUrisLength()":"infinite","getPriceFeed()":"infinite","getRareCard(uint256)":"infinite","getRareCardUrisLength()":"infinite","getTokenCounter()":"2570","getTokenIds(address)":"infinite","i_charactersContract()":"2712","isApprovedForAll(address,address)":"infinite","mappingNfts(uint256)":"infinite","mappingRequestToToken(uint256)":"infinite","name()":"infinite","openBox(uint256)":"infinite","owner()":"2567","ownerOf(uint256)":"3113","priceFeedUsdToEth(uint256)":"infinite","rawFulfillRandomWords(uint256,uint256[])":"infinite","renounceOwnership()":"30466","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"infinite","supportsInterface(bytes4)":"842","symbol()":"infinite","tokenURI(uint256)":"infinite","tradeNftAddress()":"2605","transferFrom(address,address,uint256)":"infinite","transferOwnership(address)":"30879","withdraw()":"infinite"},"internal":{"fulfillRandomWords(uint256,uint256[] memory)":"infinite"}},"methodIdentifiers":{"PRICE_LEGENDARY_BOX_USD()":"f5cb797c","PRICE_NORMAL_BOX_USD()":"5ea83561","PRICE_RARE_BOX_USD()":"2ce9e693","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","buyLegendaryBox()":"4deea57e","buyNormalBox()":"e6a4ee15","buyRareBox()":"d1a6bc87","getApproved(uint256)":"081812fc","getLegendaryCard(uint256)":"a2e18eb7","getLegendaryCardUrisLength()":"3d9ccde0","getNft(uint256)":"41f63bfd","getNftBoxesUri(uint256)":"4cf5db48","getNormalCard(uint256)":"919fb5bb","getNormalCardUrisLength()":"2e566b70","getPriceFeed()":"9e87a5cd","getRareCard(uint256)":"7c3b1829","getRareCardUrisLength()":"88916b9a","getTokenCounter()":"6e02007d","getTokenIds(address)":"d004b036","i_charactersContract()":"8607d5c9","isApprovedForAll(address,address)":"e985e9c5","mappingNfts(uint256)":"bdc60bf9","mappingRequestToToken(uint256)":"007bb968","name()":"06fdde03","openBox(uint256)":"b1e5e2b7","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","priceFeedUsdToEth(uint256)":"506805da","rawFulfillRandomWords(uint256,uint256[])":"1fe543e3","renounceOwnership()":"715018a6","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","tradeNftAddress()":"05114490","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","withdraw()":"3ccfd60b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vrfCoordinatorV2\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"gasLane\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"string[3]\",\"name\":\"boxesUri\",\"type\":\"string[3]\"},{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"charactersAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NftBox__AlreadyOpened\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NftBox__NeedMoreETHSent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NftBox__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NftBox__TokenIdNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NftBox__TransferFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"tokenUri\",\"type\":\"string\"}],\"name\":\"BoxOpened\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"tokenUri\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"LegendaryBoxMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"tokenUri\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"NormalBoxMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"OpenBoxRandomRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"tokenUri\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"RareBoxMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PRICE_LEGENDARY_BOX_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRICE_NORMAL_BOX_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRICE_RARE_BOX_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyLegendaryBox\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyNormalBox\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyRareBox\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getLegendaryCard\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLegendaryCardUrisLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getNft\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"tokenUri\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"Boxopened\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"boxType\",\"type\":\"uint256\"}],\"internalType\":\"struct NftBox.Nft\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getNftBoxesUri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getNormalCard\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNormalCardUrisLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRareCard\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRareCardUrisLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getTokenIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_charactersContract\",\"outputs\":[{\"internalType\":\"contract Characters\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mappingNfts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"tokenUri\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"Boxopened\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"boxType\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mappingRequestToToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"openBox\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"usd\",\"type\":\"uint256\"}],\"name\":\"priceFeedUsdToEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradeNftAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NftBox.sol\":\"NftBox\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig()\\n    external\\n    view\\n    returns (\\n      uint16,\\n      uint32,\\n      bytes32[] memory\\n    );\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(uint64 subId)\\n    external\\n    view\\n    returns (\\n      uint96 balance,\\n      uint64 reqCount,\\n      address owner,\\n      address[] memory consumers\\n    );\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint64 subId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x54cdc97717cbae1a51a5500c8ee4875ebf056c95b54d2155a9544a79cb4f4494\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.2) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner or approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _ownerOf(tokenId) != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\\n\\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        unchecked {\\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\\n            // Given that tokens are minted one by one, it is impossible in practice that\\n            // this ever happens. Might change if we allow batch minting.\\n            // The ERC fails to describe this case.\\n            _balances[to] += 1;\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\\n\\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\\n        owner = ERC721.ownerOf(tokenId);\\n\\n        // Clear approvals\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // Cannot overflow, as that would require more tokens to be burned/transferred\\n            // out than the owner initially received through minting and transferring in.\\n            _balances[owner] -= 1;\\n        }\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId, 1);\\n\\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n\\n        // Clear approvals from the previous owner\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\\n            // `from`'s balance is the number of token held, which is at least one before the current\\n            // transfer.\\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\\n            // all 2**256 token ids to be minted, which in practice is impossible.\\n            _balances[from] -= 1;\\n            _balances[to] += 1;\\n        }\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\\n     * - When `from` is zero, the tokens will be minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 firstTokenId,\\n        uint256 batchSize\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\\n     * - When `from` is zero, the tokens were minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens were burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 firstTokenId,\\n        uint256 batchSize\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Unsafe write access to the balances, used by extensions that \\\"mint\\\" tokens using an {ownerOf} override.\\n     *\\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\\n     * that `ownerOf(tokenId)` is `a`.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\\n        _balances[account] += amount;\\n    }\\n}\\n\",\"keccak256\":\"0x1e854874c68bec05be100dc0092cb5fbbc71253d370ae98ddef248bbfc3fe118\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/extensions/ERC721URIStorage.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\n\\n/**\\n * @dev ERC721 token with storage based token URI management.\\n */\\nabstract contract ERC721URIStorage is ERC721 {\\n    using Strings for uint256;\\n\\n    // Optional mapping for token URIs\\n    mapping(uint256 => string) private _tokenURIs;\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory _tokenURI = _tokenURIs[tokenId];\\n        string memory base = _baseURI();\\n\\n        // If there is no base URI, return the token URI.\\n        if (bytes(base).length == 0) {\\n            return _tokenURI;\\n        }\\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\\n        if (bytes(_tokenURI).length > 0) {\\n            return string(abi.encodePacked(base, _tokenURI));\\n        }\\n\\n        return super.tokenURI(tokenId);\\n    }\\n\\n    /**\\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\\n        require(_exists(tokenId), \\\"ERC721URIStorage: URI set of nonexistent token\\\");\\n        _tokenURIs[tokenId] = _tokenURI;\\n    }\\n\\n    /**\\n     * @dev See {ERC721-_burn}. This override additionally checks to see if a\\n     * token-specific URI was set for the token, and if so, it deletes the token URI from\\n     * the storage mapping.\\n     */\\n    function _burn(uint256 tokenId) internal virtual override {\\n        super._burn(tokenId);\\n\\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\\n            delete _tokenURIs[tokenId];\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5c3501c1b70fcfc64417e9da5cc6a3597191baa354781e508e1e14cc0e50a038\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator\\n    ) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1);\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(\\n        uint256 x,\\n        uint256 y,\\n        uint256 denominator,\\n        Rounding rounding\\n    ) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10**64) {\\n                value /= 10**64;\\n                result += 64;\\n            }\\n            if (value >= 10**32) {\\n                value /= 10**32;\\n                result += 32;\\n            }\\n            if (value >= 10**16) {\\n                value /= 10**16;\\n                result += 16;\\n            }\\n            if (value >= 10**8) {\\n                value /= 10**8;\\n                result += 8;\\n            }\\n            if (value >= 10**4) {\\n                value /= 10**4;\\n                result += 4;\\n            }\\n            if (value >= 10**2) {\\n                value /= 10**2;\\n                result += 2;\\n            }\\n            if (value >= 10**1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\"},\"contracts/Characters.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\ncontract Characters {\\r\\n    struct Person {\\r\\n        string tokenUri;\\r\\n        uint256 attack;\\r\\n        uint256 defence;\\r\\n        uint256 tactics;\\r\\n    }\\r\\n    Person[] public normalPersons;\\r\\n    Person[] public rarePersons;\\r\\n    Person[] public legendaryPersons;\\r\\n\\r\\n    constructor(\\r\\n        string[] memory tokenUriNormal,\\r\\n        uint256[][] memory normalStats,\\r\\n        string[] memory tokenUriRare,\\r\\n        uint256[][] memory statsRare,\\r\\n        string[] memory tokenUriLegendary,\\r\\n        uint256[][] memory statsLegendary\\r\\n    ) {\\r\\n        for (uint256 i = 0; i < tokenUriNormal.length; i++) {\\r\\n            normalPersons.push(\\r\\n                Person(\\r\\n                    tokenUriNormal[i],\\r\\n                    normalStats[i][0],\\r\\n                    normalStats[i][1],\\r\\n                    normalStats[i][2]\\r\\n                )\\r\\n            );\\r\\n        }\\r\\n        for (uint256 i = 0; i < tokenUriRare.length; i++) {\\r\\n            rarePersons.push(\\r\\n                Person(\\r\\n                    tokenUriRare[i],\\r\\n                    statsRare[i][0],\\r\\n                    statsRare[i][1],\\r\\n                    statsRare[i][2]\\r\\n                )\\r\\n            );\\r\\n        }\\r\\n        for (uint256 i = 0; i < tokenUriLegendary.length; i++) {\\r\\n            legendaryPersons.push(\\r\\n                Person(\\r\\n                    tokenUriLegendary[i],\\r\\n                    statsLegendary[i][0],\\r\\n                    statsLegendary[i][1],\\r\\n                    statsLegendary[i][2]\\r\\n                )\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function normalPersonsLength() public view returns (uint256) {\\r\\n        return normalPersons.length;\\r\\n    }\\r\\n\\r\\n    function rarePersonsLength() public view returns (uint256) {\\r\\n        return rarePersons.length;\\r\\n    }\\r\\n\\r\\n    function legendaryPersonsLength() public view returns (uint256) {\\r\\n        return legendaryPersons.length;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x71a420f0a5c1366bf3dfdcadb6bcb3bc6b08d0e12ee369b43be791374bf734e2\",\"license\":\"MIT\"},\"contracts/NftBox.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\\\";\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\nimport \\\"./Characters.sol\\\";\\r\\n\\r\\nerror NftBox__NeedMoreETHSent();\\r\\nerror NftBox__NotOwner();\\r\\nerror NftBox__TokenIdNotExist();\\r\\nerror NftBox__AlreadyOpened();\\r\\nerror NftBox__TransferFailed();\\r\\nerror NftBox__NotNftAddressCalling();\\r\\n\\r\\ncontract NftBox is VRFConsumerBaseV2, ERC721URIStorage, Ownable {\\r\\n    Characters public i_charactersContract;\\r\\n    // Trade Nft Address for the setMapping\\r\\n    address public tradeNftAddress;\\r\\n    //TokenCounter\\r\\n    uint256 private s_tokenCounter;\\r\\n    //3 Types Of Boxes with their TokenUri\\r\\n    string[] private NftBoxesUri;\\r\\n    //Card Uris\\r\\n    //Nft\\r\\n    struct Nft {\\r\\n        uint256 tokenId;\\r\\n        string tokenUri;\\r\\n        bool Boxopened;\\r\\n        uint256 boxType /* 0 -> normal; 1-> rare; 2 -> legendary*/;\\r\\n    }\\r\\n\\r\\n    //Price Boxes\\r\\n    uint256 public constant PRICE_NORMAL_BOX_USD = 10;\\r\\n    uint256 public constant PRICE_RARE_BOX_USD = 50;\\r\\n    uint256 public constant PRICE_LEGENDARY_BOX_USD = 100;\\r\\n    // Random Request for the NFt Card\\r\\n    VRFCoordinatorV2Interface private immutable i_vrfCoordinator;\\r\\n    uint64 private immutable i_subscriptionId;\\r\\n    bytes32 private immutable i_gasLane;\\r\\n    uint32 private immutable i_callbackGasLimit;\\r\\n    uint16 private constant REQUEST_CONFIRMATIONS = 3;\\r\\n    uint32 private constant NUM_WORDS = 1;\\r\\n    //Price Feed\\r\\n    AggregatorV3Interface private immutable i_priceFeed;\\r\\n    //mappings\\r\\n    mapping(uint256 => Nft) public mappingNfts;\\r\\n    mapping(uint256 => uint256) public mappingRequestToToken;\\r\\n\\r\\n    //Events\\r\\n    event NormalBoxMinted(\\r\\n        address owner,\\r\\n        uint256 tokenId,\\r\\n        string tokenUri,\\r\\n        uint256 price\\r\\n    );\\r\\n    event RareBoxMinted(\\r\\n        address owner,\\r\\n        uint256 tokenId,\\r\\n        string tokenUri,\\r\\n        uint256 price\\r\\n    );\\r\\n    event LegendaryBoxMinted(\\r\\n        address owner,\\r\\n        uint256 tokenId,\\r\\n        string tokenUri,\\r\\n        uint256 price\\r\\n    );\\r\\n    event OpenBoxRandomRequested(uint256 requestId, address sender);\\r\\n    event BoxOpened(address owner, uint256 tokenId, string tokenUri);\\r\\n    //modifiers\\r\\n    modifier isOwner(uint256 tokenId, address spender) {\\r\\n        address owner = ownerOf(tokenId);\\r\\n        if (spender != owner) {\\r\\n            revert NftBox__NotOwner();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n    modifier tokenIdExists(address owner, uint256 tokenId) {\\r\\n        bool success = _exists(tokenId);\\r\\n        if (!success) {\\r\\n            revert NftBox__TokenIdNotExist();\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    constructor(\\r\\n        address vrfCoordinatorV2,\\r\\n        uint64 subscriptionId,\\r\\n        bytes32 gasLane,\\r\\n        uint32 callbackGasLimit,\\r\\n        string[3] memory boxesUri,\\r\\n        address priceFeedAddress,\\r\\n        address charactersAddress\\r\\n    )\\r\\n        ERC721(\\\"CardBoxes\\\", \\\"CABO\\\")\\r\\n        VRFConsumerBaseV2(vrfCoordinatorV2)\\r\\n        Ownable()\\r\\n    {\\r\\n        i_vrfCoordinator = VRFCoordinatorV2Interface(vrfCoordinatorV2);\\r\\n        i_subscriptionId = subscriptionId;\\r\\n        i_gasLane = gasLane;\\r\\n        i_callbackGasLimit = callbackGasLimit;\\r\\n        NftBoxesUri = boxesUri;\\r\\n        i_priceFeed = AggregatorV3Interface(priceFeedAddress);\\r\\n        s_tokenCounter = 0;\\r\\n        i_charactersContract = Characters(charactersAddress);\\r\\n    }\\r\\n\\r\\n    function buyNormalBox() public payable {\\r\\n        uint256 usdPriceInEth = priceFeedUsdToEth(PRICE_NORMAL_BOX_USD);\\r\\n        if (msg.value < usdPriceInEth) {\\r\\n            revert NftBox__NeedMoreETHSent();\\r\\n        }\\r\\n        uint256 newTokenId = s_tokenCounter; // we save the tokenCounter in a variable before updating it\\r\\n        s_tokenCounter = s_tokenCounter + 1;\\r\\n        _safeMint(msg.sender, newTokenId);\\r\\n        string memory tokenURI = NftBoxesUri[0];\\r\\n        _setTokenURI(newTokenId, tokenURI);\\r\\n        mappingNfts[newTokenId] = Nft(newTokenId, tokenURI, false, 0);\\r\\n\\r\\n        emit NormalBoxMinted(\\r\\n            msg.sender /* Owner*/,\\r\\n            newTokenId,\\r\\n            tokenURI,\\r\\n            usdPriceInEth\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function buyRareBox() public payable {\\r\\n        uint256 usdPriceInEth = priceFeedUsdToEth(PRICE_RARE_BOX_USD);\\r\\n        if (msg.value < usdPriceInEth) {\\r\\n            revert NftBox__NeedMoreETHSent();\\r\\n        }\\r\\n        uint256 newTokenId = s_tokenCounter; // we save the tokenCounter in a variable before updating it\\r\\n        s_tokenCounter = s_tokenCounter + 1;\\r\\n        _safeMint(msg.sender, newTokenId);\\r\\n        string memory tokenURI = NftBoxesUri[1];\\r\\n        _setTokenURI(newTokenId, tokenURI);\\r\\n        mappingNfts[newTokenId] = Nft(newTokenId, tokenURI, false, 1);\\r\\n        emit RareBoxMinted(\\r\\n            msg.sender /* Owner*/,\\r\\n            newTokenId,\\r\\n            tokenURI,\\r\\n            usdPriceInEth\\r\\n        );\\r\\n        /*  setTokenId(msg.sender, newTokenId); */\\r\\n    }\\r\\n\\r\\n    function buyLegendaryBox() public payable {\\r\\n        uint256 usdPriceInEth = priceFeedUsdToEth(PRICE_LEGENDARY_BOX_USD);\\r\\n        if (msg.value < usdPriceInEth) {\\r\\n            revert NftBox__NeedMoreETHSent();\\r\\n        }\\r\\n        uint256 newTokenId = s_tokenCounter; // we save the tokenCounter in a variable before updating it\\r\\n        s_tokenCounter = s_tokenCounter + 1;\\r\\n        _safeMint(msg.sender, newTokenId);\\r\\n        string memory tokenURI = NftBoxesUri[2];\\r\\n        _setTokenURI(newTokenId, tokenURI);\\r\\n        mappingNfts[newTokenId] = Nft(newTokenId, tokenURI, false, 2);\\r\\n        emit LegendaryBoxMinted(\\r\\n            msg.sender,\\r\\n            newTokenId,\\r\\n            tokenURI,\\r\\n            usdPriceInEth\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function openBox(\\r\\n        uint256 tokenId\\r\\n    )\\r\\n        public\\r\\n        tokenIdExists(msg.sender, tokenId)\\r\\n        isOwner(tokenId, msg.sender)\\r\\n        returns (uint256 requestId)\\r\\n    {\\r\\n        Nft memory nft = mappingNfts[tokenId];\\r\\n        if (nft.Boxopened) {\\r\\n            revert NftBox__AlreadyOpened();\\r\\n        }\\r\\n        requestId = i_vrfCoordinator.requestRandomWords(\\r\\n            i_gasLane,\\r\\n            i_subscriptionId,\\r\\n            REQUEST_CONFIRMATIONS,\\r\\n            i_callbackGasLimit,\\r\\n            NUM_WORDS\\r\\n        );\\r\\n        mappingRequestToToken[requestId] = tokenId;\\r\\n        emit OpenBoxRandomRequested(requestId, msg.sender);\\r\\n    }\\r\\n\\r\\n    function fulfillRandomWords(\\r\\n        uint256 requestId,\\r\\n        uint256[] memory randomWords\\r\\n    ) internal override {\\r\\n        uint256 tokenId = mappingRequestToToken[requestId];\\r\\n        Nft memory nft = mappingNfts[tokenId];\\r\\n        if (nft.Boxopened) {\\r\\n            revert NftBox__AlreadyOpened();\\r\\n        }\\r\\n        string memory newUri;\\r\\n        if (nft.boxType == 0) {\\r\\n            uint256 randomIndex = randomWords[0] %\\r\\n                i_charactersContract.normalPersonsLength();\\r\\n            (string memory uri, , , ) = i_charactersContract.normalPersons(\\r\\n                randomIndex\\r\\n            );\\r\\n            newUri = uri;\\r\\n        } else if (nft.boxType == 1) {\\r\\n            uint256 randomIndex = randomWords[0] %\\r\\n                i_charactersContract.rarePersonsLength();\\r\\n            (string memory uri, , , ) = i_charactersContract.rarePersons(\\r\\n                randomIndex\\r\\n            );\\r\\n            newUri = uri;\\r\\n        } else if (nft.boxType == 2) {\\r\\n            uint256 randomIndex = randomWords[0] %\\r\\n                i_charactersContract.legendaryPersonsLength();\\r\\n            (string memory uri, , , ) = i_charactersContract.legendaryPersons(\\r\\n                randomIndex\\r\\n            );\\r\\n            newUri = uri;\\r\\n        } else {\\r\\n            revert NftBox__AlreadyOpened();\\r\\n        }\\r\\n        mappingNfts[tokenId] = Nft(tokenId, newUri, true, nft.boxType);\\r\\n        _setTokenURI(tokenId, newUri);\\r\\n        emit BoxOpened(msg.sender, tokenId, newUri);\\r\\n    }\\r\\n\\r\\n    function withdraw() public onlyOwner {\\r\\n        uint256 amount = address(this).balance;\\r\\n        (bool success, ) = payable(msg.sender).call{value: amount}(\\\"\\\");\\r\\n        if (!success) {\\r\\n            revert NftBox__TransferFailed();\\r\\n        }\\r\\n    }\\r\\n\\r\\n    //\\r\\n    function getTokenIds(address owner) public view returns (uint256[] memory) {\\r\\n        uint256[] memory tokenArray = new uint256[](s_tokenCounter);\\r\\n        uint256 count = 0;\\r\\n        for (uint256 i = 0; i < s_tokenCounter; i++) {\\r\\n            address spender = ownerOf(i);\\r\\n            if (spender == owner) {\\r\\n                tokenArray[count] = i;\\r\\n                count++;\\r\\n            }\\r\\n        }\\r\\n        // resize the array to remove any unused elements\\r\\n        uint256[] memory result = new uint256[](count);\\r\\n        for (uint256 i = 0; i < count; i++) {\\r\\n            result[i] = tokenArray[i];\\r\\n        }\\r\\n        return result;\\r\\n    }\\r\\n\\r\\n    function getNormalCard(uint256 index) public view returns (string memory) {\\r\\n        (string memory uri, , , ) = i_charactersContract.normalPersons(index);\\r\\n        return uri;\\r\\n    }\\r\\n\\r\\n    function getRareCard(uint256 index) public view returns (string memory) {\\r\\n        (string memory uri, , , ) = i_charactersContract.rarePersons(index);\\r\\n        return uri;\\r\\n    }\\r\\n\\r\\n    function getLegendaryCard(\\r\\n        uint256 index\\r\\n    ) public view returns (string memory) {\\r\\n        (string memory uri, , , ) = i_charactersContract.legendaryPersons(\\r\\n            index\\r\\n        );\\r\\n        return uri;\\r\\n    }\\r\\n\\r\\n    function getNormalCardUrisLength() public view returns (uint256) {\\r\\n        return i_charactersContract.normalPersonsLength();\\r\\n    }\\r\\n\\r\\n    function getRareCardUrisLength() public view returns (uint256) {\\r\\n        return i_charactersContract.rarePersonsLength();\\r\\n    }\\r\\n\\r\\n    function getLegendaryCardUrisLength() public view returns (uint256) {\\r\\n        return i_charactersContract.legendaryPersonsLength();\\r\\n    }\\r\\n\\r\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\r\\n        return i_priceFeed;\\r\\n    }\\r\\n\\r\\n    function getTokenCounter() public view returns (uint256) {\\r\\n        return s_tokenCounter;\\r\\n    }\\r\\n\\r\\n    function getNft(uint256 tokenId) public view returns (Nft memory) {\\r\\n        return mappingNfts[tokenId];\\r\\n    }\\r\\n\\r\\n    function getNftBoxesUri(uint256 index) public view returns (string memory) {\\r\\n        return NftBoxesUri[index];\\r\\n    }\\r\\n\\r\\n    function priceFeedUsdToEth(uint256 usd) public view returns (uint256) {\\r\\n        (, int256 Price, , , ) = i_priceFeed.latestRoundData();\\r\\n        uint256 price = (usd * 1e36) / (uint256(Price) * 1e10);\\r\\n        return uint256(price);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xe3e4a2b0cb520dde73440106a2823b69614af0326cd422d1146fbdd5dba2bf27\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":338,"contract":"contracts/NftBox.sol:NftBox","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":340,"contract":"contracts/NftBox.sol:NftBox","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":344,"contract":"contracts/NftBox.sol:NftBox","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":348,"contract":"contracts/NftBox.sol:NftBox","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":352,"contract":"contracts/NftBox.sol:NftBox","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":358,"contract":"contracts/NftBox.sol:NftBox","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":1386,"contract":"contracts/NftBox.sol:NftBox","label":"_tokenURIs","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_string_storage)"},{"astId":207,"contract":"contracts/NftBox.sol:NftBox","label":"_owner","offset":0,"slot":"7","type":"t_address"},{"astId":4654,"contract":"contracts/NftBox.sol:NftBox","label":"i_charactersContract","offset":0,"slot":"8","type":"t_contract(Characters)3143"},{"astId":4656,"contract":"contracts/NftBox.sol:NftBox","label":"tradeNftAddress","offset":0,"slot":"9","type":"t_address"},{"astId":4658,"contract":"contracts/NftBox.sol:NftBox","label":"s_tokenCounter","offset":0,"slot":"10","type":"t_uint256"},{"astId":4661,"contract":"contracts/NftBox.sol:NftBox","label":"NftBoxesUri","offset":0,"slot":"11","type":"t_array(t_string_storage)dyn_storage"},{"astId":4702,"contract":"contracts/NftBox.sol:NftBox","label":"mappingNfts","offset":0,"slot":"12","type":"t_mapping(t_uint256,t_struct(Nft)4670_storage)"},{"astId":4706,"contract":"contracts/NftBox.sol:NftBox","label":"mappingRequestToToken","offset":0,"slot":"13","type":"t_mapping(t_uint256,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_string_storage)dyn_storage":{"base":"t_string_storage","encoding":"dynamic_array","label":"string[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(Characters)3143":{"encoding":"inplace","label":"contract Characters","numberOfBytes":"20"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_string_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => string)","numberOfBytes":"32","value":"t_string_storage"},"t_mapping(t_uint256,t_struct(Nft)4670_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct NftBox.Nft)","numberOfBytes":"32","value":"t_struct(Nft)4670_storage"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Nft)4670_storage":{"encoding":"inplace","label":"struct NftBox.Nft","members":[{"astId":4663,"contract":"contracts/NftBox.sol:NftBox","label":"tokenId","offset":0,"slot":"0","type":"t_uint256"},{"astId":4665,"contract":"contracts/NftBox.sol:NftBox","label":"tokenUri","offset":0,"slot":"1","type":"t_string_storage"},{"astId":4667,"contract":"contracts/NftBox.sol:NftBox","label":"Boxopened","offset":0,"slot":"2","type":"t_bool"},{"astId":4669,"contract":"contracts/NftBox.sol:NftBox","label":"boxType","offset":0,"slot":"3","type":"t_uint256"}],"numberOfBytes":"128"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}